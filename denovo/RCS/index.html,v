head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2013.06.17.17.15.15;	author mdsincl2;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.17.16.54.23;	author bynchoi1;	state Exp;
branches;
next	1.4;

1.4
date	2010.03.01.20.37.31;	author shari2;	state Exp;
branches;
next	1.3;

1.3
date	2010.02.28.21.08.43;	author shari2;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.13.16.11.32;	author komurav1;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.13.15.58.15;	author komurav1;	state Exp;
branches;
next	;


desc
@main page
@


1.6
log
@Fixed EETimes link.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>DeNovo</title>
<link href="style/style1.css" rel="stylesheet" type="text/css" />
<style type="text/css">
.style4 {
  font-size: medium;
}
.projects {
  font-size: medium;
}
.style5 {
  border-left-style: solid;
  border-left-width: 1px;
  border-right: 1px solid #C0C0C0;
  border-top-style: solid;
  border-top-width: 1px;
  border-bottom: 1px solid #C0C0C0;
}
ol {
  padding: 0px;
  margin: 0px;
  list-style-type: none;
  position: absolute;
  display: none;

}
td.projects:hover ol, td.projects.over ol {
  display: block;
}
.style9 {
  text-decoration: none;
}
a.style9:hover{
  opacity: 0.8;
  filter:alpha(opacity=80);
}
.style10 {
  color: #CCCCCC;
}
.style11 {
  color: #FFFFFF;
}
.style13 {
  text-align: center;
}
</style>
</head>

<body>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td class="shadow_left">&nbsp;</td>
    <td class="header_column">
      <table width="100%" border="0" cellspacing="10" cellpadding="0">
        <tr>
          <td class="logo_area" style="font-size: x-large; height: 48px;">
            <a class="style9" href="index.html"><span class="style11"><strong>
            DeNovo: Rethinking Hardware for Disciplined Parallelism</strong></span></a></td>
          <th class="logo_area" rowspan="3">
            &nbsp;
          </th>
          <!-- <td width="300"> -->
          <!--   <form id="form1" name="form1" method="post" action=""> -->
          <!--    Search the website <br /> -->
          <!--     <input name="search_text" type="text" id="search_text" /> -->
          <!--     <input type="submit" name="Submit" value="Search" /> -->
          <!--   </form> -->
          <!-- </td> -->
        </tr>
        <tr>
          <th class="sub_logo_area" style="font-size: 18px">
            <a class="style9" href="http://rsim.cs.uiuc.edu"><span class="style11"><strong>Sarita Adve's Research Group</strong></span></a>
          </th>
          
        </tr>
        <tr>
          <th class="sub_logo_area">
            <a class="style9" href="http://illinois.edu"><span class="style10">University of Illinois at Urbana-Champaign</span></a></th>
        </tr>
    </table>
    </td>
    <td class="shadow_right">
      &nbsp;
    </td>
  </tr>
  <tr>
    <td class="horizontal_column">&nbsp;</td>
    <td >
      <table width="100%" border="0" cellpadding="0" cellspacing="0" class="linkcontainer">
        <tr>
          <td class="projects">
            <div class="navigation" style="font-size: medium"> <a href="index.html" class="main_link">Home</a></div>
          </td>
          <!-- <td><div class="navigation"><a href="#" class="main_link">DeNovo Home</a></div></td> -->
          <td class="style4">
            <div class="navigation" style="font-size: medium"><a class="main_link" href="people.html">People</a></div>
          </td>
          <td>
            <div class="navigation" style="font-size: medium"><a href="pubs.html" class="main_link">Publications</a></div>
          </td>
          <td>
            <div class="navigation" style="font-size: medium"><a href="funding.html" class="main_link" style="width: 100%">Funding</a></div>
          </td>
          <td>
            <div class="navigation" style="font-size: medium"><a href="http://rsim.cs.uiuc.edu/news.html" class="main_link">News</a></div>
          </td>
        </tr>
      </table>

    </td>
    <td class="horizontal_column">&nbsp;</td>
  </tr>
  <!--   <tr> -->
  <!--     <td class="shadow_left">&nbsp;</td> -->
  <!--     <td class="below_header"> -->
  <!-- A large part of the complexity and inefficiency in current hardware concurrency mechanisms arguably arises from a software-oblivious approach to hardware design. The DeNovo project seeks to rethink concurrent hardware from the ground up, given the assumption that most future software will use disciplined concurrency models for better dependability. -->
  <!--     </td> -->
  <!--     <td class="shadow_right">&nbsp;</td> -->
  <!--   </tr> -->
  <tr>
    <td class="shadow_left">&nbsp;</td>
    <td class="main_content_box">
      <table width="100%" cellspacing="0" cellpadding="0" class="style5">
        <tr>
          <td class="body_content" style="font-size: small; text-align: left;" valign="top">
            <div class="style13">
              <br />
              <span class="Apple-style-span" style="color: rgb(51, 51, 102); ">
                <span class="style12" >
                <font size="3">
                <p align="justify">
                  <b><a href="http://www.eetimes.com/electronics-news/4080124/Illinois-gives-sneak-peak-on-multicore-programming-ideas?pageNumber=1">
                  EE Times article about DeNovo</a></b>
                </p>
                </font>
                <p align="justify">
                  A large part of the complexity and inefficiency 
                  in current hardware concurrency mechanisms arguably arises from a 
                  software-oblivious approach to hardware design. The DeNovo project 
                  seeks to rethink concurrent hardware from the ground up, given the 
                  assumption that most future software will use disciplined 
                  concurrency models for better dependability. We are pursuing the 
                  following directions:
                </p>
                <p align="justify">
                  <b>Disciplined hardware concurrency model:<span class="Apple-converted-space">&nbsp;</span></b>The 
                  history of the work on memory consistency models (which lies at the 
                  heart of concurrency semantics) exemplifies well the pitfalls of 
                  software-oblivious hardware design. Our<span class="Apple-converted-space">&nbsp;</span><a href="http://rsim.cs.uiuc.edu/consistency">previous 
                  work</a><span class="Apple-converted-space">&nbsp;</span>on 
                  data-race-free took a combined hardware/software approach and laid 
                  the foundation for the convergence in memory models adopted by 
                  high-level languages and most hardware vendors today (e.g., the Java 
                  and C++ memory models). Nevertheless, these models are still too 
                  complex and fragile, particularly in the context of safe programming 
                  languages. Like data-race-free, DeNovo takes the approach that 
                  hardware should provide easy to reason semantics (sequential 
                  consistency or stronger) only for disciplined programs. DeNovo 
                  requires that violations of the discipline be preferably caught at 
                  compile time and, in the worst case, generate an exception at 
                  runtime. We are defining the notion of &quot;discipline&quot; at the hardware 
                  level in collaboration with the UPCRC disciplined languages work. In 
                  particular, we espouse<a href="http://dpj.cs.uiuc.edu">deterministic-by-default 
                  semantics</a><span class="Apple-converted-space">&nbsp;</span>- 
                  non-determinism, when required should be explicitly requested and 
                  well-encapsulated. We are exploring how to express and implement 
                  such semantics for hardware, given its need to balance the 
                  requirements of a variety of programs including legacy programs.
                </p>
                <p align="justify">
                  <b>Rewarding and enforcing discipline:</b><span class="Apple-converted-space">&nbsp;</span>We 
                  believe there are many opportunities to exploit disciplined 
                  programming models to build simpler and more effective hardware. For 
                  example, current hardware cache coherence protocols are designed for 
                  &quot;wild&quot; shared memory, making them unnecessarily complex and hard to 
                  scale. We are exploring how the knowledge of a disciplined 
                  programming approach can be used to simplify the maintenance of 
                  cache coherence as well as how to use such information to best 
                  represent and manage tasks in the hardware and the runtime to 
                  maximize locality and load balance. Hardware can also be used to aid 
                  disciplined programming languages. For example, there will 
                  invariably be untrusted and unverified code that potentially does 
                  not obey the required discipline - we are working on hardware 
                  support for &quot;sandboxing&quot; such code. Other opportunities include 
                  hardware and runtime support for fine-grained synchronization and 
                  direct support for deterministic constructs.
                </p>
                <p align="justify">
                  <b>Interface mechanism</b><span class="Apple-converted-space">&nbsp;</span><b>- 
                  a typed virtual instruction set:</b><span class="Apple-converted-space">&nbsp;</span>Virtualization 
                  is perhaps the only viable means for supporting the expected variety 
                  of heterogeneous architectures as well as implementation-specific 
                  mechanisms that vendors may be reluctant to make part of their 
                  software exposed ISA. A virtual instruction set computer (VISC) 
                  provides a separate low-level but rich and machine independent ISA 
                  for software, which is then translated to a hardware ISA. The latter 
                  is implementation-specific and never exposed to the software (other 
                  than the dynamic translator). We are exploring the design of such an 
                  ISA and integrated runtime for DeNovo. Given our emphasis on safety 
                  and dependability, this ISA will be typed, to allow expressing rich 
                  high level information in a structured way and to check safety 
                  properties at install or runtime.
                </p>
                <p align="justify">
                  The DeNovo project is in close collaboration with 
                  the<span class="Apple-converted-space">&nbsp;</span><a href="http://dpj.cs.uiuc.edu">Deterministic 
                  Parallel Java (DPJ)</a><span class="Apple-converted-space">&nbsp;</span>project.
                </p>
                </span>
                <span class="Apple-style-span" style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; ">
                <font color="#333366" face="Verdana, Arial, Helvetica, sans-serif">
                    <br />
              </font></span></span><br /></div>
          </td>
      </tr>
    </table></td>
    <td class="shadow_right">&nbsp;</td>
  </tr>
  <tr>
    <td class="shadow_left">&nbsp;</td>
    <td class="middle_spacer"><div class="bottom_content"></div></td>
    <td class="shadow_right">&nbsp;</td>
  </tr>
  <tr>
    <td class="shadow_left">&nbsp;</td>
    <td class="bottom_link_container">
      <p>
      </p>
      <p>
        <!-- All Right Reserved &copy; 2006 by bprizze<br /> -->
        <!-- http://heartlessg.4uhost.info Web Master -->
      </p>
      <p/>
    </td>
    <td class="shadow_right">&nbsp;</td>
  </tr>
</table>
</body>
</html>
@


1.5
log
@*** empty log message ***
@
text
@d9 1
a9 1
	font-size: medium;
d12 1
a12 1
	font-size: medium;
d15 6
a20 6
	border-left-style: solid;
	border-left-width: 1px;
	border-right: 1px solid #C0C0C0;
	border-top-style: solid;
	border-top-width: 1px;
	border-bottom: 1px solid #C0C0C0;
d23 5
a27 5
	padding: 0px;
	margin: 0px;
	list-style-type: none;
	position: absolute;
	display: none;
d31 1
a31 1
	display: block;
d34 1
a34 1
	text-decoration: none;
d37 2
a38 2
	opacity: 0.8;
	filter:alpha(opacity=80);
d41 1
a41 1
	color: #CCCCCC;
d44 1
a44 1
	color: #FFFFFF;
d47 1
a47 1
	text-align: center;
d57 19
a75 18
	<table width="100%" border="0" cellspacing="10" cellpadding="0">
      <tr>
        <td class="logo_area" style="font-size: x-large; height: 48px;">
          <a class="style9" href="index.html"><span class="style11"><strong>
		  DeNovo: Rethinking Hardware for Disciplined Parallelism</strong></span></a></td>
        <th class="logo_area" rowspan="3">
          &nbsp;</th>
        <!-- <td width="300"> -->
        <!--   <form id="form1" name="form1" method="post" action=""> -->
		<!--   	Search the website <br /> -->
        <!--     <input name="search_text" type="text" id="search_text" /> -->
        <!--     <input type="submit" name="Submit" value="Search" /> -->
        <!--   </form> -->
        <!-- </td> -->
      </tr>
      <tr>
        <th class="sub_logo_area" style="font-size: 18px">
           <a class="style9" href="http://rsim.cs.uiuc.edu"><span class="style11"><strong>Sarita Adve's Research Group</strong></span></a>
d78 10
a87 7
      </tr>
      <tr>
        <th class="sub_logo_area">
          <a class="style9" href="http://illinois.edu"><span class="style10">University of Illinois at Urbana-Champaign</span></a></th>
      </tr>
    </table></td>
    <td class="shadow_right">&nbsp;</td>
d90 1
a90 1
	  <td class="horizontal_column">&nbsp;</td>
d92 1
a92 1
	<table width="100%" border="0" cellpadding="0" cellspacing="0" class="linkcontainer">
d95 2
a96 4
          <div class="navigation" style="font-size: medium"> <a href="index.html" class="main_link">
				  Home</a></div>

	  </td>
d98 13
a110 9
          <td class="style4"><div class="navigation" style="font-size: medium"><a class="main_link" href="people.html">
			  People</a></div></td>
          <td><div class="navigation" style="font-size: medium"><a href="pubs.html" class="main_link">
			  Publications</a></div></td>
          <td><div class="navigation" style="font-size: medium">
			  <a href="funding.html" class="main_link" style="width: 100%">
			  Funding</a></div></td>
          <td><div class="navigation" style="font-size: medium"><a href="http://rsim.cs.uiuc.edu/news.html" class="main_link">News</a></div></td>
      </tr>
d116 7
a122 7
<!--   <tr> -->
<!--     <td class="shadow_left">&nbsp;</td> -->
<!--     <td class="below_header"> -->
<!-- A large part of the complexity and inefficiency in current hardware concurrency mechanisms arguably arises from a software-oblivious approach to hardware design. The DeNovo project seeks to rethink concurrent hardware from the ground up, given the assumption that most future software will use disciplined concurrency models for better dependability. -->
<!--     </td> -->
<!--     <td class="shadow_right">&nbsp;</td> -->
<!--   </tr> -->
d126 92
a217 82
	<table width="100%" cellspacing="0" cellpadding="0" class="style5">
      <tr>
        <td class="body_content" style="font-size: small; text-align: left;" valign="top">
		<div class="style13">
		<br />
			<span class="Apple-style-span" style="color: rgb(51, 51, 102); ">
			<span class="style12" >
			<font size="3">
			<p align="justify"><b>
			<!-- <a href="http://www.eetimes.com/news/latest/showArticle.jhtml;jsessionid=BUJ4JXJ3IAFWMQSNDLOSKH0CJUNN2JVN?articleID=212100891&amp;pgno=1"> -->
            <a href="http://www.eetimes.com/news/latest/showArticle.jhtml;jsessionid=J4CE14UWNORSNQE1GHPSKHWATMY32JVN?articleID=212100891&pgno=2">
			EE Times article about DeNovo</a></b></p>
			</font>
			<p align="justify">A large part of the complexity and inefficiency 
			in current hardware concurrency mechanisms arguably arises from a 
			software-oblivious approach to hardware design. The DeNovo project 
			seeks to rethink concurrent hardware from the ground up, given the 
			assumption that most future software will use disciplined 
			concurrency models for better dependability. We are pursuing the 
			following directions:</p>
			<p align="justify"><b>Disciplined hardware concurrency model:<span class="Apple-converted-space">&nbsp;</span></b>The 
			history of the work on memory consistency models (which lies at the 
			heart of concurrency semantics) exemplifies well the pitfalls of 
			software-oblivious hardware design. Our<span class="Apple-converted-space">&nbsp;</span><a href="http://rsim.cs.uiuc.edu/consistency">previous 
			work</a><span class="Apple-converted-space">&nbsp;</span>on 
			data-race-free took a combined hardware/software approach and laid 
			the foundation for the convergence in memory models adopted by 
			high-level languages and most hardware vendors today (e.g., the Java 
			and C++ memory models). Nevertheless, these models are still too 
			complex and fragile, particularly in the context of safe programming 
			languages. Like data-race-free, DeNovo takes the approach that 
			hardware should provide easy to reason semantics (sequential 
			consistency or stronger) only for disciplined programs. DeNovo 
			requires that violations of the discipline be preferably caught at 
			compile time and, in the worst case, generate an exception at 
			runtime. We are defining the notion of &quot;discipline&quot; at the hardware 
			level in collaboration with the UPCRC disciplined languages work. In 
			particular, we espouse<a href="http://dpj.cs.uiuc.edu">deterministic-by-default 
			semantics</a><span class="Apple-converted-space">&nbsp;</span>- 
			non-determinism, when required should be explicitly requested and 
			well-encapsulated. We are exploring how to express and implement 
			such semantics for hardware, given its need to balance the 
			requirements of a variety of programs including legacy programs.</p>
			<p align="justify"><b>Rewarding and enforcing discipline:</b><span class="Apple-converted-space">&nbsp;</span>We 
			believe there are many opportunities to exploit disciplined 
			programming models to build simpler and more effective hardware. For 
			example, current hardware cache coherence protocols are designed for 
			&quot;wild&quot; shared memory, making them unnecessarily complex and hard to 
			scale. We are exploring how the knowledge of a disciplined 
			programming approach can be used to simplify the maintenance of 
			cache coherence as well as how to use such information to best 
			represent and manage tasks in the hardware and the runtime to 
			maximize locality and load balance. Hardware can also be used to aid 
			disciplined programming languages. For example, there will 
			invariably be untrusted and unverified code that potentially does 
			not obey the required discipline - we are working on hardware 
			support for &quot;sandboxing&quot; such code. Other opportunities include 
			hardware and runtime support for fine-grained synchronization and 
			direct support for deterministic constructs.</p>
			<p align="justify"><b>Interface mechanism</b><span class="Apple-converted-space">&nbsp;</span><b>- 
			a typed virtual instruction set:</b><span class="Apple-converted-space">&nbsp;</span>Virtualization 
			is perhaps the only viable means for supporting the expected variety 
			of heterogeneous architectures as well as implementation-specific 
			mechanisms that vendors may be reluctant to make part of their 
			software exposed ISA. A virtual instruction set computer (VISC) 
			provides a separate low-level but rich and machine independent ISA 
			for software, which is then translated to a hardware ISA. The latter 
			is implementation-specific and never exposed to the software (other 
			than the dynamic translator). We are exploring the design of such an 
			ISA and integrated runtime for DeNovo. Given our emphasis on safety 
			and dependability, this ISA will be typed, to allow expressing rich 
			high level information in a structured way and to check safety 
			properties at install or runtime.</p>
			<p align="justify">The DeNovo project is in close collaboration with 
			the<span class="Apple-converted-space">&nbsp;</span><a href="http://dpj.cs.uiuc.edu">Deterministic 
			Parallel Java (DPJ)</a><span class="Apple-converted-space">&nbsp;</span>project.</p>
			</span>
			<span class="Apple-style-span" style="border-collapse: separate; color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; ">
			<font color="#333366" face="Verdana, Arial, Helvetica, sans-serif">
			<br />
			</font></span></span><br /></div>
		  </td>
@


1.4
log
@*** empty log message ***
@
text
@d129 2
a130 1
			<a href="http://www.eetimes.com/news/latest/showArticle.jhtml;jsessionid=BUJ4JXJ3IAFWMQSNDLOSKH0CJUNN2JVN?articleID=212100891&amp;pgno=1">
@


1.3
log
@*** empty log message ***
@
text
@a213 1
        <a href="http://rsim.cs.uiuc.edu/swat" class="bottom_link">Old Website</a>
@


1.2
log
@added DPJ collaboration towards the end
@
text
@d1 226
a226 101
<head>
<title>Denovo Home</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">


<style>
<!--
div.Section1
	{page:Section1;}
span.MsoHyperlink
	{color:#333366;
	text-decoration:underline;
	text-underline:single;}
span.SpellE
	{}
-->
</style>
</head>

<body bgcolor="#FFFFFF" text="#333366" link="#333366" vlink="#993300" alink="#CC6600">
<table width="800" border="0" cellpadding="0" cellspacing="0" height="909">
  <tr align="left" valign="bottom"> 
    <td colspan="3" width="800" height="75"> <p>
    <img src="denovo.gif" width="800" height="75"></p></td>
  </tr>
  <tr align="left" valign="top"> 
    <td width="137" bordercolor="#e7ebf0" bgcolor="#e7ebf0" rowspan="2" height="834"> <p><font color="#333366" size="2" face="Geneva, Arial, Helvetica, sans-serif"><b><br>
        &nbsp;</b></font></p>
      <p><b><font color="#333366" face="Geneva, Arial, Helvetica, sans-serif">
           <a href="../index.html">Group Home</a></font>
         </b>
      </p>
    <p>
    <font face="Geneva, Arial, Helvetica,
	sans-serif"></font></b></a><b><font face="Geneva, Arial, Helvetica,
	sans-serif"> Denovo Home </font></b></p>
      <p><b><font face="Geneva, Arial, Helvetica, sans-serif">
      <a href="people.html">People</a></font></b><font color="#333366" face="Geneva, Arial, Helvetica, sans-serif"><b> </b></font></p>
<!--      <p><b><font color="#333366" face="Geneva, Arial, Helvetica, sans-serif">
      <a href="pubs.html">Publications</a></font></b></p>
      <p><b><font face="Geneva, Arial, Helvetica, sans-serif">
      <a href="funding.html">Funding</a></font></b><br>
        <font color="#333366" size="2" face="Geneva, Arial, Helvetica, sans-serif"><br>
        <br>
        </font></p> -->
      <p><b><font face="Geneva, Arial, Helvetica, sans-serif">
           <a href="./links.html">Links</a></font>
         </b><font color="#333366" face="Geneva, Arial, Helvetica, sans-serif">
         <b> </b></font>
      </p>
      <p><b><font face="Geneva, Arial, Helvetica, sans-serif">
           <a href="./pubs.html">Publications</a></font>
         </b><font color="#333366" face="Geneva, Arial, Helvetica, sans-serif">
         <b> </b></font>
      </p>
      <p><b><font face="Geneva, Arial, Helvetica, sans-serif">
           <a href="funding.html">Funding</a></font>
         </b><font color="#333366" face="Geneva, Arial, Helvetica, sans-serif">
         <b> </b></font>
      </p>
      </td>
    <td width="7" height="309">&nbsp;</td>
    <td width="664" height="834" rowspan="2"> 
    <font SIZE="2">&nbsp;</font><font size="3">
	<p align="justify">
<b>
<a href="http://www.eetimes.com/news/latest/showArticle.jhtml;jsessionid=BUJ4JXJ3IAFWMQSNDLOSKH0CJUNN2JVN?articleID=212100891&pgno=1">
EE Times article about DeNovo</a></b></p>

    
  	<p align="justify">
A large part of the complexity and inefficiency in current hardware concurrency mechanisms arguably arises from a software-oblivious approach to hardware design. The DeNovo project seeks to rethink concurrent hardware from the ground up, given the assumption that most future software will use disciplined concurrency models for better dependability. We are pursuing the following directions:
</p>
    
<p align="justify">
<b>Disciplined hardware concurrency model: </b>The history of the work on memory consistency models (which lies at the heart of concurrency semantics) exemplifies well the pitfalls of software-oblivious hardware design. Our 
<a href="http://rsim.cs.uiuc.edu/consistency">previous work</a> on data-race-free took a combined hardware/software approach and laid the foundation for the convergence in memory models adopted by high-level languages and most hardware vendors today (e.g., the Java and C++ memory models). Nevertheless, these models are still too complex and fragile, particularly in the context of safe programming languages.  Like data-race-free, DeNovo takes the approach that hardware should provide easy to reason semantics (sequential consistency or stronger) only for disciplined programs. DeNovo requires that violations of the discipline be preferably caught at compile time and, in the worst case, generate an exception at runtime. We are defining the notion of "discipline" at the hardware level in collaboration with the UPCRC disciplined languages work. In particular, we espouse 
<a href="http://dpj.cs.uiuc.edu">deterministic-by-default semantics</a> - non-determinism, when required should be explicitly requested and well-encapsulated. We are exploring how to express and implement such semantics for hardware, given its need to balance the requirements of a variety of programs including legacy programs.
</p>

<p align="justify">
<b>Rewarding and enforcing discipline:</b> We believe there are many opportunities to exploit disciplined programming models to build simpler and more effective hardware. For example, current hardware cache coherence protocols are designed for "wild" shared memory, making them unnecessarily complex and hard to scale. We are exploring how the knowledge of a disciplined programming approach can be used to simplify the maintenance of cache coherence as well as how to use such information to best represent and manage tasks in the hardware and the runtime to maximize locality and load balance. Hardware can also be used to aid disciplined programming languages. For example, there will invariably be untrusted and unverified code that potentially does not obey the required discipline - we are working on hardware support for "sandboxing" such code. Other opportunities include hardware and runtime support for fine-grained synchronization and direct support for deterministic constructs.
</p>

<p align="justify">
<b>Interface mechanism</b> <b>- a typed virtual instruction set:</b> Virtualization is perhaps the only viable means for supporting the expected variety of heterogeneous architectures as well as implementation-specific mechanisms that vendors may be reluctant to make part of their software exposed ISA. A virtual instruction set computer (VISC) provides a separate low-level but rich and machine independent ISA for software, which is then translated to a hardware ISA. The latter is implementation-specific and never exposed to the software (other than the dynamic translator). We are exploring the design of such an ISA and integrated runtime for DeNovo. Given our emphasis on safety and dependability, this ISA will be typed, to allow expressing rich high level information in a structured way and to check safety properties at install or runtime.
</p>

<p align="justify">
The DeNovo project is in close collaboration with the <a href="http://dpj.cs.uiuc.edu">Deterministic Parallel Java (DPJ)</a> project.
</p>
    
  </tr>
  <tr align="left" valign="top"> 
    <td width="7" height="525"><FONT color="#333366" 
                  face="Verdana, Arial, Helvetica, sans-serif"><br>
      </FONT></td>
  </tr>
</table>
</body>
</html>
@


1.1
log
@Initial revision
@
text
@d89 3
@
