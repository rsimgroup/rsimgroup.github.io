%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: Thesis.dvi
%%Pages: 64
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips -o Thesis.ps Thesis.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.04.25:1110
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (Thesis.dvi)
@start /Fa 9 113 df<EA7FFCEAFFFEEA7FFCEA0380B3EA7FFCEAFFFEEA7FFC0F197D98
16>73 D<B47E7F5B001CC7FCAE144014E0A4B5FCA313197F9816>76
D<EA7FF8EAFFFE6C7E381C0F80130314C01301A313031480130F381FFF005B13F8001CC7
FCA7127F487E6CC7FC12197F9816>80 D<EA07E3EA1FFF5AEA781FEAF00712E0A290C7FC
7E1278EA3F80EA1FF0EA07FCC67E130F7FEB0380A2126012E0EB0700EAF80FEAFFFE5BEA
C7F011197E9816>83 D<EA03F0EA0FFC487EEA3C0F487E3870038012E0B5FCA300E0C7FC
A2387003801278EA3E07381FFF00EA07FEEA01F811127E9116>101
D<1203EA0780A2EA0300C7FCA4EAFF80A31203ACEAFFFC13FE13FC0F1A7C9916>105
D<EA7FC012FF127F1201B3EA7FFFB512806C130011197E9816>108
D<38F9C38038FFEFC0EBFFE0EA3C78A2EA3870AA38FE7CF8A31512809116>I<EAFC7CEA
FDFEB5FC381F0780381E03C0EA1C01EB00E0A6EB01C0EA1E03381F0780EBFF00EA1DFEEA
1C7890C7FCA6B47EA3131B7F9116>112 D E /Fb 34 122 df<EB7E1F3901C1B1803903
03E3C0000713C3000EEBC180903801C000A6B512FC380E01C0B0387F87FC1A1D809C18>
11 D<1380EA0100120212065AA25AA25AA35AA412E0AC1260A47EA37EA27EA27E12027E
EA0080092A7C9E10>40 D<7E12407E12307EA27EA27EA37EA41380AC1300A41206A35AA2
5AA25A12205A5A092A7E9E10>I<126012F0A212701210A41220A212401280040C7C830C>
44 D<EAFFE0A20B0280890E>I<126012F0A2126004047C830C>I<126012F0A212601200
AA126012F0A212701210A41220A212401280041A7C910C>59 D<1306A3130FA3EB1780A2
EB37C01323A2EB43E01341A2EB80F0A338010078A2EBFFF83802003CA3487FA2000C131F
80001E5BB4EBFFF01C1D7F9C1F>65 D<39FFF0FFF0390F000F00AC90B5FCEB000FAD39FF
F0FFF01C1C7F9B1F>72 D<B46CEBFF80000FECF800A2390BC00178A33809E002A23808F0
04A3EB7808A3EB3C10A3EB1E20A3EB0F40A2EB0780A3EB0300121C3AFF8307FF80211C7E
9B26>77 D<B4EB1FF0390F8003809038C00100120BEA09E0EA08F0A21378133C133E131E
130F14811307EB03C1EB01E114F113001479147D143D141FA2808080121CB46C7E1C1C7F
9B1F>I<007FB512C038700F010060130000401440A200C014201280A300001400B1497E
3803FFFC1B1C7F9B1E>84 D<39FFF01FF0390F000380EC0100B3A26C1302138000035BEA
01C03800E018EB7060EB0F801C1D7F9B1F>I<EA1FC0EA3070EA78387F12301200A2EA01
FCEA0F1C12381270126000E01340A3EA603C38304E80381F870012127E9115>97
D<12FC121CAA137CEA1D87381E0180381C00C014E014601470A6146014E014C0381E0180
38190700EA10FC141D7F9C17>I<EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260
EA70021230EA1804EA0C18EA03E00F127F9112>I<EB1F801303AAEA03F3EA0E0BEA1807
EA30031270126012E0A6126012701230EA1807EA0E1B3803E3F0141D7F9C17>I<EA07E0
EA0C30EA1818EA300CEA700EEA600612E0EAFFFEEAE000A41260EA70021230EA1804EA0C
18EA03E00F127F9112>I<13F8EA018CEA071E1206EA0E0C1300A6EAFFE0EA0E00B0EA7F
E00F1D809C0D>I<EB03803807C4C0EA1C783838388038301800EA701CA4EA3018EA3838
6C5AEA27C00020C7FCA21230EA3FF86CB4FC1480EA2003386001C0EAC000A33860018038
300300EA1C0EEA07F8121C7F9215>I<12FC121CAA137C1387EA1D03001E1380121CAD38
FF9FF0141D7F9C17>I<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>I<12FC
121CB3A9EAFF80091D7F9C0C>108 D<39FC7E07E0391C838838391D019018001EEBE01C
001C13C0AD3AFF8FF8FF8021127F9124>I<EAFC7CEA1C87EA1D03001E1380121CAD38FF
9FF014127F9117>I<EA03F0EA0E1CEA1806487E00701380EA600100E013C0A600601380
EA700300301300EA1806EA0E1CEA03F012127F9115>I<EAFC7CEA1D87381E0180001C13
C0EB00E0A21470A614E0A2EB01C0001E1380381D0700EA1CFC90C7FCA7B47E141A7F9117
>I<EAFCE0EA1D38EA1E78A2EA1C301300ACEAFFC00D127F9110>114
D<EA1F90EA2070EA4030EAC010A212E0EAF800EA7F80EA3FE0EA0FF0EA00F8EA80381318
12C0A2EAE010EAD060EA8FC00D127F9110>I<1204A4120CA2121C123CEAFFE0EA1C00A9
1310A5120CEA0E20EA03C00C1A7F9910>I<38FC1F80EA1C03AD1307120CEA0E1B3803E3
F014127F9117>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A2
13C8EA01D0A2EA00E0A3134013127F9116>I<39FF3FC7E0393C0703C0001CEB01801500
130B000E1382A21311000713C4A213203803A0E8A2EBC06800011370A2EB803000001320
1B127F911E>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A213
C8EA01D0A2EA00E0A31340A25BA212F000F1C7FC12F312661238131A7F9116>121
D E /Fc 2 122 df<1204A3EAC460EAF5E0EA3F80EA0E00EA3F80EAF5E0EAC460EA0400
A30B0D7E8D11>3 D<120CA6EAFFC0A2EA0C00B20A1A7E9310>121
D E /Fd 2 122 df<1202A3EAC218EAF278EA3AE0EA0F80A2EA3AE0EAF278EAC218EA02
00A30D0E7E8E12>3 D<1206A8EAFFF0A2EA0600B30C1D7E9611>121
D E /Fe 20 121 df<3803FFFE3800E00E1404A3EA01C0A21480A238038100138313FF13
83EA07021408A2EB0010120E143014201460381C01C0B5FC17177E9618>69
D<EA07FEEA00E0A4EA01C0A4EA0380A4EA0700A4120EA45AEAFF800F177E960E>73
D<EA03FEEA00E0A4485AA4485AA448C7FC1420A21440120E14C014801301EA1C07B51200
13177E9616>76 D<D803F0EB3F800000EC780013B815B8EC0138D801385B1402A2140400
02495A131C1410A20004EB21C01441A2148139081D0380A2130EA226180C07C7FC39FE08
3FE021177E9620>I<3803FFE03800E038141C140CA23801C01CA314383803807014E0EB
FF80EB800048C7FCA4120EA45AB47E16177E9618>80 D<387FC1FC381C00601440A34813
80A438700100A4EAE002A45B5BA2EA6030EA3040EA1F80161779961A>85
D<EA07C0EA0C60EA30E01220EA60005AA35AA2EAC0201340EA6180EA3E000B0E7C8D10>
99 D<133E130CA41318A4EA03B0EA0C701218EA303013601260A3EAC0C013C812401241
EA62D0EA1C700F177C9612>I<EA0780EA1840EA302012601340EAFF80EAC000A4132013
40EA6180EA3E000B0E7C8D10>I<1203120712061200A61218122C124CA2128C1218A312
301232126212641224123808177D960B>105 D<123E120CA41218A41230A41260A412C0
12C8A312D0126007177D9609>108 D<3830783C38498CC6384E0502EA4C06389C0E06EA
180CA348485A15801418A23960300900140E190E7D8D1D>I<EA3078EA498CEA4E04124C
EA9C0C1218A3EA301813191331A2EA6012131C100E7D8D14>I<EA0780EA18C0EA3040EA
6060A212C0A3EA80C0A2EA8180EAC1001246123C0B0E7B8D12>I<EA0C38EA12C4EA1306
A212261206A3EA0C0CA213181310EA1A20EA19C0EA1800A25AA312FC0F147F8D12>I<EA
30F0EA4B18EA4E38EA4C30EA98001218A35AA45AA20D0E7D8D0F>114
D<EA0780EA0C40EA18E0A2EA3800121EEA1F80EA07C01200126012E0EAC180EAC300123E
0B0E7D8D0F>I<1206A25AA4EAFF80EA1800A35AA45A1261A212621264123809147D930C>
I<EA3804EA2C0C124CA2EA8C181218A3EA30301332A21372EA18B4EA0F1C0F0E7D8D13>
I<EA0E3CEA1346EA218E138CEA43001203A31206130812C6EAE610EACA20EA71C00F0E7E
8D10>120 D E /Ff 2 34 df<14181430146014E014C0EB01801303EB07001306130E13
0C131C5BA25BA25BA212015BA2485AA3120790C7FCA25A120EA2121EA3121CA2123CA412
381278A8127012F0B3A812701278A81238123CA4121CA2121EA3120EA2120F7EA27F1203
A36C7EA27F1200A21370A27FA27F130C130E13061307EB03801301EB00C014E014601430
1418157C768121>32 D<12C012607E123812187E120E7E7E7F12017F6C7EA21370A27FA2
133C131CA27FA3130F7FA214801303A214C0A31301A214E0A4130014F0A814701478B3A8
147014F0A814E01301A414C0A21303A31480A213071400A25B130EA35BA2133C1338A25B
A25BA2485A5B120390C7FC5A120E120C5A123812305A5A157C7F8121>I
E /Fg 2 3 df<B612FCA21E027C8C27>0 D<6C13026C13060060130C6C13186C13306C13
606C13C03803018038018300EA00C6136C1338A2136C13C6EA018338030180380600C048
136048133048131848130C4813064813021718789727>2 D E /Fh
7 87 df<EA03F0EA0E18487E487E13071270EB038012F0A214C0A5EA7007A21238EA180B
EA0E13EA03E338000380A3EB07001230EA7806130EEA700CEA2018EA1070EA0FC0121F7E
9D17>57 D<5B497EA3497EA3EB09E0A3EB10F0A3EB2078A3497EA2EBC03EEB801EA248B5
FCEB000FA20002EB0780A348EB03C0A2120C001E14E039FF801FFE1F207F9F22>65
D<90380FE0109038381C309038E002703803C00139078000F048C71270121E15305A1510
127C127800F81400A91278007C1410123CA26C1420A27E6C6C13406C6C13803900E00300
EB380CEB0FF01C217E9F21>67 D<B512E0380F007C141E80EC0780A215C0A41580A2EC0F
00141E147CEBFFE090C8FCAEEAFFF01A1F7E9E1F>80 D<B57E380F00F0143C8080A21580
A41500A2141E5C14F0EBFF80EB01C0EB0070A280143CA3143EA31504143F141FEC0F0839
FFF00788C7EA01F01E207E9E21>82 D<3803F040380C0CC0EA1803EA3001EA6000A212E0
1440A36C13007E127CEA7F80EA3FF86CB4FC00071380C613C0EB1FE013031301EB00F014
707EA46C136014E06C13C038F8018038C60300EA81FC14217E9F19>I<39FFF003FE391F
8000F86CC7126015206C6C1340A36C6C1380A2EBE00100011400A23800F002A213F8EB78
04A26D5AA36D5AA2131F6D5AA2EB07C0A36D5AA36DC7FC1F207F9E22>86
D E /Fi 55 123 df<90380FF83F90397FFDFFC03A01F81FE3E03903E03F87EA07C0D80F
801307ED03C06EC7FCA6B612FCA2260F801FC7FCB2397FF0FFF0A223237FA221>11
D<EB0FF0EB7FFC3801F80E3803E01F48485AEA0F80A2141E140C91C7FCA4B6FCA2380F80
1FB2397FF0FFE0A21B237FA21F>I<903907F80FF090397FFE7FFC3A01F80FF80ED803E0
EBE01F484848485AD80F801380A2020F131E160C93C7FCA4B8FCA23A0F800F801FB23B7F
F07FF0FFE0A22B237FA22F>14 D<EAFFFCA40E047F8C13>45 D<1238127C12FEA3127C12
3807077C8610>I<13FE3807FFC0380F83E0381F01F0383E00F8A248137CA312FC147EAD
007C137CA36C13F8A2381F01F0380F83E03807FFC03800FE0017207E9F1C>48
D<13181378EA01F812FFA21201B3A7387FFFE0A213207C9F1C>I<EA03FCEA0FFF383C1F
C0387007E0007C13F0EAFE0314F8A21301127CEA3803120014F0A2EB07E014C0EB0F80EB
1F00133E13385BEBE018EA01C0EA0380EA0700000E1338380FFFF05A5A5AB5FCA215207D
9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F0314F0120014E0EB07C0
EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13FE127EB4FCA314FCEA7E0100
7813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E013011303A21307130F131FA2
1337137713E7EA01C71387EA03071207120E120C12181238127012E0B6FCA2380007E0A7
90B5FCA218207E9F1C>I<00301320383E01E0383FFFC0148014005B13F8EA33C00030C7
FCA4EA31FCEA37FF383E0FC0383807E0EA3003000013F0A214F8A21238127C12FEA200FC
13F0A2387007E0003013C0383C1F80380FFF00EA03F815207D9F1C>I<EB1F80EBFFE038
03E0703807C0F0380F01F8121F123EA2387E00F0007C1300A2EAFC08EB7FC0EBFFE038FD
80F038FF00F848137CA248137EA4127CA3003C137C123E001E13F86C13F0380783E03803
FFC0C6130017207E9F1C>I<12601278387FFFFEA214FC14F8A214F038E0006014C038C0
0180EB0300A2EA00065B131C131813381378A25BA31201A31203A76C5A17227DA11C>I<
13FE3803FFC0380703E0380E00F05A1478123C123E123F1380EBE0F0381FF9E0EBFFC06C
13806C13C06C13E04813F0381E7FF8383C1FFCEA7807EB01FEEAF000143E141EA36C131C
007813387E001F13F0380FFFC00001130017207E9F1C>I<EA01FE3807FF80380F83E038
1E01F0EA3E004813F8147800FC137CA3147EA4007C13FEA2EA3E01381E037EEA0FFEEA07
FCEA0020EB007CA2121E003F13F8A214F0EB01E0381E03C0381C0F80380FFE00EA03F817
207E9F1C>I<1470A214F8A3497EA2497EA3EB067FA2010C7F143FA2496C7EA201307F14
0F01707FEB6007A201C07F90B5FC4880EB8001A2D803007F14004880000680A23AFFE007
FFF8A225227EA12A>65 D<B67E15F03907F001F86E7E157EA2157FA5157E15FE5DEC03F8
90B55AA29038F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612F815C022
227EA128>I<D903FE138090381FFF819038FF01E33901F8003FD803E0131F4848130F48
481307121F48C71203A2481401127EA200FE91C7FCA8127EED0180127F7E15036C6C1400
120F6C6C1306D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21227DA128>I<B6
7E15F03907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8A916F0A3ED07E0
A2ED0FC0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B612FCA23807F00015
3C151C150C150EA21506140CA31500141C143CEBFFFCA2EBF03C141C140CA21503A21400
1506A3150EA2151E153EEC01FCB6FCA220227EA125>I<B612F8A23807F001EC00781538
1518151CA2150CA21418A21500A214381478EBFFF8A2EBF07814381418A491C7FCA8B512
C0A21E227EA123>I<B53883FFFEA23A07F0001FC0AD90B6FCA29038F0001FAFB53883FF
FEA227227EA12C>72 D<B51280A23807F000B3ACB51280A211227EA115>I<B512C0A2D8
07F0C7FCB31518A41538A21570A215F014011407B6FCA21D227EA122>76
D<D8FFF0EC0FFF6D5C000716E0D806FC1437A3017E1467A26D14C7A290391F800187A290
390FC00307A3903807E006A2903803F00CA2903801F818A3903800FC30A2EC7E60A2EC3F
C0A2EC1F80A3EC0F00D8FFF091B5FC140630227EA135>I<D8FFF8EB1FFE7F0007EC00C0
7FEA06FF6D7E6D7E6D7E130F806D7E6D7E6D7E130080EC7F80EC3FC0EC1FE0EC0FF01407
15F8EC03FCEC01FEEC00FF157FA2153F151F150F15071503A2D8FFF01301150027227EA1
2C>I<EB07FC90383FFF809038FC07E03903F001F848486C7E4848137E48487FA248C7EA
1F80A24815C0007E140FA200FE15E0A9007E15C0007F141FA26C15806D133F001F15006C
6C137E6C6C5B6C6C485A3900FC07E090383FFF80D907FCC7FC23227DA12A>I<B6FC15E0
3907F007F0EC01FC1400157EA2157FA5157EA215FC1401EC07F090B512E0150001F0C7FC
ADB57EA220227EA126>I<B512FEECFFC03907F007F0EC01F86E7E157E157FA6157E5D4A
5AEC07F090B512C05D9038F00FE06E7E6E7E6E7EA81606EC00FEEDFF0CB538803FF8ED0F
F027227EA12A>82 D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F8
1306A27E1400B4FC13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F
143FA200C0131FA36C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<B5
38803FFCA23A07F0000180B3A60003EC03007F000114066C6C130E017E5B90383F80F890
380FFFE0010190C7FC26227EA12B>85 D<B53A0FFFF00FFEA2260FF00090C712E000076E
14C0A26C6C90393F800180A26D14C00001EE0300A26D496C5A0000026F1306A2017F9038
C7F00CA2028113F8013F01835BA29139C301FC38011F153016FE90260FE6005BA202FEEB
FFE06D486D5AA26D486D5AA36D486DC7FCA36D48130EA237227FA13A>87
D<EA0FFC383FFF80387E07C0EB03E0130114F0123C1200A2133FEA03FDEA1FC1EA3F0112
7E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B>97 D<B4FCA2121FABEB0FE0EB
3FF8EBE07CEB803E497EEC0F80A215C0A81580141F01801300EBC03E381EE07C381C3FF8
38180FC01A237EA21F>I<EBFF80000713E0380F83F0EA1F03123E127E387C01E090C7FC
12FCA6127C127EA2003E13186C1330380FC0603807FFC0C6130015167E9519>I<EB01FE
A2EB003EABEA01FC3807FFBE380F81FE381F007E003E133E127E127C12FCA8127CA26C13
7E6C13FE380F83BE3907FF3FC0EA01FC1A237EA21F>I<13FE3807FF80380F87C0381E01
E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127CA2127E003E13186C1330380FC0
703803FFC0C6130015167E951A>I<EB1FC0EB7FE0EBF1F0EA01E31203EA07C3EBC1E0EB
C000A6EAFFFEA2EA07C0B2EA3FFCA2142380A211>I<3801FE0F3907FFBF80380F87C738
1F03E7391E01E000003E7FA5001E5BEA1F03380F87C0EBFF80D809FEC7FC0018C8FCA212
1C381FFFE06C13F86C13FE001F7F383C003F48EB0F80481307A40078EB0F006C131E001F
137C6CB45A000113C019217F951C>I<B4FCA2121FABEB07E0EB1FF8EB307CEB403CEB80
3EA21300AE39FFE1FFC0A21A237EA21F>I<121C123E127FA3123E121CC7FCA7B4FCA212
1FB2EAFFE0A20B247EA310>I<B4FCA2121FABECFF80A2EC38001460495A495A49C7FC13
0E5B137E13FF13CFEB0F806D7E6D7E1301806D7E147C143C39FFE0FFC0A21A237EA21E>
107 D<B4FCA2121FB3ADEAFFE0A20B237EA210>I<3AFF07F007F090391FFC1FFC3A1F30
3E303E01401340496C487EA201001300AE3BFFE0FFE0FFE0A22B167E9530>I<38FF07E0
EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A167E951F>I<13FE3807FFC0
380F83E0381E00F0003E13F848137CA300FC137EA7007C137CA26C13F8381F01F0380F83
E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF8381FE07CEB803E497E1580A2EC
0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC090C8FCA8EAFFE0A21A207E95
1F>I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7FCADEAFFF0A213167E9517>
114 D<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7FCEA7FE013F8EA3FFEEA0FFF
120138000F80EAC007130312E0A238F00700EAFC0EEAEFFCEAC7F011167E9516>I<487E
A41203A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB8300EA07C3EA03FEEA00F81120
7F9F16>I<38FF01FEA2381F003EAF147E14FE380F81BE3907FF3FC0EA01FC1A167E951F>
I<39FFE01FE0A2391F800700000F1306EBC00E0007130C13E000035BA26C6C5AA26C6C5A
A2EB7CC0A2137F6D5AA26DC7FCA2130EA21B167F951E>I<3AFFE3FF07F8A23A1F007800
C09038807C01000F1580A23A07C07E030014DE5D3903E1DF06148FD801F1138CEBF307A2
D800FF13D8EBFE0315F890387C01F0A2013C5BEB3800A225167F9528>I<39FFE01FE0A2
391F800700000F1306EBC00E0007130C13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F
6D5AA26DC7FCA2130EA2130CA25B1278EAFC3813305BEA69C0EA7F80001FC8FC1B207F95
1E>121 D<387FFFF0A2387C03E0387007C0EA600F38E01F8000C01300133E137EC65A5B
485A00031330EA07E013C0380F8070121F383F0060003E13E0EA7C03B5FCA214167E9519
>I E /Fj 20 121 df<126012F0A212701210A21220A21240A2040A7D830A>59
D<EA07FEEA00E0A4EA01C0A4EA0380A4EA0700A4120EA45AEAFFC00F177E960F>73
D<EA07FFEA00E0A4485AA4485AA448C7FC1408A21410120E143014201460381C01E0B512
C015177F9618>76 D<3907F007F80000EB00C001B81380A2139C39011C0100131E130EA2
38020702A2EB0382A2380401C4A2EB00E4A2481378A21438A20018131012FE1D177F961C
>78 D<3807FFF83800E00E1407A3EA01C0A3140E3803801C1470EBFFC0EB800048C7FCA4
120EA45AB47E18177F9616>80 D<EB3E10EBC1A0380100E0000213601206481340A2000E
1300120FEA07E013FCEA01FEEA003FEB07801303A2EA200138400300A2EA60061304EAD8
18EA87E014177E9615>83 D<EA0710EA18F0EA30701260136012C0A3EA80C013C4A212C1
EA46C8EA38700E0E7E8D13>97 D<133E130CA41318A4EA0730EA18F0EA30701260136012
C0A3EA80C013C4A212C1EA46C8EA38700F177E9612>100 D<EA07C0EA1C20EA30101260
1320EAFFC0EAC000A41310EA4020EA60C0EA1F000C0E7E8D10>I<120313801300C7FCA6
121C12241246A25A120C5AA31231A21232A2121C09177F960C>105
D<123E120CA41218A41230A41260A412C012C8A312D0127007177E960B>108
D<38383C1E3844C6633847028138460301388E0703EA0C06A338180C061520140C154039
301804C0EC07001B0E7F8D1F>I<EA383CEA44C6EA47021246EA8E06120CA3485A144013
181480EA3009EB0E00120E7F8D15>I<EA07C0EA0C20EA1010EA2018126012C0A3EA8030
A2EAC06013C0EA6180EA3E000D0E7E8D11>I<EA1C3CEA2246EA2382130312461206A3EA
0C06A2130C1308EA1A30EA19E0EA1800A25AA312FC1014808D12>I<EA30F0EA4918EA4E
38EA4C30EA9C001218A35AA45AA20D0E7F8D10>114 D<1203A21206A4EAFFC0EA0C00A3
5AA45A1380A2EA31001232121C0A147F930D>116 D<EA1C02EA26061246A2EA860C120C
A3485A1480A21338380C5900EA078E110E7F8D14>I<EA1C04EA26061246A2EA8604120C
A3EA1808A213101320EA0C60EA07800F0E7F8D11>I<EA0F1F3811A180EA20C31400EA41
801201A348C7FC130212C3EAE704EAC508EA78F0110E7F8D14>120
D E /Fk 4 57 df<1330ABB512FCA238003000AB16187E931B>43
D<EA01F0EA0608EA080CEA181C1230EA7000126012E0EAE3E0EAEC30EAF018130CEAE00E
A31260A2EA300C1318EA1830EA07C00F157F9412>54 D<1240EA7FFE13FC13F8EAC008EA
80101320EA00401380A2EA01005AA212021206A2120EA512040F167E9512>I<EA07E0EA
1830EA2018EA600CA21270EA7818EA3E10EA1F60EA07C0EA0FF0EA18F8EA607C131EEAC0
0E1306A21304EA600CEA3830EA0FE00F157F9412>I E /Fl 9 113
df<EAFFE0A2EA0E00B0EAFFE0A20B147D9312>73 D<B4FCA21238AC1304130EA3EAFFFE
A20F147F9312>76 D<EAFFE013F8EA383C131C130EA4131C133CEA3FF813E0EA3800A612
FEA20F147F9312>80 D<EA1F30EA3FF01270EAE070A313001270127FEA3FC0EA0FE0EA00
F013781338126012E01330EAF070EAFFE0EACF800D147E9312>83
D<EA0780EA1FE0EA38701270EA603812E0EAFFF8A2EAE0001260EA70381238EA1FF0EA07
C00D0E7E8D12>101 D<1206120FA21206C7FCA3127FA21207AAEAFFF0A20C157D9412>
105 D<B4FCA21207B0EAFFF8A20D147E9312>108 D<EAF71CEAFFBEEA79E7A2EA71C7A8
38F9E780EAF8E3110E808D12>I<EAFBE0EAFFF0EA3C38EA381C130C130EA4130C131CEA
3C38EA3FF0EA3BC0EA3800A512FEA20F157F8D12>112 D E /Fm
33 122 df<127012F8A3127005057C840E>58 D<90B512F090380F003C150E81011EEB03
80A2ED01C0A25B16E0A35BA449EB03C0A44848EB0780A216005D4848130E5D153C153848
485B5D4A5A0207C7FC000F131CB512F023227DA128>68 D<90B6128090380F00071501A2
131EA21600A25BA2140192C7FCEB7802A21406140EEBFFFCEBF00CA33801E008A21502EC
0004485AA25D15184848131015305D15E0000F1307B65A21227DA124>I<90B612809038
0F00071501A2131EA21600A25BA2140192C7FCEB7802A21406140EEBFFFCEBF00CA33801
E008A391C8FC485AA4485AA4120FEAFFFC21227DA120>I<EBFFF8EB0F00A3131EA45BA4
5BA45BA4485AA4485AA4485AA4120FEAFFF815227DA116>73 D<EBFFFCEB0F8091C7FCA2
131EA45BA45BA45BA4485AA21520A248481340A21580A23807800115005C140F000F133E
B512FE1B227DA121>76 D<D9FF80EB03FE010FEC07C0160BA2D913C0EB1780A216271647
0123EC4F00168FA2ED010F0143EB021EEB41E01504150801815C1510A21520D80101495A
EB00F01580ECF10000025D14F2A214F4489038F801E0A21470120C001EEB60033AFFC040
3FFE2F227DA12F>I<9039FF8007FE010FEB00F016C0D90BC0134001131480A2EB11E0A2
903921F001001320A2147801401302147C143CA2496C5AA3140FD801005B15881407A200
02EB03D0A215F01401485C1400A2120C001E1440EAFFC027227DA127>I<147F90380381
C090380E0060013813385B49131C4848131E4848130E48C7FC48140F120E5A123CA25AA3
48141EA3153CA3481478A215F06C14E01401EC03C00070EB0780007814000038130E6C13
386C5B380783C0D800FEC7FC20247DA225>I<90B512E090380F0038151E150E011E1307
A449130FA3151E5B153C157815E09038F003C09038FFFE0001F0C7FCA2485AA4485AA448
5AA4120FEAFFF820227DA11F>I<90B512C090380F0078151C81011E130F811680A249EB
0F00A3151E495B5D15E0EC0380D9FFFCC7FCEBF0076E7E8148486C7EA44848485AA44848
485A1680A29138038100120F39FFF801C6C8127821237DA125>82
D<903803F81090380E0420903818026090382001E0EB400001C013C05B1201A200031480
A21500A27FEA01F013FE3800FFE06D7EEB1FF8EB01FCEB003C141C80A30020130CA31408
00601318141000705B5C00C85BD8C603C7FCEA81FC1C247DA21E>I<3A3FFE01FF803A03
C0003C001530151048485BA448C75AA4001E5CA44849C7FCA4481302A400705B12F05C12
705C5C6C5B5C6C48C8FCEA0606EA01F821237DA121>85 D<EB78603801C4E0EA03023806
01C0120E121C123C383803801278A338F00700A31408EB0E101270131E38302620EA18C6
380F03C015157E941A>97 D<133FEBE080380380C0EA0701EA0E03121C003CC7FCA25AA3
5AA400701340A23830018038380200EA1C1CEA07E012157E9415>99
D<141E14FC141CA31438A41470A414E01378EA01C4EA0302380601C0120E121C123C3838
03801278A338F00700A31408EB0E101270131E38302620EA18C6380F03C017237EA219>
I<137EEA038138070080120E5A5A38780100EA7006EAFFF800F0C7FCA25AA41480A23870
0300EA3004EA1838EA0FC011157D9417>I<EB0F86EB384EEB602EEBE03C3801C01CEA03
801207EB00385AA3001E1370A414E0120E1301EA060238030DC0EA01F1EA0001A2EB0380
A338700700EAF0065BEA6038EA3FE0171F809417>103 D<13F0EA07E01200A3485AA448
5AA448C7FCEB0F80EB30C0EB4060380E8070EA0F00120EA24813E0A4383801C0A2EB0380
148200701384EB07041408130300E01310386001E017237EA21C>I<13E0A21201EA00C0
1300A9121E1223EA4380A21283EA8700A21207120EA35AA3EA38201340127013801230EA
3100121E0B227EA111>I<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45AA45A
A31380EAE100A31262A2123C0B237EA20F>108 D<393C07E01F3A46183061803A472018
80C03A87401D00E0EB801E141C1300000E90383801C0A4489038700380A2ED0700160448
01E01308150EA2ED0610267001C01320D83000EB03C026157E942B>I<383C07C0384618
60384720303887403813801300A2000E1370A44813E0A2EB01C014C1003813C2EB038214
84130100701388383000F018157E941D>I<133EEBC180380380C0380700E0120E4813F0
123CA25AA338F001E0A214C0130300701380EB07001306EA381C6C5AEA07E014157E9417
>I<3803C0F03804631CEB740EEA0878EB7007A2140FEA00E0A43801C01EA3143C380380
38A2EBC07014E038072180EB1E0090C7FCA2120EA45AA3B47E181F819418>I<EA3C0F38
4630C0EA4741EA8783A2EB018090C7FC120EA45AA45AA45A123012157E9416>114
D<137E138138030080EA0201EA0603140090C7FC120713F0EA03FC6CB4FCEA003FEB0780
1303127000F01300A2EAE002EA4004EA3018EA0FE011157E9417>I<136013E0A4EA01C0
A4EA0380EAFFFCEA0380A2EA0700A4120EA45AA31308EA3810A21320EA184013C0EA0F00
0E1F7F9E12>I<001E131800231338EA438014701283A2EA8700000713E0120EA3381C01
C0A314C2EB0384A21307380C0988EA0E113803E0F017157E941C>I<001E13E0EA230138
4381F01380008313701430EA870000071320120EA3481340A21480A2EB0100A21302EA0C
04EA0618EA03E014157E9418>I<001EEB181C0023EB383CD84380133EEC701E0083140E
1506EA87000007EBE004120EA3391C01C008A31510A2152001031340EA0C043907086180
3901F03E001F157E9423>I<3801E0F03806310C38081A1C0010133CEA201C14181400C6
5AA45BA314083860E01012F0142038E1704038423080383C1F0016157E941C>I<001E13
1800231338EA438014701283EA8700A2000713E0120EA3381C01C0A4EB0380A21307EA0C
0B380E1700EA03E7EA0007A2130E1260EAF01C1318485AEA8060EA41C0003FC7FC151F7E
9418>I E /Fn 60 122 df<EC0FF0EC380CEC600EECC01E1301EC801C01031300A349C7
FCA590B512F090380E0070A215E0A25BA2EC01C0A31338EC0380A315889038700710A4EC
03209038E001C091C7FCA25BA21201EA718012F100F3C8FC1262123C1F2D82A21B>12
D<137013F01201A313E0A3EA03C0A31380A3EA0700A31206A35AA31208A3C7FCA5127012
F8A25A5A0C247AA30F>33 D<120C121E123FA2121D1202A31204A2120812101220124012
80080F75A20F>39 D<120E121EA41202A21204A21208A21210122012401280070F7D840F
>44 D<EAFFF0A213E00C037C8B11>I<127012F8A212F012E005057A840F>I<EB0F80EB30
C0EBE0603801C070EA038013005A5A120E121EA2001C13F0123CA3387801E0A438F003C0
A31480EAE007A214005B130E5BA25BEA60706C5A001FC7FC14227AA019>48
D<13011303A21306131E132EEA03CEEA001CA41338A41370A413E0A4EA01C0A4EA0380A4
1207EAFFFC10217AA019>I<EB0FC0EB1060EB6038EB8018141CEA01003802201E131012
04A33808203CA2EB40381478EB80F0380700E0380001C0EB030013061318132013C048C7
FC1202481310481330481320481360385F80C0EA63FF0040138038807F00131E17227CA0
19>I<EB0FC0EB3070EBC0183801001C120248130CEB401CEA0820A3EB403813C0380700
70C71260EB01C0EB070013FC1307EB0380A2EB01C0A31303126012F01480EAE007008013
00130E5BEA4038EA20F0EA1F8016227BA019>I<14181438A21470A314E0A314C0130114
8013031400A21306A25BA25B1310EB3180EB61C0EB438013831201EA0303380207001204
1208EA3FC7EA403E38800FF038000E00A25BA45BA31330152B7EA019>I<EB4004EB7038
EBFFF014E0EBBF80EB800048C7FCA41202A2133E13C338050180000613C01204000013E0
A6387003C012F0A238E00780008013005B130EEA401C5BEA30E0EA0F8016227BA019>I<
EB03E0EB0C10EB3008EB6038EBC07812013803803048C7FCA2120E121EA2EA1C7CEA3C86
EA3D03007A1380127C387801C0130312F812F0A338E00780A314005B130E5BEA60185BEA
30E0EA0F8015227AA019>I<380278023804FC041207000F1308EB0C18381E0470381803
A03830006000201340006013C000401380EA8001EA000314005B1306130EA25BA2133C13
381378A25BA3485AA312035BA26C5A172279A019>I<EB0FC0EB3060EB4010EB80183801
000848130CA2481318A21410EB8030EBC060EBE0C03803F100EA01FE6C5A7FEA033F3806
1F80380C0FC0EA1803EA3001126013005AA214801301140013021306EA6008EA3030EA0F
C016227BA019>I<EB0FC0EB3860EB603013E03801C038EA0380120713005AA3001E1378
A314F814F0121CEA0E011302380605E0EA0309EA01F1380003C0A21480EB0700A2EA600E
EAF00C5B485AEA8060EA41C0003FC7FC15227BA019>I<1207EA0F80A21300120EC7FCAB
127012F8A25A5A09157A940F>I<1403A25CA25CA25C142FA2EC4F80A21487A2EB010713
02A21304A21308131813101320A290387FFFC0EB40031380EA0100A21202A25AA2120C00
3CEB07E0B4EB3FFC1E237DA224>65 D<027F138090390380810090380E00630138132749
131F49130E485A485A48C7FC481404120E121E5A5D4891C7FCA35AA55A1520A25DA26C5C
12704AC7FC6C130200185B001C5B00061330380381C0D800FEC8FC212479A223>67
D<90B512F090380F003C150E81011EEB0380A2ED01C0A25B16E0A35BA449EB03C0A44848
EB0780A216005D4848130E5D153C153848485B5DEC03804AC7FC000F131CB512F023227D
A125>I<90B6128090380F00071501A2131EA21600A25BA2140192C7FCEB7802A2140614
0EEBFFFCEBF00CA33801E008A21504EC0008485AA25DA248485B15605D1401380F0007B6
5A21227DA121>I<90B6FC90380F000F1503A2131EA21502A25BA214011500EB7802A214
06140EEBFFFCEBF00CA33801E008A391C7FC485AA4485AA4120FEAFFF820227DA120>I<
027F138090390380810090380E00630138132749131F49130E485A485A48C7FC48140412
0E121E5A5D4891C7FCA35AA4EC3FFC48EB01E0A34A5AA27E12704A5A7E0018130F001C13
1300060123C7FC380381C1D800FEC8FC212479A226>I<9039FFF87FFC90390F000780A3
011EEB0F00A449131EA4495BA490B512F89038F00078A348485BA44848485AA44848485A
A4000F130739FFF07FF826227DA124>I<EBFFF8EB0F00A3131EA45BA45BA45BA4485AA4
485AA4485AA4120FEAFFF015227DA113>I<903807FFC09038003C00A35CA45CA4495AA4
495AA4495AA449C7FCA212381278EAF81EA2485AEA40385BEA21E0EA1F801A237CA11A>
I<EBFFFCEB0F8091C7FCA2131EA45BA45BA45BA4485AA21520A248481340A21580A23807
800115005C140F000F133EB512FE1B227DA11F>76 D<D9FF80EB07FC010FEC0F801617A2
0117EC2F00EB13C0164F168F0123149EED011EA215020143495AA21508EB41E00181495A
1520A21540D801015C1580ECE100A23A0200F201E0A214F414F8484A5A14F0A2000C13E0
001EEBC007D8FF80EB7FF82E227DA12C>I<01FFEB0FFC90390F8001E01680ECC0000113
EB0100A2EB11E0A201211302EB20F0A39038407804A3143C01805B143E141EA23901001F
10140FA2EC0790000214A0A2EC03E0A2485C1401A2120C001E6D5AB47E26227DA124>I<
14FE903807838090380C00E0013813704913385B4848131C485A48C7FC48141E121E121C
123CA25AA348143CA31578A25A15F0A2EC01E015C06C1303EC0780007014000078130E00
385B6C5B6C13E038070380D801FCC7FC1F2479A225>I<90B512E090380F0038151E150E
011E1307A449130FA3151E5B153C157815E09038F003C09038FFFE0001F0C7FCA2485AA4
485AA4485AA4120FEAFFF020227DA121>I<90B512C090380F0070153C151C011E130EA2
150FA249131EA3153C4913381570EC01E0EC07809038FFFC00EBF00E80EC0380D801E013
C0A43903C00780A43907800F001501A2EC0702120F39FFF0038CC812F020237DA124>82
D<903801F02090380E0C4090381802C0EB3001136001E0138013C01201A200031400A291
C7FCA27FEA01F813FF6C13E06D7EEB1FF8EB03FCEB007C143C80A30020131CA314180060
1338143000705B5C38C80180D8C607C7FCEA81FC1B247DA21B>I<001FB512F8391E03C0
3800181418123038200780A200401410A2EB0F001280A200001400131EA45BA45BA45BA4
485AA41203B5FC1D2277A123>I<393FFE03FF3903C000781560152048481340A448C712
80A4001EEB0100A4481302A4485BA400705B12F05C12705C5C123038380180D81802C7FC
EA0E0CEA03F0202377A124>I<39FFF001FF001FC7127815306C146015401580A2EC0100
A214025C13805C12075C5CA25CA25C0181C7FCA213C2120313C413C8A213D0A213E05BA2
5B120190C8FC202376A124>I<3BFFE07FF00FF83B1F000F8003C0001E91380001801700
1602A2001F5DA26C495BA2022F5BA291384F802002475B14875EEB010701030181C7FC13
0201041382A201081384158C011013881590132001A013A013C0D8078013C0A201005BA2
000691C8FC140212042D2376A131>I<EBF8C0EA0185EA0705380E0380A2121C123C3838
07001278A3EAF00EA31410EB1C201270133C38305C40138C380F078014157B9419>97
D<137EEA01C138030180EA0703EA0E07121C003CC7FC12381278A35AA45B12701302EA30
0CEA1830EA0FC011157B9416>99 D<143CEB03F8EB0038A31470A414E0A4EB01C013F9EA
0185EA0705380E0380A2121C123C383807001278A3EAF00EA31410EB1C201270133C3830
5C40138C380F078016237BA219>I<13F8EA0384EA0E02121C123C1238EA7804EAF018EA
FFE0EAF000A25AA41302A2EA6004EA7018EA3060EA0F800F157A9416>I<143E144714CF
EB018F1486EB0380A3EB0700A5130EEBFFF0EB0E00A35BA55BA55BA55BA45B1201A2EA71
8012F100F3C7FC1262123C182D82A20F>I<EB1F18EB30B813E03801C070A2EA03801207
EB00E05AA3381E01C0A4EB0380120E1307EA060BEB1700EA01E7EA0007A2130EA3EA701C
EAF0185BEA60E0EA3F80151F7E9416>I<13F0EA0FE01200A3485AA4485AA448C7FC131F
EB2180EBC0C0380F00E0A2120EA2381C01C0A438380380A3EB070400701308130E141013
0600E01320386003C016237DA219>I<13C0EA01E013C0A2C7FCA8121E12231243A25AA3
120EA25AA35AA21340EA7080A3EA71001232121C0B217BA00F>I<13F0EA07E01200A348
5AA4485AA448C7FCEB01E0EB0210EB0470380E08F01310EB2060EB4000EA1D80001EC7FC
EA1FC0EA1C70487EA27F142038703840A3EB188012E038600F0014237DA216>107
D<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45AA45AA3127112E2A412641238
0B237CA20C>I<391C0F80F8392610C10C39476066063987807807A2EB0070A2000EEBE0
0EA44848485AA3ED38202638038013401570168015303A7007003100D83003131E23157B
9428>I<38380F80384C30C0384E4060388E8070EA8F00128EA24813E0A4383801C0A3EB
03840070138814081307EB031012E0386001E016157B941B>I<137EEA01C33803818038
0701C0120E001C13E0123C12381278A338F003C0A21480130700701300130E130CEA3018
EA1870EA07C013157B9419>I<3801C1F0380262183804741C3808780CEB700EA2141EEA
00E0A43801C03CA3147838038070A2EBC0E0EBC1C038072380EB1E0090C7FCA2120EA45A
A3EAFFC0171F7F9419>I<EBF840380184C0EA0705380E0380A2121C123C383807001278
A3EAF00EA45B1270133CEA305C5BEA0F381200A25BA45BA3EA0FFC121F7B9416>I<EA1C
1F38262080384741C0EA87831303EB018090C7FC120EA45AA45AA45A123012157B9415>
I<13FCEA018338020080EA0401EA0C03140090C7FC120F13F0EA07FC6C7EEA003E130F7F
1270EAF006A2EAE004EA4008EA2030EA1FC011157D9414>I<13C01201A4EA0380A4EA07
00EAFFF8EA0700A2120EA45AA45AA31310EA7020A213401380EA3100121E0D1F7C9E10>
I<001E1360002313E0EA4380EB81C01283EA8701A238070380120EA3381C0700A31408EB
0E101218121CEB1E20EA0C263807C3C015157B941A>I<381C0180382603C0EA47071303
EA8701EA8E00A2000E13805AA338380100A31302A25B5B1218EA0C30EA07C012157B9416
>I<001EEB60E00023EBE0F0384380E1EB81C000831470D887011330A23907038020120E
A3391C070040A31580A2EC0100130F380C0B02380613843803E0F81C157B9420>I<3803
C1E0380462103808347038103CF0EA203814601400C65AA45BA314203861C04012F11480
38E2C100EA4462EA383C14157D9416>I<001E133000231370EA438014E01283EA8700A2
380701C0120EA3381C0380A4EB0700A35BEA0C3EEA03CEEA000EA25B1260EAF038133048
5AEA80C0EA4380003EC7FC141F7B9418>I E /Fo 22 121 df<387FFFC0B512E0A26C13
C013047D901A>45 D<1230127812FCA212781230060676851A>I<13C01201A212031207
120F127F12FD12711201B2EA7FFFA3101E7B9D1A>49 D<EA03F8EA0FFE381FFF80383C07
C0387801E0EA70004813707EA21260C7FCA214E0A2EB01C01303EB0780EB0F00131E5B5B
5BEA03E0485A48C7FC001E13705A387FFFF0B5FC7E141E7D9D1A>I<EB0F80131F133BA2
137313F313E3EA01C3120313831207EA0F03120E121E123C1238127812F0B512FEA33800
0380A6EB3FF8EB7FFCEB3FF8171E7F9D1A>52 D<EA7FFFB512806C1300EA01C0B3A6EA7F
FFB512806C1300111E7C9D1A>73 D<EA7FE012FF127F000EC7FCB3141CA5387FFFFCB5FC
7E161E7F9D1A>76 D<EA0FFE383FFF804813C0EA7C07EA700100F013E0EAE000B1EAF001
A2007013C0EA7C07EA7FFF6C1380380FFE00131E7D9D1A>79 D<EAFFFEEBFF8014C0381C
03E0EB00F0147014781438A41478147014F0EB03E0381FFFC01480EBFE00001CC7FCA9B4
7EA3151E7E9D1A>I<3803F8E0EA0FFEEA1FFFEA3C07EA780112F0EAE000A31400127012
78EA3F80EA1FF8EA07FF38007FC0EB07E0EB00F014701438A2126012E0A214706C13F038
FE01E0B512C000EF138038E1FE00151E7E9D1A>83 D<EBFF80000313C0000F13E0EA1F01
383C00C04813001270A25AA51270A2007813707E381F01F0380FFFE0000313C03800FE00
14157D941A>99 D<EA01F8EA07FF481380381E07C0EA3C01387800E01270481370A2B512
F0A300E0C7FC1270A2007813707E381F01F0380FFFE0000313803800FE0014157D941A>
101 D<EB07E0EB1FF0EB3FF8EB7878EBF030EBE000A4387FFFF0B5FCA23800E000AF383F
FF804813C06C1380151E7F9D1A>I<13C0487EA26C5A90C7FCA6EA7FE0A31200AF387FFF
80B512C06C1380121F7C9E1A>105 D<EA7FE012FF127F1200B3A6387FFFC0B512E06C13
C0131E7D9D1A>108 D<387CE0E038FFFBF8EA7FFF381F1F1CEA1E1EA2EA1C1CAC387F1F
1F39FFBFBF80397F1F1F00191580941A>I<EA7E3E38FEFF80007F13C0EA0FC1EB80E013
00120EAC387FC3FC38FFE7FE387FC3FC17157F941A>I<EA01F0EA07FCEA1FFF383E0F80
EA3C07387803C0EA700138E000E0A6EAF001007013C0EA7803383C0780EA3E0F381FFF00
EA07FCEA01F013157D941A>I<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB0038120E
141CA7000F13381478EB80F0EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC0487E6C5A
16207F941A>I<387F81F838FF8FFC387F9FFE3803FE1EEBF80CEBE000A25B5BAAEA7FFF
B5FC7E17157F941A>114 D<387E07E0EAFE0FEA7E07EA0E00AD1301EA0F033807FFFC6C
13FE3800FCFC17157F941A>117 D<387FC7F8EBCFFCEBC7F8380703C038038380EBC700
EA01EFEA00FE137C13781338137C13EE120113C738038380000713C0EA0F01387FC7FC00
FF13FE007F13FC17157F941A>120 D E /Fp 82 124 df<90381FC1F090387037189038
C03E3C3801807C000313783907003800A9B612C03907003800B2143C397FE1FFC01E2380
A21C>11 D<EB1FC0EB7020EBC0103801803800031378EA0700143091C7FCA7B512F83807
00781438B2397FE1FF80192380A21B>I<EB1FD8EB7038EBC078EA0180120338070038A9
B512F838070038B3397FF3FF80192380A21B>I<90380FC07F90397031C0809039E00B00
402601801E13E00003EB3E013807003C91381C00C01600A7B712E03907001C011500B23A
7FF1FFCFFE272380A229>I<EA7038EAF87CEAFC7EA2EA743AEA0402A4EA0804A2EA1008
A2EA2010EA40200F0F7EA218>34 D<D80780130CEA18406D5B486C1370D8701C13B03960
13FF6038E008005D4A5AA24AC7FC1406A25C38601018127000305BEA1820495A390780C0
3CC7134290380180C190380301819138038080010613001640495A1318A213301360A213
C048487E1680D80300138091380181000006EB00C14814420004143C22287DA429>37
D<127012F812FCA212741204A41208A21210A212201240060F7CA20E>39
D<132013401380EA01005A12061204120CA25AA25AA312701260A312E0AE1260A3127012
30A37EA27EA2120412067E7EEA0080134013200B327CA413>I<7E12407E7E12187E1204
1206A27EA2EA0180A313C01200A313E0AE13C0A312011380A3EA0300A21206A21204120C
5A12105A5A5A0B327DA413>I<497EB0B612FEA23900018000B01F227D9C26>43
D<127012F812FCA212741204A41208A21210A212201240060F7C840E>I<EAFFF8A20D02
808B10>I<127012F8A3127005057C840E>I<14801301A2EB0300A31306A35BA35BA35BA3
5BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA311317DA418>I<EA01F0EA07
1CEA0C06487E00381380A2387001C0A400F013E0AE007013C0A3EA780300381380A2381C
0700EA0C06EA071CEA01F013227EA018>I<13801203120F12F31203B3A9EA07C0EAFFFE
0F217CA018>I<EA03F0EA0C1CEA100700201380384003C0A2008013E012F0EAF801A3EA
2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC000213205A5A0018136048
1340383FFFC05AB5FC13217EA018>I<EA03F8EA0C1EEA100F38200780004013C0127813
031307123800001380A214005B130C1338EA03F0EA001C130FEB0780A2EB03C0A214E012
20127012F8A200F013C01240EB0780122038100F00EA0C1CEA03F013227EA018>I<1303
A25BA25B1317A21327136713471387120113071202120612041208A212101220A2124012
C0B512F838000700A7EB0F80EB7FF015217FA018>I<00101380381E0700EA1FFF5B13F8
EA17E00010C7FCA6EA11F8EA120CEA1C07381803801210380001C0A214E0A4127012F0A2
00E013C01280EA4003148038200700EA1006EA0C1CEA03F013227EA018>I<137EEA01C1
38030080380601C0EA0C03121C381801800038C7FCA212781270A2EAF0F8EAF30CEAF406
7F00F81380EB01C012F014E0A51270A3003813C0A238180380001C1300EA0C06EA070CEA
01F013227EA018>I<12401260387FFFE014C0A23840008038C0010012801302A2485A5B
A25B5BA21360134013C0A21201A25B1203A41207A76CC7FC13237DA118>I<EA01F8EA06
0EEA0803381001801220386000C0A31270A238780180003E1300EA3F02EA1FC4EA0FF812
036C7EEA067EEA083F38100F80383007C0EA6003EB00E05A1460A40060134014C06C1380
38180300EA0E0EEA03F013227EA018>I<EA01F0EA060C487EEA1807383803801270A238
F001C0A314E0A5127013031238EA1805120CEA0619EA03E1380001C0A3EB0380A2123038
7807001306EA700CEA20186C5AEA0FC013227EA018>I<127012F8A312701200AB127012
F8A3127005157C940E>I<127012F8A312701200AB127012F8A312781208A41210A31220
1240A2051F7C940E>I<B612FEA2C9FCA8B612FEA21F0C7D9126>61
D<497EA3497EA3EB05E0A2EB09F01308A2EB1078A3497EA3497EA2EBC01F497EA248B512
80EB0007A20002EB03C0A348EB01E0A348EB00F0121C003EEB01F839FF800FFF20237EA2
25>65 D<B512F8380F800E0007EB0780EC03C015E0140115F0A515E01403EC07C0EC0F80
EC3E00EBFFFE9038800780EC03C0EC01E015F0140015F8A6EC01F0A2EC03E0EC07C0000F
EB0F00B512FC1D227EA123>I<903807E0109038381830EBE0063901C0017039038000F0
48C7FC000E1470121E001C1430123CA2007C14101278A200F81400A812781510127C123C
A2001C1420121E000E14407E6C6C13803901C001003800E002EB381CEB07E01C247DA223
>I<B512F0380F801E00071307EC0380EC01C0EC00E015F01578A2157C153CA3153EA915
3CA2157C1578A215F015E01401EC03C0EC0700000F131EB512F01F227EA125>I<B612C0
380F80070007130114001540A215601520A314201500A3146014E013FF138014601420A3
15081400A21510A31530A2157015E0000F1303B6FC1D227EA121>I<B612C0380F800700
07130114001540A215601520A314201500A3146014E013FF138014601420A491C7FCA948
7EEAFFFE1B227EA120>I<903807F00890383C0C18EBE0023901C001B839038000F848C7
1278481438121E15185AA2007C14081278A200F81400A7EC1FFF0078EB00F81578127C12
3CA27EA27E7E6C6C13B86C7E3900E0031890383C0C08903807F00020247DA226>I<39FF
FC3FFF390FC003F039078001E0AE90B5FCEB8001AF390FC003F039FFFC3FFF20227EA125
>I<EAFFFCEA0FC0EA0780B3ACEA0FC0EAFFFC0E227EA112>I<3803FFE038001F007FB3A6
127012F8A2130EEAF01EEA401C6C5AEA1870EA07C013237EA119>I<D8FFFCEBFF80D80F
C0EB7C006C48133015205D5D4AC7FC14025C5C5C5C5C5CEB81C0EB83E01385EB88F01390
EBA078EBC03C13808080A26E7E8114036E7EA26E7E81486C7F3AFFFC07FF8021227EA126
>I<EAFFFCEA1F806CC7FCB3A21401A41403A214021406A2141E48137EB512FE18227DA1
1E>I<D8FFC0EB03FF000F15F0000715E0D805E01305A2D804F01309A301781311A36D13
21A36D1341A26D1381A39038078101A3EB03C2A2EB01E4A3EB00F8A31470120E001FEC03
F03AFFE0203FFF28227EA12D>I<39FF8007FF3907C000F81570D805E01320EA04F0A213
78137C133C7F131F7FEB0780A2EB03C0EB01E0A2EB00F014F81478143C143E141E140FA2
EC07A0EC03E0A21401A21400000E1460121FD8FFE0132020227EA125>I<EB0FE0EB783C
EBE00E3903C0078039078003C0390F0001E0000E1300001E14F0481478A2007C147CA200
78143CA200F8143EA90078143C007C147CA2003C1478003E14F8001E14F06CEB01E0A239
078003C03903C007803900E00E00EB783CEB0FE01F247DA226>I<B512F0380F803C0007
130FEC078015C0140315E0A615C014071580EC0F00143CEBFFF00180C7FCAE487EEAFFFC
1B227EA121>I<EB0FE0EB783CEBE00E3903C0078039078003C0390F0001E0000E130000
1E14F0003E14F8003C1478007C147CA20078143CA200F8143EA90078143C007C147CA200
3C1478A2391E0380F0390E0420E0380F080139078813C03903C817803900E80E0090387C
3C02EB0FECEB000CA2EC0E06EC0F0EEC07FCA215F81403EC01E01F2D7DA226>I<B512E0
380F803C0007130E6E7E81140381A55D14075D020EC7FC143CEBFFE0EB80708080141E14
0E140FA481A3168015C014073A0FC003C10039FFFC01E2C8127C21237EA124>I<3803F0
20380C0C60EA1802383001E0EA70000060136012E0A21420A36C1300A21278127FEA3FF0
EA1FFE6C7E0003138038003FC0EB07E01301EB00F0A214707EA46C1360A26C13C07E38C8
018038C60700EA81FC14247DA21B>I<007FB512F839780780780060141800401408A300
C0140C00801404A400001400B3A3497E3801FFFE1E227EA123>I<39FFFC07FF390FC000
F86C4813701520B3A5000314407FA2000114806C7E9038600100EB3006EB1C08EB03F020
237EA125>I<D8FFF0EB7FC0D81F80EB1F006CC7120C7F00071408A26C6C5BA36C6C5BA2
6D136000001440A201785BA2137CD93C01C7FCA2EB1E02A36D5AA2148CEB0788A2EB03D0
A214F06D5AA26D5AA322237FA125>I<3BFFF03FFC03FE3B1F8007E000F86C486C481370
17206E7ED807801540A24A7E2603C0021480A39039E004780100011600A2EC083CD800F0
1402A2EC101E01785CA2EC200F013C5CA20260138890391E400790A216D090391F8003F0
010F5CA2EC00016D5CA20106130001025C2F237FA132>I<D8FFF0EB7FC0D81F80EB1F00
000F140C000714087F00035C6C6C5B7F00005C6D13C0017C5BD93C01C7FC133EEB1E02EB
1F06EB0F84EB078814D8EB03D014E01301AC1303EB3FFE22227FA125>89
D<387FFFFE387E003E0078133C007013781260004013F012C0EB01E0388003C0A2EB0780
1200EB0F005B131E5BA25BA25B1201EBE001EA03C0A2EA07801403EA0F00001E1302A248
1306140E48131E00F8137EB512FE18227DA11E>I<12FEA212C0B3B3A912FEA207317BA4
0E>I<EA0804EA1008EA2010A2EA4020A2EA8040A4EAB85CEAFC7EA2EA7C3EEA381C0F0F
7AA218>I<12FEA21206B3B3A912FEA207317FA40E>I<EA1FE0EA3038EA780C130EEA3007
1200A313FFEA07C7EA1E07123C1278127000F01308A3130FEA7817383C2390380FC1E015
157E9418>97 D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C141C
141EA7141C143C1438000F1370380C8060EB41C038083F0017237FA21B>I<EA01FEEA07
03380C0780121C383803000078C7FC127012F0A712700078134012386C1380380C0100EA
0706EA01F812157E9416>I<14E0130F13011300ABEA01F8EA0704EA0C02EA1C01EA3800
1278127012F0A7127012781238EA1801EA0C0238070CF03801F0FE17237EA21B>I<EA01
FCEA0707380C0380381C01C01238007813E0EA700012F0B5FC00F0C7FCA5127000781320
12386C13406C138038070300EA00FC13157F9416>I<133E13E33801C780EA0387130748
C7FCA9EAFFF80007C7FCB27FEA7FF0112380A20F>I<14703803F198380E1E18EA1C0E38
380700A200781380A400381300A2EA1C0EEA1E1CEA33F00020C7FCA212301238EA3FFE38
1FFFC06C13E0383000F0481330481318A400601330A2003813E0380E03803803FE001521
7F9518>I<120E12FE121E120EABEB1F80EB60C0EB80E0380F0070A2120EAF38FFE7FF18
237FA21B>I<121C123EA3121CC7FCA8120E127E121E120EB1EAFFC00A227FA10E>I<13E0
EA01F0A3EA00E01300A81370EA07F012001370B3A51260EAF0E013C0EA6180EA3F000C2C
83A10F>I<120E12FE121E120EABEB03FCEB01F014C01480EB02005B5B5B133813F8EA0F
1CEA0E1E130E7F1480EB03C0130114E0EB00F014F838FFE3FE17237FA21A>I<120E12FE
121E120EB3ADEAFFE00B237FA20E>I<390E1FC07F3AFE60E183803A1E807201C03A0F00
3C00E0A2000E1338AF3AFFE3FF8FFE27157F942A>I<380E1F8038FE60C0381E80E0380F
0070A2120EAF38FFE7FF18157F941B>I<EA01FCEA0707380C0180381800C0003813E048
1370A200F01378A700701370007813F0003813E0381C01C0380E038038070700EA01FC15
157F9418>I<EA0E1F38FE61C0380E8060380F0070000E1338143CA2141EA7143CA21438
000F1370380E80E0EB41C0EB3F0090C7FCA9EAFFE0171F7F941B>I<3801F82038070460
EA0E02EA1C01003813E0EA7800A25AA71278A2EA3801121CEA0C02EA070CEA01F0C7FCA9
EB0FFE171F7E941A>I<EA0E3CEAFE46EA1E8FEA0F0F13061300120EAD120FEAFFF01015
7F9413>I<EA0F88EA3078EA601812C01308A212E0EAF000127FEA3FE0EA0FF0EA01F8EA
003CEA801C130CA212C01308EAE018EAD030EA8FC00E157E9413>I<1202A41206A3120E
121E123EEAFFFCEA0E00AB1304A6EA07081203EA01F00E1F7F9E13>I<000E137038FE07
F0EA1E00000E1370AD14F0A238060170380382783800FC7F18157F941B>I<38FF80FE38
1E00781430000E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338
A3131017157F941A>I<39FF8FF87F393E01E03C001CEBC01814E0000E1410EB02601470
00071420EB04301438D803841340EB8818141CD801C81380EBD00C140E3900F00F00497E
A2EB6006EB400220157F9423>I<38FF83FE381F00F0000E13C06C1380EB8100EA0383EA
01C2EA00E41378A21338133C134E138FEA0187EB0380380201C0000413E0EA0C00383E01
F038FF03FE17157F941A>I<38FF80FE381E00781430000E1320A26C1340A2EB80C00003
1380A23801C100A2EA00E2A31374A21338A31310A25BA35B12F05B12F10043C7FC123C17
1F7F941A>I<383FFFC038380380EA300700201300EA600EEA401C133C1338C65A5B1201
5B38038040EA07005A000E13C04813805AEA7801EA7007B5FC12157F9416>I<B512FE17
01808C18>I E /Fq 16 119 df<127012F812FCA212741204A41208A21210A212201240
060F7A8410>44 D<127012F8A312701200AB127012F8A3127005157A9410>58
D<144014E0A3497EA2497EEB0278A2497EA3497EA2497EA3496C7EA201407F1403A290B5
7EA239018001F090C7FCA200021478A34880A2001E143E3AFFC003FFE0A223237DA229>
65 D<903803F80290381FFF0690387E03863901F000CE4848133ED80780131E48C7FC48
140E001E1406123E123C007C1402A2127800F81400A81278007C1402A2123C123E001E14
04121F6C14086C6C1318D803E013306C6C136039007E03C090381FFF00EB03FC1F247CA2
27>67 D<007FB6FCA2397801E00F0060140381124000C01580A200801400A400001500B3
A290B512C0A221227DA127>84 D<B57E381E01E0EB0070808080A280A21580A81500A25C
140E5C5C5C495AB51280191A7E991F>100 D<B512F8381E007814181408140C1404A3EB
0200A31306EA1FFEEA1E061302A3EB0002A314061404A2140C143CB512FC171A7E991C>
I<39FFC1FF80391E003C00AB381FFFFC381E003CAC39FFC1FF80191A7E991F>104
D<EAFFC0EA1E00B3A6EAFFC00A1A7E990F>I<00FEEB01FE001E14F0A200171302A23813
8004A33811C008A23810E010A3EB7020A3EB3840A2EB1C80A3EB0F00A21306123800FEEB
07FE1F1A7E9925>109 D<EB7F803801C0E038070038000E7F487F003C130F00387F0078
148000701303A200F014C0A70078EB0780A200381400003C5B001C130E6C5B6C5B3801C0
E038007F801A1A7E9920>111 D<B5FC381E01E0EB007014781438143CA4143814781470
EB01E0381FFF00001EC7FCABEAFFC0161A7E991C>I<EAFFFE381E03C0EB00E0801478A5
5C5CEB03C0D81FFEC7FC381E0380EB01E0130080A615401470EC388039FFC01F001A1A7E
991E>114 D<EA07E1EA181BEA3007487EA2EAE001A36CC7FC12FCEA7F80EA3FF86C7E6C
7EC67E131FEB0780A2EA8003A300C013005BEAE006EADC0CEA83F0111A7E9917>I<007F
B5FC38701E0700601301124000C0148000801300A300001400B0133F3803FFF0191A7F99
1D>I<39FFC00FE0393F000380001E14007E1402138000075BA26C6C5AA2EBE018000113
10A26C6C5AA2EB7840A2137CEB3C80A2011FC7FCA3130EA213041B1A7F991F>118
D E /Fr 24 118 df<140CA3141EA2143FA3EC4F80A2ECCFC01487A290380103E0A39038
0201F0A201047F1400A249137CA3497FA2013FB5FCA2903820001F496D7EA201C0804913
07A248C76C7EA300026E7E1207D81F80497ED8FFF090383FFFC0A22A2A7DA931>65
D<B612C015F83907E000FE0003141FED07C06F7E6F7E6F7EA2167CA282A2163F82A21780
A91700A35E163EA25E167816F84B5A4B5A4B5AED1F80000702FEC7FCB612F815C029297C
A832>68 D<B7FCA23907E0003F00031407ED03801501A21500A416405CA21600A25CA214
0F90B5FCA2EBE00F1403A280A491C8FCAA487EB512C0A222297CA82B>70
D<B67E15F03907E001FC0003EB003E81ED0F8016C0150716E0A616C0150F1680ED1F0015
3EEC01F890B512E001E0C8FCB1487EB57EA223297CA82C>80 D<B512FEECFFC03907E003
F00003EB00FC153E8182150F82A65E4BC7FC151E5D15F8EC03E0D9FFFEC8FC9038E00780
EC01E06E7E1578157C153C153EA4153FA417401680151F486C010F1380B5388007C09238
03E100C912FE2A2A7CA830>82 D<017F13403903FFE0C0380780F0380E00194813074813
0300781301127000F01300A315407EA2007C1400127EEA7F80EA3FF06CB47E6C13F06C13
FC00017F38003FFF010313809038003FC0EC0FE0140315F014017E1400A37E15E07E1401
6C14C06CEB038000E6EB070038C3E01E38C0FFF838801FE01C2B7CA925>I<007FB612FE
A23A7C003E003E0070150E006015061602124000C01503A2481501A5C71400B3A6147F90
383FFFFEA228297DA82F>I<5B497EA3497EA2EB09E0A3EB10F0A2EB2078A3497EA2497E
A348B5FCA23902000780A348EB03C0A2000CEB01E0A2003C14F0B4EB0FFEA21F1F7E9E25
>97 D<B512F014FC380F003E140F1580EC07C0A51580140FEC1F00143EEBFFF8EB003C14
0FEC078015C0140315E0A5EC07C0A2EC0F80EC3F00B512FE14F81B1F7D9E23>I<B512E0
14F8380F007E140FEC0780EC03C0A2EC01E015F01400A215F8A915F0A2140115E0140315
C0EC0780EC0F00143EB512F814E01D1F7D9E25>100 D<B61280A2380F00071403140114
0015C01540A21440A2150014C0130113FFA21301130014401520A214001540A315C0A214
01EC0F80B6FCA21B1F7D9E21>I<B6FCA2380F000F1403A28015801400A21480A21500A2
130113FFA213011300A491C7FCA77FEAFFF8A2191F7D9E20>I<90380FE01090387FFC30
9038FC0E703803E00339078000F048C71270121E003E1430123C007C1410A2127800F814
00A6EC3FFE1278007CEB01F01400123C123E121E7E6C7E3803E0013900FC077090387FFE
3090380FF0101F1F7D9E26>I<39FFF07FF8A2390F000780AC90B5FCA2EB0007AD39FFF0
7FF8A21D1F7D9E25>I<EAFFF0A2EA0F00B3A9EAFFF0A20C1F7E9E12>I<EAFFF8A2EA0F80
90C7FCB01401A41403A214021406140E143EB512FEA2181F7D9E1F>108
D<B4EC0FF8A2000F1580D80B801317A2D809C01327A3D808E01347A201701387A3903838
0107A2EB1C02A3EB0E04A3EB0708A2EB0390A3EB01E0120C383E00C0D8FF80EB7FF8A225
1F7D9E2D>I<B4EB0FF81380000FEB03E0390BC00080EA09E0A2EA08F01378A27F7FA27F
EB0780A2EB03C0EB01E0A2EB00F01478A2143C141EA2140F1407A21403003E1301EAFF80
14001D1F7D9E25>I<EB1FE0EB70383801C00E48487E390F0003C0000E1301001E14E048
EB00F0A2007C14F800781478A200F8147CA8007C14F8A2003C14F0A26CEB01E0001F1303
6C14C039078007803901C00E0038007038EB1FE01E1F7D9E26>I<EB1FE0EB70383801C0
0E48487E390F0003C0000E1301001E14E048EB00F0A2007C14F800781478A200F8147CA8
00781478007C14F8003C14F0A2391E0781E0EB0841390F1023C039079027803901D01E00
3800783890381FF804EB0018141CEC0C0CEC0E1CEC0FF8A2140715F0EC01E01E287D9E26
>113 D<B57E14F0380F00FC143E80801580A51500141E5C14F0EBFFC01301EB0070A280
143CA3143EA31502143F141F39FFF00F8CEC03F01F1F7D9E24>I<3803F040380FFCC0EA
1C0FEA3003EA7001EA600000E01340A36C1300A21278EA7F80EA3FF8EA1FFE380FFF8000
0113C038001FE01303EB00F0A214707EA36C136014E038F001C038FC078038CFFF00EA81
FC141F7D9E1B>I<007FB512F0A2387807800060143000401410A200C0141800801408A4
00001400B1497E3801FFFEA21D1F7E9E23>I<39FFF00FF8A2390F0003E0EC0080B3A339
07800100A2000313026C6C5A3800F038EB3FF0EB0FC01D1F7D9E25>I
E /Fs 50 123 df<903A01FF807FE0010F9038C3FFF8903A7F81FFE07CD9FE01EB803C3B
01F803FE00FE12034848485AA21403A20201143894C7FCA3EE07FFB9FCA33B07F001FC00
7FB3A33C7FFF1FFFC7FFF0A3342A7FA938>14 D<B51280A611067F9016>45
D<121C127FA2EAFF80A3EA7F00A2121C09097B8813>I<EB3F803801FFF03807E0FC380F
C07E48487E497E481480003E130F007E14C0A400FE14E0AF007E14C0A46CEB1F80A26C14
006D5A380FC07E6C6C5A3801FFF038003F801B277DA622>48 D<130E131E137EEA07FE12
FFA212F81200B3ABB512FEA317277BA622>I<EBFF80000713F04813FC381E03FE393800
FF80007C133F00FE14C06C131F15E0140FA2127E003C131FC7FC15C0A2EC3F801500147E
5C5C495A495AEB078049C7FC131E4913E013705B3901C001C0EA0380EA0600000FB5FC5A
5A5AB61280A31B277DA622>I<EB7F803803FFF04813FC380F81FE381F007FEA3F80EC3F
80A3121F1300C7EA7F00A2147E5C495AEB07F0EBFFC0A2EB01F8EB007E801580EC1FC0A2
15E0A2123C127EB4FCA215C0143F481480007CEB7F00383F01FE6CB45A000713F0C61380
1B277DA622>I<140FA25C5C5C5C5BA2EB03BFEB073F130E131C133C1338137013E0EA01
C0EA038012071300120E5A5A5A12F0B612F8A3C7EA7F00A890381FFFF8A31D277EA622>
I<00181303381F801FEBFFFE5C5C5C14C091C7FC001CC8FCA7EB7FC0381DFFF8381F80FC
381E003F1208C7EA1F8015C0A215E0A21218127C12FEA315C05A0078EB3F80A26CEB7F00
381F01FE6CB45A000313F0C613801B277DA622>I<EB07F8EB3FFE90B5FC3901FC078039
03F00FC03807C01FEA0F80121F130048EB0F8091C7FC127EA3EAFE02EB1FF0EB3FFCEB60
3EEB801F00FF14809038000FC0A24814E0A4127EA4123E003F14C07EEC1F80D80F801300
3807E07E6CB45A6C5B38003FC01B277DA622>I<1238123E003FB512F0A34814E015C015
8015003870000EA25C485B5C5CC6485AA2495A130791C7FC5B5B131E133EA2137E137CA2
13FCA41201A76C5A13701C297CA822>I<EB7F803801FFF000077F380FC0FC381F803E48
487E007E1480A2140F00FE14C0A315E0A5007E131FA26C133F6C132F380F80CF3807FF8F
0001130FEA0008010013C0A3EC1F80123E127FEC3F00143E147E007E5B383E03F8381FFF
E06C1380D801FEC7FC1B277DA622>57 D<EC0780A24A7EA34A7EA24A7EA3EC77F8A2ECF7
FC14E3A2903801C1FEA201037F1480A249486C7EA24980010E133FA2496D7EA2013FB57E
A39039700007F8A201F080491303000181491301A2000381D8FFFE013F13FCA32E297EA8
33>65 D<B612F815FF16C03A03F8001FE0ED0FF0ED07F8150316FCA21501A3150316F8A2
ED07F0150FED1FC0EDFF8090B5EAFE00EDFFC09039F8000FF0ED03F8ED01FC16FE1500A2
16FFA616FE1501ED03FC1507ED1FF8B712E016C0EDFE0028297DA830>I<91387FE00390
3907FFFC07011FEBFF0F90397FF00F9F9039FF0001FFD801FC7F4848147F4848143F4848
141F485A160F485A1607127FA290C9FC5AA97E7F1607123FA26C7E160E6C7E6C6C141C6C
6C143C6C6C14786CB4EB01F090397FF007C0011FB512800107EBFE009038007FF028297C
A831>I<B712E0A33903FC001FED07F01501A215001670A3913801C0781638A302031300
A2140F90B5FCA3EBFC0F1403A20201130EA3161C91C7FCA3163C1638167816F815011503
151FB712F0A327297EA82C>69 D<B512F0A33803FC00B3B1B512F0A314297EA819>73
D<B512FCA3D803FCC8FCB3A3ED01C0A415031680A21507A2150FA2151F157F913801FF00
B7FCA322297EA828>76 D<D8FFFE92383FFF80A26D5D0003EFE000A2D9BF8014EFA2D99F
C0EB01CFA2D98FE0EB038FA3D987F0EB070FA2D983F8130EA2D981FC131CA3D980FE1338
A2027F1370A291383F80E0A391381FC1C0A291380FE380A2913807F700A3EC03FEA26E5A
A26E5AD8FFFE0203B51280A2157039297DA840>I<ECFFC0010F13FC90383F807F9039FE
001FC0D801F8EB07E048486D7E48486D7E000F8148486D7EA24848147FA2007F168090C8
123FA34816C0AA6C16806D147FA2003F1600A26C6C14FEA26C6C495A6C6C495A6C6C495A
6C6C495A6C6C495A90263FC0FFC7FC90380FFFFC010013C02A297CA833>79
D<B612F815FF16C03A03FC003FE0ED07F0ED03F816FC150116FEA716FC150316F8ED07F0
ED3FE090B61280EDFE0001FCC8FCB0B512F0A327297EA82E>I<B612E015FE6F7E3A03FC
003FE0ED0FF06F7E6F7E150182A65E4B5A1507ED0FE0ED3FC090B500FEC7FCA29039FC00
FF80ED3FC06F7E6F7E6F7EA9170EA21503923801FC1CB538F000FEEE7FF8EE0FE02F297E
A832>82 D<9038FF80600003EBF0E0000F13F8381F80FD383F001F003E1307481303A200
FC1301A214007EA26C140013C0EA7FFCEBFFE06C13F86C13FE80000714806C14C0C6FC01
0F13E0EB007FEC1FF0140F140700E01303A46C14E0A26C13076C14C0B4EB0F80EBE03F39
E3FFFE0000E15B38C01FF01C297CA825>I<007FB71280A39039807F807FD87C00140F00
781507A20070150300F016C0A2481501A5C791C7FCB3A490B612C0A32A287EA72F>I<B5
00F0EB7FFFA3D803FEC7EA01C00001ED0380A26D14076C16006E5B017F140E80013F5CA2
6E133C011F14386E1378010F14708001075CA26D6C485AA2ECFE0301015CECFF076D91C7
FC1587EC7F8EA215DEEC3FDC15FC6E5AA26E5AA36E5AA26E5AA230297FA833>86
D<B53CE07FFFE01FFFC0A32803FC0003FCC7EA7000A26D6D7E000160A26D6E13016C604B
138002801503017F5F4B13C0D93FC0013F49C7FCA2913AE00E1FE00F011F160E17F09126
F01C0F131E010F161C033C13F8902707F838075BA2037813FC902703FC70035BA2913AFE
E001FEF001015E02FF14FF4B7E6D5EA26E486D5AA36EC76CC8FCA2023E80021E141EA242
297FA845>I<3803FF80000F13F0381F01FC383F80FE147F801580EA1F00C7FCA4EB3FFF
3801FC3FEA0FE0EA1F80EA3F00127E5AA4145F007E13DF393F839FFC381FFE0F3803FC03
1E1B7E9A21>97 D<EAFFE0A3120FACEBE1FE9038EFFF809038FE07E09038F803F09038F0
01F89038E000FCA2157EA2157FA8157EA315FCA29038F001F89038F803F090389C0FE090
380FFF80390E01FC00202A7EA925>I<EB3FF03801FFFC3803F03E380FC07FEA1F80EA3F
00A248133E007E90C7FCA212FEA7127EA2127F6CEB03801380001FEB0700380FE00E3803
F83C3801FFF838003FC0191B7E9A1E>I<EC7FF0A31407ACEB3F873801FFF73807F03F38
0FC00F381F8007EA3F00A2127EA312FEA8127EA27EA2381F800F380FC01F3907E07FFF38
01FFE738007F87202A7EA925>I<EB3FC03801FFF03803E07C380F803E001F7F130048EB
0F80127E15C0A200FE1307A2B6FCA248C8FCA3127EA2127F6CEB01C07E390F8003803907
C007003803F01E3800FFFCEB3FE01A1B7E9A1F>I<EB07F8EB3FFCEB7E3E3801FC7FEA03
F813F01207143E1400A7B512C0A33807F000B3A3387FFF80A3182A7EA915>I<9038FF80
F00003EBE3F8390FC1FE1C391F007C7C48137E003EEB3E10007EEB3F00A6003E133E003F
137E6C137C380FC1F8380BFFE00018138090C8FC1238A2123C383FFFF814FF6C14C06C14
E06C14F0121F383C0007007CEB01F8481300A4007CEB01F0A2003FEB07E0390FC01F806C
B5120038007FF01E287E9A22>I<EAFFE0A3120FAC147E9038E1FF809038E30FC001E413
E0EBE80701F813F013F0A213E0B039FFFE3FFFA3202A7DA925>I<1207EA0F80EA1FC0EA
3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFFE0A3120FB3A3EAFFFEA30F2B7EAA12>I<1307
EB0F80EB1FC0EB3FE0A3EB1FC0EB0F80EB070090C7FCA7EBFFE0A3130FB3AA127C12FE14
C0EB1F801400EA7C3EEA3FFCEA0FF0133784AA15>I<EAFFE0A3120FACEC1FFCA3EC0780
EC0F00141E5C5C14E0EBE3C013E7EBEFE0EBFFF08013F3EBE1FCEBC0FE147FA2EC3F80EC
1FC0EC0FE0A2EC07F039FFFC1FFFA3202A7FA923>I<EAFFE0A3120FB3B2EAFFFEA30F2A
7EA912>I<26FFC07FEB1FC0903AC1FFC07FF0903AC307E0C1F8D80FC49038F101FC9039
C803F20001D801FE7F01D05BA201E05BB03CFFFE3FFF8FFFE0A3331B7D9A38>I<38FFC0
7E9038C1FF809038C30FC0D80FC413E0EBC80701D813F013D0A213E0B039FFFE3FFFA320
1B7D9A25>I<EB3FE03801FFFC3803F07E390FC01F80391F800FC0393F0007E0A2007EEB
03F0A300FE14F8A8007E14F0A26CEB07E0A2391F800FC0390FC01F803907F07F003801FF
FC38003FE01D1B7E9A22>I<38FFE1FE9038EFFF809038FE0FE0390FF803F09038F001F8
01E013FC140015FEA2157FA8157E15FEA215FC140101F013F89038F807F09038FC0FE090
38EFFF809038E1FC0001E0C7FCA9EAFFFEA320277E9A25>I<38FFC1F0EBC7FCEBC63E38
0FCC7F13D813D0A2EBF03EEBE000B0B5FCA3181B7F9A1B>114 D<3803FE30380FFFF0EA
3E03EA7800127000F01370A27E00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6
FCEB07FC130000E0137C143C7E14387E6C137038FF01E038E7FFC000C11300161B7E9A1B
>I<13E0A41201A31203A21207120F381FFFE0B5FCA2380FE000AD1470A73807F0E00003
13C03801FF8038007F0014267FA51A>I<39FFE07FF0A3000F1307B2140FA20007131739
03F067FF3801FFC738007F87201B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F00
03EB01C0A2EBFC0300011480EBFE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D
5AA36D5AA26D5AA2201B7F9A23>I<39FFFC1FFEA33907F003803803F8079038FC0F0038
01FE1E00005BEB7F3814F86D5A6D5A130F806D7E130F497EEB3CFEEB38FFEB787F9038F0
3F803901E01FC0D803C013E0EB800F39FFF03FFFA3201B7F9A23>120
D<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2EBFC0300011480EBFE07000014
0013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA25CA21307003890C7FCEA
7C0FEAFE0E131E131C5BEA74F0EA3FE0EA0F8020277F9A23>I<003FB5FCA2EB00FEEA3C
01383803FC007813F8EB07F0EA700F14E0EB1FC0EA003F1480EB7F005B5B3801FC071203
13F8EA07F0000F130F13E0381FC00E003F131E387F803EEB00FEB5FCA2181B7E9A1E>I
E /Ft 42 122 df<B512F8A715077F921B>45 D<EB01C01303130F137FEA1FFFB5FC13BF
EAE03F1200B3B1007FB512F0A31C2E7AAD28>49 D<EB3FE03801FFFE0007EBFF80D80F80
13C0391E003FE00038EB1FF0007CEB0FF8007EEB07FCB4FC018013FEA21403A2EA7F0000
3E1307C7FC15FCA2EC0FF8A215F0EC1FE015C0EC3F80EC7F00147E14F8495A495A495A49
C7FC011E130E5B133849131E49131C485A48C7123C48B512FC5A5A5A4814F8B6FCA31F2E
7CAD28>I<EB1FF890B5FC000314C03907E01FF0390F0007F8D81F807FEA3FC06E7EA4EA
1F80380F0007C75BA25D4A5A4A5AEC3F8002FFC7FCEB3FF8ECFF809038001FE06E7E6E7E
6E7E816E7EA21680A3121C123E127FEAFF801600A24A5AEA7F00007E495A003C5C391FC0
1FF06CB512C0000391C7FC38003FF8212E7DAD28>I<157015F0140114031407140FA214
1F143F147714F714E7EB01C7EB0387EB0707130F130E131C1338137013F013E0EA01C0EA
0380EA07005A120E5A5A5A5AB712E0A3C7380FF000A9010FB512E0A3232E7EAD28>I<00
0C1430390FC007F090B512E015C0158015005C14F85C1480000EC8FCA8EB1FF0EBFFFE39
0FE03F809038000FC0000EEB07E0000C14F0C713F8140315FCA215FEA21218123E127F5A
A215FCA25A0078EB07F815F06CEB0FE06CEB1FC0390FC07F806CB51200000113FC38003F
E01F2E7CAD28>I<14FF010713E0011F7F90387F80F89038FE003CD801F8137C484813FE
00071301EA0FE0A2EA1FC0003F6D5A157892C7FC485AA338FF83FC90388FFF8090389C0F
C09038B003F06E7E01E07F01C07F140081A2491480A4127FA4003F15007F121F5D000F49
5AEA07E06C6C485A3901FC0FE06CB55A013F90C7FCEB0FFC212E7DAD28>I<1578A215FC
A34A7EA24A7EA24A7FA34A7FEC0E7F021E7FEC1C3FA202387F151F02787FEC700FA202E0
7F1507010180ECC003A249486C7EA201078191C7FC498191B6FCA24981011CC7123F013C
810138141FA24981160F01F081491407A2484881486C1403B549B512FCA336317DB03D>
65 D<B712C016FC16FFD801FEC77FEE7FE0707E161F707EA2831607A4160FA25FA24C5A
4C5A4C5A4B485ADB1FFEC7FC90B65AEEFF8049C7EA3FE0EE0FF0EE07FCA2707E83821880
A718005E5F16074C5A4C5AEEFFF0B812C094C7FC16F831317DB039>I<913A03FF800180
023FEBF00349B5EAFC0701079038003F0FD91FF8EB079FD93FC0EB01FFD9FF807F4848C8
127F4848153F0007161F49150F485A001F1607A2485A1703127FA24992C7FCA212FFA912
7FA27FEF0380123FA26C7E1707000F17006C7E6D150E0003161E6C6C151C6C6C6C1478D9
3FC05CD91FF8EB03E0D907FFEB3F800101D9FFFEC7FCD9003F13F80203138031317CB03A
>I<B812F0A3C6903880003FEE07F816031600A21778A21738A3171C1507A31700A25D5D
5D91B5FCA3EC803F818181A21707A392C7120EA4171EA2173CA2177C17FC16011607163F
B812F8A330317EB035>69 D<B61280A3C6EB8000B3B3A7B61280A319317EB01E>73
D<B67EA3000190C9FCB3A9EE0380A416071700A25EA35E5E5E5E4B5A150FB7FCA329317D
B030>76 D<B500C00303B5FCA26E5DC61900D9EFF0150EA3D9E7F85DA2D9E3FC5DA2D9E1
FE5DA2D9E0FF5DA26E6C495AA26E6C495AA36E6C495AA26E6C130EA26E6C5BA26E6C5BA2
6E6C5BA26E6C5BA392387F81C0A292383FC380A2DB1FE7C7FCA2ED0FFEA26F5AA36F5A48
7EB526E001F090B6FCA26F5A48317EB04D>I<B712E016FEEEFF80C6D9800013E0EE3FF0
EE0FF8EE07FCA2EE03FEA217FFA717FEA2EE07FC17F8160FEE3FE0EEFFC091B6120016F8
0280C8FCB3A2B67EA330317EB037>80 D<B77E16F816FEC690398003FF809238007FE0EE
1FF0707EA283160783A65F160F5F4C5A4C5A4C5ADB03FFC8FC91B512F816E091388007F8
ED01FC6F7E167F83707EA283A583A4F0038017F8161F1900706C5AB6398003FE0E933801
FFFC9338001FF039317EB03C>82 D<90391FF8018090B51203000314C73907F007EF390F
8000FF48C7127F003E141F150F5A150712FCA215037EA26C91C7FC13C0EA7FF0EBFF806C
13F8ECFF806C14F06C806C806C14FFC6FC013F1480010114C0D9001F13E01401EC003FED
1FF0150F1507126000E01403A316E07EA26CEC07C07EB4EC0F8001C0EB1F00D8FBFC13FE
00F1B512F8D8E03F5BD8C003138024317CB02D>I<007FB8FCA39039C00FF801D87E00EC
003F007C82007882A200708200F01780A3481603A5C792C7FCB3AA017FB6FCA331307DAF
38>I<B5D8FC03B539F003FFFCA3D803FEC7D80FF8C7EA0F80F207006D6F5C6C0307150E
A26C6D6E5CA26E80017F4A5DA26E496D1378013F021C1570A26E013C6D13F0011FDA387F
5CA26D6C496C6C485AA26EEDF0030107DAE01F5CA2DAFE01ECF8070103DAC00F91C7FCA2
902601FF03ECFC0EEE800715836D903A870003FE1CA203CFECFF3CDA7FCE6D1338A203FE
15F86E486D5BA26E486E5AA36E486E5AA36E486E5AA36E486EC8FCA24E317EB053>87
D<EBFFF0000313FF390F803F809038C00FE0486C6C7EA26E7ED80FC07FEA0780C7FCA414
FF131FEBFFE33803FC03EA0FF0EA1FC0123FEA7F80A2EAFF00A31407A2387F800D393FC0
1DFE3A1FE078FFF03907FFE07FC6EB803F24207E9F27>97 D<EA01F812FFA3120F1207AD
EC3FE0ECFFFC9038FBE07F9039FF001F8049EB0FC04914E049EB07F016F8A2ED03FCA316
FEA816FCA3ED07F8A216F06DEB0FE06D14C001E7EB3F809039C3C0FE00903880FFF89038
003FC027327EB12D>I<EB0FFF017F13C03901FC01F03803F0033907E007F8120FEA1FC0
003FEB03F0EC01E04848C7FCA312FFA8127FA36C6C131CA2001F14386C7E000714703903
F001E03901FC07C039007FFF00EB0FF81E207D9F24>I<ED0FC0EC07FFA3EC007F153FAD
EB07F8EB3FFF9038FE07BF3903F801FF3907E0007F120F4848133F123FA2485AA312FFA8
127FA36C7EA2121F6C6C137F000714FF2603F00313E03A01FC0F3FFE38007FFEEB0FF027
327DB12D>I<EB0FFC90387FFF803901FC0FC03903F003E03907E001F0000F14F8391FC0
00FC003F14FEA24848137E157FA212FFA290B6FCA20180C7FCA4127FA36C6C1307121F15
0E6C7E6C6C131C6C6C13783900FE03E090383FFFC0903807FE0020207E9F25>I<EB01FE
90380FFF8090381FC3C090387F07E09038FE0FF0120113FC1203EC07E0EC018091C7FCA8
B512FCA3D803FCC7FCB3A8387FFFF0A31C327EB119>I<90391FF007C09039FFFE3FE03A
01F83F79F03907E00FC3000F14E19039C007E0E0001FECF000A2003F80A5001F5CA2000F
5CEBE00F00075C2603F83FC7FC3806FFFE380E1FF090C9FC121EA2121F7F90B57E6C14F0
15FC6C806C801680000F15C0003FC7127F007EEC1FE0007C140F00FC1407A4007EEC0FC0
003E1580003F141FD80FC0EB7E003907F803FC0001B512F0D8001F90C7FC242F7E9F28>
I<EA01F812FFA3120F1207ADEC07F8EC3FFEEC783F02C013809039F9801FC0EBFB0001FE
14E05BA35BB3B500C3B5FCA328327DB12D>I<EA03C0487E487E487EA46C5A6C5A6C5AC8
FCA9EA01F8127FA31207B3A7B51280A311337DB217>I<EA01F812FFA3120F1207ADEDFF
F8A3ED3F00153C5D5DEC03C04A5A4AC7FC141E147814FCEBF9FE13FB90B5FC496C7E01FC
7FEBF83F496C7E6E7E816E7E14036E7E6E7E1680157F16C0B53881FFFEA327327EB12B>
107 D<EA01F812FFA3120F1207B3B3A6B512C0A312327DB117>I<2703F007F8EB1FE000
FFD93FFEEBFFF8913A783F01E0FC02C090388300FE280FF1801FC6137F2607F30013CC01
F602F8148001FC5CA3495CB3B500C3B5380FFFFCA33E207D9F43>I<3903F007F800FFEB
3FFEEC783F02C013803A0FF1801FC03807F30001F614E013FCA35BB3B500C3B5FCA32820
7D9F2D>I<EB07FC90387FFFC03901FC07F03903F001F848486C7E4848137E001F147F00
3F158049133F007F15C0A300FF15E0A8007F15C0A36C6CEB7F80A2001F15006C6C13FE00
075C3903F803F83901FE0FF039007FFFC0D907FCC7FC23207E9F28>I<3901F83FE000FF
EBFFFC9038FBE07F9039FF003F80D807FEEB1FC049EB0FE04914F0ED07F8A216FC1503A2
16FEA816FC1507A216F8A2ED0FF06D14E06DEB1FC06DEB3F809039FBC0FE009038F8FFF8
EC3FC091C8FCABB512C0A3272E7E9F2D>I<3803F03F00FFEB7FC09038F1C3E01487390F
F30FF0EA07F6A29038FC07E0EC03C091C7FCA25BB2B512E0A31C207E9F21>114
D<3801FF86000713FEEA1F00003C133E48131E140E12F8A36C90C7FCB47E13FC387FFFC0
6C13F0806C7F00077F00017FEA003F01001380143F0060131F00E0130FA27E15007E6C13
1E6C131C38FF807838F3FFF038C07F8019207D9F20>I<131CA5133CA3137CA213FC1201
12031207381FFFFEB5FCA2D803FCC7FCB0EC0380A71201EC0700EA00FEEB7F0EEB3FFCEB
07F0192E7FAD1F>I<D801F8EB07E000FFEB03FFA3000FEB003F0007141FB3153FA20003
147FA26C6CEBDFF03A00FE039FFF90387FFF1FEB0FFC28207D9F2D>I<B5EB1FFCA3D80F
F8EB03C0000715806D1307000315007F0001140E7F6C5CA2EC803C017F1338ECC078013F
1370ECE0F0011F5B14F1010F5B14F9903807FB80A214FF6D90C7FCA26D5AA26D5AA21478
A226207E9F2B>I<B53A1FFFE03FF8A33C0FF000FE0007806D150300076EEB0700816D5D
00039138FF800EA26C6C486D5A15DF01FF153C6C9039038FE038A2D97F876D5A150702C7
14F0D93FCF6D5AECCE03D91FFEEBF9C09138FC01FD16FF010F5D4A7EA26D486DC7FCA201
03147E4A133EA26D48131C35207E9F3A>I<3A7FFF807FFCA33A03FC000F006C6C131E6C
6C5BEC803890387FC078013F5B90381FE1E090380FF3C0ECFF806D90C7FC6D5A13016D7E
81815B903803DFE09038078FF08190380F07FC90381E03FEEB3C01496C7E4914804848EB
7FC00003EC3FE026FFFC01B5FCA328207F9F2B>I<B5EB1FFCA3D80FF8EB03C000071580
6D1307000315007F0001140E7F6C5CA2EC803C017F1338ECC078013F1370ECE0F0011F5B
14F1010F5B14F9903807FB80A214FF6D90C7FCA26D5AA26D5AA21478A21470A214F05C13
01007C5BEAFE035C49C8FC5BEAFC1EEA787CEA3FF0EA0FC0262E7E9F2B>I
E /Fu 33 122 df<127812FCA212FEA2127A1202A41204A31208A212101220124007127B
8510>44 D<127812FCA4127806067B8510>46 D<132013E01201120F12FF12F11201B3AD
487EB512C0A212287BA71D>49 D<12201238003FB5FCA214FE5A3860000400401308A214
10481320A2C712401480A2EB01001302A25BA2130C5BA31338A213781370A213F0A51201
A76C5A182A7DA81D>55 D<137E3801FF80380781C0380F00E0001E1370481338A248133C
A200F8131EA4141FA41278143FA27E001C135F7E6C139F3803831FEA00FCEB001EA3143E
143CA21438001C1378003E137014E0383C01C038180380381C0F00EA0FFEEA03F818297E
A71D>57 D<14101438A3147CA314BEA3EB011FA39038020F80A201047F1407A201087F14
03A2496C7EA3496C7EA390387FFFFCA29038C0007E49133EA248C7123F81A20002EC0F80
A21206ED07C0001FEC0FE0D8FFE0EBFFFEA2272A7EA92C>65 D<02FF13200107EBC06090
381F807090397E0018E001F813054848130348481301485A48481300A248C812605A123E
007E1520A2127C160012FCA9127CA2007E1520A2123E123F6C15406C7EA26C6C14806C6C
EB01006C6C5B6C6C1306017E131C90381F8070903807FFE0010090C7FC232B7DA92A>67
D<B7FCA23907E0003F00031407ED03801501A21500A416405CA21600A25CA2140F90B5FC
A2EBE00F1403A2801620A391C7FC1640A416C0A215011503ED07800007143FB7FCA22329
7EA828>69 D<B53883FFFEA23A07F0001FC06C48EB0F80B090B6FCA29038E0000FB1486C
EB1FC0B53883FFFEA227297EA82C>72 D<EAFFFEA2EA0FE0EA07C0B3B1EA0FE0EAFFFEA2
0F297DA815>I<D8FFE0EB3FFE7FD803F8EB03E00002EC01C0017CEB0080137E133E7FA2
6D7E8013076D7E8013016D7E80147C80143F80EC0F8015C01407EC03E015F01401EC00F8
A2157C157E153E151FA2150F1507A200071403486C1301EAFFF8150027297EA82C>78
D<B6FC15E03907E001F80003EB007C81811680150F16C0A61680151F1600153E5DEC01F0
90B512C001E0C8FCB1487EB57EA222297EA828>80 D<B512FCECFFC03907E007F00003EB
00F8157C81153F811680A61600153EA215784A5AEC07C0D9FFFEC7FCEBE007EC03C06E7E
6E7E811578157CA4157EA41601157F153F486CEB1F02B538800F82ED0784C8EA01F8282A
7EA82B>82 D<EBFE013803FF83380F81E3381E003748131F00387F00787F127000F07FA3
807EA26C90C7FC127E127FEA3FE0EA1FFE380FFFE06C13F86C7FC66C7EEB07FFEB007FEC
1F80140FEC07C0A26C1303A47E1580A26C13076C14006C130E00EE5B38C3C07838C1FFF0
38803FC01A2B7DA921>I<007FB612F0A2397C00F8010070EC00700060153000401510A2
00C01518A2481508A5C71400B3A6497E90B512F8A225297EA82A>I<B538803FFEA23A07
F00003E06C48EB01C0ED0080B3A90001EC01007FA2000014020178130615046D5B6D1330
90380780E06DB45AD9007FC7FC272A7EA82C>I<D8FFFE903803FF80A2D80FE09038007C
006C4814306C6C1420A27F00015DA26C6C5CA27F017C49C7FCA2017E5B013E1302A26D5B
A21480010F5BA26D6C5AA36D6C5AA214F001015BA26D6C5AA214FC027DC8FCA2147F143E
A2141CA31408292A7FA82C>I<D8FFFE903801FF80A2D80FE09038007C00000715306C6C
142000015D7F00005D6D1301017E91C7FC013E1302133F6D5BEC800C90380FC00801075B
14E001035BECF060903801F84001005B14FC027DC8FC147F143EAE147E90380FFFF0A229
297FA82C>89 D<EA03FCEA0C0738100380383C01C0003E7F6D7E121C1208C7FCA3137FEA
03E0EA0F80EA1E005A127C0078144012F8A31301127C393C027880381E0C7F3907F01E00
1A1A7E991D>97 D<120FB4FCA2121F7EACEB07E0EB1838EB600EEB8007158090380003C0
A2EC01E0A215F0A715E0A2140315C01580EB8007000EEB0F00EB401C380C303838080FC0
1C2A7EA921>I<13FC38038780380701C0000E13E0EA1C00003C13F0A2481378A212F8A2
B512F800F8C7FCA51278A26C1308A26C1310000E13206C13403801C18038007E00151A7E
991A>101 D<121E123FA4121EC7FCA9120FB4FCA2121F7EB3A2EAFFF0A20C297EA811>
105 D<137813FCA413781300A9133CEA07FCA2EA007C133CB3AAEA703812F8137012F0EA
60C0EA1F800E3582A812>I<120FB4FCA2121F7EB3B2EAFFF0A20C2A7EA911>108
D<380F07F038FF1838EB201C381F400E000F130F1380A21300B139FFF0FFF0A21C1A7E99
21>110 D<137E3803C3C0380700E0000E1370481338003C133CA248131EA200F8131FA8
0078131EA26C133CA2001C13386C13706C13E03803C3C038007E00181A7E991D>I<380F
07E038FF1838EB601E380F800FEC0780010013C0140315E0A2EC01F0A715E01403A215C0
EC07801380EC0F00EB401CEB3078EB0FC090C8FCAAEAFFF0A21C267E9921>I<380F0F80
38FF11C0EB23E0EA1F43EA0F83EB81C0EB800090C7FCB07FEAFFFCA2131A7E9917>114
D<3807F080EA1C0DEA3003EA600112E01300A27E6C1300127EEA7FE0EA3FFC6C7EEA07FF
38003F801307388003C0A2130112C0A200E01380130300F01300EACC0EEA83F8121A7E99
17>I<7FA41201A31203A21207120F381FFF80B5FC38078000AD1440A73803C080120138
00E100133E12257FA417>I<000F130FB413FFA2001F131F6C7FB05CA26C132F3903804F
803901C08FF038007F0F1C1A7E9921>I<39FFF03FF0A2390FC01F003807801C3803C018
3801E0106D5A00005BEB78C06D5A013DC7FC7F7F80A2EB13C0EB21E0EB61F01340EB8078
3801007C48133C487F001F133F39FF807FF8A21D1A7F991F>120
D<39FFF01FF0A2390F8007800007EB03001402A26C6C5AA2EBE00C00011308A26C6C5AA2
EBF830EB7820A26D5AA2EB3EC0EB1E80A26DC7FCA31306A21304A2130C1308A2EA701012
F85BA2485AEA6180001FC8FC1C267F991F>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: Letter
%%BeginPaperSize: Letter
/setpagedevice where {
pop 1 dict dup /PageSize [ 612 792 ] put setpagedevice
} {
statusdict /lettertray known {
statusdict begin lettertray end
/letter where { pop letter } if
} {
/letter where {
pop letter
} {
statusdict /setpage known {
statusdict begin
612 792 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 761 104 a Fu(RICE)19 b(UNIVERSITY)200 312 y Ft(The)26
b(Impact)i(of)f(Instruction-Lev)n(el)e(P)n(arallelism)g(on)251
403 y(Multipro)r(cessor)h(P)n(erformance)h(and)f(Sim)n(ulation)800
495 y(Metho)r(dology)1000 620 y Fu(b)n(y)855 734 y Fs(Vija)n(y)d(S.)f
(P)n(ai)734 925 y Fr(A)g(Thesis)h(Submitted)571 999 y(in)f(P)-5
b(ar)l(tial)23 b(Fulfillment)d(of)j(the)570 1074 y(Requirements)g(f)o
(or)g(the)f(Degree)771 1192 y Fs(Master)g(of)f(Science)1031
1427 y Fq(Appr)o(o)o(ved,)c(Thesis)h(Committee:)p 1031
1609 900 2 v 1031 1669 a Fp(Sarita)f(V.)e(Adv)o(e,)g(Chair)1031
1729 y(Assistan)o(t)h(Professor)i(in)e(Electrical)e(and)1031
1789 y(Computer)i(Engineering)p 1031 1959 V 1031 2019
a(J.)g(Rob)q(ert)h(Jump)1031 2080 y(Professor)g(of)g(Electrical)d(and)j
(Computer)1031 2140 y(Engineering)p 1031 2310 V 1031
2370 a(Alan)f(L.)g(Co)o(x)1031 2430 y(Asso)q(ciate)h(Professor)g(of)f
(Computer)g(Science)833 2583 y Fu(Houston,)j(T)-5 b(exas)889
2688 y(April,)17 b(1997)p eop
%%Page: 2 2
2 1 bop 200 343 a Ft(The)26 b(Impact)i(of)f(Instruction-Lev)n(el)e(P)n
(arallelism)g(on)251 435 y(Multipro)r(cessor)h(P)n(erformance)h(and)f
(Sim)n(ulation)800 526 y(Metho)r(dology)877 691 y Fu(Vija)n(y)19
b(S.)h(P)n(ai)903 933 y Fs(Abstract)131 1039 y Fp(Curren)o(t)12
b(micropro)q(cessors)f(exploit)g(high)h(lev)o(els)e(of)i
(instruction-lev)o(el)e(parallelism)f(\(ILP\).)j(This)131
1111 y(thesis)k(presen)o(ts)g(the)g(\014rst)h(detailed)e(analysis)h(of)
h(the)f(impact)f(of)h(suc)o(h)g(pro)q(cessors)i(on)f(shared-)131
1183 y(memory)d(m)o(ultipro)q(cessors.)204 1258 y(W)l(e)19
b(\014nd)h(that)g(ILP)f(tec)o(hniques)f(substan)o(tially)g(reduce)h
(CPU)g(time)e(in)i(m)o(ultipro)q(cessors,)131 1330 y(but)12
b(are)f(less)g(e\013ectiv)o(e)e(in)i(reducing)g(memory)e(stall)i(time)e
(for)i(our)h(applications.)20 b(Consequen)o(tly)l(,)131
1402 y(despite)j(the)h(latency-tolerating)f(tec)o(hniques)f(incorp)q
(orated)i(in)g(ILP)g(pro)q(cessors,)i(memory)131 1474
y(stall)17 b(time)d(b)q(ecomes)h(a)i(larger)g(comp)q(onen)o(t)e(of)i
(execution)f(time)e(and)j(parallel)f(e\016ciencies)e(are)131
1547 y(generally)22 b(p)q(o)q(orer)i(in)e(our)i(ILP-based)f(m)o
(ultipro)q(cessor)e(than)j(in)e(an)h(otherwise)g(equiv)m(alen)o(t)131
1619 y(previous-generation)c(m)o(ultipro)q(cessor.)27
b(W)l(e)18 b(iden)o(tify)f(clustering)g(indep)q(enden)o(t)h(read)h
(misses)131 1691 y(together)14 b(in)g(the)g(pro)q(cessor)h(instruction)
e(windo)o(w)h(as)h(a)f(k)o(ey)f(optimization)f(to)i(exploit)f(the)h
(ILP)131 1763 y(features)i(of)h(curren)o(t)e(pro)q(cessors.)204
1838 y(W)l(e)20 b(also)h(use)f(the)f(ab)q(o)o(v)o(e)h(analysis)g(to)g
(examine)e(the)i(v)m(alidit)o(y)e(of)j(direct-execution)d(sim-)131
1910 y(ulators)23 b(with)f(previous-generation)g(pro)q(cessor)h(mo)q
(dels)d(to)j(appro)o(ximate)d(ILP-based)j(m)o(ul-)131
1982 y(tipro)q(cessors.)39 b(W)l(e)22 b(\014nd)g(that,)h(with)f
(appropriate)h(appro)o(ximations,)f(suc)o(h)f(sim)o(ulators)g(can)131
2054 y(reasonably)15 b(c)o(haracterize)d(the)h(b)q(eha)o(vior)h(of)g
(applications)g(with)f(p)q(o)q(or)i(o)o(v)o(erlap)e(of)h(read)g
(misses.)131 2127 y(Ho)o(w)o(ev)o(er,)20 b(they)h(can)g(b)q(e)g(highly)
g(inaccurate)f(for)i(applications)f(with)f(high)i(o)o(v)o(erlap)e(of)h
(read)131 2199 y(misses.)p eop
%%Page: 3 3
3 2 bop 715 403 a Ft(Ac)n(kno)n(wledgmen)n(ts)131 658
y Fp(I)17 b(w)o(ould)g(lik)o(e)f(to)h(thank)h(m)o(y)d(advisor,)j
(Sarita)f(Adv)o(e,)f(for)i(researc)o(h)e(direction)g(and)i(c)o
(hallenges)131 730 y(o)o(v)o(er)25 b(the)g(past)h(three)f(y)o(ears.)49
b(I)25 b(also)h(thank)g(m)o(y)e(o\016cemate)f(and)j(p)q(erennial)f
(co-author,)131 802 y(P)o(arthasarath)o(y)e(Ranganathan,)i(for)d(a)h
(terri\014c)d(exc)o(hange)i(of)g(ideas)g(ev)o(er)e(since)i(w)o(e)f
(started)131 874 y(w)o(orking)16 b(together.)21 b(It)15
b(has)i(b)q(een)e(a)h(great)h(pleasure)e(to)h(w)o(ork)g(with)f(these)g
(t)o(w)o(o)h(p)q(eople)g(for)g(the)131 947 y(past)f(three)f(y)o(ears,)g
(and)h(I)f(lo)q(ok)h(forw)o(ard)g(to)g(more.)k(I)c(also)g(thank)f(m)o
(y)f(thesis)h(committee)o(,)e(Alan)131 1019 y(Co)o(x)17
b(and)f(Bob)h(Jump,)d(for)j(v)m(aluable)f(feedbac)o(k.)204
1093 y(I)23 b(cannot)i(thank)e(m)o(y)f(family)f(enough)j(for)g(all)f
(kinds)g(of)h(guidance)f(o)o(v)o(er)g(the)g(y)o(ears.)43
b(I)131 1165 y(particularly)13 b(thank)i(m)o(y)d(paren)o(ts,)i
(Sadananda)j(and)e(Sharda)g(P)o(ai,)f(for)g(all)g(the)g(c)o(hallenges)f
(o)o(v)o(er)131 1238 y(the)k(y)o(ears,)g(including)f(con)o(vincing)g
(me)f(to)j(go)g(to)f(graduate)h(sc)o(ho)q(ol.)24 b(I)17
b(also)h(o)o(w)o(e)f(a)g(great)h(deal)131 1310 y(to)j(m)o(y)e
(grandmother,)i(Janabai)g(Kamath,)g(for)g(supp)q(ort)h(and)f(for)g
(lots)g(of)g(n)o(utritious)f(meals)131 1382 y(along)d(the)f(w)o(a)o(y)l
(.)204 1456 y(My)h(graduate)g(career)f(has)i(b)q(een)e(supp)q(orted)i
(b)o(y)e(a)h(F)l(annie)f(and)i(John)f(Hertz)e(F)l(oundation)131
1529 y(F)l(ello)o(wship.)p eop
%%Page: 4 4
4 3 bop 874 403 a Ft(Con)n(ten)n(ts)204 657 y Fp(Abstract)1514
b(ii)204 731 y(Ac)o(kno)o(wledgmen)o(ts)1303 b(iii)204
804 y(List)17 b(of)f(Illustrations)1277 b(vi)131 942
y Fs(1)39 b(In)n(tro)r(duction)1326 b(1)204 1016 y Fp(1.1)51
b(Motiv)m(ation)17 b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)96 b(1)204 1090 y(1.2)51 b(Con)o(tributions)33
b(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96
b(2)204 1163 y(1.3)51 b(Organization)g(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)g(.)h(.)f(.)h(.)f(.)96 b(3)131 1302 y Fs(2)39 b(Exp)r(erimen)n(tal)
25 b(Metho)r(dology)890 b(4)204 1375 y Fp(2.1)51 b(Measuring)16
b(the)g(Impact)f(of)h(ILP)49 b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96
b(4)204 1449 y(2.2)51 b(Sim)o(ulated)14 b(Arc)o(hitectures)41
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96 b(6)204 1522 y(2.3)51
b(Sim)o(ulation)14 b(En)o(vironmen)o(t)34 b(.)25 b(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)
f(.)71 b(10)204 1596 y(2.4)51 b(Applications)20 b(.)25
b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(11)131 1734 y Fs(3)39 b(Impact)23 b(of)f(ILP)g(on)h(Multipro)r
(cessor)g(P)n(erformance)293 b(13)204 1808 y Fp(3.1)51
b(Impact)14 b(of)j(ILP)f(on)h(an)g(Eigh)o(t-pro)q(cessor)g(System)25
b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(13)317 1881 y(3.1.1)56 b(Ov)o(erall)14 b(Results)37
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(13)317 1955
y(3.1.2)56 b(Data)17 b(Memory)d(ILP)j(Sp)q(eedup)41 b(.)25
b(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(15)317 2028 y(3.1.3)56 b(Sync)o(hronization)15
b(ILP)i(Sp)q(eedup)36 b(.)24 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(23)204 2102 y(3.2)51
b(Impact)14 b(of)j(ILP)f(on)h(P)o(arallel)e(E\016ciency)h(.)25
b(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(23)317 2175 y(3.2.1)56 b(P)o(arallel)15 b(E\016ciency)f(on)j
(an)g(Eigh)o(t-Pro)q(cessor)g(Con\014guration)32 b(.)24
b(.)h(.)f(.)71 b(23)317 2249 y(3.2.2)56 b(P)o(arallel)15
b(E\016ciency)f(in)i(Larger)h(Con\014gurations)i(.)24
b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(28)204 2323
y(3.3)51 b(Alleviating)14 b(Limitations)h(to)i(ILP)f(Sp)q(eedup)i(.)24
b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(31)317 2396 y(3.3.1)56 b(E\013ect)16 b(of)g(Larger)i(Instruction)d
(Windo)o(w)47 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(32)317 2470 y(3.3.2)56 b(E\013ect)16 b(of)g(a)h(High-Bandwidth)
f(System)26 b(.)e(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(34)317 2543 y(3.3.3)56 b(E\013ect)16 b(of)g(Larger)i(Cac)o(hes)
g(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
g(.)h(.)f(.)h(.)f(.)71 b(34)317 2617 y(3.3.4)56 b(Summary)41
b(.)24 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(36)204
2690 y(3.4)51 b(Summary)13 b(and)k(Additional)f(Issues)29
b(.)c(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h
(.)f(.)h(.)f(.)71 b(37)p eop
%%Page: 5 5
5 4 bop 1906 72 a Fp(v)131 222 y Fs(4)39 b(Impact)23
b(of)f(ILP)g(on)h(Sim)n(ulation)i(Metho)r(dology)403
b(39)204 296 y Fp(4.1)51 b(Mo)q(dels)16 b(and)h(Metrics)i(.)24
b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(39)204 371
y(4.2)51 b(Execution)15 b(Time)g(and)h(its)g(Comp)q(onen)o(ts)42
b(.)24 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)
f(.)71 b(41)204 445 y(4.3)51 b(Error)16 b(in)g(Comp)q(onen)o(t)g(W)l
(eigh)o(ts)e(.)25 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(42)204 519 y(4.4)51
b(Error)16 b(in)g(Multipro)q(cessor)g(Sp)q(eedup)d(.)25
b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)71 b(43)204 594 y(4.5)51 b(Summary)13 b(and)k(Alternativ)o
(e)d(Mo)q(dels)27 b(.)d(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(45)131 732 y Fs(5)39
b(Related)23 b(W)-6 b(ork)1252 b(47)131 870 y(6)39 b(Conclusions)1312
b(50)204 1009 y(Bibliograph)n(y)1286 b(52)p eop
%%Page: 6 6
6 5 bop 818 403 a Ft(Illustrations)204 730 y Fp(2.1)51
b(Cac)o(he)16 b(coherence)f(proto)q(col)i(diagram)h(.)24
b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)96 b(7)204 804 y(2.2)51 b(Multipro)q(cessor)16
b(system)e(mo)q(deled)40 b(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96 b(7)204
879 y(2.3)51 b(System)14 b(parameters)36 b(.)24 b(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)96 b(8)204 953 y(2.4)51 b(Application)15
b(c)o(haracteristics)28 b(.)c(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(12)204 1099 y(3.1)51 b(ILP)16 b(sp)q(eedup)h(and)g(comp)q(onen)o(ts)e
(in)h(an)h(8-pro)q(cessor)h(system)36 b(.)25 b(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(14)204 1174 y(3.2)51 b(Execution)15 b(time)f(comp)q(onen)o(ts)i
(in)g(an)h(8-pro)q(cessor)g(system)39 b(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(14)204 1248 y(3.3)51 b(E\013ect)16 b(of)g(ILP)h(on)g(a)o(v)
o(erage)e(miss)g(latency)h(in)g(an)g(8-pro)q(cessor)i(system)26
b(.)e(.)h(.)f(.)71 b(19)204 1322 y(3.4)51 b(MSHR)15 b(o)q(ccupancy)i
(in)e(an)i(8-pro)q(cessor)h Fo(ILP)d Fp(system)40 b(.)25
b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(21)204
1397 y(3.5)51 b(P)o(arallel)15 b(E\016ciency)f(with)i
Fo(Simple)e Fp(and)j Fo(ILP)e Fp(systems)23 b(.)i(.)f(.)h(.)f(.)h(.)f
(.)g(.)h(.)f(.)h(.)f(.)71 b(24)204 1471 y(3.6)51 b(ILP)16
b(sp)q(eedup)h(and)g(comp)q(onen)o(ts)e(in)h(a)h(unipro)q(cessor)g
(system)36 b(.)25 b(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(25)204
1545 y(3.7)51 b(Execution)15 b(time)f(comp)q(onen)o(ts)i(in)g(a)g
(unipro)q(cessor)h(system)39 b(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(25)204 1620 y(3.8)51 b(E\013ect)16 b(of)g(ILP)h(on)g(a)o(v)o(erage)e
(miss)g(latency)h(in)g(a)g(unipro)q(cessor)h(system)26
b(.)e(.)h(.)f(.)71 b(26)204 1694 y(3.9)51 b(MSHR)15 b(o)q(ccupancy)i
(in)e(a)i(unipro)q(cessor)g Fo(ILP)e Fp(system)40 b(.)25
b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(27)204
1768 y(3.10)27 b(P)o(arallel)15 b(E\016ciency)f(in)i(Larger)h
(Con\014gurations)k(.)j(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(29)204 1842 y(3.11)27 b(Scalabilit)o(y)14
b(of)j(ILP)f(sp)q(eedup)33 b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(30)204 1917 y(3.12)27 b(E\013ectiv)o(eness)15 b(of)h(ILP)h(with)f
(larger)g(instruction)g(windo)o(w)37 b(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)71 b(33)204 1991 y(3.13)27 b(E\013ectiv)o(eness)15
b(of)h(ILP)h(in)f(v)o(ery)f(high)h(bandwidth)h(system)31
b(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(35)204
2065 y(3.14)27 b(E\013ects)16 b(of)h(larger)f(cac)o(he)f
(con\014guration)26 b(.)f(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(36)204 2212 y(4.1)51
b(Predicting)15 b(execution)g(time)f(and)j(its)f(comp)q(onen)o(ts)g
(using)g(simple)317 2284 y(sim)o(ulation)e(mo)q(dels)k(.)24
b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(40)204
2358 y(4.2)51 b(Relativ)o(e)14 b(imp)q(ortance)h(of)i(memory)c(comp)q
(onen)o(t)18 b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(43)204 2433 y(4.3)51 b(Sp)q(eedups)16 b(for)h(Simple,)c
(ILP)l(,)j(Simple.4xP)l(.1cL1)e(mo)q(dels)48 b(.)25 b(.)f(.)h(.)f(.)g
(.)h(.)f(.)h(.)f(.)71 b(44)p eop
%%Page: 7 7
7 6 bop 149 1196 a Fp(Large)19 b(p)q(ortions)f(of)g(this)g(thesis)f
(are)h(based)g(on)g(an)h(earlier)d(w)o(ork)i([PRA97b])f(whic)o(h)g(is)g
(cop)o(y-)131 1269 y(righ)o(ted)j(b)o(y)f(the)h(Institute)f(of)h
(Electrical)e(and)i(Electronic)f(Engineers)h(\(IEEE\),)f(1997.)34
b(This)131 1341 y(material)15 b(is)h(included)f(here)g(with)h(p)q
(ermission)f(of)i(the)f(IEEE.)g(Suc)o(h)g(p)q(ermission)f(of)h(the)g
(IEEE)131 1413 y(do)q(es)g(not)f(in)f(an)o(y)g(w)o(a)o(y)g(imply)f
(IEEE)h(endorsemen)o(t)f(of)i(an)o(y)f(of)h(Rice)f(Univ)o(ersit)o(y's)d
(pro)q(ducts)16 b(or)131 1485 y(services.)p eop
%%Page: 1 8
1 7 bop 1907 72 a Fp(1)853 361 y Ft(Chapter)28 b(1)809
564 y(In)n(tro)r(duction)131 774 y Fs(1.1)66 b(Motiv)l(ation)131
898 y Fp(Shared-memory)12 b(m)o(ultipro)q(cessors)i(built)f(from)h
(commo)q(dit)o(y)e(micropro)q(cessors)i(\(e.g.,)f(Con)o(v)o(ex)131
989 y(Exemplar,)18 b(Sequen)o(t)g(STiNG,)g(SGI)h(Origin)f(series\))g
(are)h(exp)q(ected)f(to)h(pro)o(vide)g(high)g(p)q(erfor-)131
1079 y(mance)12 b(for)h(a)h(v)m(ariet)o(y)e(of)h(scien)o(ti\014c)f(and)
h(commercial)d(applications.)20 b(Curren)o(t)13 b(commo)q(dit)o(y)d
(mi-)131 1169 y(cropro)q(cessors)k(impro)o(v)o(e)c(p)q(erformance)h
(with)h(aggressiv)o(e)g(tec)o(hniques)f(to)i(exploit)e(high)i(lev)o
(els)d(of)131 1260 y(instruction-lev)o(el)i(parallelism)f(\()p
Fn(ILP)p Fp(\).)h(F)l(or)i(example,)d(the)j(HP)f(P)l(A-8000,)i(In)o
(tel)d(P)o(en)o(tium)f(Pro,)131 1350 y(and)19 b(MIPS)f(R10000)i(pro)q
(cessors)g(use)e(m)o(ultiple)d(instruction)j(issue,)g(dynamic)f
(\(out-of-order\))131 1440 y(sc)o(heduling,)i(m)o(ultiple)d(non-blo)q
(c)o(king)k(reads,)f(and)h(sp)q(eculativ)o(e)e(execution.)29
b(Ho)o(w)o(ev)o(er,)18 b(most)131 1530 y(recen)o(t)13
b(arc)o(hitecture)g(studies)h(of)h(shared-memory)d(systems)h(assume)g
(a)i(pro)q(cessor)g(mo)q(del)e(with)131 1621 y(single)i(issue,)g
(static)h(\(in-order\))f(sc)o(heduling,)g(and)h(blo)q(c)o(king)f
(reads.)21 b(This)16 b(assumption)f(allo)o(ws)131 1711
y(the)i(use)g(of)g(direct-execution)f(sim)o(ulation,)e(whic)o(h)j(is)g
(signi\014can)o(tly)f(faster)h(than)g(the)g(detailed)131
1801 y(sim)o(ulation)e(curren)o(tly)f(required)h(to)i(mo)q(del)e(an)i
(ILP)f(pro)q(cessor)h(pip)q(eline.)204 1894 y(Although)23
b(researc)o(hers)e(ha)o(v)o(e)h(sho)o(wn)h(the)f(b)q(ene\014ts)g(of)h
(aggressiv)o(e)f(ILP)g(tec)o(hniques)f(for)131 1984 y(unipro)q
(cessors,)c(there)f(has)h(not)f(y)o(et)g(b)q(een)g(a)h(detailed)e(or)h
(realistic)f(analysis)i(of)f(the)g(impact)f(of)131 2074
y(suc)o(h)g(ILP)h(tec)o(hniques)e(on)h(the)g(p)q(erformance)g(of)g
(shared-memory)e(m)o(ultipro)q(cessors.)20 b(Suc)o(h)15
b(an)131 2165 y(analysis)g(is)g(required)e(to)j(fully)d(exploit)h(adv)m
(ances)i(in)e(unipro)q(cessor)i(tec)o(hnology)e(for)h(m)o(ultipro-)131
2255 y(cessors.)27 b(Suc)o(h)17 b(an)i(analysis)f(is)f(also)i(required)
d(to)j(assess)g(the)e(v)m(alidit)o(y)g(of)h(the)f(con)o(tin)o(ued)g
(use)131 2345 y(of)e(direct-execution)e(sim)o(ulation)f(with)j(simple)d
(pro)q(cessor)j(mo)q(dels)f(to)h(study)f(next-generation)131
2435 y(shared-memory)g(arc)o(hitectures.)p eop
%%Page: 2 9
2 8 bop 1907 72 a Fp(2)131 222 y Fs(1.2)66 b(Con)n(tributions)131
347 y Fp(This)17 b(thesis)f(mak)o(es)e(t)o(w)o(o)i(con)o(tributions.)
166 480 y(\(1\))25 b(This)18 b(is)g(the)g(\014rst)g(detailed)g(study)g
(of)g(the)g(e\013ectiv)o(eness)e(of)j(state-of-the-art)g(ILP)g(pro-)253
571 y(cessors)i(in)f(a)g(shared-memory)e(m)o(ultipro)q(cessor,)h(using)
i(a)g(detailed)e(sim)o(ulator)f(driv)o(en)253 661 y(b)o(y)e(real)g
(applications.)166 793 y(\(2\))25 b(This)12 b(is)f(the)g(\014rst)h
(study)f(on)h(the)g(v)m(alidit)o(y)e(of)h(using)h(curren)o(t)f
(direct-execution)e(sim)o(ulation)253 883 y(tec)o(hniques)k(to)i(mo)q
(del)f(shared-memory)e(m)o(ultipro)q(cessors)i(built)g(from)f(ILP)i
(pro)q(cessors.)204 1017 y(Our)i(exp)q(erimen)o(ts)d(for)i(assessing)i
(the)e(impact)f(of)h(ILP)h(on)g(shared-memory)d(m)o(ultipro)q(ces-)131
1107 y(sor)19 b(p)q(erformance)e(sho)o(w)i(that)g(all)f(our)h
(applications)f(see)g(p)q(erformance)f(impro)o(v)o(em)o(en)o(ts)e(from)
131 1198 y(the)21 b(use)g(of)h(curren)o(t)e(ILP)h(tec)o(hniques)f(in)h
(m)o(ultipro)q(cessors.)35 b(Ho)o(w)o(ev)o(er,)20 b(the)h(impro)o(v)o
(em)o(e)o(n)o(ts)131 1288 y(ac)o(hiev)o(ed)16 b(v)m(ary)h(widely)l(.)23
b(In)17 b(particular,)g(ILP)h(tec)o(hniques)d(successfully)h(and)i
(consisten)o(tly)e(re-)131 1378 y(duce)g(the)f(CPU)h(comp)q(onen)o(t)f
(of)h(execution)f(time,)e(but)j(their)f(impact)f(on)j(the)e(memory)e
(\(read\))131 1468 y(stall)g(comp)q(onen)o(t)g(is)g(lo)o(w)o(er)f(than)
i(their)f(impact)f(on)i(CPU)f(time)e(and)j(is)f(also)h(more)e
(application-)131 1559 y(dep)q(enden)o(t.)33 b(This)21
b(de\014ciency)e(in)h(the)g(impact)f(of)h(ILP)h(tec)o(hniques)e(on)i
(memory)c(stall)j(time)131 1649 y(arises)c(primarily)d(b)q(ecause)j(of)
g(insu\016cien)o(t)e(p)q(oten)o(tial)h(in)h(our)g(applications)g(to)g
(o)o(v)o(erlap)f(m)o(ulti-)131 1739 y(ple)h(read)g(misses,)f(as)i(w)o
(ell)d(as)j(system)e(con)o(ten)o(tion)h(from)f(more)g(frequen)o(t)g
(memory)e(accesses.)204 1832 y(The)i(discrepancy)g(in)f(the)h(impact)e
(of)i(ILP)h(tec)o(hniques)d(on)i(the)g(CPU)g(and)h(read)f(stall)f(com-)
131 1922 y(p)q(onen)o(ts)k(leads)g(to)g(t)o(w)o(o)g(k)o(ey)e(e\013ects)
h(for)h(our)g(applications.)26 b(First,)17 b(read)h(stall)f(time)e(b)q
(ecomes)131 2012 y(a)20 b(larger)g(comp)q(onen)o(t)f(of)h(sim)o(ulated)
d(execution)i(time)e(than)j(in)g(previous-generation)g(m)o(ulti-)131
2103 y(pro)q(cessors.)28 b(Second,)19 b(parallel)e(e\016ciencies)f(for)
i(ILP)g(m)o(ultipro)q(cessors)f(are)h(lo)o(w)o(er)g(than)g(with)131
2193 y(previous-generation)k(m)o(ultipro)q(cessors)e(for)i(all)f(but)h
(one)g(application.)37 b(Th)o(us,)23 b(despite)e(the)131
2283 y(inheren)o(t)14 b(latency-tolerating)f(mec)o(hanisms)f(in)i(ILP)h
(pro)q(cessors,)g(m)o(ultipro)q(cessors)f(built)f(from)131
2373 y(ILP)23 b(pro)q(cessors)g(actually)e(exhibit)g(a)h(greater)g(p)q
(oten)o(tial)g(need)g(for)g(additional)g(latency)f(re-)131
2464 y(ducing)f(or)h(hiding)f(tec)o(hniques)f(than)i
(previous-generation)f(m)o(ultipro)q(cessors.)32 b(W)l(e)20
b(iden)o(tify)131 2554 y(clustering)i(of)h(read)g(misses)f(as)h(a)h(k)o
(ey)d(optimization)g(for)j(exploiting)d(the)i(ILP)g(features)g(of)131
2644 y(curren)o(t)16 b(pro)q(cessors.)p eop
%%Page: 3 10
3 9 bop 1907 72 a Fp(3)204 222 y(Our)13 b(results)f(on)h(the)f(v)m
(alidit)o(y)f(of)i(using)g(sim)o(ulators)e(based)i(on)g(simple)d(pro)q
(cessor)j(mo)q(dels)f(to)131 312 y(appro)o(ximate)i(the)h(b)q(eha)o
(vior)g(of)g(ILP)g(pro)q(cessors)i(in)e(m)o(ultipro)q(cessor)e(systems)
h(are)h(as)h(follo)o(ws.)131 403 y(F)l(or)f(applications)h(where)e(our)
i(ILP)f(m)o(ultipro)q(cessor)f(fails)h(to)g(signi\014can)o(tly)f(o)o(v)
o(erlap)g(read)i(miss)131 493 y(latency)l(,)11 b(a)h(sim)o(ulation)e
(using)h(a)h(simple)d(previous-generation)j(pro)q(cessor)g(mo)q(del)e
(with)i(a)f(higher)131 583 y(clo)q(c)o(k)16 b(sp)q(eed)h(for)h(the)e
(pro)q(cessor)i(and)g(the)e(L1)i(cac)o(he)e(pro)o(vides)h(a)g
(reasonable)g(appro)o(ximation)131 674 y(to)h(the)e(results)h(ac)o
(hiev)o(ed)e(with)i(a)g(more)f(detailed)g(sim)o(ulation)f(system.)22
b(Ho)o(w)o(ev)o(er,)15 b(when)i(ILP)131 764 y(tec)o(hniques)23
b(e\013ectiv)o(ely)e(o)o(v)o(erlap)j(read)g(miss)f(latency)l(,)i(all)e
(of)i(our)f(simple-pro)q(cessor-based)131 854 y(sim)o(ulation)d(mo)q
(dels)h(can)h(sho)o(w)g(signi\014can)o(t)g(errors)g(for)g(imp)q(ortan)o
(t)f(metrics.)39 b(Ov)o(erall,)22 b(for)131 944 y(total)d(sim)o(ulated)
d(execution)h(time,)f(the)i(most)f(commonly)f(used)i(sim)o(ulation)e
(tec)o(hnique)h(ga)o(v)o(e)131 1035 y(26\045)f(to)g(192\045)g(error,)g
(while)e(the)i(most)e(accurate)i(tec)o(hnique)e(ga)o(v)o(e)h(-8\045)g
(to)h(73\045)g(error.)21 b(These)131 1125 y(errors)i(dep)q(end)g(on)h
(b)q(oth)f(the)g(application)g(and)g(the)g(ILP)g(c)o(haracteristics)e
(of)j(the)e(system;)131 1215 y(th)o(us,)15 b(mo)q(dels)e(that)j(do)f
(not)g(prop)q(erly)f(capture)h(these)f(e\013ects)h(ma)o(y)e(not)i(b)q
(e)f(able)h(to)g(e\013ectiv)o(ely)131 1306 y(c)o(haracterize)g(an)i
(ILP-based)g(m)o(ultipro)q(cessor)e(system.)131 1489
y Fs(1.3)66 b(Organization)131 1614 y Fp(The)17 b(rest)g(of)g(this)g
(thesis)g(is)g(organized)g(as)g(follo)o(ws.)24 b(Chapter)17
b(2)g(describ)q(es)g(our)g(exp)q(erimen)o(tal)131 1704
y(metho)q(dology)l(.)41 b(Chapters)17 b(3)f(and)h(4)23
b(describ)q(e)f(and)i(analyze)e(our)h(results.)41 b(Chapter)23
b(5)g(dis-)131 1794 y(cusses)g(related)f(w)o(ork.)39
b(Chapter)23 b(6)g(pro)o(vides)f(concluding)g(remarks)f(and)i
(discusses)g(future)131 1885 y(w)o(ork)16 b(motiv)m(ated)f(b)o(y)h
(this)g(thesis.)p eop
%%Page: 4 11
4 10 bop 1907 72 a Fp(4)853 361 y Ft(Chapter)28 b(2)549
564 y(Exp)r(erimen)n(tal)d(Metho)r(dology)131 752 y Fp(The)17
b(follo)o(wing)g(sections)g(describ)q(e)f(the)h(metrics)e(used)i(in)g
(our)g(ev)m(aluation,)g(the)g(arc)o(hitectures)131 842
y(sim)o(ulated,)d(the)i(sim)o(ulation)e(en)o(vironmen)o(t,)f(and)k(the)
f(applications.)131 1026 y Fs(2.1)66 b(Measuring)23 b(the)g(Impact)f
(of)g(ILP)131 1151 y Fp(T)l(o)16 b(determine)d(the)j(impact)d(of)j(ILP)
g(tec)o(hniques)e(in)h(m)o(ultipro)q(cessors,)f(w)o(e)h(compare)g(t)o
(w)o(o)g(m)o(ul-)131 1241 y(tipro)q(cessor)k(systems)e({)i
Fo(ILP)e Fp(and)i Fo(Simple)d Fp({)i(equiv)m(alen)o(t)f(in)h(ev)o(ery)f
(resp)q(ect)g(except)h(the)g(pro-)131 1331 y(cessor)g(used.)24
b(The)17 b Fo(ILP)f Fp(system)f(uses)j(state-of-the-art)g(high-p)q
(erformance)f(micropro)q(cessors)131 1422 y(with)i(m)o(ultiple)d
(issue,)k(dynamic)d(sc)o(heduling,)i(and)g(non-blo)q(c)o(king)h(reads.)
31 b(W)l(e)18 b(refer)h(to)g(suc)o(h)131 1512 y(pro)q(cessors)d(as)g
Fo(ILP)e Fp(pro)q(cessors.)22 b(The)15 b Fo(Simple)e
Fp(system)g(uses)i(previous-generation)g(micropro-)131
1602 y(cessors)e(with)e(single)h(issue,)g(static)f(sc)o(heduling,)h
(and)g(blo)q(c)o(king)g(reads,)g(matc)o(hing)f(the)g(pro)q(cessor)131
1693 y(mo)q(del)j(used)i(in)f(man)o(y)f(curren)o(t)h(direct-execution)e
(sim)o(ulators.)20 b(W)l(e)15 b(refer)g(to)h(suc)o(h)f(pro)q(cessors)
131 1783 y(as)20 b Fo(Simple)d Fp(pro)q(cessors.)32 b(W)l(e)19
b(compare)g(the)g Fo(ILP)f Fp(and)i Fo(Simple)d Fp(systems)h(to)i
(determine)d(ho)o(w)131 1873 y(m)o(ultipro)q(cessors)12
b(b)q(ene\014t)h(from)e(ILP)j(tec)o(hniques,)d(rather)i(than)h(to)f
(prop)q(ose)h(an)o(y)f(arc)o(hitectural)131 1963 y(tradeo\013)i(b)q(et)
o(w)o(een)d(the)h Fo(ILP)f Fp(and)i Fo(Simple)e Fp(arc)o(hitectures.)18
b(Therefore,)c(b)q(oth)g(systems)e(ha)o(v)o(e)h(the)131
2054 y(same)19 b(clo)q(c)o(k)f(rate)i(and)g(feature)f(an)h(iden)o
(tical)d(state-of-the-art)k(aggressiv)o(e)e(memory)e(system)131
2144 y(and)g(in)o(terconnect.)j(Section)c(2.2)g(pro)o(vides)g(more)f
(detail)g(on)i(these)f(systems.)204 2236 y(The)h(k)o(ey)e(metric)e(w)o
(e)j(use)h(to)f(ev)m(aluate)g(the)g(impact)f(of)h(ILP)h(is)f(the)g(sp)q
(eedup)g(in)g(execution)131 2327 y(time)k(ac)o(hiev)o(ed)h(b)o(y)g(the)
h Fo(ILP)f Fp(system)g(o)o(v)o(er)h(the)f Fo(Simple)f
Fp(system,)i(whic)o(h)g(w)o(e)g(call)f(the)h Fn(ILP)131
2417 y(sp)n(e)n(e)n(dup)p Fp(.)f(ILP)16 b(sp)q(eedup)h(is)f(de\014ned)g
(in)g(Equation)g(2.1,)792 2600 y Fm(I)t(LP)i(speedup)c
Fp(=)1140 2566 y Fm(t)1158 2573 y Fl(Simple)p 1140 2588
126 2 v 1167 2634 a Fm(t)1185 2641 y Fl(ILP)1831 2600
y Fp(\(2.1\))p eop
%%Page: 5 12
5 11 bop 1907 72 a Fp(5)131 222 y(where)17 b Fm(t)291
229 y Fl(Simple)417 222 y Fp(represen)o(ts)f(the)i(execution)e(time)g
(of)h(the)h(application)f(on)h(the)f Fo(Simple)f Fp(system)131
312 y(and)h Fm(t)244 319 y Fl(ILP)315 312 y Fp(represen)o(ts)e(the)h
(execution)g(time)e(on)i(the)g Fo(ILP)g Fp(system.)204
405 y(T)l(o)24 b(study)f(the)g(factors)g(a\013ecting)g(ILP)h(sp)q
(eedup,)g(w)o(e)f(study)g(the)f(comp)q(onen)o(ts)h(of)g(exe-)131
495 y(cution)g(time)d({)j(busy)l(,)h(functional)f(unit)f(stall,)i(sync)
o(hronization)e(stall,)h(and)h(data)f(memory)131 585
y(stall.)38 b(Ho)o(w)o(ev)o(er,)22 b(these)f(comp)q(onen)o(ts)h(are)g
(di\016cult)e(to)j(distinguish)f(with)g Fo(ILP)e Fp(pro)q(cessors,)131
676 y(as)e(eac)o(h)e(instruction)h(can)g(p)q(oten)o(tially)f(o)o(v)o
(erlap)g(its)h(execution)f(with)h(b)q(oth)h(previous)f(and)g(fol-)131
766 y(lo)o(wing)22 b(instructions.)39 b(W)l(e)22 b(hence)g(adopt)h(the)
f(follo)o(wing)g(con)o(v)o(en)o(tion,)g(also)h(used)f(in)g(other)131
856 y(studies)17 b([PRAH96)o(,)f(RBH)637 838 y Fk(+)666
856 y Fp(95)q(].)22 b(If,)15 b(in)i(a)g(giv)o(en)e(cycle,)g(the)h(pro)q
(cessor)i(retires)e(the)g(maxim)o(um)131 946 y(allo)o(w)o(able)11
b(n)o(um)o(b)q(er)g(of)h(instructions,)g(w)o(e)g(coun)o(t)g(that)g
(cycle)f(as)i(part)f(of)g(busy)h(time.)k(Otherwise,)131
1037 y(w)o(e)g(c)o(harge)h(that)g(cycle)e(to)i(the)g(stall)f(time)f
(comp)q(onen)o(t)g(corresp)q(onding)j(to)f(the)f(\014rst)h(instruc-)131
1127 y(tion)i(that)h(could)e(not)i(b)q(e)f(retired.)31
b(All)18 b(instructions)i(retire)f(from)g(the)g(instruction)h(windo)o
(w)131 1217 y(in)g(program)f(order)h(in)f(order)h(to)g(guaran)o(tee)g
(precise)e(in)o(terrupts.)31 b(Th)o(us,)20 b(the)f(stall)h(time)d(for)
131 1308 y(a)g(class)g(of)g(instructions)g(represen)o(ts)f(the)g(n)o
(um)o(b)q(er)f(of)i(cycles)e(that)i(instructions)g(of)g(that)g(class)
131 1398 y(sp)q(end)22 b(at)g(the)f(head)g(of)h(the)f(instruction)g
(windo)o(w)g(\(also)h(kno)o(wn)f(as)h(the)f(reorder)g(bu\013er)h(or)131
1488 y(activ)o(e)15 b(list\))h(b)q(efore)g(retiring.)204
1581 y(W)l(e)g(analyze)e(the)i(e\013ect)e(of)i(eac)o(h)f(comp)q(onen)o
(t)f(of)i(execution)e(time)f(b)o(y)i(examining)f(the)h(ILP)131
1671 y(sp)q(eedup)j(of)f(that)h(comp)q(onen)o(t,)e(whic)o(h)g(is)h(the)
g(ratio)h(of)f(the)g(times)e(sp)q(en)o(t)j(on)f(the)g(comp)q(onen)o(t)
131 1761 y(with)g(the)f Fo(Simple)e Fp(and)j Fo(ILP)f
Fp(systems,)e(as)k(w)o(ell)d(as)i(the)f Fn(weight)i Fp(of)f(that)g
(comp)q(onen)o(t,)e(whic)o(h)g(is)131 1851 y(the)h(fraction)h(of)f
(total)h(execution)e(time)g(sp)q(en)o(t)h(in)g(that)h(comp)q(onen)o(t.)
k(F)l(or)16 b(example,)e(the)i(data)131 1942 y(memory)e(ILP)i(sp)q
(eedup)h(is)f(de\014ned)g(as)591 2124 y Fm(D)q(ata)11
b(memor)q(y)h(I)t(LP)18 b(speedup)c Fp(=)1253 2091 y
Fm(t)1271 2098 y Fj(mem;)p Fl(Simple)p 1253 2113 215
2 v 1279 2158 a Fm(t)1297 2165 y Fj(mem;)p Fl(ILP)1831
2124 y Fp(\(2.2\))131 2244 y(where)22 b Fm(t)296 2251
y Fj(mem;)p Fl(Simple)514 2244 y Fp(and)g Fm(t)632 2251
y Fj(mem;)p Fl(ILP)797 2244 y Fp(represen)o(t)f(the)h(data)g(memory)d
(comp)q(onen)o(t)i(of)h(execution)131 2334 y(time)15
b(on)j(the)f Fo(Simple)e Fp(and)j Fo(ILP)e Fp(systems,)f(resp)q(ectiv)o
(ely)l(.)22 b(Similarly)l(,)14 b(the)j(w)o(eigh)o(t)f(of)h(the)g(data)
131 2424 y(memory)d(comp)q(onen)o(t)h(on)i(the)f Fo(Simple)e
Fp(system)g(is)i(de\014ned)g(as)657 2607 y Fm(D)q(ata)10
b(memor)q(y)j(w)q(eig)r(ht)g Fp(=)1187 2573 y Fm(t)1205
2580 y Fj(mem;)p Fl(Simple)p 1187 2595 V 1231 2641 a
Fm(t)1249 2648 y Fl(Simple)1831 2607 y Fp(\(2.3\))p eop
%%Page: 6 13
6 12 bop 1907 72 a Fp(6)131 222 y(with)17 b Fm(t)261
229 y Fj(mem;)p Fl(Simple)473 222 y Fp(represen)o(ting)f(the)g(time)f
(sp)q(en)o(t)i(on)g(data)g(memory)d(stalls)i(and)h Fm(t)1682
229 y Fl(Simple)1807 222 y Fp(repre-)131 312 y(sen)o(ting)f(total)h
(execution)e(time)f(on)j(the)f Fo(Simple)e Fp(system.)131
490 y Fs(2.2)66 b(Sim)n(ulated)25 b(Arc)n(hitectures)131
613 y Fp(This)17 b(study)f(mo)q(dels)g(cac)o(he-coheren)o(t)f
(non-uniform)h(memory)e(access)i(\(CC-NUMA\))g(shared-)131
703 y(memory)32 b(m)o(ultipro)q(cessor)h(systems)g(with)i(the)f(system)
f(no)q(des)i(connected)f(b)o(y)g(a)h(t)o(w)o(o-)131 794
y(dimensional)13 b(mesh.)20 b(The)14 b(m)o(ultipro)q(cessors)g(in)g
(this)h(study)g(use)f(a)i(3-state)f(in)o(v)m(alidation-based)131
884 y(directory)i(coherence)g(proto)q(col)i(and)f(are)g
(release-consisten)o(t)f([GLL)1434 866 y Fk(+)1464 884
y Fp(90)q(].)25 b(The)18 b(cac)o(he)f(coher-)131 974
y(ence)f(proto)q(col)h(used)f(is)g(illustrated)f(in)h(Figure)g(2.1.)204
1065 y(Figure)g(2.2)g(sho)o(ws)h(the)f(primary)e(blo)q(c)o(ks)i(in)f
(the)h(m)o(ultipro)q(cessor)f(con\014guration)i(mo)q(deled)131
1155 y(in)g(this)h(study)l(.)25 b(Figure)17 b(2.3)h(summarizes)c(our)k
(default)g(m)o(ultipro)q(cessor)e(system)g(parameters.)131
1245 y(Most)e(of)g(the)g(analysis)g(in)f(this)h(pap)q(er)g(fo)q(cuses)g
(on)h(8-pro)q(cessor)g(systems;)e(ho)o(w)o(ev)o(er,)f(this)i(study)131
1336 y(also)k(considers)g(unipro)q(cessor,)g(16-pro)q(cessor,)h(and)f
(32-pro)q(cessor)h(systems.)24 b(Although)18 b(more)131
1426 y(ric)o(hly)13 b(connected)h(net)o(w)o(ork)g(top)q(ologies)h(than)
g(the)f(mesh,)f(suc)o(h)h(as)h(the)g(crossbar,)g(can)g(b)q(e)f(used)131
1516 y(in)22 b(some)f(of)i(these)f(medium)o(-scale)d(m)o(ultipro)q
(cessor)i(con\014gurations,)k(w)o(e)c(ev)m(aluate)h(systems)131
1606 y(with)11 b(the)g(mesh)e(net)o(w)o(ork)i(in)f(order)h(to)g
(capture)g(the)g(b)q(eha)o(vior)g(of)g(CC-NUMA)f(m)o(ultipro)q
(cessors,)131 1697 y(and)17 b(with)f(an)h(aim)e(to)h(presen)o(t)g
(insigh)o(ts)g(that)h(can)f(b)q(e)h(extended)e(to)h(larger)h(systems)e
(as)i(w)o(ell.)204 1787 y(The)k(follo)o(wing)f(details)g(the)h(pro)q
(cessors)g(and)g(memory)d(hierarc)o(h)o(y)h(incorp)q(orated)i(in)g(the)
131 1878 y(sim)o(ulated)14 b(systems.)204 1968 y Fi(Pro)r(cessor)27
b(Mo)r(dels.)43 b Fp(Our)24 b Fo(ILP)f Fp(pro)q(cessor)i(resem)o(bles)c
(the)j(MIPS)f(R10000)j(pro)q(ces-)131 2058 y(sor)20 b([MIP96],)f(with)g
(4-w)o(a)o(y)g(issue,)g(dynamic)e(sc)o(heduling,)i(non-blo)q(c)o(king)g
(reads,)h(register)e(re-)131 2149 y(naming,)g(and)h(sp)q(eculativ)o(e)e
(execution.)27 b(Unlik)o(e)16 b(the)j(MIPS)f(R10000,)i(ho)o(w)o(ev)o
(er,)e(our)h(pro)q(ces-)131 2239 y(sor)f(implem)o(en)n(ts)d(release)h
(consistency)l(,)g(as)h(our)h(previous)f(w)o(ork)g(has)g(sho)o(wn)h
(this)f(consistency)131 2329 y(mo)q(del)d(to)h(ac)o(hiev)o(e)f(higher)g
(p)q(erformance)g(on)i(ILP)f(m)o(ultipro)q(cessor)f(systems)f
([PRAH96].)20 b(The)131 2419 y Fo(ILP)c Fp(pro)q(cessor)h(has)h(a)f
(memory)c(unit)k(whic)o(h)e(holds)i(up)g(to)g(32)g(en)o(tries.)k(Reads)
c(remain)e(in)i(the)131 2510 y(memory)i(unit)i(un)o(til)f(they)h(ha)o
(v)o(e)f(completed;)i(writes)f(lea)o(v)o(e)e(the)i(memory)e(unit)i(as)h
(so)q(on)h(as)131 2600 y(they)d(issue)h(to)g(the)f(cac)o(he,)h(as)g
(they)f(do)h(not)g(imp)q(ose)f(an)o(y)g(constrain)o(t)h(on)g(subsequen)
o(t)f(data)131 2690 y(accesses)c(in)f(the)g(release)f(consistency)h
(memory)e(mo)q(del.)19 b(F)l(urther,)c(the)g(pro)q(cessor)i(is)e
(assumed)p eop
%%Page: 7 14
7 13 bop 1907 72 a Fp(7)131 369 y
 23681433 14208860 4078469 19800309 33746042 38482329 startTexFig
 131 369 a
%%BeginDocument: cc_protocol.eps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.72 0 0 0.72 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -150 252 ] concat
%I
560 445 100 23 Elli
End

Begin %I Elli
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 49 64 ] concat
%I
560 445 100 23 Elli
End

Begin %I Elli
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -339 64 ] concat
%I
560 445 100 23 Elli
End

Begin %I Line
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -173 252 ] concat
%I
383 290 505 412 Line
%I 1
End

Begin %I Line
%I b 65520
3 1 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -173 252 ] concat
%I
505 268 671 268 Line
%I 1
End

Begin %I Line
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -173 252 ] concat
%I
671 246 505 246 Line
%I 1
End

Begin %I Line
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -173 252 ] concat
%I
671 412 793 290 Line
%I 1
End

Begin %I Line
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -173 252 ] concat
%I
771 290 649 412 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 221 633 ] concat
%I
[
(Read)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 484.912 609.894 ] concat
%I
[
(Write)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 393.5 486.85 ] concat
%I
[
(Write)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*24*
Helvetica 24 SetF
%I t
[ 1 0 0 1 170.5 521.5 ] concat
%I
[
(SHARED)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*24*
Helvetica 24 SetF
%I t
[ 1 0 0 1 572 521.5 ] concat
%I
[
(DIRTY)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*24*
Helvetica 24 SetF
%I t
[ 1 0 0 1 360.5 709.5 ] concat
%I
[
(INVALID)
] Text
End

Begin %I BSpl
%I b 65520
3 0 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.10655 -0 -0 1.10655 -2.2131 255.613 ] concat
%I 3
622 243
644 397
465 401
3 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.10655 -0 -0 1.10655 -2.2131 255.613 ] concat
%I 3
594 210
552 151
519 210
3 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 520.15 485 ] concat
%I
[
(Read)
(or Write)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -7.74348 46.4608 ] concat

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.10655 -0 -0 1.10655 -2.2131 255.613 ] concat
%I
90 450 139 450 Line
%I 1
End

Begin %I Line
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.10655 -0 -0 1.10655 -2.2131 255.613 ] concat
%I
90 417 139 417 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 166 760.56 ] concat
%I
[
(Internal)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 166 724.044 ] concat
%I
[
(External)
] Text
End

End %I eop

Begin %I BSpl
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.10655 -0 -0 1.10655 -403.511 256.976 ] concat
%I 3
594 210
552 151
519 210
3 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 136.788 471.301 ] concat
%I
[
(Read)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 550 642 ] concat
%I
[
(Replacement)
] Text
End

Begin %I BSpl
%I b 65520
3 0 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ -1.10655 -0 0 1.10655 826.922 255.869 ] concat
%I 3
622 243
644 397
465 401
3 BSpl
%I 1
End

Begin %I Line
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ -1 0 -0 1 1025.46 248.938 ] concat
%I
671 412 793 290 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 317.952 614.601 ] concat
%I
[
(Replacement)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 394.5 540.335 ] concat
%I
[
(Read)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 233.618 721.623 ] concat
%I
[
(Write)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 544.512 721.623 ] concat
%I
[
(Write)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 517 1357 a Fi(Figure)18 b(2.1)48 b Fp(Cac)o(he)16 b(coherence)f(proto)
q(col)i(diagram)131 1739 y
 23681433 11367059 2697052 21181726 37758730 37758730 startTexFig
 131 1739 a
%%BeginDocument: rsimdiag.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 402.126 258.416 ] concat
%I
545 450 545 523 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -75.5508 286.793 ] concat
%I
294 775 402 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -71.8503 287.793 ] concat
%I
426 775 474 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -66.5389 275.293 ] concat
%I
294 691 474 739 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -70.5389 305.623 ] concat
%I
294 846 474 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -74.0329 261.904 ] concat
%I
402 523 569 571 Rect
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -70.1916 259.416 ] concat
%I
426 523 426 476 Line
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -80.8742 257.416 ] concat
%I
545 461 545 523 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -75.8383 268.251 ] concat
%I
486 571 486 607 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -69.8503 289.97 ] concat
%I
450 763 450 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -73.8862 288.97 ] concat
%I
342 763 342 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -68.2036 278.94 ] concat
%I
390 679 390 631 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -70.8503 300.276 ] concat
%I
450 846 450 810 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -73.8862 300.276 ] concat
%I
342 846 342 810 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -70.8562 298.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 142.596 841.081 ] concat
%I
[
(Processor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 115.401 780.081 ] concat
%I
[
(L1 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 193.838 779.081 ] concat
%I
[
(WB)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 143.401 716.081 ] concat
%I
[
(L2 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 179.024 601.081 ] concat
%I
[
(Network Interface)
] Text
End

Begin %I Rect
%I b 4369
1 0 0 [1 3 1 3 1 3 1 3] 14 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -71.3443 299.665 ] concat
%I
272 746 497 912 Rect
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -172.5 198.5 ] concat
%I
578 527 6 6 Elli
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -136.5 198.5 ] concat
%I
578 527 6 6 Elli
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -100.5 198.5 ] concat
%I
578 527 6 6 Elli
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 105.659 855.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 101.659 851.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 96.6589 847.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 92.6589 843.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -75.8562 294.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -81.8562 289.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -87.8562 284.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -76.1916 286.97 ] concat
%I
593 727 593 763 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -77.1915 273.94 ] concat
%I
593 679 593 631 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 257.039 797.081 ] concat
%I
[
(Memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 249.791 715.081 ] concat
%I
[
(Directory)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 407.449 287.793 ] concat
%I
294 775 402 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 411.149 288.793 ] concat
%I
426 775 474 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 416.461 276.293 ] concat
%I
294 691 474 739 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 412.461 306.623 ] concat
%I
294 846 474 894 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.610778 0 0 0.610778 -76.8383 271.928 ] concat
%I
259 607 713 631 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.610778 0 0 0.610778 406.161 272.928 ] concat
%I
259 607 713 631 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 408.967 262.904 ] concat
%I
402 523 569 571 Rect
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 412.808 260.416 ] concat
%I
426 523 426 476 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 407.161 269.251 ] concat
%I
486 571 486 607 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 413.149 290.97 ] concat
%I
450 763 450 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 409.114 289.97 ] concat
%I
342 763 342 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 414.796 279.94 ] concat
%I
390 679 390 631 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 412.149 301.276 ] concat
%I
450 846 450 810 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 409.114 301.276 ] concat
%I
342 846 342 810 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 412.144 299.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 625.596 842.081 ] concat
%I
[
(Processor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 598.401 781.081 ] concat
%I
[
(L1 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 676.838 780.081 ] concat
%I
[
(WB)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 626.401 717.081 ] concat
%I
[
(L2 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 662.024 602.081 ] concat
%I
[
(Network Interface)
] Text
End

Begin %I Rect
%I b 4369
1 0 0 [1 3 1 3 1 3 1 3] 14 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 411.655 300.665 ] concat
%I
272 746 497 912 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 588.658 856.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 584.658 852.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 579.659 848.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 575.659 844.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 407.144 295.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 401.144 290.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 395.144 285.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 406.808 287.97 ] concat
%I
593 727 593 763 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 405.808 274.94 ] concat
%I
593 679 593 631 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 740.039 798.081 ] concat
%I
[
(Memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 732.791 716.081 ] concat
%I
[
(Directory)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -5.30022 2.40002 ] concat

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.9375 SetP
%I t
[ 4.8 0 0 4.8 -1004.4 -849.3 ] concat
%I
224 278 389 290 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-bold-o*18*
/Helvetica-BoldOblique 18 SetF
%I t
[ 1 0 0 1 430.8 520.4 ] concat
%I
[
(Network)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 547 2547 a Fi(Figure)h(2.2)49 b Fp(Multipro)q(cessor)16
b(system)f(mo)q(deled)p eop
%%Page: 8 15
8 14 bop 1907 72 a Fp(8)p 366 486 1331 2 v 365 546 2
61 v 857 528 a Fi(ILP)19 b(Pro)r(cessor)p 1696 546 V
366 548 1331 2 v 365 608 2 61 v 391 590 a Fp(Pro)q(cessor)e(sp)q(eed)p
1147 608 V 445 w(300MHz)p 1696 608 V 365 668 V 391 650
a(Maxim)o(um)c(fetc)o(h/retire)h(rate)p 1147 668 V 209
w(4)p 1696 668 V 365 728 V 391 710 a(\(instructions)i(p)q(er)g(cycle\))
p 1147 728 V 1696 728 V 365 788 V 391 770 a(Instruction)g(issue)g
(windo)o(w)p 1147 788 V 253 w(64)h(en)o(tries)p 1696
788 V 365 849 V 391 830 a(F)l(unctional)f(units)p 1147
849 V 434 w(2)g(in)o(teger)f(arithmetic)p 1696 849 V
365 909 V 1147 909 V 1173 891 a(2)h(\015oating)h(p)q(oin)o(t)p
1696 909 V 365 969 V 1147 969 V 1173 951 a(2)f(address)h(generation)p
1696 969 V 365 1029 V 391 1011 a(Branc)o(h)f(sp)q(eculation)g(depth)p
1147 1029 V 235 w(8)p 1696 1029 V 365 1089 V 391 1071
a(Memory)e(unit)i(size)p 1147 1089 V 410 w(32)h(en)o(tries)p
1696 1089 V 365 1149 V 391 1131 a(\(maxim)n(um)12 b(n)o(um)o(b)q(er)j
(of)h(outstanding)p 1147 1149 V 1696 1149 V 365 1210
V 391 1192 a(loads)h(and)g(unissued)f(stores\))p 1147
1210 V 1696 1210 V 366 1211 1331 2 v 365 1272 2 61 v
781 1253 a Fi(Net)n(w)n(ork)j(parameters)p 1696 1272
V 366 1273 1331 2 v 365 1333 2 61 v 391 1315 a Fp(Net)o(w)o(ork)c(sp)q
(eed)p 1147 1333 V 469 w(150MHz)p 1696 1333 V 365 1394
V 391 1376 a(Net)o(w)o(ork)g(width)p 1147 1394 V 465
w(64)i(bits)p 1696 1394 V 365 1454 V 391 1436 a(Flit)e(dela)o(y)g(\(p)q
(er)i(hop\))p 1147 1454 V 359 w(2)f(net)o(w)o(ork)g(cycles)p
1696 1454 V 366 1455 1331 2 v 365 1516 2 61 v 811 1498
a Fi(Cac)n(he)k(parameters)p 1696 1516 V 366 1517 1331
2 v 365 1577 2 61 v 391 1559 a Fp(Cac)o(he)c(line)f(size)p
1147 1577 V 468 w(64)i(b)o(ytes)p 1696 1577 V 365 1638
V 391 1620 a(L1)g(cac)o(he)e(\(on-c)o(hip\))p 1147 1638
V 386 w(Direct)g(mapp)q(ed,)g(16)i(K)p 1696 1638 V 365
1698 V 391 1680 a(L1)g(request)f(p)q(orts)p 1147 1698
V 432 w(2)p 1696 1698 V 365 1758 V 391 1740 a(L1)h(hit)f(time)p
1147 1758 V 538 w(1)g(cycle)p 1696 1758 V 365 1818 V
391 1800 a(Num)o(b)q(er)e(of)j(L1)g(MSHRs)p 1147 1818
V 303 w(8)p 1696 1818 V 365 1878 V 391 1860 a(L2)g(cac)o(he)e
(\(o\013-c)o(hip\))p 1147 1878 V 385 w(4-w)o(a)o(y)h(asso)q(ciativ)o
(e,)g(64)h(K)p 1696 1878 V 365 1939 V 391 1921 a(L2)g(request)f(p)q
(orts)p 1147 1939 V 432 w(1)p 1696 1939 V 365 1999 V
391 1981 a(L2)h(hit)f(time)p 1147 1999 V 538 w(8)g(cycles,)f(pip)q
(elined)p 1696 1999 V 365 2059 V 391 2041 a(Num)o(b)q(er)f(of)j(L2)g
(MSHRs)p 1147 2059 V 303 w(8)p 1696 2059 V 365 2119 V
391 2101 a(W)l(rite)e(bu\013er)i(en)o(tries)p 1147 2119
V 366 w(8)f(cac)o(he)g(lines)p 1696 2119 V 366 2121 1331
2 v 365 2181 2 61 v 782 2163 a Fi(Memory)h(parameters)p
1696 2181 V 366 2183 1331 2 v 365 2243 2 61 v 391 2225
a Fp(Memory)d(access)i(time)p 1147 2243 V 349 w(18)h(cycles)d(\(60)j
(ns\))p 1696 2243 V 365 2303 V 391 2285 a(Memory)d(transfer)j
(bandwidth)p 1147 2303 V 182 w(16)g(b)o(ytes/cycle)p
1696 2303 V 365 2363 V 391 2345 a(Memory)d(In)o(terlea)o(ving)p
1147 2363 V 336 w(4-w)o(a)o(y)p 1696 2363 V 366 2365
1331 2 v 680 2444 a Fi(Figure)k(2.3)48 b Fp(System)15
b(parameters)p eop
%%Page: 9 16
9 15 bop 1907 72 a Fp(9)131 222 y(to)22 b(ha)o(v)o(e)f(su\016cien)o(t)g
(ph)o(ysical)f(registers)i(a)o(v)m(ailable)f(so)h(as)h(nev)o(er)d(to)i
(stall)g(for)g(a)g(shortage)h(of)131 312 y(renaming)d(registers.)36
b(The)22 b Fo(Simple)d Fp(pro)q(cessor)j(uses)g(single-issue,)f(static)
g(sc)o(heduling,)h(and)131 403 y(blo)q(c)o(king)16 b(reads,)g(and)h
(has)g(the)f(same)f(clo)q(c)o(k)g(sp)q(eed)i(as)g(the)f
Fo(ILP)f Fp(pro)q(cessor.)204 495 y(Most)k(recen)o(t)f
(direct-execution)f(sim)o(ulation)g(studies)h(assume)h(single-cycle)d
(latencies)i(for)131 585 y(all)c(pro)q(cessor)i(functional)e(units.)20
b(W)l(e)14 b(c)o(ho)q(ose)h(to)g(con)o(tin)o(ue)e(with)i(this)f(appro)o
(ximation)f(for)i(our)131 676 y Fo(Simple)j Fp(mo)q(del)g(to)i
(represen)o(t)f(curren)o(tly)f(used)i(sim)o(ulation)e(mo)q(dels.)31
b(T)l(o)20 b(minim)o(ize)c(sources)131 766 y(of)g(di\013erence)f(b)q
(et)o(w)o(een)g(the)h Fo(Simple)d Fp(and)k Fo(ILP)d Fp(mo)q(dels,)h(w)o
(e)g(also)i(use)f(single-cycle)e(functional)131 856 y(unit)24
b(latencies)f(for)h Fo(ILP)f Fp(pro)q(cessors.)45 b(Nev)o(ertheless,)23
b(to)i(in)o(v)o(estigate)d(the)i(impact)e(of)i(this)131
946 y(appro)o(ximation,)15 b(w)o(e)h(sim)o(ulated)f(all)h(our)h
(applications)g(on)g(an)g(8-pro)q(cessor)h Fo(ILP)d Fp(system)g(with)
131 1037 y(functional)20 b(unit)g(latencies)e(similar)g(to)j(the)e
(UltraSP)l(AR)o(C)g(pro)q(cessor.)34 b(W)l(e)20 b(found)g(that)h(the)
131 1127 y(appro)o(ximation)13 b(has)h(negligible)e(e\013ect)h(on)h
(all)f(but)g(one)h(of)g(our)g(applications)f(\(W)l(ater\);)h(ev)o(en)f
(in)131 1217 y(that)19 b(application,)f(our)g(o)o(v)o(erall)f(results)h
(con)o(tin)o(ue)f(to)i(hold.)27 b(This)18 b(appro)o(ximation)f(has)i
(little)131 1308 y(impact)14 b(b)q(ecause,)h(in)f(m)o(ultipro)q
(cessors,)g(memory)e(time)h(dominates,)g(and)j Fo(ILP)e
Fp(pro)q(cessors)i(can)131 1398 y(easily)g(o)o(v)o(erlap)f(functional)h
(unit)g(latency)l(.)204 1490 y(F)l(or)j(the)f(exp)q(erimen)o(ts)e
(related)i(to)h(the)f(v)m(alidit)o(y)f(of)h(sim)o(ulators)g(based)h(on)
f(a)h(simple)e(pro-)131 1581 y(cessor)h(mo)q(del,)f(w)o(e)g(also)i(in)o
(v)o(estigate)d(v)m(arian)o(ts)j(of)f(the)f Fo(Simple)f
Fp(mo)q(del)h(that)h(re\015ect)f(appro)o(xi-)131 1671
y(mations)h(for)h(ILP-based)g(m)o(ultipro)q(cessors)f(made)f(in)h
(recen)o(t)g(literature.)27 b(These)18 b(are)h(further)131
1761 y(describ)q(ed)d(in)g(Chapter)h(4.)204 1853 y Fi(Memory)k(Hierarc)
n(h)n(y)-5 b(.)31 b Fp(The)20 b Fo(ILP)e Fp(and)j Fo(Simple)c
Fp(systems)h(ha)o(v)o(e)h(an)h(iden)o(tical)e(memory)131
1944 y(hierarc)o(h)o(y)13 b(with)h(iden)o(tical)f(parameters.)19
b(Eac)o(h)14 b(system)f(no)q(de)i(includes)e(a)i(pro)q(cessor)g(with)f
(t)o(w)o(o)131 2034 y(lev)o(els)f(of)i(cac)o(hing,)f(a)h(merging)f
(write)g(bu\013er)h([ERB)1105 2016 y Fk(+)1134 2034 y
Fp(95])g(b)q(et)o(w)o(een)f(the)g(cac)o(hes,)g(and)h(a)g(p)q(ortion)131
2124 y(of)f(the)f(distributed)g(memory)e(and)j(directory)l(.)19
b(A)13 b(split-transaction)h(system)e(bus)i(connects)g(the)131
2215 y(memory)l(,)f(the)j(net)o(w)o(ork)g(in)o(terface,)e(and)j(the)f
(rest)g(of)h(the)f(system)e(no)q(de.)204 2307 y(The)24
b(L1)g(cac)o(he)f(has)h(2)g(request)f(p)q(orts,)j(allo)o(wing)d(it)g
(to)h(serv)o(e)f(up)g(to)h(2)g(data)h(requests)131 2397
y(p)q(er)19 b(cycle,)d(and)j(is)f(write-through)h(with)f(a)h
(no-write-allo)q(cate)f(p)q(olicy)l(.)27 b(The)18 b(L2)h(cac)o(he)f
(has)h(1)131 2488 y(request)i(p)q(ort)h(and)g(is)f(a)g(fully-pip)q
(elined)e(write-bac)o(k)i(cac)o(he)f(with)h(a)h(write-allo)q(cate)e(p)q
(olicy)l(.)131 2578 y(Eac)o(h)d(cac)o(he)e(also)i(has)g(an)g
(additional)f(p)q(ort)i(for)e(incoming)f(coherence)g(messages)h(and)h
(replies.)131 2668 y(Both)j(the)g(L1)g(and)h(L2)f(cac)o(hes)g(ha)o(v)o
(e)f(8)h(miss)e(status)j(holding)f(registers)f(\(MSHRs\))h([Kro81],)p
eop
%%Page: 10 17
10 16 bop 1882 72 a Fp(10)131 222 y(whic)o(h)13 b(reserv)o(e)f(space)i
(for)g(outstanding)g(cac)o(he)f(misses)f(\(the)i(L1)g(cac)o(he)f(allo)q
(cates)g(MSHRs)g(only)131 312 y(for)21 b(read)g(misses)e(as)i(it)g(is)f
(no-write-allo)q(cate\).)35 b(The)20 b(MSHRs)g(supp)q(ort)i(coalescing)
f(so)g(that)131 403 y(m)o(ultiple)16 b(misses)i(to)i(the)f(same)f(line)
g(do)i(not)g(initiate)e(m)o(ultiple)e(requests)j(to)g(lo)o(w)o(er)g
(lev)o(els)e(of)131 493 y(the)h(memory)d(hierarc)o(h)o(y)l(.)26
b(W)l(e)18 b(do)h(not)f(include)f(suc)o(h)h(coalesced)g(requests)g
(when)g(calculating)131 583 y(miss)d(coun)o(ts)i(for)f(our)h(analysis.)
204 676 y(W)l(e)23 b(c)o(ho)q(ose)h(cac)o(he)e(sizes)g(commensurate)f
(with)i(the)g(input)f(sizes)h(of)g(our)h(applications,)131
766 y(based)17 b(on)g(the)f(metho)q(dology)g(of)h(W)l(o)q(o)h(et)e(al.)
f([W)o(OT)1138 748 y Fk(+)1167 766 y Fp(95)q(].)21 b(Primary)15
b(w)o(orking)i(sets)f(of)h(all)f(our)131 856 y(applications)h(\014t)g
(in)g(the)g(L1)h(cac)o(he,)e(and)h(secondary)h(w)o(orking)f(sets)g(of)g
(most)g(applications)g(do)131 946 y(not)g(\014t)f(in)g(the)g(L2)h(cac)o
(he.)131 1130 y Fs(2.3)66 b(Sim)n(ulation)26 b(En)n(vironmen)n(t)131
1255 y Fp(W)l(e)17 b(use)f(the)g(Rice)g(Sim)o(ulator)f(for)h(ILP)h
(Multipro)q(cessors)g(\(RSIM\))f(to)h(sim)o(ulate)d(the)i
Fo(ILP)g Fp(and)131 1345 y Fo(Simple)10 b Fp(arc)o(hitectures)g
(describ)q(ed)i(in)f(Section)g(2.2)h([PRA97a)q(].)19
b(RSIM)11 b(mo)q(dels)g(the)g(pro)q(cessors,)131 1435
y(memory)18 b(system,)h(and)i(net)o(w)o(ork)f(in)g(detail,)g(including)
f(con)o(ten)o(tion)h(at)g(all)g(resources.)34 b(It)19
b(is)131 1526 y(driv)o(en)f(b)o(y)h(application)h(executables)e(rather)
h(than)i(traces,)e(allo)o(wing)g(in)o(teractions)g(b)q(et)o(w)o(een)131
1616 y(the)d(pro)q(cessors)i(to)e(a\013ect)h(the)f(course)g(of)h(the)f
(sim)o(ulation.)j(The)d(co)q(de)h(for)f(the)g(pro)q(cessor)i(and)131
1706 y(cac)o(he)23 b(subsystem)f(p)q(erforms)h(cycle-b)o(y-cycle)d(sim)
o(ulation)h(and)j(in)o(terfaces)e(with)i(an)g(ev)o(en)o(t-)131
1797 y(driv)o(en)15 b(sim)o(ulator)f(for)h(the)h(net)o(w)o(ork)f(and)h
(memory)c(system.)20 b(The)c(latter)f(is)g(deriv)o(ed)f(from)h(the)131
1887 y(Rice)g(P)o(arallel)g(Pro)q(cessing)i(T)l(estb)q(ed)g(\(RPPT\))g
([CDJ)1147 1869 y Fk(+)1176 1887 y Fp(91)q(,)f(Ra)s(j95)q(].)204
1979 y(Since)c(w)o(e)g(sim)o(ulate)e(the)i(pro)q(cessor)i(in)e(detail,)
g(our)h(sim)o(ulation)d(times)h(are)i(\014v)o(e)e(to)i(ten)f(times)131
2069 y(higher)19 b(than)h(those)g(for)g(an)g(otherwise)f(equiv)m(alen)o
(t)f(direct-execution)f(sim)o(ulator.)29 b(T)l(o)20 b(sp)q(eed)131
2160 y(up)g(sim)o(ulation,)f(w)o(e)h(assume)f(that)h(all)g
(instructions)f(hit)h(in)g(the)f(instruction)h(cac)o(he)f(\(with)h(a)
131 2250 y(1)k(cycle)e(hit)h(time\))f(and)i(that)g(all)f(accesses)g(to)
h(priv)m(ate)g(data)g(hit)f(in)g(the)h(L1)g(data)h(cac)o(he.)131
2340 y(These)d(assumptions)g(ha)o(v)o(e)g(also)h(b)q(een)f(made)f(b)o
(y)g(man)o(y)g(previous)h(m)o(ultipro)q(cessor)e(studies)131
2431 y(using)d(direct-execution,)d(and)j(are)g(not)g(lik)o(ely)d(to)j
(signi\014can)o(tly)e(a\013ect)i(our)g(results,)f(since)g(our)131
2521 y(applications)j(do)f(not)h(ha)o(v)o(e)f(m)o(uc)o(h)e(priv)m(ate)i
(data.)28 b(W)l(e)18 b(do,)h(ho)o(w)o(ev)o(er,)e(mo)q(del)g(con)o(ten)o
(tion)h(for)131 2611 y(pro)q(cessor)g(resources)e(and)h(L1)g(cac)o(he)e
(p)q(orts)i(due)f(to)h(priv)m(ate)f(data)h(accesses.)p
eop
%%Page: 11 18
11 17 bop 1882 72 a Fp(11)204 222 y(The)15 b(applications)g(are)g
(compiled)d(with)i(a)i(v)o(ersion)e(of)h(the)f Fh(SP)l(AR)o(C)g(V9)h
Fp(gcc)f(compiler)f(mo)q(d-)131 312 y(i\014ed)18 b(to)h(eliminate)d
(branc)o(h)j(dela)o(y)f(slots)h(and)g(restricted)f(to)h(32)g(bit)f(co)q
(de,)i(with)e(the)h(options)131 403 y Fo(-O2)25 b(-funrolll)o(oop)o
Fp(.)131 587 y Fs(2.4)66 b(Applications)131 711 y Fp(W)l(e)20
b(use)f(six)g(applications)h(for)g(this)f(study)h({)g(LU,)f(FFT,)g(and)
h(Radix)g(from)e(the)i(SPLASH-2)131 801 y(suite)14 b([W)o(OT)382
783 y Fk(+)411 801 y Fp(95)q(],)g(Mp3d)h(and)g(W)l(ater)f(from)f(the)i
(SPLASH)f(suite)g([SW)o(G92],)g(and)h(Erlebac)o(her)131
892 y(from)i(the)g(Rice)f(parallel)g(compiler)f(group)k([A)-5
b(WMC)1132 874 y Fk(+)1160 892 y Fp(95)q(].)24 b(W)l(e)17
b(mo)q(di\014ed)f(LU)h(sligh)o(tly)g(to)g(use)131 982
y(\015ags)i(instead)g(of)f(barriers)g(for)g(b)q(etter)g(load)h
(balance.)26 b(Figure)18 b(2.4)g(giv)o(es)g(input)g(sizes)f(for)i(the)
131 1072 y(applications)d(and)h(their)f(execution)f(times)f(on)j(a)g
Fo(Simple)d Fp(unipro)q(cessor.)204 1165 y(W)l(e)21 b(also)g(study)g(v)
o(ersions)f(of)h(LU)g(and)g(FFT)g(that)g(include)e(ILP-sp)q(eci\014c)i
(optimizations)131 1255 y(that)h(can)f(b)q(e)g(impleme)o(n)o(ted)d(in)j
(a)g(compiler.)34 b(Sp)q(eci\014cally)l(,)20 b(w)o(e)h(use)g(function)g
(inlining)f(and)131 1345 y(lo)q(op)j(in)o(terc)o(hange)d(to)i(sc)o
(hedule)e(read)i(misses)e(closer)h(to)h(eac)o(h)f(other)g(so)h(that)g
(they)f(can)h(b)q(e)131 1435 y(o)o(v)o(erlapp)q(ed)15
b(in)h(the)f Fo(ILP)g Fp(pro)q(cessor.)22 b(W)l(e)16
b(refer)f(to)h(these)f(optimized)f(applications)i(as)g(LU)p
1846 1435 15 2 v 18 w(opt)131 1526 y(and)h(FFT)p 328
1526 V 18 w(opt.)p eop
%%Page: 12 19
12 18 bop 1882 72 a Fp(12)p 355 1168 1354 2 v 354 1228
2 61 v 380 1210 a Fi(Application)p 688 1228 V 688 1228
V 274 w(Input)19 b(Size)p 1441 1228 V 1441 1228 V 304
w(Cycles)p 1707 1228 V 355 1230 1354 2 v 354 1290 2 61
v 380 1272 a Fp(LU)p 688 1290 V 267 w(256)e(b)o(y)f(256)h(matrix,)d
(blo)q(c)o(k)i(8)p 1441 1290 V 182 w(1)p Fm(:)p Fp(03)c
Fg(\002)e Fp(10)1662 1254 y Fk(8)p 1707 1290 V 354 1350
V 380 1332 a Fp(FFT)p 688 1350 V 235 w(65536)18 b(p)q(oin)o(ts)p
1441 1350 V 485 w(3)p Fm(:)p Fp(67)12 b Fg(\002)e Fp(10)1662
1314 y Fk(7)p 1707 1350 V 354 1410 V 380 1392 a Fp(Radix)p
688 1410 V 207 w(1K)16 b(radix,)g(512K)h(k)o(eys,)e(max:)20
b(512K)p 1441 1410 V 51 w(3)p Fm(:)p Fp(15)12 b Fg(\002)e
Fp(10)1662 1374 y Fk(7)p 1707 1410 V 354 1471 V 380 1453
a Fp(Mp3d)p 688 1471 V 211 w(50000)18 b(particles)p 1441
1471 V 435 w(8)p Fm(:)p Fp(82)12 b Fg(\002)e Fp(10)1662
1434 y Fk(6)p 1707 1471 V 354 1531 V 380 1513 a Fp(W)l(ater)p
688 1531 V 204 w(512)17 b(molecules)p 1441 1531 V 458
w(2)p Fm(:)p Fp(68)12 b Fg(\002)e Fp(10)1662 1495 y Fk(8)p
1707 1531 V 354 1591 V 380 1573 a Fp(Erlebac)o(her)p
688 1591 V 106 w(64)17 b(b)o(y)e(64)j(b)o(y)d(64)i(cub)q(e,)f(blo)q(c)o
(k)g(8)p 1441 1591 V 141 w(7)p Fm(:)p Fp(62)c Fg(\002)e
Fp(10)1662 1555 y Fk(7)p 1707 1591 V 355 1593 1354 2
v 599 1705 a Fi(Figure)18 b(2.4)49 b Fp(Application)15
b(c)o(haracteristics)p eop
%%Page: 13 20
13 19 bop 1882 72 a Fp(13)853 361 y Ft(Chapter)28 b(3)212
564 y(Impact)f(of)g(ILP)h(on)f(Multipro)r(cessor)e(P)n(erformance)131
751 y Fp(This)19 b(c)o(hapter)f(ev)m(aluates)g(the)g(impact)f(of)i
(instruction-lev)o(el)d(parallelism)g(on)j(m)o(ultipro)q(cessor)131
841 y(p)q(erformance.)27 b(Section)18 b(3.1)h(fo)q(cuses)g(on)f(eigh)o
(t-pro)q(cessor)i(systems,)d(comparing)g(the)i(p)q(erfor-)131
931 y(mance)c(of)h Fo(Simple)e Fp(and)i Fo(ILP)f Fp(systems)g(as)h
(describ)q(ed)g(in)f(Section)h(2.2.)21 b(Section)15 b(3.2)i(sho)o(ws)g
(the)131 1022 y(impact)h(of)h(ILP)h(on)g(parallel)e(e\016ciency)l(,)g
(whic)o(h)g(indicates)h(system)f(scalabilit)o(y)l(.)28
b(Section)19 b(3.3)131 1112 y(iden)o(ti\014es)24 b(sev)o(eral)g
(limitations)f(in)h(the)h(p)q(erformance)f(impro)o(v)o(em)o(en)n(ts)f
(giv)o(en)h(b)o(y)g(ILP)i(and)131 1202 y(ev)m(aluates)c(the)f(exten)o
(t)g(to)h(whic)o(h)f(these)g(limitations)f(are)h(artifacts)h(of)g
(curren)o(t)f(tec)o(hnologi-)131 1293 y(cal)15 b(constrain)o(ts.)22
b(Finally)l(,)14 b(Section)h(3.4)h(summarize)o(s)d(the)j(k)o(ey)e
(\014ndings)i(of)g(these)f(studies)h(and)131 1383 y(describ)q(es)21
b(additional)g(issues)g(in)g(the)g(impact)e(of)j(ILP)f(on)h
(shared-memory)d(m)o(ultipro)q(cessor)131 1473 y(p)q(erformance.)131
1653 y Fs(3.1)66 b(Impact)23 b(of)f(ILP)g(on)h(an)f(Eigh)n(t-pro)r
(cessor)h(System)131 1777 y Fp(This)g(section)f(describ)q(es)g(the)g
(impact)f(of)i(ILP)g(on)g(m)o(ultipro)q(cessors)e(b)o(y)h(comparing)f
(the)i(8-)131 1867 y(pro)q(cessor)18 b Fo(Simple)c Fp(and)i
Fo(ILP)g Fp(systems)f(describ)q(ed)g(in)h(Section)g(2.2.)131
2025 y Fi(3.1.1)55 b(Ov)n(erall)18 b(Results)131 2149
y Fp(Figures)e(3.1)h(and)g(3.2)e(illustrate)e(our)i(k)o(ey)f(o)o(v)o
(erall)f(results.)21 b(F)l(or)14 b(eac)o(h)g(application,)h(Figure)f
(3.1)131 2239 y(sho)o(ws)j(the)f(total)h(ILP)f(sp)q(eedup)h(as)g(w)o
(ell)e(as)i(the)f(ILP)g(sp)q(eedup)h(of)g(the)f(di\013eren)o(t)f(comp)q
(onen)o(ts)131 2329 y(of)21 b(execution)e(time.)31 b(The)21
b(execution)e(time)f(comp)q(onen)o(ts)i(include)f(CPU)h(time,)f(data)i
(mem-)131 2419 y(ory)g(stalls,)h(and)g(sync)o(hronization)e(stalls.)36
b(W)l(e)20 b(com)o(bine)f(b)q(oth)j(busy)f(time)e(and)j(functional)131
2510 y(unit)15 b(\(FU\))g(stalls)g(together)h(in)o(to)f(CPU)g(time)f
(when)h(computing)g(ILP)g(sp)q(eedups,)h(b)q(ecause)g(the)131
2600 y(Simple)e(pro)q(cessor)j(do)q(es)f(not)g(see)g(an)o(y)g(FU)f
(stalls.)21 b(Figure)15 b(3.2)h(indicates)f(the)h(relativ)o(e)e(imp)q
(or-)131 2690 y(tance)i(of)g(the)g(ILP)g(sp)q(eedups)g(of)g(the)g
(di\013eren)o(t)f(comp)q(onen)o(ts)g(b)o(y)g(sho)o(wing)i(the)e(time)f
(sp)q(en)o(t)i(on)p eop
%%Page: 14 21
14 20 bop 1882 72 a Fp(14)131 351 y
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 351 a
%%BeginDocument: Figures/SPLOT_FILES/ilpsu/ILPSU5_AllAppsP8_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 191.829 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 259.714 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 152.229 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144.973 72 S9
[] 16.800000 SL
144.973 163.543 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144.973 72 S9
144.973 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 222.171 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 258.171 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 206.229 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 174.343 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 184.629 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 244.286 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 149.657 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
359.027 72 S9
[] 16.800000 SL
359.027 135.257 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
359.027 72 S9
359.027 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 141.429 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 262.286 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 135.771 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 117.257 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.514 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.543 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.057 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 219.086 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.6 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 118.629 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 170.057 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 221.486 TXR
12 /Helvetica SetTxt
(|) -90 72 277.714 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 272.914 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(2.33) 0 86.5946 193.886 TXC
(3.65) 0 106.054 261.771 TXC
(1.56) 0 125.514 154.286 TXC
(1.78) 0 144.973 165.6 TXC
14 /Helvetica SetTxt
(LU) 0 115.784 50.4 TXC
12 /Helvetica-Bold SetTxt
(2.92) 0 193.622 224.229 TXC
(3.62) 0 213.081 260.229 TXC
(2.61) 0 232.541 208.286 TXC
(1.99) 0 252 176.4 TXC
14 /Helvetica SetTxt
(LU_opt) 0 222.811 50.4 TXC
12 /Helvetica-Bold SetTxt
(2.19) 0 300.649 186.686 TXC
(3.35) 0 320.108 246.343 TXC
(1.51) 0 339.568 151.714 TXC
(1.23) 0 359.027 137.314 TXC
14 /Helvetica SetTxt
(Erlebacher) 0 329.838 50.4 TXC
12 /Helvetica-Bold SetTxt
(1.35) 0 407.676 143.486 TXC
(3.70) 0 427.135 264.343 TXC
(1.24) 0 446.595 137.829 TXC
(0.88) 0 466.054 119.314 TXC
14 /Helvetica SetTxt
(Mp3d) 0 436.865 50.4 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.6 TXR
(CPU ILP Speedup) 0 592.541 238.114 TXR
(Data Mem ILP Speedup) 0 592.541 221.143 TXR
(Synch ILP Speedup) 0 592.541 203.657 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 181.286 TXC
() 0 106.054 249.171 TXC
() 0 125.514 141.686 TXC
() 0 144.973 153 TXC
14 /Helvetica SetTxt
() 0 115.784 35.7 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 211.629 TXC
() 0 213.081 247.629 TXC
() 0 232.541 195.686 TXC
() 0 252 163.8 TXC
14 /Helvetica SetTxt
() 0 222.811 35.7 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 174.086 TXC
() 0 320.108 233.743 TXC
() 0 339.568 139.114 TXC
() 0 359.027 124.714 TXC
14 /Helvetica SetTxt
() 0 329.838 35.7 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 130.886 TXC
() 0 427.135 251.743 TXC
() 0 446.595 125.229 TXC
() 0 466.054 106.714 TXC
14 /Helvetica SetTxt
() 0 436.865 35.7 TXC
13 /Helvetica SetTxt
() 0 592.541 241.95 TXR
() 0 592.541 224.464 TXR
() 0 592.541 207.493 TXR
() 0 592.541 190.007 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 776 a
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 776 a
%%BeginDocument: Figures/SPLOT_FILES/ilpsu/ILPSU5_AllAppsP8_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 183.554 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 246.987 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 127.777 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144.973 72 S9
[] 16.800000 SL
144.973 140.354 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144.973 72 S9
144.973 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 209.256 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 244.253 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 161.681 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 158.947 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 192.851 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 260.658 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 127.777 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
359.027 72 S9
[] 16.800000 SL
359.027 168.79 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
359.027 72 S9
359.027 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 140.901 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 257.924 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 112.466 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 181.914 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.501 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.549 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.051 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 219.099 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.6 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 126.684 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 121.884 TXR
12 /Helvetica SetTxt
(|) -90 72 181.367 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 176.567 TXR
12 /Helvetica SetTxt
(|) -90 72 236.051 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 231.251 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(2.04) 0 86.5946 185.742 TXC
(3.20) 0 106.054 249.175 TXC
(1.02) 0 125.514 129.965 TXC
(1.25) 0 144.973 142.542 TXC
14 /Helvetica SetTxt
(FFT) 0 115.784 50.1266 TXC
12 /Helvetica-Bold SetTxt
(2.51) 0 193.622 211.443 TXC
(3.15) 0 213.081 246.441 TXC
(1.64) 0 232.541 163.868 TXC
(1.59) 0 252 161.134 TXC
14 /Helvetica SetTxt
(FFT_opt) 0 222.811 50.1266 TXC
12 /Helvetica-Bold SetTxt
(2.21) 0 300.649 195.038 TXC
(3.45) 0 320.108 262.846 TXC
(1.02) 0 339.568 129.965 TXC
(1.77) 0 359.027 170.977 TXC
14 /Helvetica SetTxt
(Water) 0 329.838 50.1266 TXC
12 /Helvetica-Bold SetTxt
(1.26) 0 407.676 143.089 TXC
(3.40) 0 427.135 260.111 TXC
(0.74) 0 446.595 114.653 TXC
(2.01) 0 466.054 184.101 TXC
14 /Helvetica SetTxt
(Radix) 0 436.865 50.1266 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.737 TXR
(CPU ILP Speedup) 0 592.541 238.238 TXR
(Data Mem ILP Speedup) 0 592.541 221.286 TXR
(Synch ILP Speedup) 0 592.541 203.787 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 173.142 TXC
() 0 106.054 236.575 TXC
() 0 125.514 117.365 TXC
() 0 144.973 129.942 TXC
14 /Helvetica SetTxt
() 0 115.784 35.4266 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 198.843 TXC
() 0 213.081 233.841 TXC
() 0 232.541 151.268 TXC
() 0 252 148.534 TXC
14 /Helvetica SetTxt
() 0 222.811 35.4266 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 182.438 TXC
() 0 320.108 250.246 TXC
() 0 339.568 117.365 TXC
() 0 359.027 158.377 TXC
14 /Helvetica SetTxt
() 0 329.838 35.4266 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 130.489 TXC
() 0 427.135 247.511 TXC
() 0 446.595 102.053 TXC
() 0 466.054 171.501 TXC
14 /Helvetica SetTxt
() 0 436.865 35.4266 TXC
13 /Helvetica SetTxt
() 0 592.541 242.087 TXR
() 0 592.541 224.588 TXR
() 0 592.541 207.636 TXR
() 0 592.541 190.137 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 296 1269 a Fi(Figure)18 b(3.1)48 b Fp(ILP)17 b(sp)q(eedup)f(and)h
(comp)q(onen)o(ts)f(in)g(an)g(8-pro)q(cessor)i(system)131
1662 y
 23681433 6630772 789381 65781 35061678 19602964 startTexFig
 131 1662 a
%%BeginDocument: Figures/SPLOT_FILES/exectime/EXEC_AllAppsP8_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 256.526 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 256.526 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 256.526 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 185.349 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 185.349 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 160.457 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 148.32 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 148.32 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 146.674 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 103.063 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 98.1257 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 256.32 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 256.32 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 256.32 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 175.474 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 175.269 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 142.354 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 131.657 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 131.657 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 131.451 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 100.594 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 96.2743 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 267.634 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 267.634 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 267.634 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 191.931 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 191.931 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 166.011 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 157.783 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 157.783 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 156.96 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 107.794 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 98.7429 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 270.103 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 270.103 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 270.103 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 102.446 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 102.446 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 224.023 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 215.383 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 215.383 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 214.971 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 80.2286 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 78.9943 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 288 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 272.983 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 257.76 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 242.743 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 227.52 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 212.297 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 197.28 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 108.343 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 149.486 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 190.629 TXR
12 /Helvetica SetTxt
(|) -90 72 236.571 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 231.771 TXR
12 /Helvetica SetTxt
(|) -90 72 277.714 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 272.914 TXR
16 /Helvetica SetTxt
() 0 302.4 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 532.8 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 532.8 39.5 TXR
( Normalized execution time) 90 28.7 288 TXR
12 /Helvetica SetTxt
(Simple) 0 90.432 61.3029 TXC
(ILP) 0 125.878 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 93.2677 279.771 TXC
(43.0) 0 121.625 162.514 TXC
14 /Helvetica SetTxt
(LU) 0 107.446 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 189.681 61.3029 TXC
(ILP) 0 225.127 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 192.517 279.771 TXC
(34.2) 0 220.874 144.411 TXC
14 /Helvetica SetTxt
(LU_opt) 0 206.695 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 288.93 61.3029 TXC
(ILP) 0 324.377 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 291.766 279.771 TXC
(45.7) 0 320.123 168.069 TXC
14 /Helvetica SetTxt
(Erlebacher) 0 305.945 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 388.18 61.3029 TXC
(ILP) 0 423.626 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 391.015 279.771 TXC
(73.9) 0 419.372 226.08 TXC
14 /Helvetica SetTxt
(Mp3d) 0 405.194 43.8171 TXC
13 /Helvetica SetTxt
(Sync) 0 497.354 275.04 TXR
(Write) 0 497.354 259.817 TXR
(Read hit) 0 497.354 244.8 TXR
(Read miss) 0 497.354 229.577 TXR
(FU stall) 0 497.354 214.56 TXR
(Busy) 0 497.354 199.337 TXR
12 /Helvetica SetTxt
() 0 90.432 48.7029 TXC
() 0 125.878 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 93.2677 267.171 TXC
() 0 121.625 149.914 TXC
14 /Helvetica SetTxt
() 0 107.446 29.1171 TXC
12 /Helvetica SetTxt
() 0 189.681 48.7029 TXC
() 0 225.127 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 192.517 267.171 TXC
() 0 220.874 131.811 TXC
14 /Helvetica SetTxt
() 0 206.695 29.1171 TXC
12 /Helvetica SetTxt
() 0 288.93 48.7029 TXC
() 0 324.377 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 291.766 267.171 TXC
() 0 320.123 155.469 TXC
14 /Helvetica SetTxt
() 0 305.945 29.1171 TXC
12 /Helvetica SetTxt
() 0 388.18 48.7029 TXC
() 0 423.626 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 391.015 267.171 TXC
() 0 419.372 213.48 TXC
14 /Helvetica SetTxt
() 0 405.194 29.1171 TXC
13 /Helvetica SetTxt
() 0 497.354 261.39 TXR
() 0 497.354 246.167 TXR
() 0 497.354 231.15 TXR
() 0 497.354 215.927 TXR
() 0 497.354 200.91 TXR
() 0 497.354 185.687 TXR
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 2086 a
 23681433 6630772 789381 65781 35061678 19602964 startTexFig
 131 2086 a
%%BeginDocument: Figures/SPLOT_FILES/exectime/EXEC_AllAppsP8_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 276.069 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 276.069 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 276.069 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 222.583 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 222.583 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 172.8 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 171.566 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 171.566 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 171.566 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 119.109 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 106.354 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 276.274 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 276.274 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 276.274 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 220.731 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 220.731 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 154.08 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 153.257 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 153.257 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 152.846 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 119.109 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 105.737 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 260.434 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 260.434 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 260.434 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 221.349 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 220.731 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 170.126 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 154.08 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 153.463 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 147.086 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 115.2 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 103.063 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 252.206 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 236.777 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 236.777 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 161.074 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 161.074 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 234.926 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 222.171 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 221.966 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 184.937 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 98.1257 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 92.16 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 288 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 272.983 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 257.76 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 242.743 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 227.52 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 212.297 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 197.28 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 108.343 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 149.486 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 190.629 TXR
12 /Helvetica SetTxt
(|) -90 72 236.571 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 231.771 TXR
12 /Helvetica SetTxt
(|) -90 72 277.714 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 272.914 TXR
16 /Helvetica SetTxt
() 0 302.4 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 532.8 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 532.8 39.5 TXR
( Normalized execution time) 90 28.7 288 TXR
12 /Helvetica SetTxt
(Simple) 0 90.432 61.3029 TXC
(ILP) 0 125.878 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 93.2677 279.771 TXC
(49.0) 0 121.625 174.857 TXC
14 /Helvetica SetTxt
(FFT) 0 107.446 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 189.681 61.3029 TXC
(ILP) 0 225.127 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 192.517 279.771 TXC
(39.9) 0 220.874 156.137 TXC
14 /Helvetica SetTxt
(FFT_opt) 0 206.695 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 288.93 61.3029 TXC
(ILP) 0 324.377 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 291.766 279.771 TXC
(47.7) 0 320.123 172.183 TXC
14 /Helvetica SetTxt
(Water) 0 305.945 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 388.18 61.3029 TXC
(ILP) 0 423.626 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 391.015 279.771 TXC
(79.2) 0 419.372 236.983 TXC
14 /Helvetica SetTxt
(Radix) 0 405.194 43.8171 TXC
13 /Helvetica SetTxt
(Sync) 0 497.354 275.04 TXR
(Write) 0 497.354 259.817 TXR
(Read hit) 0 497.354 244.8 TXR
(Read miss) 0 497.354 229.577 TXR
(FU stall) 0 497.354 214.56 TXR
(Busy) 0 497.354 199.337 TXR
12 /Helvetica SetTxt
() 0 90.432 48.7029 TXC
() 0 125.878 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 93.2677 267.171 TXC
() 0 121.625 162.257 TXC
14 /Helvetica SetTxt
() 0 107.446 29.1171 TXC
12 /Helvetica SetTxt
() 0 189.681 48.7029 TXC
() 0 225.127 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 192.517 267.171 TXC
() 0 220.874 143.537 TXC
14 /Helvetica SetTxt
() 0 206.695 29.1171 TXC
12 /Helvetica SetTxt
() 0 288.93 48.7029 TXC
() 0 324.377 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 291.766 267.171 TXC
() 0 320.123 159.583 TXC
14 /Helvetica SetTxt
() 0 305.945 29.1171 TXC
12 /Helvetica SetTxt
() 0 388.18 48.7029 TXC
() 0 423.626 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 391.015 267.171 TXC
() 0 419.372 224.383 TXC
14 /Helvetica SetTxt
() 0 405.194 29.1171 TXC
13 /Helvetica SetTxt
() 0 497.354 261.39 TXR
() 0 497.354 246.167 TXR
() 0 497.354 231.15 TXR
() 0 497.354 215.927 TXR
() 0 497.354 200.91 TXR
() 0 497.354 185.687 TXR
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 316 2579 a Fi(Figure)g(3.2)48 b Fp(Execution)16 b(time)e(comp)q(onen)o
(ts)i(in)f(an)i(8-pro)q(cessor)h(system)p eop
%%Page: 15 22
15 21 bop 1882 72 a Fp(15)131 222 y(eac)o(h)15 b(comp)q(onen)o(t)f
(\(normalized)f(to)j(the)e(total)i(time)d(on)i(the)g
Fo(Simple)e Fp(system\).)19 b(The)c(busy)h(and)131 312
y(stall)g(times)f(are)h(calculated)f(as)i(explained)e(in)h(Section)g
(2.1.)204 404 y(All)25 b(of)g(our)h(applications)g(exhibit)e(sp)q
(eedup)i(with)f Fo(ILP)f Fp(pro)q(cessors,)29 b(but)d(the)f(sp)q
(eci\014c)131 494 y(sp)q(eedup)d(seen)f(v)m(aries)g(greatly)l(,)h(from)
e(1.26)i(in)f(Radix)g(to)g(2.92)h(in)f(LU)p 1500 494
15 2 v 18 w(opt.)36 b(All)20 b(the)h(appli-)131 584 y(cations)c(ac)o
(hiev)o(e)d(similar)h(and)i(signi\014can)o(t)f(CPU)g(ILP)h(sp)q(eedup)f
(\(3.15)h(to)g(3.70\).)22 b(In)16 b(con)o(trast,)131
675 y(the)21 b(data)i(memory)18 b(ILP)k(sp)q(eedup)f(is)h(lo)o(w)o(er)e
(and)i(v)m(aries)f(greatly)g(across)i(the)e(applications,)131
765 y(from)15 b(0.74)i(\(a)g Fn(slowdown!)p Fp(\))23
b(in)16 b(Radix)g(to)g(2.61)h(in)f(LU)p 1153 765 V 18
w(opt.)204 856 y(The)e(k)o(ey)f(e\013ect)g(of)h(the)f(high)h(CPU)g(ILP)
f(sp)q(eedups)i(and)f(lo)o(w)f(data)i(memory)c(ILP)j(sp)q(eedups)131
947 y(is)21 b(that)g(data)g(memory)c(time)i(b)q(ecomes)g(more)g
(dominan)o(t)h(in)g Fo(ILP)f Fp(m)o(ultipro)q(cessors)h(than)h(in)131
1037 y Fo(Simple)11 b Fp(m)o(ultipro)q(cessors.)18 b(F)l(urther,)13
b(since)e(CPU)i(ILP)g(sp)q(eedups)g(are)g(fairly)e(consisten)o(t)h
(across)131 1127 y(all)h(applications,)h(and)g(data)h(memory)10
b(time)i(is)h(the)h(only)f(other)h(dominan)o(t)e(comp)q(onen)o(t)h(of)h
(exe-)131 1218 y(cution)f(time,)e(the)h(data)i(memory)c(ILP)j(sp)q
(eedup)g(primarily)d(shap)q(es)k(the)e(o)o(v)o(erall)g(ILP)h(sp)q
(eedups)131 1308 y(of)h(our)h(applications.)20 b(W)l(e)13
b(therefore)h(analyze)f(the)g(factors)i(that)f(in\015uence)f(data)h
(memory)d(ILP)131 1398 y(sp)q(eedup)17 b(in)f(greater)g(detail)g(in)f
(Section)h(3.1.2.)204 1490 y(Sync)o(hronization)21 b(ILP)h(sp)q(eedup)f
(is)g(also)h(lo)o(w)f(and)h(v)m(aries)f(widely)g(across)h
(applications.)131 1580 y(Ho)o(w)o(ev)o(er,)14 b(since)h(sync)o
(hronization)h(do)q(es)g(not)h(accoun)o(t)e(for)i(a)f(large)g(p)q
(ortion)h(of)f(the)f(execution)131 1670 y(time,)j(it)g(do)q(es)i(not)g
(greatly)f(in\015uence)f(the)h(o)o(v)o(erall)f(ILP)h(sp)q(eedup.)31
b(Section)19 b(3.1.3)g(discusses)131 1761 y(the)d(factors)h
(a\013ecting)f(sync)o(hronization)g(ILP)h(sp)q(eedup)f(in)g(our)h
(applications.)131 1920 y Fi(3.1.2)55 b(Data)19 b(Memory)e(ILP)h(Sp)r
(eedup)131 2044 y Fp(W)l(e)j(\014rst)g(discuss)g(v)m(arious)g(factors)h
(that)f(can)g(con)o(tribute)f(to)h(data)g(memory)d(ILP)j(sp)q(eedup,)
131 2134 y(and)c(then)f(sho)o(w)h(ho)o(w)g(these)f(factors)g(in)o
(teract)g(in)f(our)i(applications.)131 2293 y Fi(Con)n(tributing)i(F)-5
b(actors)131 2417 y Fp(Figure)22 b(3.2)g(sho)o(ws)h(that)f(memory)d
(time)h(is)i(dominated)f(b)o(y)g(read)h(miss)f(time)f(in)h(all)h(of)g
(our)131 2507 y(applications.)f(W)l(e)16 b(therefore)g(fo)q(cus)h(on)g
(factors)f(in\015uencing)g(read)g(miss)f(ILP)i(sp)q(eedup.)204
2599 y(The)g(read)g(miss)e(ILP)i(sp)q(eedup)g(is)g(the)f(ratio)h(of)g
(the)f(total)h(stall)g(time)d(due)j(to)g(read)g(misses)131
2689 y(in)i(the)g Fo(Simple)d Fp(and)k Fo(ILP)e Fp(systems.)28
b(The)19 b(total)g(stall)g(time)d(due)j(to)h(read)f(misses)e(in)i(a)g
(giv)o(en)p eop
%%Page: 16 23
16 22 bop 1882 72 a Fp(16)131 222 y(system)19 b(is)i(simply)d(the)i
(pro)q(duct)i(of)f(the)f(a)o(v)o(erage)g(n)o(um)o(b)q(er)f(of)i(L1)g
(misses)e(and)i(the)g(a)o(v)o(erage)131 312 y(exp)q(osed,)16
b(or)h(uno)o(v)o(erlapp)q(ed,)e(L1)i(cac)o(he)f(miss)f(latency)l(,)g
(as)h(expressed)g(in)g(Equation)h(3.1.)499 495 y Fm(Read)11
b(M)5 b(iss)11 b(I)t(LP)18 b(S)s(peedup)c Fp(=)1163 461
y Fm(M)1210 468 y Fl(Simple)1329 461 y Fg(\002)d Fm(l)1394
468 y Fl(Simple)p 1106 483 453 2 v 1106 529 a Fm(M)1153
536 y Fl(ILP)1219 529 y Fg(\002)g Fm(l)1284 536 y Fl(ILP)n
Fj(;unov)q(er)q(lapped)1831 495 y Fp(\(3.1\))131 610
y(In)21 b(Equation)h(3.1,)h Fm(M)559 617 y Fl(Simple)688
610 y Fp(and)f Fm(M)835 617 y Fl(ILP)912 610 y Fp(represen)o(t)e(the)h
(n)o(um)o(b)q(er)f(of)h(L1)h(misses)e(seen)i(in)f(the)131
700 y Fo(Simple)16 b Fp(and)i Fo(ILP)f Fp(systems)f(resp)q(ectiv)o(ely)
l(.)24 b Fm(l)977 707 y Fl(Simple)1102 700 y Fp(represen)o(ts)17
b(the)h(a)o(v)o(erage)f(L1)i(miss)d(latency)131 790 y(in)e(the)g
Fo(Simple)e Fp(system,)h(while)g Fm(l)750 797 y Fl(ILP)o
Fj(;unov)q(er)q(lapped)1039 790 y Fp(is)h(the)g(a)o(v)o(erage)g(uno)o
(v)o(erlapp)q(ed)g(L1)h(cac)o(he)f(miss)131 881 y(latency)i(in)g(the)g
Fo(ILP)f Fp(system.)204 973 y(Equation)i(3.1)g(can)f(b)q(e)g(rewritten)
g(as)h(follo)o(ws:)468 1108 y Fm(Read)11 b(M)5 b(iss)11
b(I)t(LP)18 b(S)s(peedup)c Fp(=)1074 1074 y Fm(M)1121
1081 y Fl(Simple)p 1074 1096 156 2 v 1101 1142 a Fm(M)1148
1149 y Fl(ILP)1246 1108 y Fg(\002)1384 1074 y Fm(l)1399
1081 y Fl(Simple)p 1300 1096 290 2 v 1300 1142 a Fm(l)1315
1149 y Fl(ILP)o Fj(;unov)q(er)q(lapped)1831 1108 y Fp(\(3.2\))204
1244 y(Th)o(us,)26 b(Equation)f(3.2)f(isolates)g(t)o(w)o(o)g(con)o
(tributing)f(factors)h(to)h(o)o(v)o(erall)d(read)i(miss)f(ILP)131
1334 y(sp)q(eedup)d({)g(the)f(ratio)h(of)g(misses)e(in)h(the)g
Fo(Simple)f Fp(and)i Fo(ILP)e Fp(systems,)h(and)h(the)f(ratio)h(of)g
(the)131 1425 y(a)o(v)o(erage)15 b(miss)g(latency)g(in)g(the)g
Fo(Simple)f Fp(system)g(to)i(the)f(a)o(v)o(erage)h(uno)o(v)o(erlapp)q
(ed)f(miss)f(latency)131 1515 y(in)i(the)g Fo(ILP)f Fp(system.)204
1607 y(The)i(\014rst)f(factor)h(is)f(called)f(the)h Fn(miss)h(factor)p
Fp(,)f(and)h(is)f(de\014ned)g(as)778 1742 y Fm(M)5 b(iss)11
b(F)c(actor)14 b Fp(=)1124 1708 y Fm(M)1171 1715 y Fl(Simple)p
1124 1730 156 2 v 1151 1776 a Fm(M)1198 1783 y Fl(ILP)1831
1742 y Fp(\(3.3\))131 1877 y(The)j(miss)e(coun)o(ts)i(seen)f(in)g(the)h
Fo(Simple)d Fp(and)j Fo(ILP)f Fp(systems)f(can)i(di\013er)f(since)g
(reordering)h(and)131 1967 y(sp)q(eculation)k(in)f(the)h
Fo(ILP)e Fp(pro)q(cessor)j(can)f(alter)f(the)g(cac)o(he)g(miss)f(b)q
(eha)o(vior.)34 b(A)21 b(miss)e(factor)131 2058 y(greater)24
b(than)h(1)f(th)o(us)g(con)o(tributes)f(p)q(ositiv)o(ely)g(to)h(read)g
(miss)f(ILP)h(sp)q(eedup,)i(as)f(the)e Fo(ILP)131 2148
y Fp(system)15 b(sees)h(few)o(er)f(misses)g(than)i(the)f
Fo(Simple)e Fp(system.)204 2240 y(The)22 b(second)f(factor)h(in)e
(Equation)i(3.2)g(is)f(the)f(recipro)q(cal)h(of)g(the)g
Fn(unoverlapp)n(e)n(d)i(factor)p Fp(.)131 2330 y(Uno)o(v)o(erlapp)q(ed)
e(factor)h(is)g(de\014ned)f(as)h(the)g(ratio)g(of)g(the)f(exp)q(osed,)i
(or)f(uno)o(v)o(erlapp)q(ed,)h(miss)131 2420 y(latency)16
b(in)g(the)g Fo(ILP)f Fp(and)i Fo(Simple)d Fp(systems,)g(and)j(is)f
(expressed)g(as:)618 2555 y Fm(U)5 b(nov)r(er)q(l)q(apped)12
b(F)7 b(actor)14 b Fp(=)1150 2522 y Fm(l)1165 2529 y
Fl(ILP)n Fj(;unov)q(er)q(lapped)p 1150 2544 290 2 v 1233
2590 a Fm(l)1248 2597 y Fl(Simple)1831 2555 y Fp(\(3.4\))131
2690 y(A)i(lo)o(w)o(er)f(uno)o(v)o(erlapp)q(ed)h(factor)h(leads)f(to)h
(a)f(higher)g(read)h(miss)e(ILP)h(sp)q(eedup.)p eop
%%Page: 17 24
17 23 bop 1882 72 a Fp(17)204 222 y(In)15 b(the)g Fo(Simple)e
Fp(system,)g(the)i(en)o(tire)f(L1)i(miss)d(latency)i(is)g(uno)o(v)o
(erlapp)q(ed.)20 b(T)l(o)c(understand)131 312 y(the)22
b(factors)h(con)o(tributing)f(to)g(uno)o(v)o(erlapp)q(ed)g(latency)f
(in)h(the)g Fo(ILP)f Fp(system,)h(Equation)h(3.5)131
403 y(expresses)d(the)f(a)o(v)o(erage)h(uno)o(v)o(erlapp)q(ed)f
Fo(ILP)g Fp(miss)g(latency)g(as)h(the)g(di\013erence)f(b)q(et)o(w)o
(een)g(the)131 493 y(a)o(v)o(erage)13 b(total)h Fo(ILP)e
Fp(miss)h(latency)f(\(denoted)i Fm(l)996 500 y Fl(ILP)1050
493 y Fp(\))g(and)g(the)f(a)o(v)o(erage)g(o)o(v)o(erlapp)q(ed)g(miss)f
(latency)131 583 y(\(denoted)k Fm(l)349 590 y Fl(ILP)o
Fj(;ov)q(er)q(lapped)582 583 y Fp(\).)574 711 y Fm(U)5
b(nov)r(er)q(l)q(apped)11 b(F)c(actor)15 b Fp(=)1105
677 y Fm(l)1120 684 y Fl(ILP)1186 677 y Fg(\000)c Fm(l)1251
684 y Fl(ILP)n Fj(;ov)q(er)q(lapped)p 1105 699 379 2
v 1233 745 a Fm(l)1248 752 y Fl(Simple)1831 711 y Fp(\(3.5\))131
839 y(The)19 b(total)f Fo(ILP)f Fp(miss)g(latency)h(can)g(b)q(e)h
(expanded,)f(as)h(in)f(Equation)h(3.6,)g(as)f(the)h(sum)e(of)i(the)131
929 y(miss)11 b(latency)g(incurred)g(b)o(y)g(the)h Fo(Simple)e
Fp(system)g(and)j(an)f(extra)g(latency)f(comp)q(onen)o(t)g(added)h(b)o
(y)131 1019 y(the)k Fo(ILP)f Fp(system)f(\(for)i(example,)d(due)j(to)g
(increased)f(con)o(ten)o(tion\).)21 b(In)15 b(Equation)h(3.6,)g
Fm(l)1782 1026 y Fl(ILP)o Fj(;extr)q(a)131 1109 y Fp(represen)o(ts)g
(the)g(a)o(v)o(erage)g(extra)g(latency)f(comp)q(onen)o(t)g(seen)h(in)g
(the)g Fo(ILP)f Fp(system.)436 1237 y Fm(U)5 b(nov)r(er)q(l)q(apped)11
b(F)c(actor)14 b Fp(=)967 1203 y Fm(l)982 1210 y Fl(Simple)1100
1203 y Fp(+)d Fm(l)1164 1210 y Fl(ILP)o Fj(;extr)q(a)1324
1203 y Fg(\000)g Fm(l)1389 1210 y Fl(ILP)o Fj(;ov)q(er)q(lapped)p
967 1226 656 2 v 1233 1271 a Fm(l)1248 1278 y Fl(Simple)1831
1237 y Fp(\(3.6\))131 1365 y(Equation)k(3.7)g(then)g(p)q(erforms)f(an)h
(algebraic)f(simpli\014cation)f(to)i(express)f(the)h(o)o(v)o(erlapp)q
(ed)f(and)131 1455 y(extra)21 b(latencies)g(seen)g(b)o(y)g(the)g
Fo(ILP)g Fp(system)f(relativ)o(e)f(to)j(the)f(miss)f(latency)h(in)g
(the)g Fo(Simple)131 1545 y Fp(system.)446 1636 y Fm(U)5
b(nov)r(er)q(l)q(apped)12 b(F)7 b(actor)14 b Fp(=)g(1)d
Fg(\000)1058 1563 y Ff( )1096 1602 y Fm(l)1111 1609 y
Fl(ILP)n Fj(;ov)q(er)q(lapped)p 1096 1624 248 2 v 1158
1670 a Fm(l)1173 1677 y Fl(Simple)1360 1636 y Fg(\000)1414
1602 y Fm(l)1429 1609 y Fl(ILP)o Fj(;extr)q(a)p 1414
1624 164 2 v 1435 1670 a Fm(l)1450 1677 y Fl(Simple)1583
1563 y Ff(!)1831 1636 y Fp(\(3.7\))204 1749 y(Equation)25
b(3.7)g(can)f(b)q(e)h(used)f(to)h(isolate)f(t)o(w)o(o)g(factors)h(that)
g(shap)q(e)g(the)f(uno)o(v)o(erlapp)q(ed)131 1839 y(factor)17
b({)g(the)g Fn(overlapp)n(e)n(d)h(factor)e Fp(and)h(the)g
Fn(extr)n(a)h(factor)e Fp({)i(whic)o(h)e(are,)g(resp)q(ectiv)o(ely)l(,)
e(the)i Fo(ILP)131 1929 y Fp(o)o(v)o(erlapp)q(ed)k(and)i(extra)e
(latencies)g(expressed)g(as)h(a)g(fraction)g(of)g(the)g
Fo(Simple)d Fp(miss)i(latency)l(.)131 2020 y(These)c(factors)h(are)g
(de\014ned)f(b)q(elo)o(w:)665 2147 y Fm(O)q(v)r(er)q(l)q(apped)11
b(F)c(actor)15 b Fp(=)1144 2114 y Fm(l)1159 2121 y Fl(ILP)o
Fj(;ov)q(er)q(lapped)p 1144 2136 248 2 v 1207 2182 a
Fm(l)1222 2189 y Fl(Simple)1831 2147 y Fp(\(3.8\))765
2306 y Fm(E)s(xtr)q(a)10 b(F)d(actor)14 b Fp(=)1129 2273
y Fm(l)1144 2280 y Fl(ILP)n Fj(;extr)q(a)p 1129 2295
164 2 v 1150 2340 a Fm(l)1165 2347 y Fl(Simple)1831 2306
y Fp(\(3.9\))131 2418 y(Read)k(miss)f(ILP)h(sp)q(eedup)g(is)g(higher)f
(with)h(a)g(higher)g(o)o(v)o(erlapp)q(ed)f(factor)h(and)g(a)h(lo)o(w)o
(er)e(extra)131 2509 y(factor.)204 2600 y(The)e Fn(overlapp)n(e)n(d)h
(factor)f Fp(increases)g(with)g(increased)f(o)o(v)o(erlap)g(of)h
(misses)f(with)h(other)g(useful)131 2690 y(w)o(ork.)31
b(The)19 b(n)o(um)o(b)q(er)f(of)h(instructions)h(b)q(ehind)f(whic)o(h)g
(a)g(read)h(miss)e(can)i(o)o(v)o(erlap)e(is)h(limited)p
eop
%%Page: 18 25
18 24 bop 1882 72 a Fp(18)131 222 y(b)o(y)14 b(the)h(instruction)f
(windo)o(w)h(size.)20 b(F)l(urther,)14 b(read)h(misses)e(ha)o(v)o(e)h
(longer)g(latencies)g(than)h(other)131 312 y(op)q(erations)23
b(that)g(o)q(ccup)o(y)f(the)g(instruction)f(windo)o(w.)39
b(Therefore,)23 b(read)f(miss)f(latency)g(can)131 403
y(normally)h(b)q(e)i(completely)d(hidden)i(only)h(b)q(ehind)g(other)f
(read)h(misses.)43 b(Th)o(us,)25 b(for)f(a)g(high)131
493 y(o)o(v)o(erlapp)q(ed)13 b(factor)i(\(and)f(high)g(read)g(miss)e
(ILP)i(sp)q(eedup\),)h(applications)e(should)i(exhibit)d(read)131
583 y(misses)j(that)i(app)q(ear)g(clustered)e(together)i(within)e(the)h
(instruction)g(windo)o(w.)204 676 y(On)e(the)f(other)g(hand,)h(the)f
Fn(extr)n(a)i(factor)e Fp(m)o(ust)f(b)q(e)i(lo)o(w)f(for)g(a)h(high)f
(read)h(miss)e(ILP)h(sp)q(eedup.)131 766 y(Extra)j(miss)f(latencies)f
(can)i(arise)g(from)e(con)o(ten)o(tion)h(for)h(system)f(resources,)g
(as)h(the)g(ILP)g(tec)o(h-)131 856 y(niques)f(allo)o(w)g
Fo(ILP)f Fp(pro)q(cessors)j(to)e(issue)g(memory)e(references)g(more)h
(frequen)o(tly)g(than)h Fo(Simple)131 946 y Fp(pro)q(cessors.)30
b(Extra)18 b(miss)g(latency)f(can)i(also)g(arise)g(from)e(a)i(c)o
(hange)g(in)f(miss)f(b)q(eha)o(vior)h(if)h(the)131 1037
y(miss)e(pattern)h(in)f Fo(ILP)g Fp(pro)q(cessors)i(forces)e(more)g
(misses)f(to)i(b)q(e)g(resolv)o(ed)f(at)h(remote)e(lev)o(els)g(of)131
1127 y(the)g(memory)e(hierarc)o(h)o(y)l(.)204 1219 y(In)25
b(summary)l(,)f(the)h(uno)o(v)o(erlapp)q(ed)f(factor)h(con)o(tributes)f
(p)q(ositiv)o(ely)f(to)j(read)f(miss)e(ILP)131 1310 y(sp)q(eedup)c(if)f
(the)h Fo(ILP)f Fp(uno)o(v)o(erlapp)q(ed)g(miss)f(latency)h(is)h(less)f
(than)h(the)g Fo(Simple)d Fp(miss)i(latency)l(.)131 1400
y(This)c(factor)f(dep)q(ends)h(on)g(ho)o(w)g(m)o(uc)o(h)d(p)q(oten)o
(tial)i(for)h(read)f(miss)f(o)o(v)o(erlap)h(is)g(exploited)f(\(o)o(v)o
(erlap)131 1490 y(factor\))i(and)h(on)f(ho)o(w)g(m)o(uc)o(h)d(is)j
(lost)g(due)f(to)h(con)o(ten)o(tion)f(\(extra)h(factor\).)20
b(A)14 b(p)q(ositiv)o(e)f(con)o(tribu-)131 1581 y(tion)i(results)f(if)g
(the)g(latency)g(o)o(v)o(erlapp)q(ed)f(b)o(y)h Fo(ILP)g
Fp(exceeds)f(an)o(y)h(extra)g(latency)g(added)h(b)o(y)f
Fo(ILP)p Fp(.)131 1671 y(On)h(the)f(other)h(hand,)g(the)g(read)g(miss)e
(comp)q(onen)o(t)h(of)h(execution)e(time)g(can)i(incur)f(a)h(slo)o(wdo)
o(wn)131 1761 y(relativ)o(e)20 b(to)i(the)f Fo(Simple)e
Fp(pro)q(cessor)j(if)f(the)h(extra)f(factor)g(of)h Fo(ILP)f
Fp(exceeds)f(the)h(o)o(v)o(erlapp)q(ed)131 1851 y(factor.)131
2013 y Fi(Analysis)e(of)f(Applications)131 2138 y Fp(Read)e(miss)d(ILP)
j(sp)q(eedup)f(\(not)h(sho)o(wn)g(separately\))f(is)g(lo)o(w)g(\(less)g
(than)h(1.6\))f(in)g(all)g(our)g(appli-)131 2228 y(cations)k(except)e
(LU,)h(LU)p 623 2228 15 2 v 18 w(opt,)h(and)g(FFT)p 940
2228 V 17 w(opt;)h(Radix)e(actually)f(exhibits)h(a)g(slo)o(wdo)o(wn.)29
b(W)l(e)131 2319 y(no)o(w)19 b(sho)o(w)f(ho)o(w)h(the)f(factors)g
(describ)q(ed)g(ab)q(o)o(v)o(e)g(con)o(tribute)f(to)h(read)h(miss)d
(ILP)j(sp)q(eedup)f(for)131 2409 y(our)f(applications.)204
2501 y Fi(Miss)22 b(factor.)30 b Fp(Most)19 b(of)g(our)h(applications)e
(ha)o(v)o(e)h(miss)e(factors)j(close)e(to)i(1,)f(implying)e(a)131
2591 y(negligible)g(con)o(tribution)h(from)f(this)h(factor)g(to)h(read)
f(miss)f(ILP)h(sp)q(eedup.)28 b(LU)18 b(and)h(LU)p 1833
2591 V 17 w(opt,)131 2682 y(ho)o(w)o(ev)o(er,)14 b(ha)o(v)o(e)h(high)g
(miss)f(factors)i(\(2.21)g(and)g(1.75)g(resp)q(ectiv)o(ely\),)c(whic)o
(h)j(con)o(tribute)f(signif-)p eop
%%Page: 19 26
19 25 bop 1882 72 a Fp(19)131 181 y
 26996819 6630772 789381 65781 34601205 14866677 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/latency/ILPlatency_AllAppsP8_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
85.7455 72 S9
[] 21.600000 SL
85.7455 119.213 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 188.758 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
85.7455 72 S9
[] 21.600000 SL
85.7455 119.213 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 135.69 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 119.213 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 213.734 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 119.213 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 103.208 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 119.213 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 139.373 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 119.213 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 100.8 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 119.213 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 142.395 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 119.213 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 112.414 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 216 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 204.197 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 192.866 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 95.6066 TXC
14 /Helvetica-Bold SetTxt
(50) 0 65 90.8066 TXR
12 /Helvetica SetTxt
(|) -90 72 119.213 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 114.413 TXR
12 /Helvetica SetTxt
(|) -90 72 142.82 TXC
14 /Helvetica-Bold SetTxt
(150) 0 65 138.02 TXR
12 /Helvetica SetTxt
(|) -90 72 166.426 TXC
14 /Helvetica-Bold SetTxt
(200) 0 65 161.626 TXR
12 /Helvetica SetTxt
(|) -90 72 190.033 TXC
14 /Helvetica-Bold SetTxt
(250) 0 65 185.233 TXR
12 /Helvetica SetTxt
(|) -90 72 213.639 TXC
14 /Helvetica-Bold SetTxt
(300) 0 65 208.839 TXR
16 /Helvetica SetTxt
() 0 298.8 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 525.6 72 
L9
0 setlinecap
72 72 72 216 
L9
() 0 525.6 39.5 TXR
( Normalized miss latency) 90 28.7 216 TXR
12 /Helvetica SetTxt
(Simple) 0 85.7455 62.0852 TXC
(ILP) 0 113.236 62.0852 TXC
14 /Helvetica SetTxt
(LU) 0 99.4909 21.9541 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 85.7455 119.685 TXC
(247.3) 0 113.236 189.23 TXC
12 /Helvetica SetTxt
(2.21) 0 113.236 49.3377 TXC
(Simple) 0 181.964 62.0852 TXC
(ILP) 0 209.455 62.0852 TXC
14 /Helvetica SetTxt
(LU_opt) 0 195.709 21.9541 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 181.964 119.685 TXC
(300.2) 0 209.455 214.206 TXC
12 /Helvetica SetTxt
(1.75) 0 209.455 49.3377 TXC
(Simple) 0 278.182 62.0852 TXC
(ILP) 0 305.673 62.0852 TXC
14 /Helvetica SetTxt
(Erlebacher) 0 291.927 21.9541 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 278.182 119.685 TXC
(142.7) 0 305.673 139.845 TXC
12 /Helvetica SetTxt
(0.99) 0 305.673 49.3377 TXC
(Simple) 0 374.4 62.0852 TXC
(ILP) 0 401.891 62.0852 TXC
14 /Helvetica SetTxt
(Mp3d) 0 388.145 21.9541 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 374.4 119.685 TXC
(149.1) 0 401.891 142.867 TXC
12 /Helvetica SetTxt
(1.05) 0 401.891 49.3377 TXC
12 /Helvetica-Bold SetTxt
(Miss) 0 44.5091 55.0033 TXL
14 /Helvetica SetTxt
(overlapped) 0 498.109 205.613 TXR
(unoverlapped) 0 498.109 194.282 TXR
12 /Helvetica SetTxt
() 0 85.7455 49.4852 TXC
() 0 113.236 49.4852 TXC
14 /Helvetica SetTxt
() 0 99.4909 7.2541 TXC
12 /Helvetica-Bold SetTxt
() 0 85.7455 107.085 TXC
() 0 113.236 176.63 TXC
12 /Helvetica SetTxt
() 0 113.236 36.7377 TXC
() 0 181.964 49.4852 TXC
() 0 209.455 49.4852 TXC
14 /Helvetica SetTxt
() 0 195.709 7.2541 TXC
12 /Helvetica-Bold SetTxt
() 0 181.964 107.085 TXC
() 0 209.455 201.606 TXC
12 /Helvetica SetTxt
() 0 209.455 36.7377 TXC
() 0 278.182 49.4852 TXC
() 0 305.673 49.4852 TXC
14 /Helvetica SetTxt
() 0 291.927 7.2541 TXC
12 /Helvetica-Bold SetTxt
() 0 278.182 107.085 TXC
() 0 305.673 127.245 TXC
12 /Helvetica SetTxt
() 0 305.673 36.7377 TXC
() 0 374.4 49.4852 TXC
() 0 401.891 49.4852 TXC
14 /Helvetica SetTxt
() 0 388.145 7.2541 TXC
12 /Helvetica-Bold SetTxt
() 0 374.4 107.085 TXC
() 0 401.891 130.267 TXC
12 /Helvetica SetTxt
() 0 401.891 36.7377 TXC
12 /Helvetica-Bold SetTxt
(factor:) 0 44.5091 42.4033 TXL
14 /Helvetica SetTxt
() 0 498.109 190.913 TXR
() 0 498.109 179.582 TXR
12 /Helvetica-Bold SetTxt
() 0 44.5091 29.8033 TXL
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 605 a
 26996819 6630772 789381 65781 34601205 14866677 startTexFig
 131 605 a
%%BeginDocument: Figures/SPLOT_FILES/latency/ILPlatency_AllAppsP8_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
85.7455 72 S9
[] 21.600000 SL
85.7455 148.19 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 156.114 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
85.7455 72 S9
[] 21.600000 SL
85.7455 148.19 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 146.133 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 148.19 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 180.876 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 148.19 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 118.019 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 148.19 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 212.19 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 148.19 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 135.162 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 148.19 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 212.8 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 148.19 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 175.848 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 216 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 204.571 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 193.143 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 87.2381 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 82.4381 TXR
12 /Helvetica SetTxt
(|) -90 72 102.476 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 97.6762 TXR
12 /Helvetica SetTxt
(|) -90 72 117.714 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 112.914 TXR
12 /Helvetica SetTxt
(|) -90 72 132.952 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 128.152 TXR
12 /Helvetica SetTxt
(|) -90 72 148.19 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 143.39 TXR
12 /Helvetica SetTxt
(|) -90 72 163.429 TXC
14 /Helvetica-Bold SetTxt
(120) 0 65 158.629 TXR
12 /Helvetica SetTxt
(|) -90 72 178.667 TXC
14 /Helvetica-Bold SetTxt
(140) 0 65 173.867 TXR
12 /Helvetica SetTxt
(|) -90 72 193.905 TXC
14 /Helvetica-Bold SetTxt
(160) 0 65 189.105 TXR
12 /Helvetica SetTxt
(|) -90 72 209.143 TXC
14 /Helvetica-Bold SetTxt
(180) 0 65 204.343 TXR
16 /Helvetica SetTxt
() 0 298.8 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 525.6 72 
L9
0 setlinecap
72 72 72 216 
L9
() 0 525.6 39.5 TXR
( Normalized miss latency) 90 28.7 216 TXR
12 /Helvetica SetTxt
(Simple) 0 85.7455 62.0952 TXC
(ILP) 0 113.236 62.0952 TXC
14 /Helvetica SetTxt
(FFT) 0 99.4909 21.7143 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 85.7455 148.952 TXC
(110.4) 0 113.236 156.876 TXC
12 /Helvetica SetTxt
(1.00) 0 113.236 49.1429 TXC
(Simple) 0 181.964 62.0952 TXC
(ILP) 0 209.455 62.0952 TXC
14 /Helvetica SetTxt
(FFT_opt) 0 195.709 21.7143 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 181.964 148.952 TXC
(142.9) 0 209.455 181.638 TXC
12 /Helvetica SetTxt
(1.01) 0 209.455 49.1429 TXC
(Simple) 0 278.182 62.0952 TXC
(ILP) 0 305.673 62.0952 TXC
14 /Helvetica SetTxt
(Water) 0 291.927 21.7143 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 278.182 148.952 TXC
(184.0) 0 305.673 212.952 TXC
12 /Helvetica SetTxt
(1.03) 0 305.673 49.1429 TXC
(Simple) 0 374.4 62.0952 TXC
(ILP) 0 401.891 62.0952 TXC
14 /Helvetica SetTxt
(Radix) 0 388.145 21.7143 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 374.4 148.952 TXC
(184.8) 0 401.891 213.562 TXC
12 /Helvetica SetTxt
(1.18) 0 401.891 49.1429 TXC
12 /Helvetica-Bold SetTxt
(Miss) 0 44.5091 55.2381 TXL
14 /Helvetica SetTxt
(overlapped) 0 498.109 206.095 TXR
(unoverlapped) 0 498.109 194.667 TXR
12 /Helvetica SetTxt
() 0 85.7455 49.4952 TXC
() 0 113.236 49.4952 TXC
14 /Helvetica SetTxt
() 0 99.4909 7.01429 TXC
12 /Helvetica-Bold SetTxt
() 0 85.7455 136.352 TXC
() 0 113.236 144.276 TXC
12 /Helvetica SetTxt
() 0 113.236 36.5429 TXC
() 0 181.964 49.4952 TXC
() 0 209.455 49.4952 TXC
14 /Helvetica SetTxt
() 0 195.709 7.01429 TXC
12 /Helvetica-Bold SetTxt
() 0 181.964 136.352 TXC
() 0 209.455 169.038 TXC
12 /Helvetica SetTxt
() 0 209.455 36.5429 TXC
() 0 278.182 49.4952 TXC
() 0 305.673 49.4952 TXC
14 /Helvetica SetTxt
() 0 291.927 7.01429 TXC
12 /Helvetica-Bold SetTxt
() 0 278.182 136.352 TXC
() 0 305.673 200.352 TXC
12 /Helvetica SetTxt
() 0 305.673 36.5429 TXC
() 0 374.4 49.4952 TXC
() 0 401.891 49.4952 TXC
14 /Helvetica SetTxt
() 0 388.145 7.01429 TXC
12 /Helvetica-Bold SetTxt
() 0 374.4 136.352 TXC
() 0 401.891 200.962 TXC
12 /Helvetica SetTxt
() 0 401.891 36.5429 TXC
12 /Helvetica-Bold SetTxt
(factor:) 0 44.5091 42.6381 TXL
14 /Helvetica SetTxt
() 0 498.109 191.395 TXR
() 0 498.109 179.967 TXR
12 /Helvetica-Bold SetTxt
() 0 44.5091 30.0381 TXL
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 213 1098 a Fi(Figure)19 b(3.3)48 b Fp(E\013ect)16 b(of)h(ILP)f(on)h(a)
o(v)o(erage)f(miss)f(latency)g(in)h(an)h(8-pro)q(cessor)h(system)131
1239 y(ican)o(tly)d(to)i(the)f(read)g(miss)f(ILP)i(sp)q(eedup.)22
b(These)16 b(high)h(miss)e(factors)i(arise)f(b)q(ecause)g(the)g
Fo(ILP)131 1329 y Fp(system)i(reorders)g(certain)h(accesses)f(that)i
(induce)e(rep)q(eated)h(con\015ict)f(misses)f(in)i(the)f
Fo(Simple)131 1419 y Fp(system.)h(In)12 b(the)h Fo(ILP)e
Fp(system,)h(the)g(\014rst)h(t)o(w)o(o)f(con\015icting)h(requests)f(o)o
(v)o(erlap,)g(while)g(subsequen)o(t)131 1510 y(requests)19
b(to)h(the)g(con\015icting)f(lines)g(coalesce)g(with)g(earlier)f(p)q
(ending)i(misses,)f(th)o(us)h(reducing)131 1600 y(the)c(n)o(um)o(b)q
(er)f(of)h(misses)f(seen)h(b)o(y)g(the)g(system.)204
1692 y Fi(Uno)n(v)n(erlapp)r(ed)e(factor.)20 b Fp(Figure)12
b(3.3)h(graphically)f(represen)o(ts)g(the)h(uno)o(v)o(erlapp)q(ed,)f(o)
o(v)o(er-)131 1783 y(lapp)q(ed,)17 b(and)h(extra)f(latencies)f(and)i
(factors.)24 b(The)17 b(t)o(w)o(o)g(bars)h(for)f(eac)o(h)g(application)
g(sho)o(w)h(the)131 1873 y(a)o(v)o(erage)f(L1)h(read)f(miss)f(latency)g
(in)h Fo(Simple)e Fp(and)i Fo(ILP)f Fp(systems,)g(normalized)f(to)j
(the)e Fo(Simple)131 1963 y Fp(system)g(latency)l(.)24
b(The)17 b(ligh)o(t)g(part)h(of)g(the)f Fo(ILP)f Fp(bar)i(sho)o(ws)g
(the)f(a)o(v)o(erage)g(o)o(v)o(erlapp)q(ed)g(latency)131
2053 y(while)h(the)g(dark)h(part)g(sho)o(ws)g(the)f(uno)o(v)o(erlapp)q
(ed)g(latency)l(.)27 b(Because)18 b(of)h(the)f(normalization,)131
2144 y(the)d(dark)f(and)i(the)e(ligh)o(t)g(parts)h(of)g(the)g
Fo(ILP)e Fp(bar)i(also)g(represen)o(t)f(the)h(uno)o(v)o(erlapp)q(ed)f
(and)h(o)o(v)o(er-)131 2234 y(lapp)q(ed)j(factors)g(as)g(p)q(ercen)o
(tages,)g(resp)q(ectiv)o(ely)l(.)k(The)c(di\013erence)f(b)q(et)o(w)o
(een)f(the)h(full)g Fo(ILP)g Fp(and)131 2324 y Fo(Simple)e
Fp(bars)j(represen)o(ts)e(the)h(extra)f(factor.)24 b(Belo)o(w)16
b(eac)o(h)g Fo(ILP)g Fp(bar,)h(w)o(e)g(also)g(sho)o(w)h(the)f(miss)131
2415 y(factor)k(for)g(reference)e({)i(the)f(read)h(miss)e(ILP)i(sp)q
(eedup)f(is)h(the)f(miss)f(factor)i(divided)e(b)o(y)i(the)131
2505 y(uno)o(v)o(erlapp)q(ed)16 b(factor.)204 2597 y(W)l(e)21
b(measure)e(the)i(latency)e(of)i(a)h(read)e(miss)g(from)f(the)i(time)d
(the)j(address)g(for)g(the)g(miss)131 2687 y(is)d(generated)g(to)h(the)
f(time)e(the)i(v)m(alue)g(arriv)o(es)g(at)g(the)g(pro)q(cessor;)i
(therefore,)e(the)g(extra)g(and)p eop
%%Page: 20 27
20 26 bop 1882 72 a Fp(20)131 222 y(o)o(v)o(erlapp)q(ed)12
b(factors)g(in)g(Figure)g(3.3)g(incorp)q(orate)h(time)d(sp)q(en)o(t)i
(b)o(y)f(a)i(read)f(miss)f(in)g(the)h(pro)q(cessor)131
312 y(memory)i(unit)i(and)g(an)o(y)h(o)o(v)o(erlap)e(seen)h(during)g
(that)h(time.)204 405 y(Figure)d(3.4)h(pro)o(vides)f(additional)h(data)
g(to)g(indicate)f(o)o(v)o(erlapp)q(ed)f(and)i(extra)g(latency)e(after)
131 495 y(a)i(read)g(miss)f(is)g(issued)h(to)g(the)f(memory)e(system.)
19 b(This)c(\014gure)g(illustrates)f(MSHR)g(o)q(ccupancy)131
585 y(distributions)j(at)g(the)f(L1)h(and)h(L2)f(cac)o(hes.)22
b(Eac)o(h)16 b(plot)h(giv)o(es)f(the)g(fraction)h(of)g(total)f(time)f
(\(on)131 676 y(the)g(v)o(ertical)e(axis\))i(for)g(whic)o(h)f(at)i
(least)e(N)h(MSHRs)f(are)h(o)q(ccupied)g(b)o(y)f(misses,)g(where)g(N)h
(is)g(the)131 766 y(n)o(um)o(b)q(er)i(on)i(the)f(horizon)o(tal)h(axis.)
28 b(Recall)17 b(that)i(only)f(read)h(misses)e(reserv)o(e)g(L1)i
(MSHRs,)g(as)131 856 y(the)c(L1)h(cac)o(he)e(is)g(no-write-allo)q
(cate.)22 b(Th)o(us,)15 b(the)f(L1)i(MSHR)e(o)q(ccupancy)h(graph)h
(indicates)e(L1)131 946 y(read)h(miss)f(o)o(v)o(erlap)g(in)h(the)g
(system.)k(Since)c(the)g(L2)h(MSHR)e(o)q(ccupancy)h(graph)h(includes)e
(b)q(oth)131 1037 y(read)20 b(and)g(write)f(misses,)f(an)i(L2)h(MSHR)d
(o)q(ccupancy)i(greater)g(than)g(the)f(corresp)q(onding)h(L1)131
1127 y(MSHR)12 b(o)q(ccupancy)g(indicates)f(resource)h(con)o(ten)o
(tion)f(seen)h(b)o(y)g(reads)g(due)g(to)h(in)o(terference)c(from)131
1217 y(writes.)24 b(W)l(e)17 b(next)f(use)h(the)g(ab)q(o)o(v)o(e)g
(data)h(to)g(understand)g(the)e(reasons)i(for)g(the)f(uno)o(v)o(erlapp)
q(ed)131 1308 y(factor)g(seen)f(in)g(eac)o(h)f(application.)204
1400 y(LU)p 274 1400 15 2 v 18 w(opt,)d(FFT)p 487 1400
V 17 w(opt,)g(Erlebac)o(her,)f(and)g(Mp3d)g(ha)o(v)o(e)f(mo)q(derate)g
(to)i(high)f(o)o(v)o(erlapp)q(ed)f(factors)131 1490 y(due)23
b(to)f(their)g(mo)q(derate)g(to)h(high)f(L1)h(MSHR)f(o)q(ccupancies.)40
b(The)22 b(optimizations)f(w)o(e)h(use)131 1581 y(in)f(LU)p
263 1581 V 18 w(opt)g(and)h(FFT)p 571 1581 V 17 w(opt)g(to)f(cluster)f
(read)h(misses)f(together)h(in)g(the)f(instruction)h(windo)o(w)131
1671 y(are)g(resp)q(onsible)g(for)h(their)e(higher)h(o)o(v)o(erlap)f
(relativ)o(e)f(to)j(LU)f(and)g(FFT)g(resp)q(ectiv)o(ely)l(.)33
b(The)131 1761 y(increased)18 b(frequency)e(of)j(reads)f(due)g(to)h
(the)f(high)g(read)g(o)o(v)o(erlap)f(in)h(these)g(four)g(applications)
131 1851 y(leads)j(to)f(an)h(extra)g(latency)e(due)i(to)f(con)o(ten)o
(tion)g(e\013ects,)h(primarily)d(in)i(the)g(main)f(memory)131
1942 y(system.)g(W)l(rite)13 b(tra\016c)h(additionally)f(increases)h
(this)f(extra)h(factor,)g(though)h(not)g(signi\014can)o(tly)l(.)131
2032 y(Ho)o(w)o(ev)o(er,)22 b(as)h(sho)o(wn)g(in)e(Figure)h(3.3,)i(on)f
(all)e(these)h(applications,)i(the)e(p)q(ositiv)o(e)f(e\013ects)h(of)
131 2122 y(the)17 b(o)o(v)o(erlapp)q(ed)f(factor)i(out)o(w)o(eigh)e
(the)h(negativ)o(e)f(e\013ects)h(of)g(the)g(extra)f(factor,)h
(subsequen)o(tly)131 2213 y(leading)f(to)h(a)g(lo)o(w)f(uno)o(v)o
(erlapp)q(ed)f(factor)i(and,)f(hence,)f(higher)h(read)h(miss)e(ILP)h
(sp)q(eedups.)204 2305 y(Radix,)f(on)g(the)g(other)g(hand,)h
(illustrates)e(the)g(opp)q(osite)i(extreme.)i(Figure)d(3.3)g(sho)o(ws)h
(that)131 2395 y(in)c(Radix,)h(the)f(negativ)o(e)f(e\013ects)h(of)h
(extra)f(latency)g(due)g(to)h(increased)f(con)o(ten)o(tion)f
(signi\014can)o(tly)131 2485 y(out)o(w)o(eigh)20 b(the)g(p)q(ositiv)o
(e)f(e\013ects)h(due)g(to)g(o)o(v)o(erlap,)g(leading)f(to)i(a)f(high)g
(uno)o(v)o(erlapp)q(ed)g(factor)131 2576 y(of)i(1.36.)38
b(The)21 b(high)h(extra)f(factor)h(is)f(primarily)e(due)i(to)h(write)f
(tra\016c.)37 b(Figure)21 b(3.4)g(sho)o(ws)131 2666 y(that)j(in)f
(Radix,)i(L2)f(MSHRs)f(are)h(saturated)g(for)g(o)o(v)o(er)e(70\045)i
(of)g(the)f(execution.)42 b(F)l(urther)p eop
%%Page: 21 28
21 27 bop 1882 72 a Fp(21)190 181 y
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 190 181 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_HighAppsP8L1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( Erlebacher) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( Mp3d) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( LU_opt) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( FFT_opt) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 145.029 M9
114.353 97.7143 M9
135.529 85.3714 M9
156.706 82.2857 M9
177.882 74.0571 M9
199.059 73.0286 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 165.6 M9
114.353 128.571 M9
135.529 81.2571 M9
156.706 73.0286 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 138.857 M9
114.353 95.6571 M9
135.529 89.4857 M9
156.706 87.4286 M9
177.882 86.4 M9
199.059 84.3429 M9
220.235 83.3143 M9
241.412 81.2571 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 117.257 M9
114.353 93.6 M9
135.529 91.5429 M9
156.706 82.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica SetTxt
(1.2) 0 65 191.229 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 145.029 SY
<02> 114.353 97.7143 SY
<02> 135.529 85.3714 SY
<02> 156.706 82.2857 SY
<02> 177.882 74.0571 SY
<02> 199.059 73.0286 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 174.857 SY
<06> 93.1765 165.6 SY
<06> 114.353 128.571 SY
<06> 135.529 81.2571 SY
<06> 156.706 73.0286 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 138.857 SY
<0a> 114.353 95.6571 SY
<0a> 135.529 89.4857 SY
<0a> 156.706 87.4286 SY
<0a> 177.882 86.4 SY
<0a> 199.059 84.3429 SY
<0a> 220.235 83.3143 SY
<0a> 241.412 81.2571 SY
<0d> 72 174.857 SY
<0d> 93.1765 117.257 SY
<0d> 114.353 93.6 SY
<0d> 135.529 91.5429 SY
<0d> 156.706 82.2857 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 1123 181 a
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 1123 181 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_LowAppsP8L1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( FFT) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( LU) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( Water) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( Radix) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 130.629 M9
114.353 73.0286 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 131.657 M9
114.353 98.7429 M9
135.529 75.0857 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 118.286 M9
114.353 85.3714 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 133.714 M9
114.353 74.0571 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica SetTxt
(1.2) 0 65 191.229 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 130.629 SY
<02> 114.353 73.0286 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 174.857 SY
<06> 93.1765 131.657 SY
<06> 114.353 98.7429 SY
<06> 135.529 75.0857 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 118.286 SY
<0a> 114.353 85.3714 SY
<0a> 135.529 72 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 174.857 SY
<0d> 93.1765 133.714 SY
<0d> 114.353 74.0571 SY
<0d> 135.529 72 SY
<0d> 156.706 72 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 757 822 a Fp(\(a\))16 b(L1)i(MSHR)d(o)q(ccupancy)190
869 y
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 190 869 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_HighAppsP8L2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( Erlebacher) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( Mp3d) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( LU_opt) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( FFT_opt) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 147.086 M9
114.353 117.257 M9
135.529 90.5143 M9
156.706 85.3714 M9
177.882 79.2 M9
199.059 76.1143 M9
220.235 73.0286 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 168.686 M9
114.353 157.371 M9
135.529 141.943 M9
156.706 122.4 M9
177.882 96.6857 M9
199.059 83.3143 M9
220.235 76.1143 M9
241.412 74.0571 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 120.343 M9
114.353 98.7429 M9
135.529 95.6571 M9
156.706 93.6 M9
177.882 90.5143 M9
199.059 88.4571 M9
220.235 86.4 M9
241.412 83.3143 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 124.457 M9
114.353 111.086 M9
135.529 102.857 M9
156.706 93.6 M9
177.882 82.2857 M9
199.059 76.1143 M9
220.235 74.0571 M9
241.412 73.0286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 191.229 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 147.086 SY
<02> 114.353 117.257 SY
<02> 135.529 90.5143 SY
<02> 156.706 85.3714 SY
<02> 177.882 79.2 SY
<02> 199.059 76.1143 SY
<02> 220.235 73.0286 SY
<02> 241.412 72 SY
<06> 72 174.857 SY
<06> 93.1765 168.686 SY
<06> 114.353 157.371 SY
<06> 135.529 141.943 SY
<06> 156.706 122.4 SY
<06> 177.882 96.6857 SY
<06> 199.059 83.3143 SY
<06> 220.235 76.1143 SY
<06> 241.412 74.0571 SY
<0a> 72 174.857 SY
<0a> 93.1765 120.343 SY
<0a> 114.353 98.7429 SY
<0a> 135.529 95.6571 SY
<0a> 156.706 93.6 SY
<0a> 177.882 90.5143 SY
<0a> 199.059 88.4571 SY
<0a> 220.235 86.4 SY
<0a> 241.412 83.3143 SY
<0d> 72 174.857 SY
<0d> 93.1765 124.457 SY
<0d> 114.353 111.086 SY
<0d> 135.529 102.857 SY
<0d> 156.706 93.6 SY
<0d> 177.882 82.2857 SY
<0d> 199.059 76.1143 SY
<0d> 220.235 74.0571 SY
<0d> 241.412 73.0286 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 1123 869 a
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 1123 869 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_LowAppsP8L2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( FFT) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( LU) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( Water) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( Radix) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 129.6 M9
114.353 90.5143 M9
135.529 87.4286 M9
156.706 83.3143 M9
177.882 80.2286 M9
199.059 75.0857 M9
220.235 74.0571 M9
241.412 73.0286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 125.486 M9
114.353 98.7429 M9
135.529 86.4 M9
156.706 74.0571 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 123.429 M9
114.353 96.6857 M9
135.529 78.1714 M9
156.706 73.0286 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 160.457 M9
114.353 151.2 M9
135.529 150.171 M9
156.706 149.143 M9
177.882 149.143 M9
199.059 149.143 M9
220.235 147.086 M9
241.412 145.029 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 191.229 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 129.6 SY
<02> 114.353 90.5143 SY
<02> 135.529 87.4286 SY
<02> 156.706 83.3143 SY
<02> 177.882 80.2286 SY
<02> 199.059 75.0857 SY
<02> 220.235 74.0571 SY
<02> 241.412 73.0286 SY
<06> 72 174.857 SY
<06> 93.1765 125.486 SY
<06> 114.353 98.7429 SY
<06> 135.529 86.4 SY
<06> 156.706 74.0571 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 123.429 SY
<0a> 114.353 96.6857 SY
<0a> 135.529 78.1714 SY
<0a> 156.706 73.0286 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 174.857 SY
<0d> 93.1765 160.457 SY
<0d> 114.353 151.2 SY
<0d> 135.529 150.171 SY
<0d> 156.706 149.143 SY
<0d> 177.882 149.143 SY
<0d> 199.059 149.143 SY
<0d> 220.235 147.086 SY
<0d> 241.412 145.029 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 764 1510 a Fp(\(b\))h(L2)h(MSHR)f(o)q(ccupancy)374 1644
y Fi(Figure)j(3.4)48 b Fp(MSHR)15 b(o)q(ccupancy)i(in)f(an)h(8-pro)q
(cessor)g Fo(ILP)f Fp(system)131 1781 y(misses)c(no)o(w)i(stall)f(at)h
(the)f(L2)h(cac)o(he,)f(prev)o(en)o(ting)f(other)i(accesses)f(from)f
(issuing)i(to)g(that)g(cac)o(he;)131 1871 y(ev)o(en)o(tually)l(,)g
(this)i(bac)o(kup)g(reac)o(hes)g(the)g(primary)e(cac)o(he)i(p)q(orts)h
(and)g(the)f(pro)q(cessor's)h(memory)131 1961 y(units,)22
b(causing)g(misses)e(to)i(exp)q(erience)d(a)j(high)g(extra)f(latency)l
(.)35 b(This)22 b(bac)o(kup)f(also)h(causes)131 2052
y(Radix)14 b(to)h(see)f(a)g(large)h(read)f(hit)g(comp)q(onen)o(t.)20
b(F)l(urther,)13 b(the)h(lo)o(w)h(L1)g(MSHR)e(o)q(ccupancy)l(,)i(seen)
131 2142 y(in)h(Figure)g(3.4,)g(sho)o(ws)h(that)g(Radix)f(has)h(little)
d(p)q(oten)o(tial)i(to)h(o)o(v)o(erlap)e(m)o(ultiple)e(read)k(misses.)
204 2234 y(FFT)d(is)g(the)f(only)h(application)f(to)h(see)g(neither)f
(o)o(v)o(erlap)f(e\013ects)i(nor)g(con)o(ten)o(tion)f(e\013ects,)h(as)
131 2324 y(indicated)j(b)o(y)g(the)g(lo)o(w)h(L1)g(and)g(L2)h(MSHR)d(o)
q(ccupancies.)26 b(This)17 b(leads)h(to)g(an)g(uno)o(v)o(erlapp)q(ed)
131 2415 y(factor)f(close)f(to)g(1)h(and)g(consequen)o(tly)e(a)h(read)h
(miss)e(ILP)h(sp)q(eedup)h(close)e(to)i(1.)204 2507 y(Finally)l(,)d(w)o
(e)g(discuss)h(t)o(w)o(o)g(applications)g({)g(LU)g(and)g(W)l(ater)g({)g
(whic)o(h)f(sho)o(w)i(relativ)o(ely)c(high)131 2597 y(o)o(v)o(erlapp)q
(ed)h(and)i(extra)e(factors,)i(despite)e(lo)o(w)h(MSHR)f(o)q
(ccupancies.)20 b(In)14 b(LU)g(\(and)g(LU)p 1775 2597
15 2 v 18 w(opt,)g(to)131 2688 y(a)g(lesser)e(exten)o(t\),)g(the)h
Fo(ILP)f Fp(pro)q(cessor)i(coalesces)e(accesses)h(that)g(cause)g(L1)h
(cac)o(he)e(misses)g(in)h(the)p eop
%%Page: 22 29
22 28 bop 1882 72 a Fp(22)131 222 y Fo(Simple)17 b Fp(case.)29
b(Our)19 b(detailed)f(statistics)h(sho)o(w)g(that)h(these)e(misses)g
(are)h(primarily)d(L2)k(cac)o(he)131 312 y(hits)d(in)f(the)h
Fo(Simple)d Fp(case.)23 b(Th)o(us,)17 b(the)g Fo(Simple)d
Fp(miss)i(latency)g(includes)f(these)i(L2)g(cac)o(he)f(hits)131
403 y(and)22 b(remote)d(misses)h(while)g(the)h Fo(ILP)f
Fp(miss)g(latency)g(includes)g(only)h(the)f(remaining)g(remote)131
493 y(misses.)33 b(This)21 b(c)o(hange)g(in)f(miss)f(pattern)i(leads)g
(to)g(a)g(higher)f(a)o(v)o(erage)g(miss)f(latency)h(in)h(the)131
583 y Fo(ILP)f Fp(system)f(than)j(in)e(the)h Fo(Simple)d
Fp(system,)i(leading)h(to)g(a)g(high)g(extra)g(factor.)35
b(The)21 b(extra)131 674 y(factor)c(further)f(increases)g(from)g(a)h
(greater)f(frequency)f(of)i(memory)d(accesses,)i(whic)o(h)f(leads)i(to)
131 764 y(increased)h(net)o(w)o(ork)g(and)i(mem)o(ory)c(con)o(ten)o
(tion)i(in)g(the)h Fo(ILP)e Fp(system.)27 b(LU)19 b(can)g(o)o(v)o
(erlap)e(only)131 854 y(a)23 b(p)q(ortion)g(of)f(this)g(extra)g
(latency)l(,)h(leading)f(to)g(an)h(uno)o(v)o(erlapp)q(ed)f(factor)g
(greater)h(than)f(1.)131 944 y(Ho)o(w)o(ev)o(er,)14 b(LU)j(still)e(ac)o
(hiev)o(es)f(a)j(read)f(miss)f(ILP)i(sp)q(eedup)f(b)q(ecause)h(of)f
(its)g(miss)f(factor.)204 1037 y(W)l(ater)23 b(stands)h(apart)f(from)e
(the)i(other)f(applications)h(b)q(ecause)g(of)f(its)h(sync)o
(hronization)131 1127 y(c)o(haracteristics.)i(Its)18
b(extra)g(latency)f(arises)h(b)q(ecause)g(reads)h(m)o(ust)d(often)i(w)o
(ait)g(on)h(a)f(p)q(ending)131 1217 y(acquire)j(op)q(eration)i(to)f
(complete)d(b)q(efore)j(issuing.)37 b(The)22 b(latency)f(con)o
(tribution)g(caused)h(b)o(y)131 1308 y(this)15 b(w)o(aiting,)g(ho)o(w)o
(ev)o(er,)e(is)i(o)o(v)o(erlapp)q(ed)f(b)o(y)h(the)g(lo)q(c)o(k)f
(acquire)g(itself.)20 b(As)15 b(a)g(result,)f(W)l(ater)i(has)131
1398 y(a)k(large)f(apparen)o(t)g(o)o(v)o(erlap.)29 b(Nev)o(ertheless,)
17 b(W)l(ater's)i(p)q(o)q(or)h(MSHR)f(o)q(ccupancy)g(prev)o(en)o(ts)f
(it)131 1488 y(from)d(getting)i(a)f(lo)o(w)g(uno)o(v)o(erlapp)q(ed)g
(factor,)g(and)h(its)f(read)h(miss)d(ILP)j(sp)q(eedup)g(is)f(close)f
(to)i(1.)204 1581 y(In)i(summary)l(,)f(the)h(k)o(ey)f(reasons)j(for)e
(the)g(lo)o(w)h(read)f(miss)f(ILP)i(sp)q(eedup)f(in)g(most)g(of)h(our)
131 1671 y(applications)c(are)f(a)h(lac)o(k)f(of)h(opp)q(ortunit)o(y)f
(in)h(the)f(applications)g(for)h(o)o(v)o(erlapping)f(read)h(misses)131
1761 y(and/or)i(increased)d(con)o(ten)o(tion)h(in)g(the)g(system.)204
1853 y(As)h(discussed)g(ab)q(o)o(v)o(e,)g(our)h(analysis)f(primarily)e
(fo)q(cuses)i(on)h(the)f(e\013ectiv)o(eness)e(of)i(ILP)h(on)131
1944 y(the)j(data)i(memory)18 b(comp)q(onen)o(t)j(of)g(execution)g
(time)e(since)i(this)g(is)g(the)g(comp)q(onen)o(t)g(whic)o(h)131
2034 y(determines)14 b(the)j(o)o(v)o(erall)e(e\013ectiv)o(eness)f(of)j
(ILP)g(in)f(our)h(systems.)k(An)o(y)15 b(de\014ciency)g(in)h(o)o(v)o
(erlap)131 2124 y(among)g(data)i(read)e(misses)f(is)h(particularly)f
(damaging)h(since)g(these)g(op)q(erations)h(are)f(the)g(only)131
2215 y(particularly)i(high-latency)g(instructions)g(in)g(the)g(mo)q
(dels)g(w)o(e)g(study)g(and)h(in)f(curren)o(t)g(micro-)131
2305 y(pro)q(cessors.)j(If)11 b(future)h(micropro)q(cessors)f(include)g
(high-latency)g(computational)g(instructions,)131 2395
y(then)16 b(those)g(instructions)f(m)o(ust)g(also)h(b)q(e)g(e\013ectiv)
o(ely)d(o)o(v)o(erlapp)q(ed)i(in)h(order)f(to)h(ac)o(hiev)o(e)e
(signif-)131 2485 y(ican)o(t)i(b)q(ene\014ts)g(from)f(ILP)l(.)p
eop
%%Page: 23 30
23 29 bop 1882 72 a Fp(23)131 222 y Fi(3.1.3)55 b(Sync)n(hronization)19
b(ILP)f(Sp)r(eedup)131 347 y Fp(In)12 b(general,)g Fo(ILP)e
Fp(pro)q(cessors)j(can)f(a\013ect)g(sync)o(hronization)g(time)d(in)j
(the)f(follo)o(wing)h(w)o(a)o(ys.)19 b(First,)131 437
y(ILP)i(reduces)f(sync)o(hronization)f(w)o(aiting)i(times)d(through)j
(reduced)f(computation)g(time)e(and)131 527 y(o)o(v)o(erlapp)q(ed)12
b(data)g(read)g(misses.)19 b(Second,)12 b(acquire)f(latency)g(can)h(b)q
(e)g(o)o(v)o(erlapp)q(ed)g(with)f(previous)131 617 y(op)q(erations)21
b(of)g(its)f(pro)q(cessor,)h(as)g(allo)o(w)o(ed)f(b)o(y)f(release)g
(consistency)h([GLL)1582 599 y Fk(+)1612 617 y Fp(90)q(].)32
b(The)21 b(third)131 708 y(factor)c(is)g(a)g(negativ)o(e)e(e\013ect:)22
b(increased)16 b(con)o(ten)o(tion)g(in)g(the)g(memory)e(system)h(due)h
(to)h(higher)131 798 y(frequency)e(of)i(accesses)f(can)g(increase)g(o)o
(v)o(erall)e(sync)o(hronization)i(latency)l(.)204 890
y(The)i(ab)q(o)o(v)o(e)h(factors)f(com)o(bine)e(to)i(pro)q(duce)h(a)f
(v)m(ariet)o(y)f(of)i(sync)o(hronization)e(sp)q(eedups)i(for)131
981 y(our)j(applications,)f(ranging)h(from)e(0.88)h(in)g(Mp3d)g(to)g
(2.01)h(in)f(Radix.)34 b(Ho)o(w)o(ev)o(er,)20 b(sync)o(hro-)131
1071 y(nization)g(accoun)o(ts)g(for)g(only)f(a)h(small)e(fraction)i(of)
g(total)g(execution)f(time)e(in)j(all)f(our)h(appli-)131
1161 y(cations;)d(therefore,)f(sync)o(hronization)h(ILP)g(sp)q(eedup)g
(do)q(es)h(not)f(con)o(tribute)f(m)o(uc)o(h)e(to)k(o)o(v)o(erall)131
1252 y(ILP)f(sp)q(eedup)f(for)h(our)g(applications)f(and)h(system.)131
1435 y Fs(3.2)66 b(Impact)23 b(of)f(ILP)g(on)h(P)n(arallel)h
(E\016ciency)131 1560 y Fp(This)19 b(section)g(details)f(the)h(impact)e
(of)j(ILP)f(on)g(parallel)f(e\016ciency)l(.)27 b(The)19
b(parallel)g(e\016ciency)131 1650 y(\()p Fm(P)7 b(E)s
Fp(\))12 b(of)g(a)g(m)o(ultipro)q(cessor)e(application)h(running)h(on)g
(a)f(system)f(with)i Fm(N)k Fp(pro)q(cessors)d(is)f(de\014ned)131
1741 y(as:)509 1923 y Fm(P)7 b(E)583 1930 y Fj(N)630
1923 y Fp(=)708 1889 y Fn(Exe)n(cution)22 b(time)g(on)f(unipr)n(o)n(c)n
(essor)p 687 1912 725 2 v 687 1957 a(Exe)n(cution)i(time)e(on)h
(multipr)n(o)n(c)n(essor)1439 1923 y Fg(\002)1515 1889
y Fp(1)p 1505 1912 45 2 v 1505 1957 a Fm(N)1807 1923
y Fp(\(3.10\))204 2043 y(Section)h(3.2.1)g(analyzes)f(the)h(parallel)f
(e\016ciency)f(of)i(8-pro)q(cessor)h(ILP)f(con\014gurations,)131
2133 y(comparing)i(ILP)g(e\013ectiv)o(eness)f(on)i(unipro)q(cessors)g
(and)g(m)o(ultipro)q(cessors.)47 b(Section)25 b(3.2.2)131
2223 y(builds)e(up)q(on)i(this)e(analysis)g(to)h(sho)o(w)g(the)f
(impact)f(of)i(ILP)f(on)h(the)f(parallel)g(e\016ciency)e(of)131
2313 y(larger)16 b(con\014gurations.)131 2475 y Fi(3.2.1)55
b(P)n(arallel)19 b(E\016ciency)d(on)j(an)g(Eigh)n(t-Pro)r(cessor)f
(Con\014guration)131 2600 y Fp(Figure)f(3.5)h(sho)o(ws)g(the)f
(parallel)g(e\016ciency)e(ac)o(hiev)o(ed)g(b)o(y)i(our)h(8-pro)q
(cessor)h Fo(ILP)d Fp(and)i Fo(Simple)131 2690 y Fp(systems)k(for)g
(all)g(our)h(applications,)h(expressed)e(as)h(a)g(p)q(ercen)o(tage.)40
b(Except)22 b(for)h(FFT)p 1833 2690 15 2 v 17 w(opt,)p
eop
%%Page: 24 31
24 30 bop 1882 72 a Fp(24)131 181 y
 26049576 9472573 657817 -526254 56835440 24339251 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/comp_su/comppe_AllAppsP8.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
96.2449 72 S9
[] 21.600000 SL
96.2449 270.49 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
128.571 72 S9
[] 21.600000 SL
128.571 216.893 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.224 72 S9
[] 21.600000 SL
193.224 273.456 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
225.551 72 S9
[] 21.600000 SL
225.551 221.443 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
290.204 72 S9
[] 21.600000 SL
290.204 338.342 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
322.531 72 S9
[] 21.600000 SL
322.531 311.99 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
387.184 72 S9
[] 21.600000 SL
387.184 141.638 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.51 72 S9
[] 21.600000 SL
419.51 116.755 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
484.163 72 S9
[] 21.600000 SL
484.163 321.754 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
516.49 72 S9
[] 21.600000 SL
516.49 286.042 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
581.143 72 S9
[] 21.600000 SL
581.143 324.058 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
613.469 72 S9
[] 21.600000 SL
613.469 326.016 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
678.122 72 S9
[] 21.600000 SL
678.122 289.786 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
710.449 72 S9
[] 21.600000 SL
710.449 240.134 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
775.102 72 S9
[] 21.600000 SL
775.102 231.264 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
807.429 72 S9
[] 21.600000 SL
807.429 174.125 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
847.837 72 S9
[] 19.200000 SL
847.837 360 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
847.837 72 S9
[] 19.200000 SL
847.837 339.84 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
847.837 72 S9
847.837 319.68 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 129.6 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 124.2 TXR
12 /Helvetica SetTxt
(|) -90 72 187.2 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 181.8 TXR
12 /Helvetica SetTxt
(|) -90 72 244.8 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 239.4 TXR
12 /Helvetica SetTxt
(|) -90 72 302.4 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 297 TXR
12 /Helvetica SetTxt
(|) -90 72 360 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 354.6 TXR
18 /Helvetica SetTxt
() 0 468 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 864 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 864 37 TXR
( % Parallel efficiency) 90 28.1 360 TXR
15 /Helvetica SetTxt
(Simple) 0 91.3959 57.6 TXC
(ILP) 0 131.804 57.6 TXC
(68.9) 0 96.2449 273.37 TXC
(50.3) 0 128.571 219.773 TXC
18 /Helvetica SetTxt
(LU) 0 112.408 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 188.376 57.6 TXC
(ILP) 0 228.784 57.6 TXC
(69.9) 0 193.224 276.336 TXC
(51.9) 0 225.551 224.323 TXC
18 /Helvetica SetTxt
(LU_opt) 0 209.388 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 285.355 57.6 TXC
(ILP) 0 325.763 57.6 TXC
(92.5) 0 290.204 341.222 TXC
(83.3) 0 322.531 314.87 TXC
18 /Helvetica SetTxt
(Erlebacher) 0 306.367 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 382.335 57.6 TXC
(ILP) 0 422.743 57.6 TXC
(24.2) 0 387.184 144.518 TXC
(15.5) 0 419.51 119.635 TXC
18 /Helvetica SetTxt
(Mp3d) 0 403.347 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 479.314 57.6 TXC
(ILP) 0 519.722 57.6 TXC
(86.7) 0 484.163 324.634 TXC
(74.3) 0 516.49 288.922 TXC
18 /Helvetica SetTxt
(FFT) 0 500.327 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 576.294 57.6 TXC
(ILP) 0 616.702 57.6 TXC
(87.5) 0 581.143 326.938 TXC
(88.2) 0 613.469 328.896 TXC
18 /Helvetica SetTxt
(FFT_opt) 0 597.306 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 673.273 57.6 TXC
(ILP) 0 713.682 57.6 TXC
(75.6) 0 678.122 292.666 TXC
(58.4) 0 710.449 243.014 TXC
18 /Helvetica SetTxt
(Water) 0 694.286 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 770.253 57.6 TXC
(ILP) 0 810.661 57.6 TXC
(55.3) 0 775.102 234.144 TXC
(35.5) 0 807.429 177.005 TXC
18 /Helvetica SetTxt
(Radix) 0 791.265 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 831.673 342.72 TXR
(ILP) 0 831.673 322.56 TXR
() 0 91.3959 41.85 TXC
() 0 131.804 41.85 TXC
() 0 96.2449 257.62 TXC
() 0 128.571 204.023 TXC
18 /Helvetica SetTxt
() 0 112.408 9.9 TXC
15 /Helvetica SetTxt
() 0 188.376 41.85 TXC
() 0 228.784 41.85 TXC
() 0 193.224 260.586 TXC
() 0 225.551 208.573 TXC
18 /Helvetica SetTxt
() 0 209.388 9.9 TXC
15 /Helvetica SetTxt
() 0 285.355 41.85 TXC
() 0 325.763 41.85 TXC
() 0 290.204 325.472 TXC
() 0 322.531 299.12 TXC
18 /Helvetica SetTxt
() 0 306.367 9.9 TXC
15 /Helvetica SetTxt
() 0 382.335 41.85 TXC
() 0 422.743 41.85 TXC
() 0 387.184 128.768 TXC
() 0 419.51 103.885 TXC
18 /Helvetica SetTxt
() 0 403.347 9.9 TXC
15 /Helvetica SetTxt
() 0 479.314 41.85 TXC
() 0 519.722 41.85 TXC
() 0 484.163 308.884 TXC
() 0 516.49 273.172 TXC
18 /Helvetica SetTxt
() 0 500.327 9.9 TXC
15 /Helvetica SetTxt
() 0 576.294 41.85 TXC
() 0 616.702 41.85 TXC
() 0 581.143 311.188 TXC
() 0 613.469 313.146 TXC
18 /Helvetica SetTxt
() 0 597.306 9.9 TXC
15 /Helvetica SetTxt
() 0 673.273 41.85 TXC
() 0 713.682 41.85 TXC
() 0 678.122 276.916 TXC
() 0 710.449 227.264 TXC
18 /Helvetica SetTxt
() 0 694.286 9.9 TXC
15 /Helvetica SetTxt
() 0 770.253 41.85 TXC
() 0 810.661 41.85 TXC
() 0 775.102 218.394 TXC
() 0 807.429 161.255 TXC
18 /Helvetica SetTxt
() 0 791.265 9.9 TXC
15 /Helvetica SetTxt
() 0 831.673 326.97 TXR
() 0 831.673 306.81 TXR
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 366 839 a Fi(Figure)18 b(3.5)48 b Fp(P)o(arallel)15
b(E\016ciency)g(with)h Fo(Simple)e Fp(and)j Fo(ILP)e
Fp(systems)131 978 y(parallel)22 b(e\016ciency)e(for)i
Fo(ILP)g Fp(con\014gurations)h(is)f(considerably)g(less)g(than)h(that)g
(for)f Fo(Simple)131 1068 y Fp(con\014gurations.)204
1159 y(The)16 b(parallel)f(e\016ciency)f(of)i(an)g Fo(ILP)f
Fp(system)f(can)i(b)q(e)g(related)f(to)i(the)e(ILP)h(sp)q(eedup)g(of)h
(the)131 1250 y Fo(ILP)e Fp(system)g(b)o(y)h(extending)f(Equation)i
(3.10)g(as)g(follo)o(ws:)332 1468 y Fm(P)7 b(E)406 1475
y Fj(N)r(;I)s(LP)558 1468 y Fp(=)663 1434 y Fn(Exe)n(cution)23
b(time)e(on)h Fo(ILP)16 b Fn(unipr)n(o)n(c)n(essor)p
643 1457 819 2 v 643 1502 a(Exe)n(cution)22 b(time)g(on)f
Fo(ILP)c Fn(multipr)n(o)n(c)n(essor)1489 1468 y Fg(\002)1565
1434 y Fp(1)p 1555 1457 45 2 v 1555 1502 a Fm(N)1807
1468 y Fp(\(3.11\))558 1616 y(=)648 1551 y Fe(Exe)n(cution)22
b(time)e(on)g Fl(Simple)c Fe(unipr)n(o)n(c)n(essor)p
648 1562 637 2 v 757 1591 a(Unipr)n(o)n(c)n(essor)23
b(ILP)e(sp)n(e)n(e)n(dup)p 643 1604 647 2 v 659 1632
a(Exe)n(cution)h(time)e(on)h Fl(ILP)16 b Fe(multipr)n(o)n(c)n(essor)p
659 1642 614 2 v 744 1671 a(Multipr)n(o)n(c)n(essor)22
b(ILP)f(sp)n(e)n(e)n(dup)1317 1616 y Fg(\002)1392 1582
y Fp(1)p 1382 1604 45 2 v 1382 1650 a Fm(N)1807 1616
y Fp(\(3.12\))558 1762 y(=)643 1728 y Fn(Multipr)n(o)n(c)n(essor)g(ILP)
h(sp)n(e)n(e)n(dup)p 643 1750 596 2 v 660 1796 a(Unipr)n(o)n(c)n(essor)
g(ILP)g(sp)n(e)n(e)n(dup)638 1890 y Fg(\002)713 1856
y Fn(Exe)n(cution)h(time)e(on)h Fo(Simple)15 b Fn(unipr)n(o)n(c)n
(essor)p 693 1878 896 2 v 693 1924 a(Exe)n(cution)22
b(time)g(on)f Fo(Simple)15 b Fn(multipr)n(o)n(c)n(essor)1615
1890 y Fg(\002)1691 1856 y Fp(1)p 1681 1878 45 2 v 1681
1924 a Fm(N)1807 1890 y Fp(\(3.13\))558 2020 y(=)643
1987 y Fn(Multipr)n(o)n(c)n(essor)21 b(ILP)h(sp)n(e)n(e)n(dup)p
643 2009 596 2 v 660 2054 a(Unipr)n(o)n(c)n(essor)g(ILP)g(sp)n(e)n(e)n
(dup)1265 2020 y Fg(\002)g Fm(P)7 b(E)1400 2027 y Fj(N)r(;S)r(imple)
1807 2020 y Fp(\(3.14\))204 2149 y(Th)o(us,)18 b(the)f(parallel)g
(e\016ciency)e(seen)j(b)o(y)f(the)g Fo(ILP)f Fp(system)h(is)g(greater)g
(than)i(that)f(seen)f(b)o(y)131 2239 y(the)g Fo(Simple)e
Fp(system)h(if)h(the)g(m)o(ultipro)q(cessor)f(ILP)i(sp)q(eedup)f(is)g
(greater)h(than)g(the)f(unipro)q(ces-)131 2329 y(sor)f(ILP)g(sp)q
(eedup;)g(if)f(the)g(m)o(ultipro)q(cessor)g(ILP)g(sp)q(eedup)h(is)g(lo)
o(w)o(er,)e(the)i Fo(ILP)e Fp(system)g(has)j(less)131
2419 y(parallel)c(e\016ciency)e(than)j(the)f Fo(Simple)e
Fp(system.)19 b(Th)o(us,)14 b(to)f(understand)h(the)f(di\013erence)g
(seen)g(in)131 2510 y(the)i(parallel)g(e\016ciencies)e(b)q(et)o(w)o
(een)i(the)g Fo(Simple)e Fp(and)j Fo(ILP)e Fp(m)o(ultipro)q(cessors,)g
(Figures)i(3.6{3.9)131 2600 y(presen)o(ts)g(data)h(to)g(illustrate)e
(the)h(impact)f(of)h(ILP)h(in)f(unipro)q(cessors,)h(analogous)h(to)e
(the)g(data)131 2690 y(in)g(Figures)g(3.1{3.4)g(for)g(m)o(ultipro)q
(cessors.)k(As)c(in)f(m)o(ultipro)q(cessors,)f(unipro)q(cessor)i(CPU)g
(ILP)p eop
%%Page: 25 32
25 31 bop 1882 72 a Fp(25)131 366 y
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 366 a
%%BeginDocument: Figures/SPLOT_FILES/ilpsu/ILPSU5_AllAppsP1_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 202.253 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 225.119 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 158.155 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 232.877 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 223.486 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 264.726 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 171.221 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 217.361 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 138.556 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 158.155 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 197.762 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 129.164 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.851 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.293 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.144 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.994 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 112.832 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 108.032 TXR
12 /Helvetica SetTxt
(|) -90 72 153.664 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 148.864 TXR
12 /Helvetica SetTxt
(|) -90 72 194.495 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 189.695 TXR
12 /Helvetica SetTxt
(|) -90 72 235.327 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 230.527 TXR
12 /Helvetica SetTxt
(|) -90 72 276.159 TXC
14 /Helvetica-Bold SetTxt
(5) 0 65 271.359 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(3.19) 0 86.5946 204.295 TXC
(3.75) 0 106.054 227.161 TXC
(2.11) 0 125.514 160.197 TXC
14 /Helvetica SetTxt
(LU) 0 115.784 50.3592 TXC
12 /Helvetica-Bold SetTxt
(3.94) 0 193.622 234.919 TXC
(3.71) 0 213.081 225.527 TXC
(4.72) 0 232.541 266.767 TXC
14 /Helvetica SetTxt
(LU_opt) 0 222.811 50.3592 TXC
12 /Helvetica-Bold SetTxt
(2.43) 0 300.649 173.263 TXC
(3.56) 0 320.108 219.403 TXC
(1.63) 0 339.568 140.597 TXC
14 /Helvetica SetTxt
(Erlebacher) 0 329.838 50.3592 TXC
12 /Helvetica-Bold SetTxt
(2.11) 0 407.676 160.197 TXC
(3.08) 0 427.135 199.803 TXC
(1.40) 0 446.595 131.206 TXC
14 /Helvetica SetTxt
(Mp3d) 0 436.865 50.3592 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.743 TXR
(CPU ILP Speedup) 0 592.541 238.185 TXR
(Data Mem ILP Speedup) 0 592.541 221.036 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 191.695 TXC
() 0 106.054 214.561 TXC
() 0 125.514 147.597 TXC
14 /Helvetica SetTxt
() 0 115.784 35.6592 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 222.319 TXC
() 0 213.081 212.927 TXC
() 0 232.541 254.167 TXC
14 /Helvetica SetTxt
() 0 222.811 35.6592 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 160.663 TXC
() 0 320.108 206.803 TXC
() 0 339.568 127.997 TXC
14 /Helvetica SetTxt
() 0 329.838 35.6592 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 147.597 TXC
() 0 427.135 187.203 TXC
() 0 446.595 118.606 TXC
14 /Helvetica SetTxt
() 0 436.865 35.6592 TXC
13 /Helvetica SetTxt
() 0 592.541 242.093 TXR
() 0 592.541 224.535 TXR
() 0 592.541 207.386 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 791 a
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 791 a
%%BeginDocument: Figures/SPLOT_FILES/ilpsu/ILPSU5_AllAppsP1_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 201.818 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 247.091 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 126.545 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 207.818 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 245.455 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 139.091 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 228.545 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 260.727 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 127.091 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 179.455 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 255.273 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 118.364 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.545 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.636 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.182 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.727 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 126.545 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 121.745 TXR
12 /Helvetica SetTxt
(|) -90 72 181.091 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 176.291 TXR
12 /Helvetica SetTxt
(|) -90 72 235.636 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 230.836 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(2.38) 0 86.5946 204 TXC
(3.21) 0 106.054 249.273 TXC
(1.00) 0 125.514 128.727 TXC
14 /Helvetica SetTxt
(FFT) 0 115.784 50.1818 TXC
12 /Helvetica-Bold SetTxt
(2.49) 0 193.622 210 TXC
(3.18) 0 213.081 247.636 TXC
(1.23) 0 232.541 141.273 TXC
14 /Helvetica SetTxt
(FFT_opt) 0 222.811 50.1818 TXC
12 /Helvetica-Bold SetTxt
(2.87) 0 300.649 230.727 TXC
(3.46) 0 320.108 262.909 TXC
(1.01) 0 339.568 129.273 TXC
14 /Helvetica SetTxt
(Water) 0 329.838 50.1818 TXC
12 /Helvetica-Bold SetTxt
(1.97) 0 407.676 181.636 TXC
(3.36) 0 427.135 257.455 TXC
(0.85) 0 446.595 120.545 TXC
14 /Helvetica SetTxt
(Radix) 0 436.865 50.1818 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.818 TXR
(CPU ILP Speedup) 0 592.541 238.364 TXR
(Data Mem ILP Speedup) 0 592.541 220.909 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 191.4 TXC
() 0 106.054 236.673 TXC
() 0 125.514 116.127 TXC
14 /Helvetica SetTxt
() 0 115.784 35.4818 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 197.4 TXC
() 0 213.081 235.036 TXC
() 0 232.541 128.673 TXC
14 /Helvetica SetTxt
() 0 222.811 35.4818 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 218.127 TXC
() 0 320.108 250.309 TXC
() 0 339.568 116.673 TXC
14 /Helvetica SetTxt
() 0 329.838 35.4818 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 169.036 TXC
() 0 427.135 244.855 TXC
() 0 446.595 107.945 TXC
14 /Helvetica SetTxt
() 0 436.865 35.4818 TXC
13 /Helvetica SetTxt
() 0 592.541 242.168 TXR
() 0 592.541 224.714 TXR
() 0 592.541 207.259 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 296 1284 a Fi(Figure)18 b(3.6)48 b Fp(ILP)17 b(sp)q(eedup)f(and)h
(comp)q(onen)o(ts)f(in)g(a)g(unipro)q(cessor)h(system)131
1647 y
 23681433 6630772 789381 65781 35061678 19602964 startTexFig
 131 1647 a
%%BeginDocument: Figures/SPLOT_FILES/exectime/EXEC_AllAppsP1_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 275.657 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 275.657 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 275.657 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 231.429 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 231.429 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 136.594 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 135.977 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 135.977 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 133.509 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 114.583 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 108.823 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 275.863 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 275.863 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 275.863 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 214.766 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 214.766 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 124.251 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 123.634 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 123.634 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 123.429 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 110.469 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 105.326 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 196.457 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 196.457 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 156.754 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 156.754 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 156.754 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 155.931 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 107.177 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 99.7714 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.509 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.509 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.509 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 197.897 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 197.897 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 169.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 169.714 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 169.714 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 163.337 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 112.731 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 97.5086 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 288 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 272.983 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 257.76 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 242.743 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 227.52 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 212.297 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 197.28 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 108.343 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 149.486 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 190.629 TXR
12 /Helvetica SetTxt
(|) -90 72 236.571 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 231.771 TXR
12 /Helvetica SetTxt
(|) -90 72 277.714 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 272.914 TXR
16 /Helvetica SetTxt
() 0 302.4 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 532.8 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 532.8 39.5 TXR
( Normalized execution time) 90 28.7 288 TXR
12 /Helvetica SetTxt
(Simple) 0 90.432 61.3029 TXC
(ILP) 0 125.878 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 93.2677 279.771 TXC
(31.4) 0 121.625 138.651 TXC
14 /Helvetica SetTxt
(LU) 0 107.446 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 189.681 61.3029 TXC
(ILP) 0 225.127 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 192.517 279.771 TXC
(25.4) 0 220.874 126.309 TXC
14 /Helvetica SetTxt
(LU_opt) 0 206.695 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 288.93 61.3029 TXC
(ILP) 0 324.377 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 291.766 279.771 TXC
(41.2) 0 320.123 158.811 TXC
14 /Helvetica SetTxt
(Erlebacher) 0 305.945 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 388.18 61.3029 TXC
(ILP) 0 423.626 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 391.015 279.771 TXC
(47.5) 0 419.372 171.771 TXC
14 /Helvetica SetTxt
(Mp3d) 0 405.194 43.8171 TXC
13 /Helvetica SetTxt
(Sync) 0 497.354 275.04 TXR
(Write) 0 497.354 259.817 TXR
(Read hit) 0 497.354 244.8 TXR
(Read miss) 0 497.354 229.577 TXR
(FU stall) 0 497.354 214.56 TXR
(Busy) 0 497.354 199.337 TXR
12 /Helvetica SetTxt
() 0 90.432 48.7029 TXC
() 0 125.878 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 93.2677 267.171 TXC
() 0 121.625 126.051 TXC
14 /Helvetica SetTxt
() 0 107.446 29.1171 TXC
12 /Helvetica SetTxt
() 0 189.681 48.7029 TXC
() 0 225.127 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 192.517 267.171 TXC
() 0 220.874 113.709 TXC
14 /Helvetica SetTxt
() 0 206.695 29.1171 TXC
12 /Helvetica SetTxt
() 0 288.93 48.7029 TXC
() 0 324.377 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 291.766 267.171 TXC
() 0 320.123 146.211 TXC
14 /Helvetica SetTxt
() 0 305.945 29.1171 TXC
12 /Helvetica SetTxt
() 0 388.18 48.7029 TXC
() 0 423.626 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 391.015 267.171 TXC
() 0 419.372 159.171 TXC
14 /Helvetica SetTxt
() 0 405.194 29.1171 TXC
13 /Helvetica SetTxt
() 0 497.354 261.39 TXR
() 0 497.354 246.167 TXR
() 0 497.354 231.15 TXR
() 0 497.354 215.927 TXR
() 0 497.354 200.91 TXR
() 0 497.354 185.687 TXR
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 2071 a
 23681433 6630772 789381 65781 35061678 19602964 startTexFig
 131 2071 a
%%BeginDocument: Figures/SPLOT_FILES/exectime/EXEC_AllAppsP1_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 277.714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 245.211 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
93.2677 72 S9
[] 21.600000 SL
93.2677 245.211 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 158.4 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 158.4 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 158.4 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 158.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 126.103 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
121.625 72 S9
[] 21.600000 SL
121.625 111.497 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 277.714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 241.509 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
192.517 72 S9
[] 21.600000 SL
192.517 241.509 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 154.697 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 154.697 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 154.697 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 154.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 125.28 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
220.874 72 S9
[] 21.600000 SL
220.874 110.469 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 275.451 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 275.451 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 275.451 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 260.023 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
291.766 72 S9
[] 21.600000 SL
291.766 259.2 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 144 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 141.943 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 141.326 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 137.211 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 126.309 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
320.123 72 S9
[] 21.600000 SL
320.123 111.291 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 277.714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 228.137 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
391.015 72 S9
[] 21.600000 SL
391.015 228.137 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 176.503 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 176.503 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 175.886 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 170.537 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 118.491 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
419.372 72 S9
[] 21.600000 SL
419.372 108.617 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 288 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 272.983 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 257.76 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 242.743 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 227.52 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 212.297 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
511.532 72 S9
[] 19.200000 SL
511.532 197.28 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 108.343 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 149.486 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 190.629 TXR
12 /Helvetica SetTxt
(|) -90 72 236.571 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 231.771 TXR
12 /Helvetica SetTxt
(|) -90 72 277.714 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 272.914 TXR
16 /Helvetica SetTxt
() 0 302.4 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 532.8 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 532.8 39.5 TXR
( Normalized execution time) 90 28.7 288 TXR
12 /Helvetica SetTxt
(Simple) 0 90.432 61.3029 TXC
(ILP) 0 125.878 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 93.2677 279.771 TXC
(42.0) 0 121.625 160.457 TXC
14 /Helvetica SetTxt
(FFT) 0 107.446 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 189.681 61.3029 TXC
(ILP) 0 225.127 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 192.517 279.771 TXC
(40.2) 0 220.874 156.754 TXC
14 /Helvetica SetTxt
(FFT_opt) 0 206.695 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 288.93 61.3029 TXC
(ILP) 0 324.377 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 291.766 279.771 TXC
(35.0) 0 320.123 146.057 TXC
14 /Helvetica SetTxt
(Water) 0 305.945 43.8171 TXC
12 /Helvetica SetTxt
(Simple) 0 388.18 61.3029 TXC
(ILP) 0 423.626 61.3029 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 391.015 279.771 TXC
(50.8) 0 419.372 178.56 TXC
14 /Helvetica SetTxt
(Radix) 0 405.194 43.8171 TXC
13 /Helvetica SetTxt
(Sync) 0 497.354 275.04 TXR
(Write) 0 497.354 259.817 TXR
(Read hit) 0 497.354 244.8 TXR
(Read miss) 0 497.354 229.577 TXR
(FU stall) 0 497.354 214.56 TXR
(Busy) 0 497.354 199.337 TXR
12 /Helvetica SetTxt
() 0 90.432 48.7029 TXC
() 0 125.878 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 93.2677 267.171 TXC
() 0 121.625 147.857 TXC
14 /Helvetica SetTxt
() 0 107.446 29.1171 TXC
12 /Helvetica SetTxt
() 0 189.681 48.7029 TXC
() 0 225.127 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 192.517 267.171 TXC
() 0 220.874 144.154 TXC
14 /Helvetica SetTxt
() 0 206.695 29.1171 TXC
12 /Helvetica SetTxt
() 0 288.93 48.7029 TXC
() 0 324.377 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 291.766 267.171 TXC
() 0 320.123 133.457 TXC
14 /Helvetica SetTxt
() 0 305.945 29.1171 TXC
12 /Helvetica SetTxt
() 0 388.18 48.7029 TXC
() 0 423.626 48.7029 TXC
12 /Helvetica-Bold SetTxt
() 0 391.015 267.171 TXC
() 0 419.372 165.96 TXC
14 /Helvetica SetTxt
() 0 405.194 29.1171 TXC
13 /Helvetica SetTxt
() 0 497.354 261.39 TXR
() 0 497.354 246.167 TXR
() 0 497.354 231.15 TXR
() 0 497.354 215.927 TXR
() 0 497.354 200.91 TXR
() 0 497.354 185.687 TXR
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 532.800000 72.000000 532.800000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 316 2564 a Fi(Figure)h(3.7)48 b Fp(Execution)16 b(time)e(comp)q(onen)o
(ts)i(in)f(a)i(unipro)q(cessor)g(system)p eop
%%Page: 26 33
26 32 bop 1882 72 a Fp(26)131 181 y
 26996819 6630772 789381 65781 34601205 14866677 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/latency/ILPlatency_AllAppsP1_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
85.7455 72 S9
[] 21.600000 SL
85.7455 124.941 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 183.918 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
85.7455 72 S9
[] 21.600000 SL
85.7455 124.941 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 124.835 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 124.941 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 213.618 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 124.941 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 91.3765 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 124.941 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 155.541 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 124.941 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 103.712 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 124.941 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 130.765 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 124.941 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 106.2 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 216 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 204.353 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 192.706 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 98.4706 TXC
14 /Helvetica-Bold SetTxt
(50) 0 65 93.6706 TXR
12 /Helvetica SetTxt
(|) -90 72 124.941 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 120.141 TXR
12 /Helvetica SetTxt
(|) -90 72 151.412 TXC
14 /Helvetica-Bold SetTxt
(150) 0 65 146.612 TXR
12 /Helvetica SetTxt
(|) -90 72 177.882 TXC
14 /Helvetica-Bold SetTxt
(200) 0 65 173.082 TXR
12 /Helvetica SetTxt
(|) -90 72 204.353 TXC
14 /Helvetica-Bold SetTxt
(250) 0 65 199.553 TXR
16 /Helvetica SetTxt
() 0 298.8 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 525.6 72 
L9
0 setlinecap
72 72 72 216 
L9
() 0 525.6 39.5 TXR
( Normalized miss latency) 90 28.7 216 TXR
12 /Helvetica SetTxt
(Simple) 0 85.7455 61.9412 TXC
(ILP) 0 113.236 61.9412 TXC
14 /Helvetica SetTxt
(LU) 0 99.4909 21.7059 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 85.7455 125.471 TXC
(211.4) 0 113.236 184.447 TXC
12 /Helvetica SetTxt
(2.39) 0 113.236 49.2353 TXC
(Simple) 0 181.964 61.9412 TXC
(ILP) 0 209.455 61.9412 TXC
14 /Helvetica SetTxt
(LU_opt) 0 195.709 21.7059 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 181.964 125.471 TXC
(267.5) 0 209.455 214.147 TXC
12 /Helvetica SetTxt
(1.75) 0 209.455 49.2353 TXC
(Simple) 0 278.182 61.9412 TXC
(ILP) 0 305.673 61.9412 TXC
14 /Helvetica SetTxt
(Erlebacher) 0 291.927 21.7059 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 278.182 125.471 TXC
(157.8) 0 305.673 156.071 TXC
12 /Helvetica SetTxt
(0.99) 0 305.673 49.2353 TXC
(Simple) 0 374.4 61.9412 TXC
(ILP) 0 401.891 61.9412 TXC
14 /Helvetica SetTxt
(Mp3d) 0 388.145 21.7059 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 374.4 125.471 TXC
(111.0) 0 401.891 131.294 TXC
12 /Helvetica SetTxt
(1.02) 0 401.891 49.2353 TXC
12 /Helvetica-Bold SetTxt
(Miss) 0 44.5091 55.0588 TXL
14 /Helvetica SetTxt
(overlapped) 0 498.109 205.941 TXR
(unoverlapped) 0 498.109 194.294 TXR
12 /Helvetica SetTxt
() 0 85.7455 49.3412 TXC
() 0 113.236 49.3412 TXC
14 /Helvetica SetTxt
() 0 99.4909 7.00588 TXC
12 /Helvetica-Bold SetTxt
() 0 85.7455 112.871 TXC
() 0 113.236 171.847 TXC
12 /Helvetica SetTxt
() 0 113.236 36.6353 TXC
() 0 181.964 49.3412 TXC
() 0 209.455 49.3412 TXC
14 /Helvetica SetTxt
() 0 195.709 7.00588 TXC
12 /Helvetica-Bold SetTxt
() 0 181.964 112.871 TXC
() 0 209.455 201.547 TXC
12 /Helvetica SetTxt
() 0 209.455 36.6353 TXC
() 0 278.182 49.3412 TXC
() 0 305.673 49.3412 TXC
14 /Helvetica SetTxt
() 0 291.927 7.00588 TXC
12 /Helvetica-Bold SetTxt
() 0 278.182 112.871 TXC
() 0 305.673 143.471 TXC
12 /Helvetica SetTxt
() 0 305.673 36.6353 TXC
() 0 374.4 49.3412 TXC
() 0 401.891 49.3412 TXC
14 /Helvetica SetTxt
() 0 388.145 7.00588 TXC
12 /Helvetica-Bold SetTxt
() 0 374.4 112.871 TXC
() 0 401.891 118.694 TXC
12 /Helvetica SetTxt
() 0 401.891 36.6353 TXC
12 /Helvetica-Bold SetTxt
(factor:) 0 44.5091 42.4588 TXL
14 /Helvetica SetTxt
() 0 498.109 191.241 TXR
() 0 498.109 179.594 TXR
12 /Helvetica-Bold SetTxt
() 0 44.5091 29.8588 TXL
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 605 a
 26996819 6630772 789381 65781 34601205 14866677 startTexFig
 131 605 a
%%BeginDocument: Figures/SPLOT_FILES/latency/ILPlatency_AllAppsP1_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
85.7455 72 S9
[] 21.600000 SL
85.7455 171.31 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 197.429 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
85.7455 72 S9
[] 21.600000 SL
85.7455 171.31 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
113.236 72 S9
113.236 170.714 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 171.31 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 211.928 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
181.964 72 S9
[] 21.600000 SL
181.964 171.31 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
209.455 72 S9
209.455 151.647 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 171.31 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 200.011 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
278.182 72 S9
[] 21.600000 SL
278.182 171.31 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
305.673 72 S9
305.673 143.206 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 171.31 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 204.778 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
374.4 72 S9
[] 21.600000 SL
374.4 171.31 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
401.891 72 S9
401.891 181.341 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 216 M9
gsave 0.300000 1.000000 0.300000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 205.076 M9
gsave 0.200000 0.200000 0.200000 setrgbcolor
D9
grestore
511.855 72 S9
[] 21.600000 SL
511.855 193.159 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 91.8621 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 87.0621 TXR
12 /Helvetica SetTxt
(|) -90 72 111.724 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 106.924 TXR
12 /Helvetica SetTxt
(|) -90 72 131.586 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 126.786 TXR
12 /Helvetica SetTxt
(|) -90 72 151.448 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 146.648 TXR
12 /Helvetica SetTxt
(|) -90 72 171.31 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 166.51 TXR
12 /Helvetica SetTxt
(|) -90 72 191.172 TXC
14 /Helvetica-Bold SetTxt
(120) 0 65 186.372 TXR
12 /Helvetica SetTxt
(|) -90 72 211.034 TXC
14 /Helvetica-Bold SetTxt
(140) 0 65 206.234 TXR
16 /Helvetica SetTxt
() 0 298.8 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 525.6 72 
L9
0 setlinecap
72 72 72 216 
L9
() 0 525.6 39.5 TXR
( Normalized miss latency) 90 28.7 216 TXR
12 /Helvetica SetTxt
(Simple) 0 85.7455 62.069 TXC
(ILP) 0 113.236 62.069 TXC
14 /Helvetica SetTxt
(FFT) 0 99.4909 21.3517 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 85.7455 172.303 TXC
(126.3) 0 113.236 198.422 TXC
12 /Helvetica SetTxt
(1.00) 0 113.236 49.1586 TXC
(Simple) 0 181.964 62.069 TXC
(ILP) 0 209.455 62.069 TXC
14 /Helvetica SetTxt
(FFT_opt) 0 195.709 21.3517 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 181.964 172.303 TXC
(140.9) 0 209.455 212.921 TXC
12 /Helvetica SetTxt
(1.00) 0 209.455 49.1586 TXC
(Simple) 0 278.182 62.069 TXC
(ILP) 0 305.673 62.069 TXC
14 /Helvetica SetTxt
(Water) 0 291.927 21.3517 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 278.182 172.303 TXC
(128.9) 0 305.673 201.004 TXC
12 /Helvetica SetTxt
(1.04) 0 305.673 49.1586 TXC
(Simple) 0 374.4 62.069 TXC
(ILP) 0 401.891 62.069 TXC
14 /Helvetica SetTxt
(Radix) 0 388.145 21.3517 TXC
12 /Helvetica-Bold SetTxt
(100.0) 0 374.4 172.303 TXC
(133.7) 0 401.891 205.771 TXC
12 /Helvetica SetTxt
(1.04) 0 401.891 49.1586 TXC
12 /Helvetica-Bold SetTxt
(Miss) 0 44.5091 55.1172 TXL
14 /Helvetica SetTxt
(overlapped) 0 498.109 206.069 TXR
(unoverlapped) 0 498.109 194.152 TXR
12 /Helvetica SetTxt
() 0 85.7455 49.469 TXC
() 0 113.236 49.469 TXC
14 /Helvetica SetTxt
() 0 99.4909 6.65172 TXC
12 /Helvetica-Bold SetTxt
() 0 85.7455 159.703 TXC
() 0 113.236 185.822 TXC
12 /Helvetica SetTxt
() 0 113.236 36.5586 TXC
() 0 181.964 49.469 TXC
() 0 209.455 49.469 TXC
14 /Helvetica SetTxt
() 0 195.709 6.65172 TXC
12 /Helvetica-Bold SetTxt
() 0 181.964 159.703 TXC
() 0 209.455 200.321 TXC
12 /Helvetica SetTxt
() 0 209.455 36.5586 TXC
() 0 278.182 49.469 TXC
() 0 305.673 49.469 TXC
14 /Helvetica SetTxt
() 0 291.927 6.65172 TXC
12 /Helvetica-Bold SetTxt
() 0 278.182 159.703 TXC
() 0 305.673 188.404 TXC
12 /Helvetica SetTxt
() 0 305.673 36.5586 TXC
() 0 374.4 49.469 TXC
() 0 401.891 49.469 TXC
14 /Helvetica SetTxt
() 0 388.145 6.65172 TXC
12 /Helvetica-Bold SetTxt
() 0 374.4 159.703 TXC
() 0 401.891 193.171 TXC
12 /Helvetica SetTxt
() 0 401.891 36.5586 TXC
12 /Helvetica-Bold SetTxt
(factor:) 0 44.5091 42.5172 TXL
14 /Helvetica SetTxt
() 0 498.109 191.369 TXR
() 0 498.109 179.452 TXR
12 /Helvetica-Bold SetTxt
() 0 44.5091 29.9172 TXL
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 525.600000 72.000000 525.600000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 213 1098 a Fi(Figure)19 b(3.8)48 b Fp(E\013ect)16 b(of)h(ILP)f(on)h(a)
o(v)o(erage)f(miss)f(latency)g(in)h(a)h(unipro)q(cessor)g(system)131
1239 y(sp)q(eedups)g(are)g(high)f(while)g(memory)d(ILP)k(sp)q(eedups)g
(are)g(generally)e(lo)o(w.)22 b(Ho)o(w)o(ev)o(er,)14
b(compar-)131 1329 y(ing)f(Figure)g(3.6)h(with)f(Figure)g(3.1)g(sho)o
(ws)h(that)g(for)f(all)g(applications)g(other)g(than)h(FFT)p
1751 1329 15 2 v 18 w(opt,)g(the)131 1419 y(o)o(v)o(erall)d(ILP)i(sp)q
(eedup)g(is)f(less)g(in)h(the)f(m)o(ultipro)q(cessor)f(than)i(in)f(the)
g(unipro)q(cessor.)21 b(This)12 b(degra-)131 1510 y(dation)20
b(directly)e(implies)f(lo)o(w)o(er)h(parallel)h(e\016ciency)e(for)j
(the)f Fo(ILP)g Fp(m)o(ultipro)q(cessor)e(than)k(the)131
1600 y Fo(Simple)16 b Fp(m)o(ultipro)q(cessor.)23 b(W)l(e)17
b(next)g(describ)q(e)g(sev)o(eral)f(reasons)j(for)e(the)h(lo)o(w)o(er)e
(ILP)i(sp)q(eedup)131 1690 y(in)e(the)g(m)o(ultipro)q(cessor)f(and)i
(then)f(describ)q(e)f(wh)o(y)h(FFT)p 1197 1690 V 18 w(opt)h(do)q(es)g
(not)f(follo)o(w)g(this)g(trend.)204 1783 y(First,)e(comparing)f
(Figure)h(3.7)g(with)g(Figure)f(3.2)i(sho)o(ws)g(that,)f(for)g(most)g
(applications,)g(the)131 1873 y(read)k(miss)e(comp)q(onen)o(t)g(of)i
(execution)e(time)f(is)i(more)f(signi\014can)o(t)h(in)g(the)g(m)o
(ultipro)q(cessor)f(b)q(e-)131 1963 y(cause)d(these)f(applications)g
(see)g(a)h(large)g(n)o(um)o(b)q(er)d(of)j(remote)e(misses.)18
b(Consequen)o(tly)l(,)12 b(read)h(miss)131 2053 y(ILP)k(sp)q(eedup)g
(pla)o(ys)g(a)g(larger)f(role)g(in)h(determining)d(o)o(v)o(erall)h(ILP)
i(sp)q(eedup)g(in)g(the)f(m)o(ultipro-)131 2144 y(cessor)f(than)h(in)e
(the)h(unipro)q(cessor.)21 b(Since)14 b(read)h(miss)e(ILP)i(sp)q(eedup)
g(is)g(lo)o(w)o(er)f(than)h(CPU)g(ILP)131 2234 y(sp)q(eedup,)k(and)h
(since)d(read)i(miss)e(ILP)i(sp)q(eedup)g(is)g(not)g(higher)f(in)g(the)
h(m)o(ultipro)q(cessor)e(than)131 2324 y(in)h(the)g(unipro)q(cessor,)h
(the)f(larger)g(role)g(of)h(read)f(misses)f(results)h(in)g(an)h(o)o(v)o
(erall)d(ILP)j(sp)q(eedup)131 2415 y(degradation)f(on)e(the)g(m)o
(ultipro)q(cessor)f(for)h(these)g(applications.)204 2507
y(Second,)22 b(for)e(some)g(applications,)h(our)g(CC-NUMA)f
Fo(ILP)f Fp(m)o(ultipro)q(cessor)g(ma)o(y)g(see)i(less)131
2597 y(read)16 b(miss)e(o)o(v)o(erlap)h(b)q(ecause)h(of)g(the)f(dic)o
(hotom)o(y)f(b)q(et)o(w)o(een)h(lo)q(cal)g(and)h(remote)e(misses)h(in)g
(m)o(ul-)131 2687 y(tipro)q(cessor)21 b(con\014gurations;)j(m)o
(ultipro)q(cessors)c(not)h(only)f(need)h(a)g(clustering)f(of)h(misses)e
(for)p eop
%%Page: 27 34
27 33 bop 1882 72 a Fp(27)190 181 y
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 190 181 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_HighAppsP1L1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( Erlebacher) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( Mp3d) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( LU_opt) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( FFT_opt) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 155.314 M9
114.353 104.914 M9
135.529 90.5143 M9
156.706 86.4 M9
177.882 75.0857 M9
199.059 74.0571 M9
220.235 73.0286 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 140.914 M9
114.353 88.4571 M9
135.529 76.1143 M9
156.706 73.0286 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 135.771 M9
114.353 95.6571 M9
135.529 87.4286 M9
156.706 86.4 M9
177.882 84.3429 M9
199.059 83.3143 M9
220.235 82.2857 M9
241.412 80.2286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 113.143 M9
114.353 82.2857 M9
135.529 78.1714 M9
156.706 75.0857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica SetTxt
(1.2) 0 65 191.229 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 155.314 SY
<02> 114.353 104.914 SY
<02> 135.529 90.5143 SY
<02> 156.706 86.4 SY
<02> 177.882 75.0857 SY
<02> 199.059 74.0571 SY
<02> 220.235 73.0286 SY
<02> 241.412 72 SY
<06> 72 174.857 SY
<06> 93.1765 140.914 SY
<06> 114.353 88.4571 SY
<06> 135.529 76.1143 SY
<06> 156.706 73.0286 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 135.771 SY
<0a> 114.353 95.6571 SY
<0a> 135.529 87.4286 SY
<0a> 156.706 86.4 SY
<0a> 177.882 84.3429 SY
<0a> 199.059 83.3143 SY
<0a> 220.235 82.2857 SY
<0a> 241.412 80.2286 SY
<0d> 72 174.857 SY
<0d> 93.1765 113.143 SY
<0d> 114.353 82.2857 SY
<0d> 135.529 78.1714 SY
<0d> 156.706 75.0857 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 1123 181 a
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 1123 181 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_LowAppsP1L1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( FFT) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( LU) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( Water) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( Radix) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 117.257 M9
114.353 74.0571 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 117.257 M9
114.353 88.4571 M9
135.529 73.0286 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 91.5429 M9
114.353 76.1143 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 131.657 M9
114.353 73.0286 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica SetTxt
(1.2) 0 65 191.229 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 117.257 SY
<02> 114.353 74.0571 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 174.857 SY
<06> 93.1765 117.257 SY
<06> 114.353 88.4571 SY
<06> 135.529 73.0286 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 91.5429 SY
<0a> 114.353 76.1143 SY
<0a> 135.529 72 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 174.857 SY
<0d> 93.1765 131.657 SY
<0d> 114.353 73.0286 SY
<0d> 135.529 72 SY
<0d> 156.706 72 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 757 822 a Fp(\(a\))16 b(L1)i(MSHR)d(o)q(ccupancy)190
869 y
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 190 869 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_HighAppsP1L2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( Erlebacher) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( Mp3d) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( LU_opt) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( FFT_opt) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 145.029 M9
114.353 121.371 M9
135.529 96.6857 M9
156.706 93.6 M9
177.882 84.3429 M9
199.059 80.2286 M9
220.235 74.0571 M9
241.412 73.0286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 144 M9
114.353 104.914 M9
135.529 82.2857 M9
156.706 75.0857 M9
177.882 73.0286 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 98.7429 M9
114.353 95.6571 M9
135.529 93.6 M9
156.706 92.5714 M9
177.882 90.5143 M9
199.059 88.4571 M9
220.235 86.4 M9
241.412 82.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 117.257 M9
114.353 97.7143 M9
135.529 81.2571 M9
156.706 76.1143 M9
177.882 73.0286 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 191.229 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 145.029 SY
<02> 114.353 121.371 SY
<02> 135.529 96.6857 SY
<02> 156.706 93.6 SY
<02> 177.882 84.3429 SY
<02> 199.059 80.2286 SY
<02> 220.235 74.0571 SY
<02> 241.412 73.0286 SY
<06> 72 174.857 SY
<06> 93.1765 144 SY
<06> 114.353 104.914 SY
<06> 135.529 82.2857 SY
<06> 156.706 75.0857 SY
<06> 177.882 73.0286 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 98.7429 SY
<0a> 114.353 95.6571 SY
<0a> 135.529 93.6 SY
<0a> 156.706 92.5714 SY
<0a> 177.882 90.5143 SY
<0a> 199.059 88.4571 SY
<0a> 220.235 86.4 SY
<0a> 241.412 82.2857 SY
<0d> 72 174.857 SY
<0d> 93.1765 117.257 SY
<0d> 114.353 97.7143 SY
<0d> 135.529 81.2571 SY
<0d> 156.706 76.1143 SY
<0d> 177.882 73.0286 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 1123 869 a
 11840716 9472573 986726 657817 16577003 15129804 startTexFig
 1123 869 a
%%BeginDocument: Figures/SPLOT_FILES/mshr/MSHR_LowAppsP1L2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 174.857 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 210.857 149.699 210.857 
L9
grestore
8 SetSym
<02> 135.526 210.857 SY
12 /Helvetica SetTxt
( FFT) 0 165.203 207.257 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 195.257 149.699 195.257 
L9
grestore
8 SetSym
<06> 135.526 195.257 SY
12 /Helvetica SetTxt
( LU) 0 165.203 191.657 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 179.657 149.699 179.657 
L9
grestore
8 SetSym
<0a> 135.526 179.657 SY
12 /Helvetica SetTxt
( Water) 0 165.203 176.057 TXL
72 174.857 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 164.057 149.699 164.057 
L9
grestore
8 SetSym
<0d> 135.526 164.057 SY
12 /Helvetica SetTxt
( Radix) 0 165.203 160.457 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72 174.857 S9
93.1765 115.2 M9
114.353 89.4857 M9
135.529 80.2286 M9
156.706 77.1429 M9
177.882 76.1143 M9
199.059 73.0286 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 104.914 M9
114.353 87.4286 M9
135.529 79.2 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 86.4 M9
114.353 75.0857 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 174.857 S9
93.1765 144 M9
114.353 114.171 M9
135.529 101.829 M9
156.706 92.5714 M9
177.882 84.3429 M9
199.059 79.2 M9
220.235 75.0857 M9
241.412 73.0286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 92.5714 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 88.3714 TXR
12 /Helvetica SetTxt
(|) -90 72 113.143 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 108.943 TXR
12 /Helvetica SetTxt
(|) -90 72 133.714 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 129.514 TXR
12 /Helvetica SetTxt
(|) -90 72 154.286 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 150.086 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 195.429 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 191.229 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 216 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 216 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 216.000000 72.000000 216.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 174.857 SY
<02> 93.1765 115.2 SY
<02> 114.353 89.4857 SY
<02> 135.529 80.2286 SY
<02> 156.706 77.1429 SY
<02> 177.882 76.1143 SY
<02> 199.059 73.0286 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 174.857 SY
<06> 93.1765 104.914 SY
<06> 114.353 87.4286 SY
<06> 135.529 79.2 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 174.857 SY
<0a> 93.1765 86.4 SY
<0a> 114.353 75.0857 SY
<0a> 135.529 72 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 174.857 SY
<0d> 93.1765 144 SY
<0d> 114.353 114.171 SY
<0d> 135.529 101.829 SY
<0d> 156.706 92.5714 SY
<0d> 177.882 84.3429 SY
<0d> 199.059 79.2 SY
<0d> 220.235 75.0857 SY
<0d> 241.412 73.0286 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 764 1510 a Fp(\(b\))h(L2)h(MSHR)f(o)q(ccupancy)374 1644
y Fi(Figure)j(3.9)48 b Fp(MSHR)15 b(o)q(ccupancy)i(in)f(a)g(unipro)q
(cessor)h Fo(ILP)f Fp(system)131 1784 y(e\013ectiv)o(e)j(o)o(v)o
(erlap,)g(but)i(also)f(require)f(remote)g(misses)g(to)h(b)q(e)g
(clustered)g(with)g(other)g(remote)131 1874 y(misses)f(in)h(order)h(to)
f(fully)f(hide)h(their)g(latencies)1070 1856 y Fd(\003)1088
1874 y Fp(.)34 b(All)19 b(applications)h(other)g(than)h(FFT)p
1846 1874 15 2 v 18 w(opt)131 1965 y(that)13 b(ac)o(hiev)o(e)d
(signi\014can)o(t)h(o)o(v)o(erlap)h(in)f(the)h(unipro)q(cessor)h(see)e
(less)h(o)o(v)o(erlap)f(\(and,)i(consequen)o(tly)l(,)131
2055 y(less)k(read)g(miss)e(ILP)i(sp)q(eedup\))h(in)e(the)h(m)o
(ultipro)q(cessor)e(b)q(ecause)i(their)f(data)i(la)o(y)o(outs)e(do)i
(not)131 2145 y(pro)o(vide)c(similar)f(latencies)h(for)i(eac)o(h)e(of)h
(the)g(misses)f(o)o(v)o(erlapp)q(ed)g(in)h(the)g(instruction)f(windo)o
(w.)131 2236 y(As)21 b(a)h(result,)f(read)g(misses)f(in)h(the)g(m)o
(ultipro)q(cessor)e(con\014guration)k(are)e(not)g(o)o(v)o(erlapp)q(ed)g
(to)131 2326 y(the)c(same)e(exten)o(t)h(as)h(in)f(the)h(unipro)q
(cessor)g(case,)f(leading)h(to)f(a)i(reduction)e(in)g(read)h(miss)e
(ILP)131 2416 y(sp)q(eedup)i(in)f(the)g(m)o(ultipro)q(cessor)e(case.)p
131 2490 450 2 v 131 2533 a Fc(\003)150 2548 y Fb(This)19
b(e\013ect)i(w)o(ould)d(not)h(apply)f(to)h(a)g(uniform-m)o(em)o
(ory-access)f(\(UMA\))i(mac)o(hine.)32 b(Ho)o(w)o(ev)o(er,)20
b(the)g(other)131 2598 y(e\013ects)c(in)e(this)g(section)g(are)g
(applicable)f(to)h(b)q(oth)g(NUMA)h(and)e(UMA)h(m)o(ultipro)q(cessors.)
p eop
%%Page: 28 35
28 34 bop 1882 72 a Fp(28)204 222 y(Third,)19 b(the)g(read)g(miss)f
(ILP)h(sp)q(eedups)h(of)f(most)f(applications)h(degrade)g(from)f
(increased)131 312 y(con)o(ten)o(tion)k(in)g(the)h(m)o(ultipro)q
(cessor.)39 b(Radix)22 b(is)h(an)g(extreme)d(example)g(where)i(L2)i
(MSHR)131 403 y(saturation)15 b(o)q(ccurs)g(in)e(the)h(m)o(ultipro)q
(cessor)e(case)i(but)g(not)h(in)e(the)h(unipro)q(cessor.)21
b(This)14 b(MSHR)131 493 y(saturation)20 b(arises)e(b)q(ecause)g
(extensiv)o(e)f(false-sharing)i(in)e(the)h(m)o(ultipro)q(cessor)f
(causes)i(writes)131 583 y(to)c(tak)o(e)e(longer)h(to)g(complete;)e
(therefore,)h(writes)h(o)q(ccup)o(y)f(the)h(MSHRs)f(for)i(longer,)f
(increasing)131 674 y(the)i(MSHR)g(con)o(ten)o(tion)f(seen)h(b)o(y)g
(reads.)204 766 y(Finally)l(,)f(sync)o(hronization)g(presen)o(ts)h
(additional)g(o)o(v)o(erhead)g(for)g(m)o(ultipro)q(cessor)f(systems,)
131 856 y(and)i(in)f(most)f(cases)i(sees)f(less)g(ILP)h(sp)q(eedup)f
(than)h(the)f(o)o(v)o(erall)f(application.)204 949 y(FFT)p
306 949 15 2 v 18 w(opt)23 b(stands)h(apart)f(from)e(the)i(other)g
(applications)f(for)h(t)o(w)o(o)f(k)o(ey)g(reasons.)41
b(First,)131 1039 y(FFT)p 233 1039 V 18 w(opt)21 b(a)o(v)o(oids)f(a)h
(reduction)f(in)g(read)g(miss)f(o)o(v)o(erlap)h(in)g(the)g(m)o(ultipro)
q(cessor)f(since)h(reads)131 1129 y(that)c(cluster)e(together)h(in)g
(the)g(instruction)f(windo)o(w)i(in)e(the)h(blo)q(c)o(k)o(ed)f(transp)q
(ose)j(phase)e(of)h(the)131 1219 y(algorithm)j(are)h(usually)g(from)f
(the)h(same)f(blo)q(c)o(k,)h(with)g(the)g(same)f(home)g(no)q(de)i(and)g
(sharing)131 1310 y(pattern.)f(Therefore,)11 b(these)g(reads)h(do)f
(not)h(su\013er)g(from)e(the)h(e\013ects)g(of)g(the)g(dic)o(hotom)o(y)e
(b)q(et)o(w)o(een)131 1400 y(lo)q(cal)17 b(and)h(remote)d(misses)h
(describ)q(ed)h(ab)q(o)o(v)o(e.)23 b(Second,)17 b(the)g(in)o(tro)q
(duction)g(of)g(remote)f(misses)131 1490 y(causes)i(the)f(blo)q(c)o(k)o
(ed)f(transp)q(ose)j(phase)f(of)g(the)f(algorithm)f(to)i(con)o(tribute)
e(more)g(to)i(the)f(total)131 1581 y(memory)g(stall)i(time,)f(as)j
(this)e(is)h(the)f(section)h(with)f(the)h(most)f(comm)o(unic)o(ation.)
29 b(As)20 b(this)f(is)131 1671 y(also)f(the)e(only)h(phase)g(that)g
(sees)g(signi\014can)o(t)f(read)h(miss)f(ILP)h(sp)q(eedup,)g(total)g
(read)g(miss)e(ILP)131 1761 y(sp)q(eedup)i(increases,)e(prev)o(en)o
(ting)g(degradation)i(in)f(o)o(v)o(erall)f(ILP)h(sp)q(eedup.)131
1923 y Fi(3.2.2)55 b(P)n(arallel)19 b(E\016ciency)d(in)j(Larger)f
(Con\014gurations)131 2048 y Fp(Figure)j(3.10)h(sho)o(ws)g(the)g
(parallel)e(e\016ciencies)f(seen)i(in)g(our)h(applications)f(with)g(16)
i(and)e(32)131 2138 y(pro)q(cessor)16 b Fo(Simple)c Fp(and)j
Fo(ILP)e Fp(systems.)20 b(F)l(ollo)o(wing)14 b(the)g(trends)g(of)h
(Section)f(3.2.1,)h(Figure)f(3.10)131 2228 y(sho)o(ws)g(that)g
Fo(ILP)e Fp(systems)f(tend)i(to)h(scale)e(less)h(e\013ectiv)o(ely)e
(than)i Fo(Simple)e Fp(systems.)19 b(T)l(o)14 b(analyze)131
2319 y(the)k(sources)g(of)g(this)f(trend,)g(Figure)h(3.11)g(sho)o(ws)g
(ILP)g(sp)q(eedup)g(comp)q(onen)o(ts)f(for)h(our)g(appli-)131
2409 y(cations)g(in)f(1,)h(8,)f(16,)h(and)g(32)g(pro)q(cessor)h
(con\014gurations.)26 b(F)l(or)17 b(all)g(the)g(applications)g
(\(except)131 2499 y(Radix\),)i(ILP)h(e\013ectiv)o(eness)d(decreases)i
(in)g(16)h(and)g(32)g(pro)q(cessor)g(con\014gurations;)i(ho)o(w)o(ev)o
(er,)131 2589 y(that)16 b(decrease)f(is)h(generally)f(not)h(as)g
(substan)o(tial)g(as)g(the)g(initial)e(decrease)h(from)g(unipro)q
(cessor)131 2680 y(to)k(8-pro)q(cessor)h(systems.)25
b(The)18 b(reasons)i(for)e(the)g(decrease)g(in)f(the)h(applications)g
(other)h(than)p eop
%%Page: 29 36
29 35 bop 1882 72 a Fp(29)131 181 y
 26049576 9472573 657817 -526254 56835440 24339251 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/comp_su/comppe_AllAppsP16.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
96.2449 72 S9
[] 21.600000 SL
96.2449 257.443 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
128.571 72 S9
[] 21.600000 SL
128.571 204.71 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.224 72 S9
[] 21.600000 SL
193.224 260.726 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
225.551 72 S9
[] 21.600000 SL
225.551 206.755 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
290.204 72 S9
[] 21.600000 SL
290.204 306.058 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
322.531 72 S9
[] 21.600000 SL
322.531 276.797 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
387.184 72 S9
[] 21.600000 SL
387.184 120.557 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.51 72 S9
[] 21.600000 SL
419.51 98.64 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
484.163 72 S9
[] 21.600000 SL
484.163 316.656 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
516.49 72 S9
[] 21.600000 SL
516.49 275.818 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
581.143 72 S9
[] 21.600000 SL
581.143 320.832 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
613.469 72 S9
[] 21.600000 SL
613.469 312.538 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
678.122 72 S9
[] 21.600000 SL
678.122 276.394 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
710.449 72 S9
[] 21.600000 SL
710.449 224.842 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
775.102 72 S9
[] 21.600000 SL
775.102 186.998 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
807.429 72 S9
[] 21.600000 SL
807.429 153.13 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
847.837 72 S9
[] 19.200000 SL
847.837 360 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
847.837 72 S9
[] 19.200000 SL
847.837 339.84 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
847.837 72 S9
847.837 319.68 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 129.6 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 124.2 TXR
12 /Helvetica SetTxt
(|) -90 72 187.2 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 181.8 TXR
12 /Helvetica SetTxt
(|) -90 72 244.8 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 239.4 TXR
12 /Helvetica SetTxt
(|) -90 72 302.4 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 297 TXR
12 /Helvetica SetTxt
(|) -90 72 360 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 354.6 TXR
18 /Helvetica SetTxt
() 0 468 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 864 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 864 37 TXR
( % Parallel efficiency) 90 28.1 360 TXR
15 /Helvetica SetTxt
(Simple) 0 91.3959 57.6 TXC
(ILP) 0 131.804 57.6 TXC
(64.4) 0 96.2449 260.323 TXC
(46.1) 0 128.571 207.59 TXC
18 /Helvetica SetTxt
(LU) 0 112.408 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 188.376 57.6 TXC
(ILP) 0 228.784 57.6 TXC
(65.5) 0 193.224 263.606 TXC
(46.8) 0 225.551 209.635 TXC
18 /Helvetica SetTxt
(LU_opt) 0 209.388 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 285.355 57.6 TXC
(ILP) 0 325.763 57.6 TXC
(81.3) 0 290.204 308.938 TXC
(71.1) 0 322.531 279.677 TXC
18 /Helvetica SetTxt
(Erlebacher) 0 306.367 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 382.335 57.6 TXC
(ILP) 0 422.743 57.6 TXC
(16.9) 0 387.184 123.437 TXC
(9.3) 0 419.51 101.52 TXC
18 /Helvetica SetTxt
(Mp3d) 0 403.347 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 479.314 57.6 TXC
(ILP) 0 519.722 57.6 TXC
(85.0) 0 484.163 319.536 TXC
(70.8) 0 516.49 278.698 TXC
18 /Helvetica SetTxt
(FFT) 0 500.327 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 576.294 57.6 TXC
(ILP) 0 616.702 57.6 TXC
(86.4) 0 581.143 323.712 TXC
(83.5) 0 613.469 315.418 TXC
18 /Helvetica SetTxt
(FFT_opt) 0 597.306 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 673.273 57.6 TXC
(ILP) 0 713.682 57.6 TXC
(71.0) 0 678.122 279.274 TXC
(53.1) 0 710.449 227.722 TXC
18 /Helvetica SetTxt
(Water) 0 694.286 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 770.253 57.6 TXC
(ILP) 0 810.661 57.6 TXC
(39.9) 0 775.102 189.878 TXC
(28.2) 0 807.429 156.01 TXC
18 /Helvetica SetTxt
(Radix) 0 791.265 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 831.673 342.72 TXR
(ILP) 0 831.673 322.56 TXR
() 0 91.3959 41.85 TXC
() 0 131.804 41.85 TXC
() 0 96.2449 244.573 TXC
() 0 128.571 191.84 TXC
18 /Helvetica SetTxt
() 0 112.408 9.9 TXC
15 /Helvetica SetTxt
() 0 188.376 41.85 TXC
() 0 228.784 41.85 TXC
() 0 193.224 247.856 TXC
() 0 225.551 193.885 TXC
18 /Helvetica SetTxt
() 0 209.388 9.9 TXC
15 /Helvetica SetTxt
() 0 285.355 41.85 TXC
() 0 325.763 41.85 TXC
() 0 290.204 293.188 TXC
() 0 322.531 263.927 TXC
18 /Helvetica SetTxt
() 0 306.367 9.9 TXC
15 /Helvetica SetTxt
() 0 382.335 41.85 TXC
() 0 422.743 41.85 TXC
() 0 387.184 107.687 TXC
() 0 419.51 85.77 TXC
18 /Helvetica SetTxt
() 0 403.347 9.9 TXC
15 /Helvetica SetTxt
() 0 479.314 41.85 TXC
() 0 519.722 41.85 TXC
() 0 484.163 303.786 TXC
() 0 516.49 262.948 TXC
18 /Helvetica SetTxt
() 0 500.327 9.9 TXC
15 /Helvetica SetTxt
() 0 576.294 41.85 TXC
() 0 616.702 41.85 TXC
() 0 581.143 307.962 TXC
() 0 613.469 299.668 TXC
18 /Helvetica SetTxt
() 0 597.306 9.9 TXC
15 /Helvetica SetTxt
() 0 673.273 41.85 TXC
() 0 713.682 41.85 TXC
() 0 678.122 263.524 TXC
() 0 710.449 211.972 TXC
18 /Helvetica SetTxt
() 0 694.286 9.9 TXC
15 /Helvetica SetTxt
() 0 770.253 41.85 TXC
() 0 810.661 41.85 TXC
() 0 775.102 174.128 TXC
() 0 807.429 140.26 TXC
18 /Helvetica SetTxt
() 0 791.265 9.9 TXC
15 /Helvetica SetTxt
() 0 831.673 326.97 TXR
() 0 831.673 306.81 TXR
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 773 841 a Fp(\(a\))17 b(16)g(Pro)q(cessor)g(System)131
887 y
 26049576 9472573 657817 -526254 56835440 24339251 startTexFig
 131 887 a
%%BeginDocument: Figures/SPLOT_FILES/comp_su/comppe_AllAppsP32.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
96.2449 72 S9
[] 21.600000 SL
96.2449 216.806 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
128.571 72 S9
[] 21.600000 SL
128.571 160.618 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.224 72 S9
[] 21.600000 SL
193.224 219.485 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
225.551 72 S9
[] 21.600000 SL
225.551 155.318 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
290.204 72 S9
[] 21.600000 SL
290.204 244.742 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
322.531 72 S9
[] 21.600000 SL
322.531 187.834 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
387.184 72 S9
[] 21.600000 SL
387.184 92.5632 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
419.51 72 S9
[] 21.600000 SL
419.51 82.8 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
484.163 72 S9
[] 21.600000 SL
484.163 306.259 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
516.49 72 S9
[] 21.600000 SL
516.49 257.53 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
581.143 72 S9
[] 21.600000 SL
581.143 311.99 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
613.469 72 S9
[] 21.600000 SL
613.469 301.565 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
678.122 72 S9
[] 21.600000 SL
678.122 257.53 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
710.449 72 S9
[] 21.600000 SL
710.449 202.723 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
775.102 72 S9
[] 21.600000 SL
775.102 126.202 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
807.429 72 S9
[] 21.600000 SL
807.429 111.456 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
847.837 72 S9
[] 19.200000 SL
847.837 360 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
847.837 72 S9
[] 19.200000 SL
847.837 339.84 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
847.837 72 S9
847.837 319.68 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 129.6 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 124.2 TXR
12 /Helvetica SetTxt
(|) -90 72 187.2 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 181.8 TXR
12 /Helvetica SetTxt
(|) -90 72 244.8 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 239.4 TXR
12 /Helvetica SetTxt
(|) -90 72 302.4 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 297 TXR
12 /Helvetica SetTxt
(|) -90 72 360 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 354.6 TXR
18 /Helvetica SetTxt
() 0 468 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 864 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 864 37 TXR
( % Parallel efficiency) 90 28.1 360 TXR
15 /Helvetica SetTxt
(Simple) 0 91.3959 57.6 TXC
(ILP) 0 131.804 57.6 TXC
(50.3) 0 96.2449 219.686 TXC
(30.8) 0 128.571 163.498 TXC
18 /Helvetica SetTxt
(LU) 0 112.408 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 188.376 57.6 TXC
(ILP) 0 228.784 57.6 TXC
(51.2) 0 193.224 222.365 TXC
(28.9) 0 225.551 158.198 TXC
18 /Helvetica SetTxt
(LU_opt) 0 209.388 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 285.355 57.6 TXC
(ILP) 0 325.763 57.6 TXC
(60.0) 0 290.204 247.622 TXC
(40.2) 0 322.531 190.714 TXC
18 /Helvetica SetTxt
(Erlebacher) 0 306.367 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 382.335 57.6 TXC
(ILP) 0 422.743 57.6 TXC
(7.1) 0 387.184 95.4432 TXC
(3.8) 0 419.51 85.68 TXC
18 /Helvetica SetTxt
(Mp3d) 0 403.347 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 479.314 57.6 TXC
(ILP) 0 519.722 57.6 TXC
(81.3) 0 484.163 309.139 TXC
(64.4) 0 516.49 260.41 TXC
18 /Helvetica SetTxt
(FFT) 0 500.327 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 576.294 57.6 TXC
(ILP) 0 616.702 57.6 TXC
(83.3) 0 581.143 314.87 TXC
(79.7) 0 613.469 304.445 TXC
18 /Helvetica SetTxt
(FFT_opt) 0 597.306 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 673.273 57.6 TXC
(ILP) 0 713.682 57.6 TXC
(64.4) 0 678.122 260.41 TXC
(45.4) 0 710.449 205.603 TXC
18 /Helvetica SetTxt
(Water) 0 694.286 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 770.253 57.6 TXC
(ILP) 0 810.661 57.6 TXC
(18.8) 0 775.102 129.082 TXC
(13.7) 0 807.429 114.336 TXC
18 /Helvetica SetTxt
(Radix) 0 791.265 28.8 TXC
15 /Helvetica SetTxt
(Simple) 0 831.673 342.72 TXR
(ILP) 0 831.673 322.56 TXR
() 0 91.3959 41.85 TXC
() 0 131.804 41.85 TXC
() 0 96.2449 203.936 TXC
() 0 128.571 147.748 TXC
18 /Helvetica SetTxt
() 0 112.408 9.9 TXC
15 /Helvetica SetTxt
() 0 188.376 41.85 TXC
() 0 228.784 41.85 TXC
() 0 193.224 206.615 TXC
() 0 225.551 142.448 TXC
18 /Helvetica SetTxt
() 0 209.388 9.9 TXC
15 /Helvetica SetTxt
() 0 285.355 41.85 TXC
() 0 325.763 41.85 TXC
() 0 290.204 231.872 TXC
() 0 322.531 174.964 TXC
18 /Helvetica SetTxt
() 0 306.367 9.9 TXC
15 /Helvetica SetTxt
() 0 382.335 41.85 TXC
() 0 422.743 41.85 TXC
() 0 387.184 79.6932 TXC
() 0 419.51 69.93 TXC
18 /Helvetica SetTxt
() 0 403.347 9.9 TXC
15 /Helvetica SetTxt
() 0 479.314 41.85 TXC
() 0 519.722 41.85 TXC
() 0 484.163 293.389 TXC
() 0 516.49 244.66 TXC
18 /Helvetica SetTxt
() 0 500.327 9.9 TXC
15 /Helvetica SetTxt
() 0 576.294 41.85 TXC
() 0 616.702 41.85 TXC
() 0 581.143 299.12 TXC
() 0 613.469 288.695 TXC
18 /Helvetica SetTxt
() 0 597.306 9.9 TXC
15 /Helvetica SetTxt
() 0 673.273 41.85 TXC
() 0 713.682 41.85 TXC
() 0 678.122 244.66 TXC
() 0 710.449 189.853 TXC
18 /Helvetica SetTxt
() 0 694.286 9.9 TXC
15 /Helvetica SetTxt
() 0 770.253 41.85 TXC
() 0 810.661 41.85 TXC
() 0 775.102 113.332 TXC
() 0 807.429 98.586 TXC
18 /Helvetica SetTxt
() 0 791.265 9.9 TXC
15 /Helvetica SetTxt
() 0 831.673 326.97 TXR
() 0 831.673 306.81 TXR
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 864.000000 72.000000 864.000000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 772 1548 a Fp(\(b\))f(32)h(Pro)q(cessor)g(System)407
1621 y Fi(Figure)h(3.10)48 b Fp(P)o(arallel)15 b(E\016ciency)g(in)h
(Larger)h(Con\014gurations)131 1762 y(FFT)p 233 1762
15 2 v 18 w(opt)i(and)g(Radix,)g(ho)o(w)o(ev)o(er,)e(are)i(analogous)i
(to)e(the)f(reasons)i(for)f(the)f(decrease)g(from)g(1)131
1852 y(to)f(8)g(pro)q(cessors)g(describ)q(ed)f(in)g(Section)f(3.2.1.)
204 1944 y(In)j(FFT)p 369 1944 V 18 w(opt,)g(a)g(reduction)g(in)g
(memory)d(ILP)j(sp)q(eedup)g(with)g(16)h(and)g(32-pro)q(cessor)h(con-)
131 2034 y(\014gurations)h(leads)e(to)h(a)f(subsequen)o(t)g(reduction)g
(in)g(o)o(v)o(erall)f(ILP)i(sp)q(eedup.)30 b(This)20
b(reduction)131 2125 y(in)g(memory)d(ILP)k(sp)q(eedup)f(stems)f(from)g
(t)o(w)o(o)h(sources.)34 b(First,)20 b(the)g(read)g(misses)f(that)h
(clus-)131 2215 y(ter)h(together)g(in)f(the)h(instruction)f(windo)o(w)h
(exp)q(erience)e(memory)f(bank)j(con\015icts)g(in)f(larger)131
2305 y(con\014gurations.)32 b(This)20 b(e\013ect)f(arises)g(b)q(ecause)
h(the)f(padding)h(added)g(to)f(the)g(matrix)f(used)i(in)131
2396 y(this)h(application)f(m)o(ust)f(amoun)o(t)h(to)h(at)g(least)f
(one)h(page)g(\(4096)i(b)o(ytes\))c(p)q(er)i(pro)q(cessor.)35
b(As)131 2486 y(a)21 b(result,)g(4)h(cac)o(he)d(lines)h(m)o(ust)g(b)q
(e)h(added)g(to)g(eac)o(h)f(ro)o(w)h(in)g(a)g(16-pro)q(cessor)i
(con\014guration,)131 2576 y(and)18 b(8)g(cac)o(he)e(lines)h(m)o(ust)f
(b)q(e)h(added)h(to)f(eac)o(h)g(ro)o(w)h(in)f(32-pro)q(cessor)i
(con\014gurations.)26 b(As)17 b(our)131 2666 y(system)c(has)i(4-w)o(a)o
(y)f(in)o(terlea)o(ving,)e(accesses)i(in)g(the)g(same)f(column)g(of)h
(di\013eren)o(t)f(ro)o(ws)i(will)e(con-)p eop
%%Page: 30 37
30 36 bop 1882 72 a Fp(30)152 413 y
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 152 413 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_LU.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 271.18 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 203.746 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 217.483 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 169.405 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 183.141 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 214.361 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 164.41 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 197.502 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 193.756 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 151.922 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 184.39 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 286.166 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 269.932 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 254.322 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 238.088 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 134.439 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 129.039 TXR
12 /Helvetica SetTxt
(|) -90 72 196.878 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 191.478 TXR
12 /Helvetica SetTxt
(|) -90 72 259.317 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 253.917 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(3.19) 0 85.0065 273.678 TXC
(2.11) 0 206.4 206.244 TXC
(2.33) 0 111.019 219.98 TXC
(1.56) 0 232.413 171.902 TXC
(1.78) 0 327.794 185.639 TXC
(2.28) 0 137.032 216.859 TXC
(1.48) 0 258.426 166.907 TXC
(2.01) 0 353.806 200 TXC
(1.95) 0 163.045 196.254 TXC
(1.28) 0 284.439 154.42 TXC
(1.80) 0 379.819 186.888 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.761 TXC
(Mem) 0 245.419 60.761 TXC
(Sync) 0 366.813 60.761 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.663 TXR
(8 proc) 0 453.523 272.429 TXR
(16 proc) 0 453.523 256.195 TXR
(32 proc) 0 453.523 239.961 TXR
18 /Helvetica SetTxt
(LU) 0 245.419 30.7902 TXC
13 /Helvetica SetTxt
() 0 85.0065 260.028 TXC
() 0 206.4 192.594 TXC
() 0 111.019 206.33 TXC
() 0 232.413 158.252 TXC
() 0 327.794 171.989 TXC
() 0 137.032 203.209 TXC
() 0 258.426 153.257 TXC
() 0 353.806 186.35 TXC
() 0 163.045 182.604 TXC
() 0 284.439 140.77 TXC
() 0 379.819 173.238 TXC
14 /Helvetica SetTxt
() 0 124.026 46.061 TXC
() 0 245.419 46.061 TXC
() 0 366.813 46.061 TXC
13 /Helvetica SetTxt
() 0 453.523 275.013 TXR
() 0 453.523 258.779 TXR
() 0 453.523 242.545 TXR
() 0 453.523 226.311 TXR
18 /Helvetica SetTxt
() 0 245.419 11.8902 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1070 413 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 1070 413 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_LU_opt.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 245.903 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 280.331 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 200.883 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 187.2 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 159.834 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 196.028 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 177.931 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 172.193 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 170.428 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 147.476 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 159.393 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 286.069 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 270.179 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 253.848 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 237.959 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 116.138 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 110.738 TXR
12 /Helvetica SetTxt
(|) -90 72 160.276 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 154.876 TXR
12 /Helvetica SetTxt
(|) -90 72 204.414 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 199.014 TXR
12 /Helvetica SetTxt
(|) -90 72 248.552 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 243.152 TXR
12 /Helvetica SetTxt
(|) -90 72 292.69 TXC
14 /Helvetica-Bold SetTxt
(5) 0 65 287.29 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(3.94) 0 85.0065 248.11 TXC
(4.72) 0 206.4 282.538 TXC
(2.92) 0 111.019 203.09 TXC
(2.61) 0 232.413 189.407 TXC
(1.99) 0 327.794 162.041 TXC
(2.81) 0 137.032 198.234 TXC
(2.40) 0 258.426 180.138 TXC
(2.27) 0 353.806 174.4 TXC
(2.23) 0 163.045 172.634 TXC
(1.71) 0 284.439 149.683 TXC
(1.98) 0 379.819 161.6 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.5241 TXC
(Mem) 0 245.419 60.5241 TXC
(Sync) 0 366.813 60.5241 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.717 TXR
(8 proc) 0 453.523 272.386 TXR
(16 proc) 0 453.523 256.497 TXR
(32 proc) 0 453.523 240.166 TXR
18 /Helvetica SetTxt
(LU_opt) 0 245.419 30.5103 TXC
13 /Helvetica SetTxt
() 0 85.0065 234.46 TXC
() 0 206.4 268.888 TXC
() 0 111.019 189.44 TXC
() 0 232.413 175.757 TXC
() 0 327.794 148.391 TXC
() 0 137.032 184.584 TXC
() 0 258.426 166.488 TXC
() 0 353.806 160.75 TXC
() 0 163.045 158.984 TXC
() 0 284.439 136.033 TXC
() 0 379.819 147.95 TXC
14 /Helvetica SetTxt
() 0 124.026 45.8241 TXC
() 0 245.419 45.8241 TXC
() 0 366.813 45.8241 TXC
13 /Helvetica SetTxt
() 0 453.523 275.067 TXR
() 0 453.523 258.736 TXR
() 0 453.523 242.847 TXR
() 0 453.523 226.516 TXR
18 /Helvetica SetTxt
() 0 245.419 11.6103 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 152 897 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 152 897 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_Erlebacher.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 263.083 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 200.175 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 244.21 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 190.739 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 168.721 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 238.706 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 197.029 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 164.003 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 200.175 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 177.371 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 150.635 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 285.887 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 270.16 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 253.646 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 237.919 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 150.635 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 145.235 TXR
12 /Helvetica SetTxt
(|) -90 72 229.27 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 223.87 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(2.43) 0 85.0065 265.442 TXC
(1.63) 0 206.4 202.534 TXC
(2.19) 0 111.019 246.569 TXC
(1.51) 0 232.413 193.098 TXC
(1.23) 0 327.794 171.08 TXC
(2.12) 0 137.032 241.065 TXC
(1.59) 0 258.426 199.388 TXC
(1.17) 0 353.806 166.362 TXC
(1.63) 0 163.045 202.534 TXC
(1.34) 0 284.439 179.73 TXC
(1.00) 0 379.819 152.994 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.2048 TXC
(Mem) 0 245.419 60.2048 TXC
(Sync) 0 366.813 60.2048 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.246 TXR
(8 proc) 0 453.523 272.519 TXR
(16 proc) 0 453.523 256.005 TXR
(32 proc) 0 453.523 240.278 TXR
18 /Helvetica SetTxt
(Erlebacher) 0 245.419 30.3235 TXC
13 /Helvetica SetTxt
() 0 85.0065 251.792 TXC
() 0 206.4 188.884 TXC
() 0 111.019 232.919 TXC
() 0 232.413 179.448 TXC
() 0 327.794 157.43 TXC
() 0 137.032 227.415 TXC
() 0 258.426 185.738 TXC
() 0 353.806 152.712 TXC
() 0 163.045 188.884 TXC
() 0 284.439 166.08 TXC
() 0 379.819 139.344 TXC
14 /Helvetica SetTxt
() 0 124.026 45.5048 TXC
() 0 245.419 45.5048 TXC
() 0 366.813 45.5048 TXC
13 /Helvetica SetTxt
() 0 453.523 274.596 TXR
() 0 453.523 258.869 TXR
() 0 453.523 242.355 TXR
() 0 453.523 226.628 TXR
18 /Helvetica SetTxt
() 0 245.419 11.4235 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1070 897 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 1070 897 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_Mp3d.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 258.262 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 195.586 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 191.172 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 181.462 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 149.683 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 174.4 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 166.455 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 167.338 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 169.986 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 162.041 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 172.634 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 286.51 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 269.738 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 253.848 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 237.959 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 160.276 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 154.876 TXR
12 /Helvetica SetTxt
(|) -90 72 248.552 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 243.152 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(2.11) 0 85.0065 260.91 TXC
(1.40) 0 206.4 198.234 TXC
(1.35) 0 111.019 193.821 TXC
(1.24) 0 232.413 184.11 TXC
(0.88) 0 327.794 152.331 TXC
(1.16) 0 137.032 177.048 TXC
(1.07) 0 258.426 169.103 TXC
(1.08) 0 353.806 169.986 TXC
(1.11) 0 163.045 172.634 TXC
(1.02) 0 284.439 164.69 TXC
(1.14) 0 379.819 175.283 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.5241 TXC
(Mem) 0 245.419 60.5241 TXC
(Sync) 0 366.813 60.5241 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.276 TXR
(8 proc) 0 453.523 272.386 TXR
(16 proc) 0 453.523 256.497 TXR
(32 proc) 0 453.523 240.607 TXR
18 /Helvetica SetTxt
(Mp3d) 0 245.419 30.5103 TXC
13 /Helvetica SetTxt
() 0 85.0065 247.26 TXC
() 0 206.4 184.584 TXC
() 0 111.019 180.171 TXC
() 0 232.413 170.46 TXC
() 0 327.794 138.681 TXC
() 0 137.032 163.398 TXC
() 0 258.426 155.453 TXC
() 0 353.806 156.336 TXC
() 0 163.045 158.984 TXC
() 0 284.439 151.04 TXC
() 0 379.819 161.633 TXC
14 /Helvetica SetTxt
() 0 124.026 45.8241 TXC
() 0 245.419 45.8241 TXC
() 0 366.813 45.8241 TXC
13 /Helvetica SetTxt
() 0 453.523 274.626 TXR
() 0 453.523 258.736 TXR
() 0 453.523 242.847 TXR
() 0 453.523 226.957 TXR
18 /Helvetica SetTxt
() 0 245.419 11.6103 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 152 1382 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 152 1382 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_FFT.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 262.597 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 166.15 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 264.128 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 197.534 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 193.706 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 256.473 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 193.706 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 148.545 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 254.177 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 191.41 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 204.423 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 286.326 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 270.251 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 254.177 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 238.102 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 148.545 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 143.145 TXR
12 /Helvetica SetTxt
(|) -90 72 225.09 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 219.69 TXR
12 /Helvetica SetTxt
(|) -90 72 301.635 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 296.235 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(2.49) 0 85.0065 264.893 TXC
(1.23) 0 206.4 168.447 TXC
(2.51) 0 111.019 266.424 TXC
(1.64) 0 232.413 199.83 TXC
(1.59) 0 327.794 196.003 TXC
(2.41) 0 137.032 258.769 TXC
(1.59) 0 258.426 196.003 TXC
(1.00) 0 353.806 150.841 TXC
(2.38) 0 163.045 256.473 TXC
(1.56) 0 284.439 193.706 TXC
(1.73) 0 379.819 206.719 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.5183 TXC
(Mem) 0 245.419 60.5183 TXC
(Sync) 0 366.813 60.5183 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.622 TXR
(8 proc) 0 453.523 272.548 TXR
(16 proc) 0 453.523 256.473 TXR
(32 proc) 0 453.523 240.399 TXR
18 /Helvetica SetTxt
(FFT) 0 245.419 30.6658 TXC
13 /Helvetica SetTxt
() 0 85.0065 251.243 TXC
() 0 206.4 154.797 TXC
() 0 111.019 252.774 TXC
() 0 232.413 186.18 TXC
() 0 327.794 182.353 TXC
() 0 137.032 245.119 TXC
() 0 258.426 182.353 TXC
() 0 353.806 137.191 TXC
() 0 163.045 242.823 TXC
() 0 284.439 180.056 TXC
() 0 379.819 193.069 TXC
14 /Helvetica SetTxt
() 0 124.026 45.8183 TXC
() 0 245.419 45.8183 TXC
() 0 366.813 45.8183 TXC
13 /Helvetica SetTxt
() 0 453.523 274.972 TXR
() 0 453.523 258.898 TXR
() 0 453.523 242.823 TXR
() 0 453.523 226.749 TXR
18 /Helvetica SetTxt
() 0 245.419 11.7658 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1070 1382 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 1070 1382 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_FFT_opt.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 262.597 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 166.15 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 264.128 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 197.534 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 193.706 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 256.473 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 193.706 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 148.545 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 254.177 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 191.41 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 204.423 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 286.326 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 270.251 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 254.177 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 238.102 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 148.545 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 143.145 TXR
12 /Helvetica SetTxt
(|) -90 72 225.09 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 219.69 TXR
12 /Helvetica SetTxt
(|) -90 72 301.635 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 296.235 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(2.49) 0 85.0065 264.893 TXC
(1.23) 0 206.4 168.447 TXC
(2.51) 0 111.019 266.424 TXC
(1.64) 0 232.413 199.83 TXC
(1.59) 0 327.794 196.003 TXC
(2.41) 0 137.032 258.769 TXC
(1.59) 0 258.426 196.003 TXC
(1.00) 0 353.806 150.841 TXC
(2.38) 0 163.045 256.473 TXC
(1.56) 0 284.439 193.706 TXC
(1.73) 0 379.819 206.719 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.5183 TXC
(Mem) 0 245.419 60.5183 TXC
(Sync) 0 366.813 60.5183 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.622 TXR
(8 proc) 0 453.523 272.548 TXR
(16 proc) 0 453.523 256.473 TXR
(32 proc) 0 453.523 240.399 TXR
18 /Helvetica SetTxt
(FFT_opt) 0 245.419 30.6658 TXC
13 /Helvetica SetTxt
() 0 85.0065 251.243 TXC
() 0 206.4 154.797 TXC
() 0 111.019 252.774 TXC
() 0 232.413 186.18 TXC
() 0 327.794 182.353 TXC
() 0 137.032 245.119 TXC
() 0 258.426 182.353 TXC
() 0 353.806 137.191 TXC
() 0 163.045 242.823 TXC
() 0 284.439 180.056 TXC
() 0 379.819 193.069 TXC
14 /Helvetica SetTxt
() 0 124.026 45.8183 TXC
() 0 245.419 45.8183 TXC
() 0 366.813 45.8183 TXC
13 /Helvetica SetTxt
() 0 453.523 274.972 TXR
() 0 453.523 258.898 TXR
() 0 453.523 242.823 TXR
() 0 453.523 226.749 TXR
18 /Helvetica SetTxt
() 0 245.419 11.7658 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 152 1866 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 152 1866 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_Water.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 268.216 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 141.052 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 223.093 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 141.735 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 193.011 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 218.991 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 136.95 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 196.43 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 210.103 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 132.164 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 190.277 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 285.992 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 270.267 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 253.859 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 238.134 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 140.368 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 134.968 TXR
12 /Helvetica SetTxt
(|) -90 72 208.736 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 203.336 TXR
12 /Helvetica SetTxt
(|) -90 72 277.104 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 271.704 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(2.87) 0 85.0065 270.267 TXC
(1.01) 0 206.4 143.103 TXC
(2.21) 0 111.019 225.144 TXC
(1.02) 0 232.413 143.786 TXC
(1.77) 0 327.794 195.062 TXC
(2.15) 0 137.032 221.042 TXC
(0.95) 0 258.426 139.001 TXC
(1.82) 0 353.806 198.481 TXC
(2.02) 0 163.045 212.154 TXC
(0.88) 0 284.439 134.215 TXC
(1.73) 0 379.819 192.328 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.3774 TXC
(Mem) 0 245.419 60.3774 TXC
(Sync) 0 366.813 60.3774 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.726 TXR
(8 proc) 0 453.523 272.318 TXR
(16 proc) 0 453.523 256.593 TXR
(32 proc) 0 453.523 240.185 TXR
18 /Helvetica SetTxt
(Water) 0 245.419 30.2955 TXC
13 /Helvetica SetTxt
() 0 85.0065 256.617 TXC
() 0 206.4 129.453 TXC
() 0 111.019 211.494 TXC
() 0 232.413 130.136 TXC
() 0 327.794 181.412 TXC
() 0 137.032 207.392 TXC
() 0 258.426 125.351 TXC
() 0 353.806 184.831 TXC
() 0 163.045 198.504 TXC
() 0 284.439 120.565 TXC
() 0 379.819 178.678 TXC
14 /Helvetica SetTxt
() 0 124.026 45.6774 TXC
() 0 245.419 45.6774 TXC
() 0 366.813 45.6774 TXC
13 /Helvetica SetTxt
() 0 453.523 275.076 TXR
() 0 453.523 258.668 TXR
() 0 453.523 242.943 TXR
() 0 453.523 226.535 TXR
18 /Helvetica SetTxt
() 0 245.419 11.3955 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1070 1866 a
 13261617 7578087 657817 -526254 31312117 20589690 startTexFig
 1070 1866 a
%%BeginDocument: Figures/SPLOT_FILES/mp_ilpsu/mpsu_Radix.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
85.0065 72 S9
[] 16.800000 SL
85.0065 206.286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
206.4 72 S9
206.4 129.941 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
111.019 72 S9
[] 16.800000 SL
111.019 157.889 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
232.413 72 S9
232.413 122.443 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
327.794 72 S9
327.794 209.013 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
137.032 72 S9
[] 16.800000 SL
137.032 166.75 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
258.426 72 S9
258.426 125.851 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
353.806 72 S9
353.806 268.317 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
163.045 72 S9
[] 16.800000 SL
163.045 169.477 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
284.439 72 S9
284.439 134.712 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
379.819 72 S9
379.819 231.508 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 302.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 286.04 M9
gsave 0.300000 0.300000 0.300000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 270.362 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 254.002 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
466.529 72 S9
[] 19.200000 SL
466.529 237.643 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 140.166 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 134.766 TXR
12 /Helvetica SetTxt
(|) -90 72 208.331 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 202.931 TXR
12 /Helvetica SetTxt
(|) -90 72 276.497 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 271.097 TXR
18 /Helvetica SetTxt
() 0 273.6 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 475.2 72 
L9
0 setlinecap
72 72 72 302.4 
L9
() 0 475.2 37 TXR
( ILP Speedup) 90 28.1 302.4 TXR
13 /Helvetica SetTxt
(1.97) 0 85.0065 208.331 TXC
(0.85) 0 206.4 131.986 TXC
(1.26) 0 111.019 159.934 TXC
(0.74) 0 232.413 124.488 TXC
(2.01) 0 327.794 211.058 TXC
(1.39) 0 137.032 168.795 TXC
(0.79) 0 258.426 127.896 TXC
(2.88) 0 353.806 270.362 TXC
(1.43) 0 163.045 171.522 TXC
(0.92) 0 284.439 136.757 TXC
(2.34) 0 379.819 233.553 TXC
14 /Helvetica SetTxt
(ILP) 0 124.026 60.4118 TXC
(Mem) 0 245.419 60.4118 TXC
(Sync) 0 366.813 60.4118 TXC
13 /Helvetica SetTxt
(1 proc) 0 453.523 288.767 TXR
(8 proc) 0 453.523 272.407 TXR
(16 proc) 0 453.523 256.047 TXR
(32 proc) 0 453.523 240.369 TXR
18 /Helvetica SetTxt
(Radix) 0 245.419 30.4189 TXC
13 /Helvetica SetTxt
() 0 85.0065 194.681 TXC
() 0 206.4 118.336 TXC
() 0 111.019 146.284 TXC
() 0 232.413 110.838 TXC
() 0 327.794 197.408 TXC
() 0 137.032 155.145 TXC
() 0 258.426 114.246 TXC
() 0 353.806 256.712 TXC
() 0 163.045 157.872 TXC
() 0 284.439 123.107 TXC
() 0 379.819 219.903 TXC
14 /Helvetica SetTxt
() 0 124.026 45.7118 TXC
() 0 245.419 45.7118 TXC
() 0 366.813 45.7118 TXC
13 /Helvetica SetTxt
() 0 453.523 275.117 TXR
() 0 453.523 258.757 TXR
() 0 453.523 242.397 TXR
() 0 453.523 226.719 TXR
18 /Helvetica SetTxt
() 0 245.419 11.5189 TXC
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 475.200000 72.000000 475.200000 302.400000 72.000000 302.400000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 587 2458 a Fi(Figure)18 b(3.11)48 b Fp(Scalabilit)o(y)15
b(of)h(ILP)h(sp)q(eedup)p eop
%%Page: 31 38
31 37 bop 1882 72 a Fp(31)131 222 y(tend)20 b(for)f(the)h(same)e
(memory)f(mo)q(dule.)29 b(As)20 b(the)f(accesses)g(clustered)g
(together)g(in)g(FFT)p 1846 222 15 2 v 18 w(opt)131 312
y(are)e(of)g(this)f(v)m(ariet)o(y)l(,)f(con)o(ten)o(tion)h(increases)g
(and)h(read)f(miss)g(ILP)g(sp)q(eedup)h(consequen)o(tly)e(de-)131
403 y(grades.)23 b(Additionally)l(,)15 b(some)h(degradation)i(in)e
(read)h(miss)e(ILP)i(sp)q(eedup)g(arises)g(b)q(ecause)g(the)131
493 y(16-pro)q(cessor)i(and)f(32-pro)q(cessor)h(con\014gurations)f
(allo)o(w)f(more)f(of)h(eac)o(h)f(pro)q(cessor's)i(w)o(orking)131
583 y(set)d(to)h(\014t)f(in)o(to)g(the)g(L2)h(cac)o(he.)k(As)15
b(a)g(result,)g(some)f(of)h(the)g(o)o(v)o(erlapping)g(accesses)g(are)g
(L2)h(hits,)131 674 y(while)g(others)h(m)o(ust)f(go)h(to)g(lo)q(cal)g
(or)g(remote)f(mem)o(ory)l(.)k(The)d(dic)o(hotom)o(y)e(b)q(et)o(w)o
(een)h(the)g(laten-)131 764 y(cies)g(seen)h(in)f(these)h(o)o(v)o
(erlapping)f(accesses)g(can)h(th)o(us)g(reduce)f(the)h(b)q(ene\014ts)g
(of)g(o)o(v)o(erlap)f(in)h(the)131 854 y(same)e(fashion)i(as)f(the)g
(dic)o(hotom)o(y)e(b)q(et)o(w)o(een)h(lo)q(cal)g(and)i(remote)d(memory)
f(accesses)j(describ)q(ed)131 944 y(in)g(Section)g(3.2.1.)204
1035 y(In)i(Radix,)f(ILP)h(sp)q(eedup)g(actually)f(starts)h(increasing)
f(with)h(increasing)f(n)o(um)o(b)q(er)f(of)i(pro-)131
1125 y(cessors)g(for)g(t)o(w)o(o)f(reasons.)26 b(The)17
b(primary)f(reason)i(is)f(that)h(sync)o(hronization)f(tak)o(es)g(up)h
(a)g(pro-)131 1215 y(gressiv)o(ely)e(larger)i(time)d(as)j(more)e(pro)q
(cessors)j(are)e(added.)25 b(With)18 b(Radix,)f(the)g
Fo(ILP)f Fp(pro)q(cessor)131 1306 y(pro)o(vides)g(b)q(etter)g(load)h
(balance)f(in)g(a)h(relativ)o(ely)d(un)o(balanced)i(pre\014x)g(sum)f
(phase,)i(b)o(y)e(making)131 1396 y(the)i(computation)f(go)i(faster.)23
b(Th)o(us,)17 b(sync)o(hronization)f(sp)q(eedup)i(is)e(high,)h(and)g
(an)h(increased)131 1486 y(con)o(tribution)h(of)g(this)h(comp)q(onen)o
(t)e(increases)h(the)f(o)o(v)o(erall)g(sp)q(eedup.)31
b(Second,)19 b(the)g(memory)131 1576 y(miss)c(ILP)i(slo)o(wdo)o(wn)f
(impro)o(v)o(es)e(sligh)o(tly)h(b)q(ecause)i(of)f(a)h(higher)f(miss)f
(factor.)131 1754 y Fs(3.3)66 b(Alleviating)25 b(Limitations)g(to)d
(ILP)h(Sp)r(eedup)131 1876 y Fp(Section)18 b(3.1)g(sho)o(w)o(ed)f(that)
i(m)o(ultipro)q(cessor)d(ILP)i(sp)q(eedup)g(for)g(our)g(applications)g
(and)h(arc)o(hi-)131 1967 y(tecture)c(has)i(considerable)f(scop)q(e)g
(for)h(impro)o(v)o(em)o(e)o(n)o(t.)h(Section)e(3.2)g(further)g(sho)o(w)
o(ed)g(that)h(the)131 2057 y(m)o(ultipro)q(cessor)j(lags)h(b)q(ehind)g
(the)g(unipro)q(cessor)g(in)g(ILP)g(sp)q(eedup)g(for)g(all)g(but)g(one)
g(of)g(our)131 2147 y(applications.)g(W)l(e)16 b(see)g(that)h(b)q(oth)g
(de\014ciencies)d(come)h(from)g(three)h(primary)e(limitations:)191
2254 y(1.)24 b(insu\016cien)o(t)15 b(o)o(v)o(erlap)191
2378 y(2.)24 b(increased)16 b(resource)g(con)o(ten)o(tion)191
2501 y(3.)24 b(large)16 b(memory)e(comp)q(onen)o(t)h(of)i(execution)e
(time,)e(ev)o(en)i(in)h Fo(Simple)204 2608 y Fp(This)j(section)f
(examines)f(the)i(exten)o(t)e(to)i(whic)o(h)f(these)g(limitations)f
(are)i(artifacts)f(of)h(cur-)131 2698 y(ren)o(t)d(tec)o(hnological)f
(constrain)o(ts.)22 b(The)17 b(three)f(subsequen)o(t)f(sections)i(resp)
q(ectiv)o(ely)d(examine)g(a)p eop
%%Page: 32 39
32 38 bop 1882 72 a Fp(32)131 222 y(system)12 b(with)h(a)h(m)o(uc)o(h)e
(larger)h Fo(ILP)f Fp(instruction)h(windo)o(w)h(to)g(address)g
(limitation)d(\(1\),)j(a)g(system)131 312 y(with)h(m)o(uc)o(h)e
(greater)i(net)o(w)o(ork)f(and)h(memory)d(system)i(bandwidth)h(to)g
(address)h(limitation)c(\(2\),)131 403 y(and)18 b(a)g(system)f(with)g
(larger)h(cac)o(he)e(sizes)i(to)g(address)g(limitation)d(\(3\).)26
b(Eac)o(h)17 b(section)h(fo)q(cuses)131 493 y(on)k(four)f(represen)o
(tativ)o(e)e(applications,)j(\(LU)p 1008 493 15 2 v 17
w(opt,)g(FFT)p 1230 493 V 18 w(opt,)g(Erlebac)o(her,)f(and)g(Radix\))g
(on)131 583 y(b)q(oth)f(unipro)q(cessor)g(and)f(8-pro)q(cessor)h
(con\014gurations.)31 b(These)19 b(applications)f(are)h(c)o(hosen)g(to)
131 674 y(represen)o(t)d(high,)f(mo)q(derate,)g(and)i(lo)o(w)f(ILP)h
(sp)q(eedups.)131 836 y Fi(3.3.1)55 b(E\013ect)18 b(of)h(Larger)f
(Instruction)g(Windo)n(w)131 960 y Fp(This)24 b(section)f(ev)m(aluates)
h(an)g Fo(ILP)f Fp(system)f(with)i(a)g(256-en)o(try)g(instruction)f
(windo)o(w.)44 b(The)131 1050 y(register)14 b(\014le)g(needed)g(b)o(y)g
(suc)o(h)g(a)h(large)g(instruction)f(windo)o(w)g(ma)o(y)f(lead)i(to)f
(a)h(negativ)o(e)f(impact)131 1141 y(on)22 b(clo)q(c)o(k)f(cycle)e
(time)h(giv)o(en)g(curren)o(t)h(tec)o(hnological)f(constrain)o(ts)i
([FJC96];)i(ho)o(w)o(ev)o(er,)d(it)f(is)131 1231 y(necessary)h(to)g(c)o
(ho)q(ose)g(suc)o(h)f(a)h(size)f(since)g(our)h(goal)g(is)f(to)h
(determine)d(the)j(exten)o(t)e(to)i(whic)o(h)131 1321
y(curren)o(t)e(instruction)g(windo)o(w)g(sizes)g(limit)e(ILP)i(p)q
(erformance.)30 b(Additionally)l(,)18 b(the)h(memory)131
1412 y(unit)d(is)g(scaled)g(to)h(128)g(en)o(tries.)204
1504 y(Figure)k(3.12)h(sho)o(ws)h(the)e(e\013ects)g(of)g(the)g(larger)h
(windo)o(w)f(size)g(on)h(unipro)q(cessor)g(and)g(8-)131
1594 y(pro)q(cessor)h(systems)e(for)i(our)g(represen)o(tativ)o(e)d
(applications.)39 b(As)22 b(exp)q(ected,)g(the)g(larger)g(in-)131
1684 y(struction)16 b(windo)o(w)f(impro)o(v)o(es)e(the)i(p)q
(erformance)g(of)g(b)q(oth)i(m)o(ultipro)q(cessor)d(and)i(unipro)q
(cessor)131 1775 y(con\014gurations)i(b)o(y)e(increasing)f(memory)f
(miss)h(ILP)h(sp)q(eedup.)204 1867 y(The)k(impro)o(v)o(em)o(en)o(ts)d
(with)i(the)h(large)f(instruction)h(windo)o(w)g(decrease)f(the)h(gap)g
(b)q(et)o(w)o(een)131 1957 y(unipro)q(cessor)13 b(and)f(m)o(ultipro)q
(cessor)e(ILP)j(sp)q(eedup)f(signi\014can)o(tly)e(for)j(LU)p
1504 1957 V 17 w(opt)f(and)h(Erlebac)o(her.)131 2048
y(In)h(LU)p 260 2048 V 17 w(opt,)g(there)g(is)f(a)h(large)g
(di\013erence)e(in)i(the)f(memory)e(sp)q(eedups)j(in)g(the)f(unipro)q
(cessor)i(and)131 2138 y(m)o(ultipro)q(cessor)k(con\014gurations;)j(ho)
o(w)o(ev)o(er,)d(enough)h(o)o(v)o(erlap)f(is)h(exp)q(osed)g(in)g(b)q
(oth)g(con\014gu-)131 2228 y(rations)h(that)f(memory)d(sp)q(eedup)k
(reac)o(hes)e(a)h(p)q(oin)o(t)g(of)h(diminishing)c(signi\014cance)j
(and)g(CPU)131 2319 y(ILP)f(sp)q(eedup)f(starts)h(to)f(dominate)f(the)h
(calculation)f(of)h(o)o(v)o(erall)f(ILP)h(sp)q(eedup.)27
b(Since)17 b(CPU)131 2409 y(sp)q(eedups)22 b(are)f(similar,)f(o)o(v)o
(erall)g(ILP)h(sp)q(eedups)h(in)e(the)h(unipro)q(cessor)h(and)g(m)o
(ultipro)q(cessor)131 2499 y(v)o(ersions)15 b(do)h(not)f(di\013er)g(as)
h(greatly)f(as)g(with)g(a)h(smaller)d(instruction)i(windo)o(w.)21
b(In)15 b(Erlebac)o(her,)131 2589 y(the)e(larger)g(instruction)f(windo)
o(w)i(increases)e(data)i(memory)c(ILP)j(sp)q(eedup)g(greatly)g(in)g(b)q
(oth)h(the)131 2680 y(unipro)q(cessor)20 b(case)f(and)g(m)o(ultipro)q
(cessor)e(case;)j(in)f(fact,)g(m)o(ultipro)q(cessor)e(memory)f(sp)q
(eedup)p eop
%%Page: 33 40
33 39 bop 1882 72 a Fp(33)131 181 y
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/bigact/ILPSU5_RepApps_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 217.534 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 204.433 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 267.462 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 196.997 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 201.246 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 199.121 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 175.043 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 180.354 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 187.436 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 155.921 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 174.334 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 186.374 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 152.026 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 144.236 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.649 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.298 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.302 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.951 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.6 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 107.41 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 102.61 TXR
12 /Helvetica SetTxt
(|) -90 72 142.82 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 138.02 TXR
12 /Helvetica SetTxt
(|) -90 72 178.23 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 173.43 TXR
12 /Helvetica SetTxt
(|) -90 72 213.639 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 208.839 TXR
12 /Helvetica SetTxt
(|) -90 72 249.049 TXC
14 /Helvetica-Bold SetTxt
(5) 0 65 244.249 TXR
12 /Helvetica SetTxt
(|) -90 72 284.459 TXC
14 /Helvetica-Bold SetTxt
(6) 0 65 279.659 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(4.11) 0 86.5946 219.659 TXC
(3.74) 0 106.054 206.557 TXC
(5.52) 0 125.514 269.587 TXC
14 /Helvetica SetTxt
(LU_opt,P1) 0 115.784 50.4 TXC
12 /Helvetica-Bold SetTxt
(3.53) 0 193.622 199.121 TXC
(3.65) 0 213.081 203.37 TXC
(3.59) 0 232.541 201.246 TXC
(2.91) 0 252 177.167 TXC
14 /Helvetica SetTxt
(LU_opt,P8) 0 222.811 50.4 TXC
12 /Helvetica-Bold SetTxt
(3.06) 0 300.649 182.479 TXC
(3.26) 0 320.108 189.561 TXC
(2.37) 0 339.568 158.046 TXC
14 /Helvetica SetTxt
(FFT_opt,P1) 0 329.838 50.4 TXC
12 /Helvetica-Bold SetTxt
(2.89) 0 407.676 176.459 TXC
(3.23) 0 427.135 188.498 TXC
(2.26) 0 446.595 154.151 TXC
(2.04) 0 466.054 146.361 TXC
14 /Helvetica SetTxt
(FFT_opt,P8) 0 436.865 50.4 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.423 TXR
(CPU ILP Speedup) 0 592.541 238.426 TXR
(Data Mem ILP Speedup) 0 592.541 221.075 TXR
(Synch ILP Speedup) 0 592.541 203.725 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 207.059 TXC
() 0 106.054 193.957 TXC
() 0 125.514 256.987 TXC
14 /Helvetica SetTxt
() 0 115.784 35.7 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 186.521 TXC
() 0 213.081 190.77 TXC
() 0 232.541 188.646 TXC
() 0 252 164.567 TXC
14 /Helvetica SetTxt
() 0 222.811 35.7 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 169.879 TXC
() 0 320.108 176.961 TXC
() 0 339.568 145.446 TXC
14 /Helvetica SetTxt
() 0 329.838 35.7 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 163.859 TXC
() 0 427.135 175.898 TXC
() 0 446.595 141.551 TXC
() 0 466.054 133.761 TXC
14 /Helvetica SetTxt
() 0 436.865 35.7 TXC
13 /Helvetica SetTxt
() 0 592.541 241.773 TXR
() 0 592.541 224.776 TXR
() 0 592.541 207.425 TXR
() 0 592.541 190.075 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 605 a
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 605 a
%%BeginDocument: Figures/SPLOT_FILES/bigact/ILPSU5_RepApps_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 230.488 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 224.341 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 241.024 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 216.439 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 214.683 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 256.39 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 129.512 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 181.756 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 207.659 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 140.488 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 131.707 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 210.732 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 107.561 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 178.683 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.878 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.317 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.195 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 219.073 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.512 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 115.902 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 111.102 TXR
12 /Helvetica SetTxt
(|) -90 72 159.805 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 155.005 TXR
12 /Helvetica SetTxt
(|) -90 72 203.707 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 198.907 TXR
12 /Helvetica SetTxt
(|) -90 72 247.61 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 242.81 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(3.61) 0 86.5946 232.683 TXC
(3.47) 0 106.054 226.537 TXC
(3.85) 0 125.514 243.22 TXC
14 /Helvetica SetTxt
(Erlebacher,P1) 0 115.784 50.4878 TXC
12 /Helvetica-Bold SetTxt
(3.29) 0 193.622 218.634 TXC
(3.25) 0 213.081 216.878 TXC
(4.20) 0 232.541 258.585 TXC
(1.31) 0 252 131.707 TXC
14 /Helvetica SetTxt
(Erlebacher,P8) 0 222.811 50.4878 TXC
12 /Helvetica-Bold SetTxt
(2.50) 0 300.649 183.951 TXC
(3.09) 0 320.108 209.854 TXC
(1.56) 0 339.568 142.683 TXC
14 /Helvetica SetTxt
(Radix,P1) 0 329.838 50.4878 TXC
12 /Helvetica-Bold SetTxt
(1.36) 0 407.676 133.902 TXC
(3.16) 0 427.135 212.927 TXC
(0.81) 0 446.595 109.756 TXC
(2.43) 0 466.054 180.878 TXC
14 /Helvetica SetTxt
(Radix,P8) 0 436.865 50.4878 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.512 TXR
(CPU ILP Speedup) 0 592.541 238.39 TXR
(Data Mem ILP Speedup) 0 592.541 220.829 TXR
(Synch ILP Speedup) 0 592.541 203.707 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 220.083 TXC
() 0 106.054 213.937 TXC
() 0 125.514 230.62 TXC
14 /Helvetica SetTxt
() 0 115.784 35.7878 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 206.034 TXC
() 0 213.081 204.278 TXC
() 0 232.541 245.985 TXC
() 0 252 119.107 TXC
14 /Helvetica SetTxt
() 0 222.811 35.7878 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 171.351 TXC
() 0 320.108 197.254 TXC
() 0 339.568 130.083 TXC
14 /Helvetica SetTxt
() 0 329.838 35.7878 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 121.302 TXC
() 0 427.135 200.327 TXC
() 0 446.595 97.1561 TXC
() 0 466.054 168.278 TXC
14 /Helvetica SetTxt
() 0 436.865 35.7878 TXC
13 /Helvetica SetTxt
() 0 592.541 241.862 TXR
() 0 592.541 224.74 TXR
() 0 592.541 207.179 TXR
() 0 592.541 190.057 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 320 1098 a Fi(Figure)18 b(3.12)48 b Fp(E\013ectiv)o(eness)15
b(of)i(ILP)f(with)g(larger)h(instruction)f(windo)o(w)131
1239 y(actually)23 b(exceeds)g(unipro)q(cessor)h(memory)d(sp)q(eedup)j
(b)q(ecause)g(the)f(m)o(ultipro)q(cessor)g(a)o(v)o(oids)131
1329 y(some)c(of)h(the)g(memory)d(bank)j(con\015icts)g(seen)f(in)h(the)
g(unipro)q(cessor)g(case.)33 b(As)19 b(a)i(result,)f(the)131
1419 y(di\013erence)15 b(b)q(et)o(w)o(een)h(unipro)q(cessor)h(and)f(m)o
(ultipro)q(cessor)f(ILP)i(sp)q(eedups)f(shrinks)h(in)e(this)i(ap-)131
1510 y(plication.)204 1602 y(In)c(con)o(trast,)g(the)g(ILP)g(sp)q
(eedup)g(impro)o(v)o(em)o(en)o(ts)d(from)h(the)i(larger)g(instruction)f
(windo)o(w)h(in-)131 1692 y(crease)e(the)g(gap)i(b)q(et)o(w)o(een)d
(unipro)q(cessor)i(and)g(m)o(ultipro)q(cessor)e(ILP)h(sp)q(eedups)h(in)
f(FFT)p 1756 1692 15 2 v 18 w(opt)h(and)131 1783 y(Radix.)20
b(In)13 b(these)f(applications,)i(the)e(increased)h(gap)h(o)q(ccurs)f
(b)q(ecause)g(of)h(resource)f(con)o(ten)o(tion:)131 1873
y(sp)q(eci\014cally)l(,)k(high)h(write)g(tra\016c)f(in)h(the)g(m)o
(ultipro)q(cessor)f(Radix)g(saturates)i(the)f(write-bu\013er)131
1963 y(and)h(secondary)g(cac)o(he)f(MSHRs,)g(and)h(high)f(read)h(miss)e
(tra\016c)h(in)g(the)g(m)o(ultipro)q(cessor)f(FFT)131
2053 y(saturates)h(the)f(primary)e(cac)o(he)h(MSHRs.)22
b(This)17 b(saturation)h(leads)f(to)g(blo)q(c)o(k)m(age)h(and)f(bac)o
(kup,)131 2144 y(ev)o(en)o(tually)h(prev)o(en)o(ting)g(the)h(pro)q
(cessor)h(from)f(issuing)g(memory)e(accesses)i(un)o(til)g(the)g
(satura-)131 2234 y(tion)e(clears)g(up.)24 b(In)17 b(b)q(oth)h
(applications,)f(shorter)g(latencies)f(prev)o(en)o(t)g(the)g(unipro)q
(cessor)i(from)131 2324 y(exp)q(eriencing)d(saturation)i(e\013ects.)j
(Th)o(us,)c(these)g(applications)g(ha)o(v)o(e)f(b)q(ecome)f(limited)f
(b)o(y)j(the)131 2415 y(resource)d(needs)h(imp)q(osed)e(b)o(y)h(longer)
h(latencies)e(rather)h(than)h(o)o(v)o(erlap)f(alone;)h(th)o(us,)g
(increasing)131 2505 y(the)f(size)g(of)g(the)g(instruction)g(windo)o(w)
h(cannot)g(solv)o(e)e(the)h(m)o(ultipro)q(cessor)f(degradation)i(in)f
(ILP)131 2595 y(sp)q(eedup)k(for)f(these)g(applications.)p
eop
%%Page: 34 41
34 40 bop 1882 72 a Fp(34)131 222 y Fi(3.3.2)55 b(E\013ect)18
b(of)h(a)g(High-Bandwidth)f(System)131 347 y Fp(This)e(section)g(ev)m
(aluates)g(the)f(p)q(erformance)g(of)h(the)g(represen)o(tativ)o(e)e
(applications)i(with)f(a)i(sys-)131 437 y(tem)d(aimed)f(to)j(greatly)f
(reduce)f(resource)h(con)o(ten)o(tion.)20 b(The)15 b(systems)f(for)h
(this)h(section)e(use)h(64)131 527 y(L1)k(and)f(L2)h(MSHRs,)e(16)h(L1)h
(cac)o(he)e(p)q(orts,)i(512)f(write)g(bu\013er)g(en)o(tries,)e(256-w)o
(a)o(y)j(in)o(terlea)o(v)o(ed)131 617 y(memory)l(,)13
b(and)k(a)g(128)g(b)o(yte)e(wide)h(in)o(terconnection)f(net)o(w)o(ork)h
(\(wider)f(than)i(the)f(largest)h(single)131 708 y(pac)o(k)o(et)d(in)h
(our)g(system\).)k(The)c(high-bandwidth)h(system)e(aims)g(to)h(reduce)f
(the)h(e\013ects)g(of)g(con-)131 798 y(ten)o(tion)e(and)i(extra)e(miss)
g(latency)l(,)g(so)h(it)f(ma)o(y)g(b)q(e)h(able)f(to)h(more)f
(thoroughly)h(exploit)f(a)o(v)m(ailable)131 888 y(p)q(oten)o(tial)j
(for)h(o)o(v)o(erlap.)204 981 y(As)c(seen)g(in)f(Figure)h(3.13,)h(the)e
(high)h(bandwidth)h(system)d(impro)o(v)o(es)g(memory)f(ILP)j(sp)q
(eedup)131 1071 y(and)i(o)o(v)o(erall)e(sp)q(eedup)i(for)f(eac)o(h)g
(of)h(our)g(applications.)20 b(The)15 b(reduction)f(in)g(con)o(ten)o
(tion)f(latency)131 1161 y(pro)o(vided)e(b)o(y)g(this)g(system)e(leads)
j(to)f(lo)o(w)o(er)g(uno)o(v)o(erlapp)q(ed)g(latency)f(factors)i(and,)g
(consequen)o(tly)l(,)131 1252 y(to)21 b(b)q(etter)f(memory)d(ILP)j(sp)q
(eedups.)34 b(This)20 b(impro)o(v)o(em)o(en)o(t)d(helps)j(reduce)f(the)
h(gap)h(b)q(et)o(w)o(een)131 1342 y(unipro)q(cessor)15
b(and)h(m)o(ultipro)q(cessor)d(ILP)h(sp)q(eedup)h(in)f(Radix,)g(since)g
(the)g(m)o(ultipro)q(cessor)f(case)131 1432 y(can)20
b(more)e(thoroughly)i(utilize)d(the)i(additional)h(resources)f
(\(particularly)f(L2)j(MSHRs\))e(pro-)131 1522 y(vided)e(b)o(y)g(this)g
(con\014guration.)25 b(Ho)o(w)o(ev)o(er,)16 b(a)i(gap)g(b)q(et)o(w)o
(een)e(unipro)q(cessor)i(ILP)g(sp)q(eedup)g(and)131 1613
y(m)o(ultipro)q(cessor)13 b(ILP)i(sp)q(eedup)g(still)f(remains)f(for)i
(LU)p 1155 1613 15 2 v 18 w(opt)g(and)g(Erlebac)o(her.)20
b(This)15 b(is)f(b)q(ecause)131 1703 y(the)j(reasons)i(for)e(the)g(ILP)
h(sp)q(eedup)f(degradation)i(in)e(the)g(m)o(ultipro)q(cessor)f
(con\014guration)i(for)131 1793 y(the)j(original)f(system)f(still)g
(hold:)30 b(\(i\))20 b(longer,)h(more)e(v)m(ariable)i(\(e.g.,)f(lo)q
(cal)g(vs.)34 b(remote\))19 b(la-)131 1884 y(tencies)j(in)h(the)g(m)o
(ultipro)q(cessor)e(mak)o(e)g(o)o(v)o(erlap)h(more)g(di\016cult)f(and)j
(increase)e(the)h(w)o(eigh)o(t)131 1974 y(of)g(the)g(memory)c(comp)q
(onen)o(t,)k(and)h(\(ii\))d(degradation)j(from)e(sync)o(hronization)g
(p)q(ersists)h(for)131 2064 y(Erlebac)o(her.)131 2226
y Fi(3.3.3)55 b(E\013ect)18 b(of)h(Larger)f(Cac)n(hes)131
2351 y Fp(In)28 b(this)g(section)g(w)o(e)g(determine)d(ILP)k
(e\013ectiv)o(eness)d(for)j(systems)e(with)h(a)g(32)h(KB)f(t)o(w)o(o-)
131 2441 y(w)o(a)o(y)21 b(asso)q(ciativ)o(e)g(primary)e(cac)o(he)h(and)
i(a)f(2)g(MB)f(eigh)o(t-w)o(a)o(y)h(asso)q(ciativ)o(e)f(secondary)i
(cac)o(he.)131 2531 y(This)c(second-lev)o(el)e(cac)o(he)g(holds)i(all)f
(imp)q(ortan)o(t)g(data)h(sets)g(for)g(our)g(represen)o(tativ)o(e)d
(applica-)131 2622 y(tions)i([W)o(OT)387 2604 y Fk(+)416
2622 y Fp(95)q(].)p eop
%%Page: 35 42
35 41 bop 1882 72 a Fp(35)131 181 y
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/infbw/ILPSU5_RepApps_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 162.386 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 146.684 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 270.889 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 146.281 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 144.47 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 160.574 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 124.541 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 128.768 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 136.015 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 106.826 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 128.567 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 135.21 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 113.469 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 111.858 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.688 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.376 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.063 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.952 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.64 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 92.1305 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 87.3305 TXR
12 /Helvetica SetTxt
(|) -90 72 112.261 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 107.461 TXR
12 /Helvetica SetTxt
(|) -90 72 132.391 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 127.591 TXR
12 /Helvetica SetTxt
(|) -90 72 152.522 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 147.722 TXR
12 /Helvetica SetTxt
(|) -90 72 172.652 TXC
14 /Helvetica-Bold SetTxt
(5) 0 65 167.852 TXR
12 /Helvetica SetTxt
(|) -90 72 192.783 TXC
14 /Helvetica-Bold SetTxt
(6) 0 65 187.983 TXR
12 /Helvetica SetTxt
(|) -90 72 212.913 TXC
14 /Helvetica-Bold SetTxt
(7) 0 65 208.113 TXR
12 /Helvetica SetTxt
(|) -90 72 233.044 TXC
14 /Helvetica-Bold SetTxt
(8) 0 65 228.244 TXR
12 /Helvetica SetTxt
(|) -90 72 253.174 TXC
14 /Helvetica-Bold SetTxt
(9) 0 65 248.374 TXR
12 /Helvetica SetTxt
(|) -90 72 273.305 TXC
14 /Helvetica-Bold SetTxt
(10) 0 65 268.505 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(4.49) 0 86.5946 164.6 TXC
(3.71) 0 106.054 148.898 TXC
(9.88) 0 125.514 273.103 TXC
14 /Helvetica SetTxt
(LU_opt,P1) 0 115.784 50.4604 TXC
12 /Helvetica-Bold SetTxt
(3.69) 0 193.622 148.496 TXC
(3.60) 0 213.081 146.684 TXC
(4.40) 0 232.541 162.788 TXC
(2.61) 0 252 126.755 TXC
14 /Helvetica SetTxt
(LU_opt,P8) 0 222.811 50.4604 TXC
12 /Helvetica-Bold SetTxt
(2.82) 0 300.649 130.982 TXC
(3.18) 0 320.108 138.229 TXC
(1.73) 0 339.568 109.04 TXC
14 /Helvetica SetTxt
(FFT_opt,P1) 0 329.838 50.4604 TXC
12 /Helvetica-Bold SetTxt
(2.81) 0 407.676 130.781 TXC
(3.14) 0 427.135 137.424 TXC
(2.06) 0 446.595 115.683 TXC
(1.98) 0 466.054 114.073 TXC
14 /Helvetica SetTxt
(FFT_opt,P8) 0 436.865 50.4604 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.59 TXR
(CPU ILP Speedup) 0 592.541 238.278 TXR
(Data Mem ILP Speedup) 0 592.541 220.966 TXR
(Synch ILP Speedup) 0 592.541 203.855 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 152 TXC
() 0 106.054 136.298 TXC
() 0 125.514 260.503 TXC
14 /Helvetica SetTxt
() 0 115.784 35.7604 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 135.896 TXC
() 0 213.081 134.084 TXC
() 0 232.541 150.188 TXC
() 0 252 114.155 TXC
14 /Helvetica SetTxt
() 0 222.811 35.7604 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 118.382 TXC
() 0 320.108 125.629 TXC
() 0 339.568 96.4401 TXC
14 /Helvetica SetTxt
() 0 329.838 35.7604 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 118.181 TXC
() 0 427.135 124.824 TXC
() 0 446.595 103.083 TXC
() 0 466.054 101.473 TXC
14 /Helvetica SetTxt
() 0 436.865 35.7604 TXC
13 /Helvetica SetTxt
() 0 592.541 241.94 TXR
() 0 592.541 224.628 TXR
() 0 592.541 207.316 TXR
() 0 592.541 190.205 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 605 a
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 605 a
%%BeginDocument: Figures/SPLOT_FILES/infbw/ILPSU5_RepApps_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 229.478 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 261.399 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 192.768 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 206.601 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 249.695 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 172.02 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 141.163 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 202.345 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 247.034 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 136.906 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 186.384 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 249.163 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 129.458 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 171.488 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.975 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.419 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.394 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.837 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.813 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 125.202 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 120.402 TXR
12 /Helvetica SetTxt
(|) -90 72 178.404 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 173.604 TXR
12 /Helvetica SetTxt
(|) -90 72 231.606 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 226.806 TXR
12 /Helvetica SetTxt
(|) -90 72 284.808 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 280.008 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(2.96) 0 86.5946 231.606 TXC
(3.56) 0 106.054 263.527 TXC
(2.27) 0 125.514 194.897 TXC
14 /Helvetica SetTxt
(Erlebacher,P1) 0 115.784 50.1872 TXC
12 /Helvetica-Bold SetTxt
(2.53) 0 193.622 208.729 TXC
(3.34) 0 213.081 251.823 TXC
(1.88) 0 232.541 174.148 TXC
(1.30) 0 252 143.291 TXC
14 /Helvetica SetTxt
(Erlebacher,P8) 0 222.811 50.1872 TXC
12 /Helvetica-Bold SetTxt
(2.45) 0 300.649 204.473 TXC
(3.29) 0 320.108 249.163 TXC
(1.22) 0 339.568 139.034 TXC
14 /Helvetica SetTxt
(Radix,P1) 0 329.838 50.1872 TXC
12 /Helvetica-Bold SetTxt
(2.15) 0 407.676 188.512 TXC
(3.33) 0 427.135 251.291 TXC
(1.08) 0 446.595 131.586 TXC
(1.87) 0 466.054 173.616 TXC
14 /Helvetica SetTxt
(Radix,P8) 0 436.865 50.1872 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.547 TXR
(CPU ILP Speedup) 0 592.541 238.522 TXR
(Data Mem ILP Speedup) 0 592.541 220.966 TXR
(Synch ILP Speedup) 0 592.541 203.941 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 219.006 TXC
() 0 106.054 250.927 TXC
() 0 125.514 182.297 TXC
14 /Helvetica SetTxt
() 0 115.784 35.4872 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 196.129 TXC
() 0 213.081 239.223 TXC
() 0 232.541 161.548 TXC
() 0 252 130.691 TXC
14 /Helvetica SetTxt
() 0 222.811 35.4872 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 191.873 TXC
() 0 320.108 236.563 TXC
() 0 339.568 126.434 TXC
14 /Helvetica SetTxt
() 0 329.838 35.4872 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 175.912 TXC
() 0 427.135 238.691 TXC
() 0 446.595 118.986 TXC
() 0 466.054 161.016 TXC
14 /Helvetica SetTxt
() 0 436.865 35.4872 TXC
13 /Helvetica SetTxt
() 0 592.541 241.897 TXR
() 0 592.541 224.872 TXR
() 0 592.541 207.316 TXR
() 0 592.541 190.291 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 318 1098 a Fi(Figure)18 b(3.13)48 b Fp(E\013ectiv)o(eness)15
b(of)i(ILP)f(in)g(v)o(ery)f(high)i(bandwidth)f(system)204
1239 y(Larger)i(cac)o(hes)e(ha)o(v)o(e)g(three)g(primary)f(e\013ects)i
(on)g(our)g(systems.)22 b(First,)16 b(b)o(y)g(decreasing)g(ef-)131
1329 y(fectiv)o(e)e(memory)f(latencies,)h(they)h(reduce)g(the)h
(relativ)o(e)e(execution)g(time)g(con)o(tribution)h(of)i(the)131
1419 y(memory)e(comp)q(onen)o(t.)24 b(This)17 b(e\013ect)g(mak)o(es)f
(CPU)h(ILP)h(sp)q(eedup)g(more)e(imp)q(ortan)o(t)h(in)g(deter-)131
1510 y(mining)c(o)o(v)o(erall)g(ILP)h(sp)q(eedup.)21
b(Second,)15 b(b)o(y)e(reducing)h(the)g(n)o(um)o(b)q(er)f(of)i(misses,)
e(larger)h(cac)o(hes)131 1600 y(reduce)22 b(net)o(w)o(ork)f(and)i(MSHR)
e(con)o(ten)o(tion)g(and)i(so)g(giv)o(e)e(b)q(etter)h(sp)q(eedup)g(for)
h(con)o(ten)o(tion-)131 1690 y(b)q(ound)17 b(applications.)k(Finally)l
(,)14 b(larger)i(cac)o(hes)f(reduce)g(the)g(p)q(oten)o(tial)h(for)g
(miss)e(o)o(v)o(erlap)h(since)131 1780 y(they)f(pro)o(vide)g(few)o(er)g
(misses)f(to)i(o)o(v)o(erlap.)k(This)c(e\013ect)f(reduces)g(memory)e
(ILP)i(sp)q(eedup)h(in)g(ap-)131 1871 y(plications)e(whic)o(h)g(had)i
(high)f(o)o(v)o(erlap)e(b)q(ecause)i(of)g(con\015ict)f(or)h(capacit)o
(y)f(misses)f(in)i(the)f(smaller)131 1961 y(cac)o(he)j
(con\014gurations.)204 2053 y(Figure)k(3.14)h(sho)o(ws)g(the)f
(e\013ectiv)o(eness)f(of)i Fo(ILP)e Fp(systems)g(for)h(our)h(represen)o
(tativ)o(e)d(appli-)131 2144 y(cations,)i(in)g(unipro)q(cessor)g(and)g
(m)o(ultipro)q(cessor)e(con\014gurations.)32 b(The)20
b(cac)o(he)e(size)h(increase)131 2234 y(impro)o(v)o(es)d(o)o(v)o(erall)
h(m)o(ultipro)q(cessor)g(ILP)i(sp)q(eedup)g(for)f(all)g(the)g(represen)
o(tativ)o(e)f(applications.)131 2324 y(Ho)o(w)o(ev)o(er,)22
b(in)g(LU)p 482 2324 15 2 v 18 w(opt)h(and)g(Radix,)g(this)g(is)f(a)h
(smaller)e(impro)o(v)o(em)o(e)o(n)o(t)f(than)j(that)g(brough)o(t)131
2415 y(ab)q(out)16 b(b)o(y)f(pro)o(viding)f(higher)h(bandwidth,)g(and)h
(in)e(LU)p 1174 2415 V 18 w(opt,)h(FFT)p 1390 2415 V
17 w(opt,)g(and)h(Erlebac)o(her,)d(this)131 2505 y(is)j(a)g(smaller)d
(impro)o(v)o(em)o(en)o(t)f(than)k(that)g(pro)o(vided)f(b)o(y)g(a)h
(bigger)g(instruction)f(windo)o(w.)21 b(Larger)131 2595
y(cac)o(hes)13 b(reduce)f(memory)e(ILP)j(sp)q(eedup)h(in)f(the)f(case)h
(of)h(LU)p 1252 2595 V 17 w(opt)g(b)o(y)e(turning)i(man)o(y)d
(previously)p eop
%%Page: 36 43
36 42 bop 1882 72 a Fp(36)131 181 y
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 181 a
%%BeginDocument: Figures/SPLOT_FILES/sysc/ILPSU5_RepApps_a.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 238.909 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 241.247 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 203.844 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 222.078 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 241.247 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 157.558 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 170.182 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 204.779 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 217.403 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 130.442 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 205.247 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 217.403 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 176.26 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 160.831 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.701 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.403 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.104 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.805 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.506 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 118.753 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 113.953 TXR
12 /Helvetica SetTxt
(|) -90 72 165.506 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 160.706 TXR
12 /Helvetica SetTxt
(|) -90 72 212.26 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 207.46 TXR
12 /Helvetica SetTxt
(|) -90 72 259.013 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 254.213 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(3.57) 0 86.5946 241.247 TXC
(3.62) 0 106.054 243.584 TXC
(2.82) 0 125.514 206.182 TXC
14 /Helvetica SetTxt
(LU_opt,P1) 0 115.784 50.4935 TXC
12 /Helvetica-Bold SetTxt
(3.21) 0 193.622 224.416 TXC
(3.62) 0 213.081 243.584 TXC
(1.83) 0 232.541 159.896 TXC
(2.10) 0 252 172.519 TXC
14 /Helvetica SetTxt
(LU_opt,P8) 0 222.811 50.4935 TXC
12 /Helvetica-Bold SetTxt
(2.84) 0 300.649 207.117 TXC
(3.11) 0 320.108 219.74 TXC
(1.25) 0 339.568 132.779 TXC
14 /Helvetica SetTxt
(FFT_opt,P1) 0 329.838 50.4935 TXC
12 /Helvetica-Bold SetTxt
(2.85) 0 407.676 207.584 TXC
(3.11) 0 427.135 219.74 TXC
(2.23) 0 446.595 178.597 TXC
(1.90) 0 466.054 163.169 TXC
14 /Helvetica SetTxt
(FFT_opt,P8) 0 436.865 50.4935 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.74 TXR
(CPU ILP Speedup) 0 592.541 238.442 TXR
(Data Mem ILP Speedup) 0 592.541 221.143 TXR
(Synch ILP Speedup) 0 592.541 203.844 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 228.647 TXC
() 0 106.054 230.984 TXC
() 0 125.514 193.582 TXC
14 /Helvetica SetTxt
() 0 115.784 35.7935 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 211.816 TXC
() 0 213.081 230.984 TXC
() 0 232.541 147.296 TXC
() 0 252 159.919 TXC
14 /Helvetica SetTxt
() 0 222.811 35.7935 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 194.517 TXC
() 0 320.108 207.14 TXC
() 0 339.568 120.179 TXC
14 /Helvetica SetTxt
() 0 329.838 35.7935 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 194.984 TXC
() 0 427.135 207.14 TXC
() 0 446.595 165.997 TXC
() 0 466.054 150.569 TXC
14 /Helvetica SetTxt
() 0 436.865 35.7935 TXC
13 /Helvetica SetTxt
() 0 592.541 242.09 TXR
() 0 592.541 224.792 TXR
() 0 592.541 207.493 TXR
() 0 592.541 190.194 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 131 605 a
 26996819 6630772 789381 65781 40258437 19602964 startTexFig
 131 605 a
%%BeginDocument: Figures/SPLOT_FILES/sysc/ILPSU5_RepApps_b.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
86.5946 72 S9
[] 16.800000 SL
86.5946 227.284 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
86.5946 72 S9
86.5946 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
106.054 72 S9
[] 16.800000 SL
106.054 261.134 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
106.054 72 S9
106.054 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
125.514 72 S9
[] 16.800000 SL
125.514 165.493 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
125.514 72 S9
125.514 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.622 72 S9
[] 16.800000 SL
193.622 217.612 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.622 72 S9
193.622 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
213.081 72 S9
[] 16.800000 SL
213.081 254.687 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
213.081 72 S9
213.081 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
232.541 72 S9
[] 16.800000 SL
232.541 170.328 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
232.541 72 S9
232.541 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 139.164 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
252 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
300.649 72 S9
[] 16.800000 SL
300.649 205.254 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
300.649 72 S9
300.649 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
320.108 72 S9
[] 16.800000 SL
320.108 255.224 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
320.108 72 S9
320.108 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
339.568 72 S9
[] 16.800000 SL
339.568 125.731 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.568 72 S9
339.568 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
407.676 72 S9
[] 16.800000 SL
407.676 176.239 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
407.676 72 S9
407.676 72 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
427.135 72 S9
[] 16.800000 SL
427.135 257.373 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
427.135 72 S9
427.135 72 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
446.595 72 S9
[] 16.800000 SL
446.595 123.582 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
446.595 72 S9
446.595 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
466.054 72 S9
[] 16.800000 SL
466.054 150.448 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
466.054 72 S9
466.054 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 270.806 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 253.612 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 236.418 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 218.687 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
602.27 72 S9
[] 19.200000 SL
602.27 201.493 M9
gsave 1.000000 1.000000 1.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.2 TXR
12 /Helvetica SetTxt
(|) -90 72 125.731 TXC
14 /Helvetica-Bold SetTxt
(1) 0 65 120.931 TXR
12 /Helvetica SetTxt
(|) -90 72 179.463 TXC
14 /Helvetica-Bold SetTxt
(2) 0 65 174.663 TXR
12 /Helvetica SetTxt
(|) -90 72 233.194 TXC
14 /Helvetica-Bold SetTxt
(3) 0 65 228.394 TXR
12 /Helvetica SetTxt
(|) -90 72 286.925 TXC
14 /Helvetica-Bold SetTxt
(4) 0 65 282.125 TXR
16 /Helvetica SetTxt
() 0 342 1.6 TXC
[] 2.200000 SL
2 setlinecap
72 72 612 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 612 39.5 TXR
( ILP Speedup) 90 28.7 288 TXR
12 /Helvetica-Bold SetTxt
(2.89) 0 86.5946 229.433 TXC
(3.52) 0 106.054 263.284 TXC
(1.74) 0 125.514 167.642 TXC
14 /Helvetica SetTxt
(Erlebacher,P1) 0 115.784 50.5075 TXC
12 /Helvetica-Bold SetTxt
(2.71) 0 193.622 219.761 TXC
(3.40) 0 213.081 256.836 TXC
(1.83) 0 232.541 172.478 TXC
(1.25) 0 252 141.313 TXC
14 /Helvetica SetTxt
(Erlebacher,P8) 0 222.811 50.5075 TXC
12 /Helvetica-Bold SetTxt
(2.48) 0 300.649 207.403 TXC
(3.41) 0 320.108 257.373 TXC
(1.00) 0 339.568 127.881 TXC
14 /Helvetica SetTxt
(Radix,P1) 0 329.838 50.5075 TXC
12 /Helvetica-Bold SetTxt
(1.94) 0 407.676 178.388 TXC
(3.45) 0 427.135 259.522 TXC
(0.96) 0 446.595 125.731 TXC
(1.46) 0 466.054 152.597 TXC
14 /Helvetica SetTxt
(Radix,P8) 0 436.865 50.5075 TXC
13 /Helvetica SetTxt
(Overall ILP Speedup) 0 592.541 255.761 TXR
(CPU ILP Speedup) 0 592.541 238.567 TXR
(Data Mem ILP Speedup) 0 592.541 220.836 TXR
(Synch ILP Speedup) 0 592.541 203.642 TXR
12 /Helvetica-Bold SetTxt
() 0 86.5946 216.833 TXC
() 0 106.054 250.684 TXC
() 0 125.514 155.042 TXC
14 /Helvetica SetTxt
() 0 115.784 35.8075 TXC
12 /Helvetica-Bold SetTxt
() 0 193.622 207.161 TXC
() 0 213.081 244.236 TXC
() 0 232.541 159.878 TXC
() 0 252 128.713 TXC
14 /Helvetica SetTxt
() 0 222.811 35.8075 TXC
12 /Helvetica-Bold SetTxt
() 0 300.649 194.803 TXC
() 0 320.108 244.773 TXC
() 0 339.568 115.281 TXC
14 /Helvetica SetTxt
() 0 329.838 35.8075 TXC
12 /Helvetica-Bold SetTxt
() 0 407.676 165.788 TXC
() 0 427.135 246.922 TXC
() 0 446.595 113.131 TXC
() 0 466.054 139.997 TXC
14 /Helvetica SetTxt
() 0 436.865 35.8075 TXC
13 /Helvetica SetTxt
() 0 592.541 242.111 TXR
() 0 592.541 224.917 TXR
() 0 592.541 207.186 TXR
() 0 592.541 189.992 TXR
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 612.000000 72.000000 612.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
9 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 487 1098 a Fi(Figure)18 b(3.14)48 b Fp(E\013ects)17
b(of)f(larger)g(cac)o(he)g(con\014guration)131 1229 y(o)o(v)o(erlapp)q
(ed)g(misses)e(in)o(to)i(primary)f(cac)o(he)g(hits;)h(additionally)l(,)
f(larger)h(cac)o(hes)f(do)i(not)g(address)131 1319 y(coherence)e
(misses)g(in)h(our)h(applications.)204 1411 y(Although)d(memory)d(ILP)j
(sp)q(eedup)f(remains)g(lo)o(w)o(er)f(than)i(CPU)g(ILP)g(sp)q(eedup,)g
(the)f(w)o(eigh)o(t)131 1501 y(of)24 b(memory)d(time)g(decreases,)j
(making)f(CPU)g(sp)q(eedup)h(more)e(imp)q(ortan)o(t)g(in)i(determining)
131 1592 y(o)o(v)o(erall)18 b(ILP)h(sp)q(eedup.)30 b(As)19
b(a)h(result,)f(the)g(ILP)g(sp)q(eedups)h(of)f(the)g(v)m(arious)h
(applications)f(fall)131 1682 y(in)o(to)d(a)h(smaller)d(range)j(than)g
(with)f(the)g(default)g(con\014guration.)204 1774 y(Comparing)22
b(unipro)q(cessor)g(and)h(m)o(ultipro)q(cessor)d(systems,)h(w)o(e)g
(\014nd)h(that)g(larger)g(cac)o(he)131 1864 y(sizes)d(ha)o(v)o(e)f
(narro)o(w)o(ed)h(the)g(gap)h(for)f(LU)p 904 1864 15
2 v 18 w(opt,)h(Erlebac)o(her,)e(and)i(Radix,)f(while)f(ha)o(ving)h
(little)131 1954 y(e\013ect)h(on)h(the)e(already)h(narro)o(w)h(gap)g
(for)g(FFT)p 1044 1954 V 17 w(opt.)34 b(In)19 b(eac)o(h)h(of)h(these)e
(cases,)i(w)o(e)f(see)g(that)131 2045 y(the)i(large)h(cac)o(hes)f(prev)
o(en)o(t)f(m)o(ultipro)q(cessors)g(from)g(exacerbating)h(the)g(negativ)
o(e)g(e\013ects)g(of)131 2135 y(ILP)l(,)14 b(since)g(these)f(large)h
(cac)o(hes)g(reduce)f(m)o(uc)o(h)f(of)j(the)f(latency)f(and)i(resource)
e(o)q(ccupancy)i(that)131 2225 y(plague)i(our)f(default)g(system.)131
2386 y Fi(3.3.4)55 b(Summary)131 2510 y Fp(W)l(e)21 b(\014nd)g(that)h
(eac)o(h)e(of)h(the)g(arc)o(hitectural)f(enhancemen)o(ts)f(w)o(e)h
(examined)f(e\013ectiv)o(ely)f(han-)131 2600 y(dles)h(the)g(issue)g(it)
g(addresses.)30 b(Ho)o(w)o(ev)o(er,)18 b(eac)o(h)h(tec)o(hnique)e(also)
j(has)g(a)f(negativ)o(e)g(p)q(oin)o(t)g(that)131 2690
y(prev)o(en)o(ts)f(it)h(from)f(reac)o(hing)h(our)h(goal)g(of)g(high)f
(ILP)h(sp)q(eedup)f(on)h(m)o(ultipro)q(cessor)e(systems,)p
eop
%%Page: 37 44
37 43 bop 1882 72 a Fp(37)131 222 y(at)18 b(least)f(equal)g(to)h(that)g
(ac)o(hiev)o(ed)e(in)h(unipro)q(cessor)h(systems.)23
b(Larger)c(instruction)e(windo)o(ws)131 312 y(increase)k(o)o(v)o
(erlap,)g(but)g(con)o(ten)o(tion-b)q(ound)h(applications)f(still)f(exp)
q(erience)f(degradation)k(in)131 403 y(m)o(ultipro)q(cessor)13
b(systems.)20 b(Higher)14 b(bandwidth)h(systems)e(reduce)h(con)o(ten)o
(tion,)g(but)h(fail)f(to)h(ad-)131 493 y(dress)i(the)g(underlying)f(lo)
o(w)g(p)q(oten)o(tial)h(for)g(o)o(v)o(erlap)f(or)h(to)g(eliminate)d
(the)j(dic)o(hotom)o(y)d(of)j(lo)q(cal)131 583 y(and)h(remote)d
(accesses)h(found)i(in)e(m)o(ultipro)q(cessors.)21 b(Th)o(us,)c(while)f
(ILP)h(sp)q(eedups)g(impro)o(v)o(e,)d(a)131 674 y(gap)j(b)q(et)o(w)o
(een)f(unipro)q(cessor)h(and)g(m)o(ultipro)q(cessor)e(ILP)h(remains.)k
(Finally)l(,)15 b(large)h(cac)o(hes)g(can)131 764 y(reduce)f(b)q(oth)i
(latency)f(and)g(con)o(ten)o(tion,)f(but)h(also)h(remo)o(v)o(e)c(p)q
(oten)o(tial)j(for)g(o)o(v)o(erlap.)21 b(Ho)o(w)o(ev)o(er,)131
854 y(a)h(larger)g(cac)o(he)f(solv)o(es)g(this)h(latter)f(negativ)o(e)g
(asp)q(ect)h(\(of)g(lo)o(w)f(o)o(v)o(erlap\))g(b)o(y)g(itself,)h(since)
f(it)131 944 y(decreases)c(the)f(w)o(eigh)o(t)g(of)i(the)e(memory)e
(execution)i(comp)q(onen)o(t,)g(and)h(th)o(us)g(reduces)f(the)h(sig-)
131 1035 y(ni\014cance)i(of)g(memory)d(ILP)j(sp)q(eedup.)30
b(In)19 b(this)g(w)o(a)o(y)f(large)h(cac)o(hes)g(bring)g(unipro)q
(cessor)h(and)131 1125 y(m)o(ultipro)q(cessor)f(sp)q(eedups)j(close)e
(together)h(for)g(all)f(of)i(our)f(applications,)g(while)f(impro)o
(ving)131 1215 y(ILP)i(sp)q(eedup)g(for)g(three)f(of)g(them.)36
b(Nev)o(ertheless,)20 b(large)h(cac)o(hes)g(generally)g(pro)o(vided)g
(less)131 1306 y(impro)o(v)o(em)o(en)o(ts)12 b(in)i(ILP)h(sp)q(eedup,)g
(since)e(they)i(also)g(substan)o(tially)f(impro)o(v)o(e)e(the)i(p)q
(erformance)131 1396 y(of)j Fo(Simple)p Fp(.)131 1574
y Fs(3.4)66 b(Summary)24 b(and)f(Additional)i(Issues)131
1697 y Fp(This)e(study)f(\014nds)h(that)g(for)f(our)h(applications,)h
(in)d(curren)o(t)h(systems,)g(ILP)h(tec)o(hniques)d(ef-)131
1787 y(fectiv)o(ely)h(address)j(the)g(CPU)g(comp)q(onen)o(t)e(of)i
(execution)f(time,)g(but)h(are)f(less)h(e\013ectiv)o(e)e(in)131
1877 y(reducing)14 b(the)h(data)g(memory)d(comp)q(onen)o(t)i(of)h
(execution)e(time,)g(whic)o(h)h(is)g(dominated)g(b)o(y)g(read)131
1968 y(misses.)26 b(This)18 b(disparit)o(y)f(arises)i(in)f(our)g
(applications)g(b)q(ecause)h(of)f(insu\016cien)o(t)f(clustering)g(of)
131 2058 y(read)i(misses)d(in)i(our)h(application)f(and/or)h(system)e
(con)o(ten)o(tion)h(from)f(more)g(frequen)o(t)g(misses)131
2148 y(in)e(the)g(ILP)h(system,)e(and)i(leads)f(to)h(t)o(w)o(o)f(k)o
(ey)f(consequences.)20 b(First,)15 b(read)g(miss)f(latency)h(actu-)131
2239 y(ally)e(app)q(ears)i(as)g(a)f(greater)g(relativ)o(e)e(p)q
(erformance)h(b)q(ottlenec)o(k)g(in)g(ILP)h(m)o(ultipro)q(cessors)f
(than)131 2329 y(in)18 b(previous-generation)h(m)o(ultipro)q(cessors,)e
(despite)h(the)g(latency-tolerating)f(tec)o(hniques)g(in-)131
2419 y(corp)q(orated)i(in)e(ILP)h(pro)q(cessors.)26 b(Second,)18
b(ILP)g(pro)q(cessors)g(generally)f(ac)o(hiev)o(e)f(less)h(parallel)131
2509 y(e\016ciency)d(and)j(scalabilit)o(y)e(than)h(previous-generation)
h(systems.)204 2600 y(Our)g(exp)q(erimen)o(ts)c(also)k(consider)f
(three)g(hardw)o(are)h(mo)q(di\014cations)f(that)g(aim)f(to)i(increase)
131 2690 y(ILP)j(m)o(ultipro)q(cessor)f(p)q(erformance.)31
b(These)20 b(exp)q(erimen)o(ts)d(sho)o(w)j(that)h(eac)o(h)e(of)h(these)
g(tec)o(h-)p eop
%%Page: 38 45
38 44 bop 1882 72 a Fp(38)131 222 y(niques)25 b(ma)o(y)f(solv)o(e)h
(one)g(of)h(the)f(problems)f(in)h(obtaining)h(high)g(ILP)g(sp)q(eedup,)
h(but)f(eac)o(h)131 312 y(tec)o(hnique)18 b(also)i(exp)q(eriences)d
(certain)i(limitations.)28 b(F)l(urther,)19 b(the)g(lev)o(els)e(of)j
(hardw)o(are)g(sup-)131 403 y(p)q(ort)26 b(needed)d(for)i(some)f(of)g
(these)g(tec)o(hniques)f(are)i(not)g(y)o(et)e(tec)o(hnologically)g(or)i
(econom-)131 493 y(ically)g(feasible.)52 b(Th)o(us,)29
b(it)d(seems)f(appropriate)i(to)g(consider)f(other)h(mo)q
(di\014cations)f(that)131 583 y(can)21 b(more)e(easily)h(target)h(the)f
(remaining)f(read)i(miss)e(latency)h(in)g(ILP)h(m)o(ultipro)q(cessor)e
(sys-)131 674 y(tems.)36 b(Suc)o(h)21 b(supp)q(ort)i(ma)o(y)d(include)g
(no)o(v)o(el)g(latency-tolerating)h(tec)o(hniques)f(suc)o(h)h(as)h
(com-)131 764 y(piler)e(optimizations)g(to)i(more)e(aggressiv)o(ely)h
(cluster)f(read)i(misses,)f(while)f(also)i(accoun)o(ting)131
854 y(for)f(the)g(disparit)o(y)f(in)h(latencies)f(b)q(et)o(w)o(een)g
(lo)q(cal)g(and)i(remote)d(misses.)34 b(Previously)20
b(in)o(v)o(esti-)131 944 y(gated)c(latency-tolerating)e(tec)o(hniques)g
(suc)o(h)g(as)i(soft)o(w)o(are-con)o(trolled)f(non-binding)g(prefetc)o
(h-)131 1035 y(ing)25 b(ma)o(y)e(also)i(help)f(to)h(reduce)e(the)i
(memory)c(latency)j(b)q(ottlenec)o(k)f(in)h(ILP)h(m)o(ultipro)q(ces-)
131 1125 y(sors)20 b([RP)l(ASA97)o(].)28 b(Additionally)l(,)18
b(tec)o(hniques)f(to)i(reduce)f(latency)f(\(rather)i(than)g(tolerating)
131 1215 y(latency\))e(or)h(to)g(decrease)f(bandwidth)h(requiremen)o
(ts,)d(suc)o(h)i(as)i(pro)q(ducer-initiated)e(comm)o(u-)131
1306 y(nication)d(\(e.g.)g([ASHAA97)n(,)g(HLR)-5 b(W92)q(,)14
b(P)o(ou94)q(]\),)g(ma)o(y)e(address)j(an)o(y)g(remaining)d
(de\014ciencies)131 1396 y(in)k(the)g(p)q(oten)o(tial)g(of)h(ILP)f(m)o
(ultipro)q(cessors)f(to)i(hide)e(miss)g(latency)l(.)p
eop
%%Page: 39 46
39 45 bop 1882 72 a Fp(39)853 361 y Ft(Chapter)28 b(4)277
564 y(Impact)g(of)f(ILP)g(on)g(Sim)n(ulation)f(Metho)r(dology)204
752 y Fp(The)19 b(previous)f(c)o(hapter)g(uses)h(a)g(detailed)e
(cycle-b)o(y-cycle)e(sim)o(ulator)i(to)i(understand)h(the)131
842 y(impact)f(of)i(ILP)g(on)g(a)h(m)o(ultipro)q(cessor.)33
b(W)l(e)20 b(next)g(explore)g(the)h(v)m(alidit)o(y)e(of)i(mo)q(deling)e
Fo(ILP)131 933 y Fp(systems)13 b(with)h(sim)o(ulators)e(based)j(on)f
(the)g Fo(Simple)e Fp(pro)q(cessor)j(mo)q(del)d(and)j(its)f(v)m(arian)o
(ts,)g(whic)o(h)131 1023 y(are)20 b(commonly)d(used)j(in)g(m)o(ultipro)
q(cessor)e(arc)o(hitectural)h(studies.)32 b(Suc)o(h)20
b(sim)o(ulator)e(mo)q(dels)131 1113 y(enable)11 b(the)f(use)h(of)h
(curren)o(t)e(direct-execution)f(sim)o(ulation)g(tec)o(hniques)g(and)i
(th)o(us)g(can)h(complete)131 1204 y(m)o(ultipro)q(cessor)20
b(sim)o(ulations)f(m)o(uc)o(h)g(faster)i(than)g(a)h(more)e(detailed)f
Fo(ILP)p Fp(-based)i(sim)o(ulation)131 1294 y(mo)q(del.)131
1478 y Fs(4.1)66 b(Mo)r(dels)22 b(and)h(Metrics)131 1602
y Fp(F)l(or)e(the)g(exp)q(erimen)o(ts)d(in)j(this)g(c)o(hapter,)g(w)o
(e)f(study)h(three)g(v)m(arian)o(ts)g(of)g(the)g Fo(Simple)e
Fp(mo)q(del)131 1693 y(to)i(appro)o(ximate)f(the)g Fo(ILP)g
Fp(mo)q(del)g(based)h(on)g(recen)o(t)f(literature)f([HK)o(O)1524
1674 y Fk(+)1553 1693 y Fp(94,)i(HSH96].)34 b(The)131
1783 y(\014rst)17 b(t)o(w)o(o,)e Fo(Simple.2xP)e Fp(and)k
Fo(Simple.4xP)o Fp(,)c(mo)q(del)i(the)h Fo(Simple)e Fp(pro)q(cessor)j
(sp)q(ed)g(up)f(b)o(y)g(fac-)131 1873 y(tors)21 b(of)f(t)o(w)o(o)f(and)
i(four,)f(resp)q(ectiv)o(ely)l(.)29 b Fo(Simple.2xP)16
b Fp(seeks)k(to)g(set)f(p)q(eak)h(IPC)g(equal)f(to)i(the)131
1963 y(IPC)f(ac)o(hiev)o(ed)e(b)o(y)h(the)h(target)g
Fo(ILP)e Fp(system)g(\(Our)i Fo(ILP)f Fp(system)f(generally)h(obtains)h
(an)g(IPC)131 2054 y(of)c(appro)o(ximately)d(2)i(for)h(our)f
(applications\).)21 b Fo(Simple.4xP)12 b Fp(seeks)i(to)i(ac)o(hiev)o(e)
d(an)j(instruction)131 2144 y(issue)21 b(rate)g(equal)g(to)g
Fo(ILP)p Fp(,)f(whic)o(h)g(is)h(4)h(in)f(our)g(system.)35
b(F)l(or)21 b(the)g(memory)d(hierarc)o(h)o(y)i(and)131
2234 y(in)o(terconnect,)d(b)q(oth)i(mo)q(dels)e(use)h(the)f(same)g
(latencies)g(\(in)h(terms)e(of)j(absolute)f(time\))e(as)j(the)131
2325 y Fo(ILP)e Fp(system.)24 b(Th)o(us)18 b(the)g(latencies)e(in)i
(Figure)f(2.3,)h(whic)o(h)f(are)h(giv)o(en)f(in)g(terms)f(of)i(pro)q
(cessor)131 2415 y(cycles,)h(need)g(to)i(b)q(e)f(appropriately)f
(scaled)h(for)g(these)f(mo)q(dels.)31 b(The)20 b(\014nal)g(appro)o
(ximation,)131 2505 y Fo(Simple.4xP.)o(1c)o(L1)p Fp(,)g(not)i(only)g
(sp)q(eeds)g(up)g(the)f(pro)q(cessor)i(b)o(y)f(a)g(factor)g(of)g(4,)i
(but)e(further)131 2595 y(recognizes)c(that)h(L1)h(cac)o(he)e(hits)g
(should)h(not)g(stall)g(the)f(pro)q(cessor.)29 b(Hence,)18
b(this)g(mo)q(del)g(ad-)p eop
%%Page: 40 47
40 46 bop 1882 72 a Fp(40)160 439 y
 12787959 9472573 657817 -526254 30325391 24339251 startTexFig
 160 439 a
%%BeginDocument: Figures/SPLOT_FILES/sim_exectime/simEXEC_LU_opt.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
97.92 72 S9
[] 26.400000 SL
97.92 165.811 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 151.458 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 151.458 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 151.27 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 110.087 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 104.271 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 346.304 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 317.879 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 317.879 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 317.879 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 209.902 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 209.715 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 309.342 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 283.075 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 273.131 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 253.243 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 140.857 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 140.857 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 284.857 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 260.373 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 249.303 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 220.878 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 106.429 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 106.429 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 234.387 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 214.124 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 214.124 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 214.124 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 106.429 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 106.429 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 360 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 339.924 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 319.755 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 299.586 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 279.416 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 259.247 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 239.078 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 118.906 TXC
14 /Helvetica-Bold SetTxt
(50) 0 65 113.506 TXR
12 /Helvetica SetTxt
(|) -90 72 165.811 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 160.411 TXR
12 /Helvetica SetTxt
(|) -90 72 212.717 TXC
14 /Helvetica-Bold SetTxt
(150) 0 65 207.317 TXR
12 /Helvetica SetTxt
(|) -90 72 259.622 TXC
14 /Helvetica-Bold SetTxt
(200) 0 65 254.222 TXR
12 /Helvetica SetTxt
(|) -90 72 306.528 TXC
14 /Helvetica-Bold SetTxt
(250) 0 65 301.128 TXR
12 /Helvetica SetTxt
(|) -90 72 353.433 TXC
14 /Helvetica-Bold SetTxt
(300) 0 65 348.033 TXR
18 /Helvetica SetTxt
() 0 266.4 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 460.8 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 460.8 37 TXR
( Normalized execution time) 90 28.1 360 TXR
15 /Helvetica SetTxt
(ILP) 0 97.92 57.5531 TXC
14 /Helvetica SetTxt
(100) 0 97.92 166.749 TXC
15 /Helvetica SetTxt
(Simple) 0 149.76 57.5531 TXC
14 /Helvetica SetTxt
(292) 0 149.76 347.242 TXC
15 /Helvetica SetTxt
(2xP) 0 201.6 57.5531 TXC
14 /Helvetica SetTxt
(253) 0 201.6 310.28 TXC
15 /Helvetica SetTxt
(4xP) 0 253.44 57.5531 TXC
14 /Helvetica SetTxt
(227) 0 253.44 285.795 TXC
15 /Helvetica SetTxt
(4xP.1cL1) 0 305.28 57.5531 TXC
14 /Helvetica SetTxt
(173) 0 305.28 235.325 TXC
20 /Helvetica SetTxt
(LU_opt) 0 213.696 28.7531 TXC
15 /Helvetica SetTxt
(Sync) 0 417.6 342.739 TXR
(Write) 0 417.6 322.569 TXR
(Read hit) 0 417.6 302.4 TXR
(Read miss) 0 417.6 282.231 TXR
(FU stall) 0 417.6 262.155 TXR
(Busy) 0 417.6 241.986 TXR
() 0 97.92 41.8031 TXC
14 /Helvetica SetTxt
() 0 97.92 152.049 TXC
15 /Helvetica SetTxt
() 0 149.76 41.8031 TXC
14 /Helvetica SetTxt
() 0 149.76 332.542 TXC
15 /Helvetica SetTxt
() 0 201.6 41.8031 TXC
14 /Helvetica SetTxt
() 0 201.6 295.58 TXC
15 /Helvetica SetTxt
() 0 253.44 41.8031 TXC
14 /Helvetica SetTxt
() 0 253.44 271.095 TXC
15 /Helvetica SetTxt
() 0 305.28 41.8031 TXC
14 /Helvetica SetTxt
() 0 305.28 220.625 TXC
20 /Helvetica SetTxt
() 0 213.696 7.75309 TXC
15 /Helvetica SetTxt
() 0 417.6 326.989 TXR
() 0 417.6 306.819 TXR
() 0 417.6 286.65 TXR
() 0 417.6 266.481 TXR
() 0 417.6 246.405 TXR
() 0 417.6 226.236 TXR
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1093 439 a
 12787959 9472573 657817 -526254 30325391 24339251 startTexFig
 1093 439 a
%%BeginDocument: Figures/SPLOT_FILES/sim_exectime/simEXEC_Erlebacher.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
97.92 72 S9
[] 26.400000 SL
97.92 197.436 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 186.523 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 186.523 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 185.143 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 119.666 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 107.749 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 346.328 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 333.031 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 333.031 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 333.031 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 231.805 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 231.805 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 307.693 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 295.652 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 287.749 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 255.763 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 152.028 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 152.028 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 291.01 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 279.721 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 267.052 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 217.756 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 112.014 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 112.014 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 229.798 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 218.509 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 218.509 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 218.509 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 112.139 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 112.139 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 360 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 339.805 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 319.735 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 299.54 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 279.345 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 259.275 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 239.08 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 97.0871 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 91.6871 TXR
12 /Helvetica SetTxt
(|) -90 72 122.174 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 116.774 TXR
12 /Helvetica SetTxt
(|) -90 72 147.261 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 141.861 TXR
12 /Helvetica SetTxt
(|) -90 72 172.348 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 166.948 TXR
12 /Helvetica SetTxt
(|) -90 72 197.436 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 192.036 TXR
12 /Helvetica SetTxt
(|) -90 72 222.523 TXC
14 /Helvetica-Bold SetTxt
(120) 0 65 217.123 TXR
12 /Helvetica SetTxt
(|) -90 72 247.61 TXC
14 /Helvetica-Bold SetTxt
(140) 0 65 242.21 TXR
12 /Helvetica SetTxt
(|) -90 72 272.697 TXC
14 /Helvetica-Bold SetTxt
(160) 0 65 267.297 TXR
12 /Helvetica SetTxt
(|) -90 72 297.784 TXC
14 /Helvetica-Bold SetTxt
(180) 0 65 292.384 TXR
12 /Helvetica SetTxt
(|) -90 72 322.871 TXC
14 /Helvetica-Bold SetTxt
(200) 0 65 317.471 TXR
12 /Helvetica SetTxt
(|) -90 72 347.958 TXC
14 /Helvetica-Bold SetTxt
(220) 0 65 342.558 TXR
18 /Helvetica SetTxt
() 0 266.4 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 460.8 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 460.8 37 TXR
( Normalized execution time) 90 28.1 360 TXR
15 /Helvetica SetTxt
(ILP) 0 97.92 57.5749 TXC
14 /Helvetica SetTxt
(100) 0 97.92 198.69 TXC
15 /Helvetica SetTxt
(Simple) 0 149.76 57.5749 TXC
14 /Helvetica SetTxt
(219) 0 149.76 347.582 TXC
15 /Helvetica SetTxt
(2xP) 0 201.6 57.5749 TXC
14 /Helvetica SetTxt
(188) 0 201.6 308.948 TXC
15 /Helvetica SetTxt
(4xP) 0 253.44 57.5749 TXC
14 /Helvetica SetTxt
(175) 0 253.44 292.265 TXC
15 /Helvetica SetTxt
(4xP.1cL1) 0 305.28 57.5749 TXC
14 /Helvetica SetTxt
(126) 0 305.28 231.052 TXC
20 /Helvetica SetTxt
(Erlebacher) 0 213.696 28.8502 TXC
15 /Helvetica SetTxt
(Sync) 0 417.6 342.69 TXR
(Write) 0 417.6 322.62 TXR
(Read hit) 0 417.6 302.425 TXR
(Read miss) 0 417.6 282.23 TXR
(FU stall) 0 417.6 262.035 TXR
(Busy) 0 417.6 241.965 TXR
() 0 97.92 41.8249 TXC
14 /Helvetica SetTxt
() 0 97.92 183.99 TXC
15 /Helvetica SetTxt
() 0 149.76 41.8249 TXC
14 /Helvetica SetTxt
() 0 149.76 332.882 TXC
15 /Helvetica SetTxt
() 0 201.6 41.8249 TXC
14 /Helvetica SetTxt
() 0 201.6 294.248 TXC
15 /Helvetica SetTxt
() 0 253.44 41.8249 TXC
14 /Helvetica SetTxt
() 0 253.44 277.565 TXC
15 /Helvetica SetTxt
() 0 305.28 41.8249 TXC
14 /Helvetica SetTxt
() 0 305.28 216.352 TXC
20 /Helvetica SetTxt
() 0 213.696 7.85017 TXC
15 /Helvetica SetTxt
() 0 417.6 326.94 TXR
() 0 417.6 306.87 TXR
() 0 417.6 286.675 TXR
() 0 417.6 266.48 TXR
() 0 417.6 246.285 TXR
() 0 417.6 226.215 TXR
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 160 1043 a
 12787959 9472573 657817 -526254 30325391 24339251 startTexFig
 160 1043 a
%%BeginDocument: Figures/SPLOT_FILES/sim_exectime/simEXEC_Mp3d.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
97.92 72 S9
[] 26.400000 SL
97.92 274.674 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 263.324 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 263.324 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 262.716 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 82.9444 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 81.1203 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 346.218 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 336.084 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 336.084 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 336.084 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 112.535 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 112.535 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 339.327 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 329.802 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 325.748 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 318.654 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 92.2674 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 92.2674 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 338.111 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 329.194 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 321.492 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 311.156 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 82.1337 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 82.1337 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 324.532 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 315.614 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 315.614 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 315.614 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 82.1337 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 82.1337 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 360 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 339.733 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 319.668 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 299.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 279.336 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 259.271 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 239.004 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 112.535 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 107.135 TXR
12 /Helvetica SetTxt
(|) -90 72 153.07 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 147.67 TXR
12 /Helvetica SetTxt
(|) -90 72 193.605 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 188.205 TXR
12 /Helvetica SetTxt
(|) -90 72 234.139 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 228.739 TXR
12 /Helvetica SetTxt
(|) -90 72 274.674 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 269.274 TXR
12 /Helvetica SetTxt
(|) -90 72 315.209 TXC
14 /Helvetica-Bold SetTxt
(120) 0 65 309.809 TXR
12 /Helvetica SetTxt
(|) -90 72 355.744 TXC
14 /Helvetica-Bold SetTxt
(140) 0 65 350.344 TXR
18 /Helvetica SetTxt
() 0 266.4 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 460.8 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 460.8 37 TXR
( Normalized execution time) 90 28.1 360 TXR
15 /Helvetica SetTxt
(ILP) 0 97.92 57.6101 TXC
14 /Helvetica SetTxt
(100) 0 97.92 276.701 TXC
15 /Helvetica SetTxt
(Simple) 0 149.76 57.6101 TXC
14 /Helvetica SetTxt
(135) 0 149.76 348.245 TXC
15 /Helvetica SetTxt
(2xP) 0 201.6 57.6101 TXC
14 /Helvetica SetTxt
(132) 0 201.6 341.354 TXC
15 /Helvetica SetTxt
(4xP) 0 253.44 57.6101 TXC
14 /Helvetica SetTxt
(131) 0 253.44 340.138 TXC
15 /Helvetica SetTxt
(4xP.1cL1) 0 305.28 57.6101 TXC
14 /Helvetica SetTxt
(125) 0 305.28 326.559 TXC
20 /Helvetica SetTxt
(Mp3d) 0 213.696 28.8304 TXC
15 /Helvetica SetTxt
(Sync) 0 417.6 342.773 TXR
(Write) 0 417.6 322.505 TXR
(Read hit) 0 417.6 302.441 TXR
(Read miss) 0 417.6 282.173 TXR
(FU stall) 0 417.6 262.108 TXR
(Busy) 0 417.6 241.841 TXR
() 0 97.92 41.8601 TXC
14 /Helvetica SetTxt
() 0 97.92 262.001 TXC
15 /Helvetica SetTxt
() 0 149.76 41.8601 TXC
14 /Helvetica SetTxt
() 0 149.76 333.545 TXC
15 /Helvetica SetTxt
() 0 201.6 41.8601 TXC
14 /Helvetica SetTxt
() 0 201.6 326.654 TXC
15 /Helvetica SetTxt
() 0 253.44 41.8601 TXC
14 /Helvetica SetTxt
() 0 253.44 325.438 TXC
15 /Helvetica SetTxt
() 0 305.28 41.8601 TXC
14 /Helvetica SetTxt
() 0 305.28 311.859 TXC
20 /Helvetica SetTxt
() 0 213.696 7.8304 TXC
15 /Helvetica SetTxt
() 0 417.6 327.023 TXR
() 0 417.6 306.755 TXR
() 0 417.6 286.691 TXR
() 0 417.6 266.423 TXR
() 0 417.6 246.358 TXR
() 0 417.6 226.091 TXR
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1093 1043 a
 12787959 9472573 657817 -526254 30325391 24339251 startTexFig
 1093 1043 a
%%BeginDocument: Figures/SPLOT_FILES/sim_exectime/simEXEC_FFT_opt.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
97.92 72 S9
[] 26.400000 SL
97.92 181.298 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 180.314 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 180.314 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 179.768 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 134.846 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 116.812 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 346.228 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 344.261 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 344.261 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 344.261 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 270.157 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 270.157 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 285.787 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 283.929 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 267.315 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 245.893 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 171.133 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 171.133 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 258.462 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 257.151 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 231.575 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 197.365 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 121.512 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 121.512 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 200.972 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 199.223 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 199.223 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 199.223 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 121.293 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 121.293 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 360 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 339.78 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 319.669 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 299.558 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 279.338 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 259.227 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 239.007 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 126.649 TXC
14 /Helvetica-Bold SetTxt
(50) 0 65 121.249 TXR
12 /Helvetica SetTxt
(|) -90 72 181.298 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 175.898 TXR
12 /Helvetica SetTxt
(|) -90 72 235.947 TXC
14 /Helvetica-Bold SetTxt
(150) 0 65 230.547 TXR
12 /Helvetica SetTxt
(|) -90 72 290.596 TXC
14 /Helvetica-Bold SetTxt
(200) 0 65 285.196 TXR
12 /Helvetica SetTxt
(|) -90 72 345.245 TXC
14 /Helvetica-Bold SetTxt
(250) 0 65 339.845 TXR
18 /Helvetica SetTxt
() 0 266.4 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 460.8 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 460.8 37 TXR
( Normalized execution time) 90 28.1 360 TXR
15 /Helvetica SetTxt
(ILP) 0 97.92 57.5727 TXC
14 /Helvetica SetTxt
(100) 0 97.92 182.391 TXC
15 /Helvetica SetTxt
(Simple) 0 149.76 57.5727 TXC
14 /Helvetica SetTxt
(251) 0 149.76 347.321 TXC
15 /Helvetica SetTxt
(2xP) 0 201.6 57.5727 TXC
14 /Helvetica SetTxt
(196) 0 201.6 286.88 TXC
15 /Helvetica SetTxt
(4xP) 0 253.44 57.5727 TXC
14 /Helvetica SetTxt
(171) 0 253.44 259.555 TXC
15 /Helvetica SetTxt
(4xP.1cL1) 0 305.28 57.5727 TXC
14 /Helvetica SetTxt
(118) 0 305.28 202.065 TXC
20 /Helvetica SetTxt
(FFT_opt) 0 213.696 28.8273 TXC
15 /Helvetica SetTxt
(Sync) 0 417.6 342.731 TXR
(Write) 0 417.6 322.511 TXR
(Read hit) 0 417.6 302.4 TXR
(Read miss) 0 417.6 282.18 TXR
(FU stall) 0 417.6 262.069 TXR
(Busy) 0 417.6 241.958 TXR
() 0 97.92 41.8227 TXC
14 /Helvetica SetTxt
() 0 97.92 167.691 TXC
15 /Helvetica SetTxt
() 0 149.76 41.8227 TXC
14 /Helvetica SetTxt
() 0 149.76 332.621 TXC
15 /Helvetica SetTxt
() 0 201.6 41.8227 TXC
14 /Helvetica SetTxt
() 0 201.6 272.18 TXC
15 /Helvetica SetTxt
() 0 253.44 41.8227 TXC
14 /Helvetica SetTxt
() 0 253.44 244.855 TXC
15 /Helvetica SetTxt
() 0 305.28 41.8227 TXC
14 /Helvetica SetTxt
() 0 305.28 187.365 TXC
20 /Helvetica SetTxt
() 0 213.696 7.82732 TXC
15 /Helvetica SetTxt
() 0 417.6 326.981 TXR
() 0 417.6 306.761 TXR
() 0 417.6 286.65 TXR
() 0 417.6 266.43 TXR
() 0 417.6 246.319 TXR
() 0 417.6 226.208 TXR
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 160 1647 a
 12787959 9472573 657817 -526254 30325391 24339251 startTexFig
 160 1647 a
%%BeginDocument: Figures/SPLOT_FILES/sim_exectime/simEXEC_Water.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
97.92 72 S9
[] 26.400000 SL
97.92 202.909 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 181.309 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 180.655 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 172.145 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 129.6 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 113.367 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 346.255 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 323.345 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 323.345 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 323.345 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 270.982 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 270.327 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 287.738 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 268.102 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 260.771 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 224.902 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 171.229 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 171.229 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 260.247 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 242.182 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 231.185 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 175.942 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 121.745 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 121.745 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 192.698 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 175.156 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 175.156 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 175.156 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 121.615 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 121.615 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 360 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 339.84 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 319.68 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 299.52 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 279.36 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 259.2 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 239.04 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 98.1818 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 92.7818 TXR
12 /Helvetica SetTxt
(|) -90 72 124.364 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 118.964 TXR
12 /Helvetica SetTxt
(|) -90 72 150.545 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 145.145 TXR
12 /Helvetica SetTxt
(|) -90 72 176.727 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 171.327 TXR
12 /Helvetica SetTxt
(|) -90 72 202.909 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 197.509 TXR
12 /Helvetica SetTxt
(|) -90 72 229.091 TXC
14 /Helvetica-Bold SetTxt
(120) 0 65 223.691 TXR
12 /Helvetica SetTxt
(|) -90 72 255.273 TXC
14 /Helvetica-Bold SetTxt
(140) 0 65 249.873 TXR
12 /Helvetica SetTxt
(|) -90 72 281.455 TXC
14 /Helvetica-Bold SetTxt
(160) 0 65 276.055 TXR
12 /Helvetica SetTxt
(|) -90 72 307.636 TXC
14 /Helvetica-Bold SetTxt
(180) 0 65 302.236 TXR
12 /Helvetica SetTxt
(|) -90 72 333.818 TXC
14 /Helvetica-Bold SetTxt
(200) 0 65 328.418 TXR
12 /Helvetica SetTxt
(|) -90 72 360 TXC
14 /Helvetica-Bold SetTxt
(220) 0 65 354.6 TXR
18 /Helvetica SetTxt
() 0 266.4 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 460.8 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 460.8 37 TXR
( Normalized execution time) 90 28.1 360 TXR
15 /Helvetica SetTxt
(ILP) 0 97.92 57.6 TXC
14 /Helvetica SetTxt
(100) 0 97.92 204.218 TXC
15 /Helvetica SetTxt
(Simple) 0 149.76 57.6 TXC
14 /Helvetica SetTxt
(210) 0 149.76 347.564 TXC
15 /Helvetica SetTxt
(2xP) 0 201.6 57.6 TXC
14 /Helvetica SetTxt
(165) 0 201.6 289.047 TXC
15 /Helvetica SetTxt
(4xP) 0 253.44 57.6 TXC
14 /Helvetica SetTxt
(144) 0 253.44 261.556 TXC
15 /Helvetica SetTxt
(4xP.1cL1) 0 305.28 57.6 TXC
14 /Helvetica SetTxt
(92) 0 305.28 194.007 TXC
20 /Helvetica SetTxt
(Water) 0 213.696 28.8 TXC
15 /Helvetica SetTxt
(Sync) 0 417.6 342.72 TXR
(Write) 0 417.6 322.56 TXR
(Read hit) 0 417.6 302.4 TXR
(Read miss) 0 417.6 282.24 TXR
(FU stall) 0 417.6 262.08 TXR
(Busy) 0 417.6 241.92 TXR
() 0 97.92 41.85 TXC
14 /Helvetica SetTxt
() 0 97.92 189.518 TXC
15 /Helvetica SetTxt
() 0 149.76 41.85 TXC
14 /Helvetica SetTxt
() 0 149.76 332.864 TXC
15 /Helvetica SetTxt
() 0 201.6 41.85 TXC
14 /Helvetica SetTxt
() 0 201.6 274.347 TXC
15 /Helvetica SetTxt
() 0 253.44 41.85 TXC
14 /Helvetica SetTxt
() 0 253.44 246.856 TXC
15 /Helvetica SetTxt
() 0 305.28 41.85 TXC
14 /Helvetica SetTxt
() 0 305.28 179.307 TXC
20 /Helvetica SetTxt
() 0 213.696 7.8 TXC
15 /Helvetica SetTxt
() 0 417.6 326.97 TXR
() 0 417.6 306.81 TXR
() 0 417.6 286.65 TXR
() 0 417.6 266.49 TXR
() 0 417.6 246.33 TXR
() 0 417.6 226.17 TXR
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1093 1647 a
 12787959 9472573 657817 -526254 30325391 24339251 startTexFig
 1093 1647 a
%%BeginDocument: Figures/SPLOT_FILES/sim_exectime/simEXEC_Radix.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
97.92 72 S9
[] 26.400000 SL
97.92 289.195 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 272.253 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 271.819 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 222.516 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 106.968 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
97.92 72 S9
[] 26.400000 SL
97.92 98.9321 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 346.1 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 312.217 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 291.584 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 291.584 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 190.588 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
149.76 72 S9
[] 26.400000 SL
149.76 190.588 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 335.891 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 303.095 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 264.652 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 235.765 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 131.077 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
201.6 72 S9
[] 26.400000 SL
201.6 131.077 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 331.982 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 297.231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 249.231 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 209.701 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 101.756 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
253.44 72 S9
[] 26.400000 SL
253.44 101.756 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 309.828 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 276.163 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 224.036 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 224.036 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 101.538 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
305.28 72 S9
[] 26.400000 SL
305.28 101.538 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 360 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 339.801 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 319.602 M9
gsave 0.800000 0.800000 0.800000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 299.403 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 279.204 M9
gsave 0.600000 0.600000 0.600000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 259.222 M9
gsave 0.900000 0.900000 0.900000 setrgbcolor
D9
grestore
434.88 72 S9
[] 24.000000 SL
434.88 239.023 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 66.6 TXR
12 /Helvetica SetTxt
(|) -90 72 115.439 TXC
14 /Helvetica-Bold SetTxt
(20) 0 65 110.039 TXR
12 /Helvetica SetTxt
(|) -90 72 158.878 TXC
14 /Helvetica-Bold SetTxt
(40) 0 65 153.478 TXR
12 /Helvetica SetTxt
(|) -90 72 202.317 TXC
14 /Helvetica-Bold SetTxt
(60) 0 65 196.917 TXR
12 /Helvetica SetTxt
(|) -90 72 245.756 TXC
14 /Helvetica-Bold SetTxt
(80) 0 65 240.356 TXR
12 /Helvetica SetTxt
(|) -90 72 289.195 TXC
14 /Helvetica-Bold SetTxt
(100) 0 65 283.795 TXR
12 /Helvetica SetTxt
(|) -90 72 332.633 TXC
14 /Helvetica-Bold SetTxt
(120) 0 65 327.233 TXR
18 /Helvetica SetTxt
() 0 266.4 -7.2 TXC
[] 2.600000 SL
2 setlinecap
72 72 460.8 72 
L9
0 setlinecap
72 72 72 360 
L9
() 0 460.8 37 TXR
( Normalized execution time) 90 28.1 360 TXR
15 /Helvetica SetTxt
(ILP) 0 97.92 57.6652 TXC
14 /Helvetica SetTxt
(100) 0 97.92 291.367 TXC
15 /Helvetica SetTxt
(Simple) 0 149.76 57.6652 TXC
14 /Helvetica SetTxt
(126) 0 149.76 348.271 TXC
15 /Helvetica SetTxt
(2xP) 0 201.6 57.6652 TXC
14 /Helvetica SetTxt
(121) 0 201.6 338.063 TXC
15 /Helvetica SetTxt
(4xP) 0 253.44 57.6652 TXC
14 /Helvetica SetTxt
(120) 0 253.44 334.154 TXC
15 /Helvetica SetTxt
(4xP.1cL1) 0 305.28 57.6652 TXC
14 /Helvetica SetTxt
(109) 0 305.28 312 TXC
20 /Helvetica SetTxt
(Radix) 0 213.696 28.7783 TXC
15 /Helvetica SetTxt
(Sync) 0 417.6 342.624 TXR
(Write) 0 417.6 322.425 TXR
(Read hit) 0 417.6 302.226 TXR
(Read miss) 0 417.6 282.244 TXR
(FU stall) 0 417.6 262.045 TXR
(Busy) 0 417.6 241.846 TXR
() 0 97.92 41.9152 TXC
14 /Helvetica SetTxt
() 0 97.92 276.667 TXC
15 /Helvetica SetTxt
() 0 149.76 41.9152 TXC
14 /Helvetica SetTxt
() 0 149.76 333.571 TXC
15 /Helvetica SetTxt
() 0 201.6 41.9152 TXC
14 /Helvetica SetTxt
() 0 201.6 323.363 TXC
15 /Helvetica SetTxt
() 0 253.44 41.9152 TXC
14 /Helvetica SetTxt
() 0 253.44 319.454 TXC
15 /Helvetica SetTxt
() 0 305.28 41.9152 TXC
14 /Helvetica SetTxt
() 0 305.28 297.3 TXC
20 /Helvetica SetTxt
() 0 213.696 7.77828 TXC
15 /Helvetica SetTxt
() 0 417.6 326.874 TXR
() 0 417.6 306.675 TXR
() 0 417.6 286.476 TXR
() 0 417.6 266.494 TXR
() 0 417.6 246.295 TXR
() 0 417.6 226.096 TXR
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 460.800000 72.000000 460.800000 360.000000 72.000000 360.000000 newpath moveto lineto lineto lineto closepath clip
10 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 526 2372 a Fi(Figure)18 b(4.1)49 b Fp(Predicting)15
b(execution)g(time)g(and)h(its)565 2432 y(comp)q(onen)o(ts)f(using)i
(simple)d(sim)o(ulation)g(mo)q(dels)p eop
%%Page: 41 48
41 47 bop 1882 72 a Fp(41)131 222 y(ditionally)15 b(sp)q(eeds)h(L1)h
(cac)o(he)e(and)h(write)g(bu\013er)g(access)f(time)f(to)i(one)g(pro)q
(cessor)h(cycle)d(of)i(this)131 312 y(mo)q(del.)k(The)c(rest)h(of)f
(the)g(memory)d(hierarc)o(h)o(y)i(and)i(the)f(in)o(terconnect)f(remain)
f(unc)o(hanged.)204 403 y(W)l(e)20 b(use)g(the)f(total)h(execution)f
(time)f(and)i(the)f(relativ)o(e)f(imp)q(ortance)h(of)h(v)m(arious)g
(comp)q(o-)131 493 y(nen)o(ts)d(of)h(execution)e(time)f(as)j(the)f
(primary)f(metrics)f(to)j(describ)q(e)e(the)h(e\013ectiv)o(eness)f(of)i
(these)131 583 y(sim)o(ulation)11 b(mo)q(dels.)19 b(W)l(e)13
b(additionally)g(in)o(v)o(estigate)e(the)i(accuracy)f(of)i(these)e(sim)
o(ulation)g(mo)q(d-)131 674 y(els)19 b(in)f(determining)f(the)i(m)o
(ultipro)q(cessor)e(sp)q(eedups)j(of)f(represen)o(tativ)o(e)e
(applications.)29 b(This)131 764 y(study)19 b(do)q(es)g(not)g(presen)o
(t)f(results)g(for)h(the)f(unoptimized)f(v)o(ersions)h(of)h(FFT)f(and)h
(LU,)f(as)i(the)131 854 y(optimized)14 b(v)o(ersions)i(of)h(these)e
(applications)i(giv)o(e)e(b)q(etter)h(p)q(erformance)f(on)i(the)f(ILP)g
(system.)131 1032 y Fs(4.2)66 b(Execution)24 b(Time)f(and)g(its)f(Comp)
r(onen)n(ts)131 1155 y Fp(Figure)d(4.1)h(sho)o(ws)h(the)e(total)h(sim)o
(ulated)d(execution)h(time)g(\(and)i(its)f(comp)q(onen)o(ts\))g(for)h
(eac)o(h)131 1245 y(application)14 b(and)g(sim)o(ulation)e(mo)q(del,)g
(normalized)g(to)i(the)f(sim)o(ulated)f(execution)g(time)g(for)i(the)
131 1336 y Fo(ILP)h Fp(mo)q(del)g(for)i(the)f(sp)q(eci\014c)g
(application.)204 1426 y(Chapter)21 b(3)g(already)f(compares)g(the)g
Fo(Simple)f Fp(and)i Fo(ILP)e Fp(mo)q(dels.)33 b(The)20
b(ILP)h(sp)q(eedup)g(of)131 1516 y(an)e(application)f(indicates)f(the)h
(factor)g(b)o(y)f(whic)o(h)h(the)f(total)i(execution)e(time)e(of)k(the)
e Fo(Simple)131 1607 y Fp(mo)q(del)j(deviates)h(from)f(the)h(actual)h
(time)d(with)i Fo(ILP)p Fp(.)f(As)h(a)h(result,)f(the)g(error)g(in)g
(predicted)131 1697 y(total)16 b(execution)d(time)g(increases)i(for)g
(applications)g(that)g(are)g(b)q(etter)g(at)g(exploiting)f(ILP)l(.)h
(This)131 1787 y(error)i(o)q(ccurs)f(from)g(mispredicting)d(the)k(time)
d(sp)q(en)o(t)i(in)g(eac)o(h)g(comp)q(onen)o(t)g(of)g(execution)f(time)
131 1878 y(in)j(prop)q(ortion)i(to)f(the)f(ILP)g(sp)q(eedup)h(of)g
(that)g(comp)q(onen)o(t.)26 b(Errors)20 b(in)e(the)g(total)g(execution)
131 1968 y(time)c(with)i(the)g Fo(Simple)f Fp(mo)q(del)f(range)j(from)e
(26\045)i(to)g(192\045)g(for)f(our)h(applications.)204
2058 y Fo(Simple.2xP)k Fp(and)j Fo(Simple.4xP)c Fp(reduce)j(the)g
(errors)h(in)g(total)g(execution)e(time)g(b)o(y)h(re-)131
2149 y(ducing)i(busy)g(time)d(compared)i(to)h Fo(Simple)p
Fp(.)44 b(Busy)24 b(time)f(falls)h(b)o(y)g(factors)h(of)g(roughly)g(2)
131 2239 y(and)d(4,)h(resp)q(ectiv)o(ely)l(,)d(in)h(these)g(mo)q(dels,)
h(and)g(actually)f(resem)o(bles)e Fo(ILP)h Fp(busy)i(time)d(in)j(the)
131 2329 y(case)17 b(of)h Fo(Simple.4x)o(P)p Fp(.)13
b(Ho)o(w)o(ev)o(er,)i(absolute)j(read)f(miss)f(time)e(sta)o(ys)k
(nearly)e(unc)o(hanged)h(com-)131 2419 y(pared)25 b(to)g
Fo(Simple)p Fp(,)g(and)g(actually)f(increases)g(in)h(some)f(cases)h
(due)f(to)h(added)h(con)o(ten)o(tion.)131 2510 y(Sync)o(hronization)14
b(time)e(also)j(remains)d(mostly)h(unc)o(hanged.)21 b(F)l(urther,)14
b(these)f(t)o(w)o(o)i(mo)q(dels)e(add)131 2600 y(extraneous)21
b(read)g(hit)g(stall)f(comp)q(onen)o(ts,)h(since)f(ev)o(ery)f(L1)i(cac)
o(he)f(access)h(no)o(w)g(tak)o(es)g(more)131 2690 y(than)f(one)g(pro)q
(cessor)g(cycle;)f(one)g(of)h(these)f(cycles)f(is)h(considered)g(busy)l
(,)g(but)h(the)f(remaining)p eop
%%Page: 42 49
42 48 bop 1882 72 a Fp(42)131 222 y(pro)q(cessor)19 b(cycles)e(are)h
(considered)f(stall)h(time)e(b)q(ecause)i(of)g(blo)q(c)o(king)g(reads.)
27 b(Similarly)l(,)15 b(eac)o(h)131 312 y(of)22 b(these)e(mo)q(dels)g
(also)i(incurs)f(an)g(un)o(w)o(an)o(ted)g(write)f(comp)q(onen)o(t.)1417
294 y Fd(y)1470 312 y Fp(As)h(a)g(result,)g(errors)h(in)131
403 y(total)c(execution)e(time)f(range)j(from)e(21\045)i(to)g(153\045)g
(for)g Fo(Simple.2x)o(P)c Fp(and)k(20\045)g(to)g(127\045)g(for)131
493 y Fo(Simple.4xP)p Fp(,)12 b(for)17 b(our)g(applications.)204
584 y Fo(Simple.4xP.)o(1cL)o(1)24 b Fp(remo)o(v)o(es)h(the)i
(extraneous)h(read)f(hit)g(and)h(write)e(comp)q(onen)o(ts)h(of)131
674 y Fo(Simple.4xP)p Fp(.)17 b(This)22 b(mo)q(del)e(is)h(more)f
(accurate)h(than)h(the)f(other)g Fo(Simple)p Fp(-based)f(mo)q(dels)h
(in)131 764 y(predicting)e(the)h(total)g(execution)f(time,)f(giving)i
(appro)o(ximately)e(25\045)i(or)g(less)g(error)g(on)g(\014v)o(e)131
855 y(applications.)i(Ho)o(w)o(ev)o(er,)14 b(in)j(the)f(presence)f(of)i
(high)g(read)g(miss)e(ILP)h(sp)q(eedup,)h(the)f(inaccura-)131
945 y(cies)e(in)h(predicting)f(read)h(miss)e(time)g(still)g(p)q
(ersist,)i(giving)g(an)g(error)g(of)g(73\045)g(in)g(predicting)f(the)
131 1035 y(execution)20 b(time)e(for)i(LU)p 617 1035
15 2 v 18 w(opt.)34 b Fo(Simple.4xP)o(.1c)o(L1)17 b Fp(also)k
(signi\014can)o(tly)e(o)o(v)o(erestimates)f(read)131
1126 y(miss)d(time)g(in)h(FFT)p 511 1126 V 17 w(opt)h(and)g(Erlebac)o
(her,)f(bloating)g(this)h(comp)q(onen)o(t)e(b)o(y)h(72\045)h(and)g
(59\045)g(re-)131 1216 y(sp)q(ectiv)o(ely)l(.)h(Ho)o(w)o(ev)o(er,)12
b(FFT)p 680 1216 V 17 w(opt)h(and)h(Erlebac)o(her)e(do)h(not)h(see)e
(corresp)q(onding)i(errors)f(in)g(total)131 1306 y(execution)19
b(time)f(b)q(ecause)i Fo(Simple.4xP.)o(1cL)o(1)d Fp(do)q(es)k(not)f
(accoun)o(t)h(for)f(the)g(functional)g(unit)131 1396
y(stall)g(comp)q(onen)o(t)f(of)i Fo(ILP)p Fp(.)e(This)h(underestimate)e
(of)j(CPU)f(time)e(o\013sets)j(some)e(of)i(the)f(o)o(v)o(er-)131
1487 y(estimate)c(in)i(read)f(miss)g(time)e(prediction,)i(but)h(do)q
(es)h(not)f(solv)o(e)f(the)g Fo(Simple)p Fp(-based)g(mo)q(dels')131
1577 y(fundamen)o(tal)h(inabilit)o(y)g(to)i(accoun)o(t)f(for)h(the)f
(e\013ects)g(of)h(high)g(or)g(mo)q(derate)e(read)i(miss)e(ILP)131
1667 y(sp)q(eedup.)27 b(Ov)o(erall,)16 b(as)j(with)e(the)h(other)g
Fo(Simple)p Fp(-based)e(mo)q(dels,)h(the)h(errors)g(seen)g(with)f(this)
131 1758 y(mo)q(del)c(are)g(also)i(highly)e(application-dep)q(enden)o
(t,)g(ranging)i(from)e(-8\045)h(to)g(73\045,)g(dep)q(ending)g(on)131
1848 y(ho)o(w)j(w)o(ell)e(the)h(application)g(exploits)f(ILP)l(.)131
2027 y Fs(4.3)66 b(Error)24 b(in)f(Comp)r(onen)n(t)g(W)-6
b(eigh)n(ts)131 2150 y Fp(F)l(or)21 b(certain)f(studies,)h(accurate)f
(prediction)g(of)g(the)h(relativ)o(e)d(w)o(eigh)o(ts)i(of)h(the)f(v)m
(arious)h(com-)131 2241 y(p)q(onen)o(ts)h(of)f(execution)f(ma)o(y)g(b)q
(e)h(more)e(imp)q(ortan)o(t)i(than)g(an)h(accurate)f(prediction)f(of)h
(total)131 2331 y(execution)c(time.)25 b(W)l(e)18 b(therefore)f(next)h
(examine)e(ho)o(w)i(w)o(ell)f(the)h Fo(Simple)p Fp(-based)e(mo)q(dels)h
(pre-)131 2421 y(dict)d(the)g(relativ)o(e)e(imp)q(ortance)i(of)g(the)g
(v)m(arious)h(comp)q(onen)o(ts)f(of)h(execution)e(time.)18
b(W)l(e)c(sp)q(eci\014-)p 131 2478 450 2 v 131 2521 a
Fc(y)149 2536 y Fb(Neither)i(the)f Fa(Simple)f Fb(nor)h(the)h
Fa(ILP)f Fb(pro)q(cessor)i(stall)d(for)h(the)h(completion)d(of)h
(writes;)i(ho)o(w)o(ev)o(er,)g(the)f Fa(Simple)131 2585
y Fb(pro)q(cessor)k(m)o(ust)d(w)o(ait)g(for)h(a)g(write)g(to)g(access)h
(the)g(write-bu\013er)g(b)q(efore)g(retiring)f(that)g(write,)h(whereas)
g Fa(ILP)131 2635 y Fb(can)d(retire)g(a)f(write)h(b)q(efore)g(it)f(is)g
(issued)h(to)f(the)h(memory)d(system,)i(as)g(long)f(as)i(a)f(slot)g(in)
g(the)g(memory)e(unit)i(is)131 2685 y(a)o(v)n(ailable.)p
eop
%%Page: 43 50
43 49 bop 1882 72 a Fp(43)p 364 182 1335 2 v 363 242
2 61 v 606 242 V 632 224 a(LU)p 743 242 V 70 w(Erlebac)o(her)p
1020 242 V 48 w(Mp3d)p 1193 242 V 51 w(FFT)p 1342 242
V 49 w(W)l(ater)p 1521 242 V 50 w(Radix)p 1698 242 V
363 303 V 606 303 V 632 285 a(opt)p 743 303 V 1020 303
V 1193 303 V 517 w(opt)p 1342 303 V 1521 303 V 1698 303
V 364 304 1335 2 v 364 313 V 363 373 2 61 v 389 355 a(ILP)p
606 373 V 162 w(44.1)p 743 373 V 51 w(53.3)p 1020 373
V 190 w(89.0)p 1193 373 V 88 w(41.6)p 1342 373 V 62 w(39.5)p
1521 373 V 94 w(76.1)p 1698 373 V 364 374 1335 2 v 363
435 2 61 v 389 417 a(Simple)p 606 435 V 97 w(39.4)p 743
435 V 51 w(36.9)p 1020 435 V 190 w(81.5)p 1193 435 V
88 w(27.0)p 1342 435 V 62 w(19.1)p 1521 435 V 94 w(44.4)p
1698 435 V 364 436 1335 2 v 363 496 2 61 v 389 478 a(4xP)l(.1cL1)p
606 496 V 50 w(66.3)p 743 496 V 51 w(67.4)p 1020 496
V 190 w(92.4)p 1193 496 V 88 w(60.4)p 1342 496 V 62 w(44.3)p
1521 496 V 94 w(73.4)p 1698 496 V 364 498 1335 2 v 364
506 V 421 618 a Fi(Figure)18 b(4.2)48 b Fp(Relativ)o(e)15
b(imp)q(ortance)g(of)h(memory)e(comp)q(onen)o(t)131 819
y(cally)f(fo)q(cus)i(on)f(the)f Fo(Simple)f Fp(and)j
Fo(Simple.4x)o(P.)o(1cL)o(1)c Fp(mo)q(dels,)i(since)g(the)g(former)g
(is)g(the)h(most)131 909 y(widely)19 b(used,)h(and)g(the)g(latter)f(is)
h(the)f(most)g(accurate)h(in)f(predicting)g(total)h(execution)e(time)
131 1000 y(for)h(our)h(applications.)29 b(W)l(e)19 b(also)g(fo)q(cus)h
(only)f(on)g(the)g(p)q(ercen)o(tage)f(of)i(execution)d(time)g(sp)q(en)o
(t)131 1090 y(on)j(the)f(memory)e(comp)q(onen)o(t)h(with)i(these)f(sim)
o(ulation)e(mo)q(dels;)j(Figure)f(4.2)h(tabulates)f(this)131
1180 y(data.)j(Similar)14 b(information)h(for)i(the)f(other)g(comp)q
(onen)o(ts)f(and)i(mo)q(dels)e(can)h(b)q(e)h(deriv)o(ed)d(from)131
1270 y(the)i(graphs)i(of)e(Figure)g(4.1.)204 1363 y(As)g(sho)o(wn)h(in)
f(Chapter)h(3,)f(the)g(memory)e(comp)q(onen)o(t)h(is)h(a)g(greater)h(p)
q(ortion)g(of)f(execution)131 1453 y(time)g(on)j Fo(ILP)e
Fp(systems)g(than)i(on)f Fo(Simple)e Fp(systems.)26 b
Fo(Simple)16 b Fp(th)o(us)i(underestimates)f(the)h(im-)131
1543 y(p)q(ortance)k(of)f(memory)d(time)g(in)j(all)f(of)h(our)g
(applications)g(\(b)o(y)f(more)g(than)h(30\045)h(on)f(four)g(of)131
1634 y(them\).)32 b(In)20 b(con)o(trast,)h Fo(Simple.4xP)o(.1c)o(L1)c
Fp(tends)j(to)h(o)o(v)o(erestimate)c(the)j(relativ)o(e)f(w)o(eigh)o(t)g
(of)131 1724 y(the)c(memory)d(comp)q(onen)o(t,)i(as)i(this)f(mo)q(del)f
(fails)h(to)h(accoun)o(t)f(for)g(read)h(miss)e(o)o(v)o(erlap)g(and)i
(also)131 1814 y(generally)k(underestimates)f(CPU)h(time.)33
b(These)20 b(errors)h(are)g(highest)f(in)h(applications)f(with)131
1904 y(mo)q(derate)14 b(to)h(high)g(memory)c(ILP)k(sp)q(eedup,)g(with)g
(o)o(v)o(erestimates)d(of)j(50\045,)f(45\045,)h(and)h(27\045)f(in)131
1995 y(LU)p 201 1995 15 2 v 18 w(opt,)h(FFT)p 418 1995
V 18 w(opt,)g(and)h(Erlebac)o(her)e(resp)q(ectiv)o(ely)l(.)131
2179 y Fs(4.4)66 b(Error)24 b(in)f(Multipro)r(cessor)h(Sp)r(eedup)131
2303 y Fp(Figure)15 b(4.3)h(illustrates)f(the)h(m)o(ultipro)q(cessor)e
(sp)q(eedups)i(seen)f(b)o(y)g(the)h(ILP-based)h(system)d(and)131
2393 y(as)i(predicted)f(b)o(y)g(the)g Fo(Simple)e Fp(and)j
Fo(Simple.4xP.)o(1cL)o(1)d Fp(sim)o(ulation)g(mo)q(dels.)20
b(W)l(e)15 b(only)h(sho)o(w)131 2484 y(graphs)24 b(for)g(applications)f
(that)g(scale)g(reasonably)h(with)e(at)i(least)f(one)g(of)g(the)g(mo)q
(dels.)41 b(If)131 2574 y(the)23 b(unipro)q(cessor)h(con\014guration)g
(has)g(a)g(higher)f(ILP)h(sp)q(eedup)f(than)h(the)f(m)o(ultipro)q
(cessor)131 2664 y(con\014guration,)f(then)f Fo(Simple)d
Fp(predicts)i(a)g(higher)h(sp)q(eedup,)g(and)g(vice)e(v)o(ersa.)33
b(The)21 b(former)p eop
%%Page: 44 51
44 50 bop 1882 72 a Fp(44)190 193 y
 11840716 10893473 986726 657817 16577003 17497948 startTexFig
 190 193 a
%%BeginDocument: Figures/SPLOT_FILES/sim_mpsu/mpSU2_LU_opt.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 72 S9
[1.200000 4.800000] 1.200000 SL
gsave 0.500000 0.500000 0.500000 setrgbcolor
84 247 112.346 247 
L9
grestore
8 SetSym
11 /Helvetica SetTxt
( Ideal) 0 127.85 243.7 TXL
77 77 S9
[] 1.200000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 232.7 112.346 232.7 
L9
grestore
8 SetSym
<02> 98.1732 232.7 SY
11 /Helvetica SetTxt
( Simple) 0 127.85 229.4 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 218.4 112.346 218.4 
L9
grestore
8 SetSym
<0d> 98.1732 218.4 SY
11 /Helvetica SetTxt
( Simple.4xP.1cL1) 0 127.85 215.1 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 204.1 112.346 204.1 
L9
grestore
8 SetSym
<06> 98.1732 204.1 SY
11 /Helvetica SetTxt
( ILP) 0 127.85 200.8 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 72 S9
[1.200000 4.800000] 1.200000 SL
247 247 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
77 77 S9
[] 1.200000 SL
112 100 M9
152 124.45 M9
232 153.95 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 94.3 M9
152 114.15 M9
232 133.1 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 92.75 M9
152 109.45 M9
232 118.3 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 112 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 112 55.2 TXC
12 /Helvetica SetTxt
(|) 0 152 72 TXC
14 /Helvetica-Bold SetTxt
(16) 0 152 55.2 TXC
12 /Helvetica SetTxt
(|) 0 192 72 TXC
14 /Helvetica-Bold SetTxt
(24) 0 192 55.2 TXC
12 /Helvetica SetTxt
(|) 0 232 72 TXC
14 /Helvetica-Bold SetTxt
(32) 0 232 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 112 TXC
14 /Helvetica-Bold SetTxt
(8) 0 65 107.8 TXR
12 /Helvetica SetTxt
(|) -90 72 152 TXC
14 /Helvetica-Bold SetTxt
(16) 0 65 147.8 TXR
12 /Helvetica SetTxt
(|) -90 72 192 TXC
14 /Helvetica-Bold SetTxt
(24) 0 65 187.8 TXR
12 /Helvetica SetTxt
(|) -90 72 232 TXC
14 /Helvetica-Bold SetTxt
(32) 0 65 227.8 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( Processors) 0 252 37 TXR
( Speedup) 90 29.3 252 TXR
(LU_opt) 0 162 22 TXC
() 0 162 7.3 TXC
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 77 77 SY
<02> 112 100 SY
<02> 152 124.45 SY
<02> 232 153.95 SY
<0d> 77 77 SY
<0d> 112 94.3 SY
<0d> 152 114.15 SY
<0d> 232 133.1 SY
<06> 77 77 SY
<06> 112 92.75 SY
<06> 152 109.45 SY
<06> 232 118.3 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 1123 193 a
 11840716 10893473 986726 657817 16577003 17497948 startTexFig
 1123 193 a
%%BeginDocument: Figures/SPLOT_FILES/sim_mpsu/mpSU2_Erlebacher.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 72 S9
[1.200000 4.800000] 1.200000 SL
gsave 0.500000 0.500000 0.500000 setrgbcolor
84 247 112.346 247 
L9
grestore
8 SetSym
11 /Helvetica SetTxt
( Ideal) 0 127.85 243.7 TXL
77 77 S9
[] 1.200000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 232.7 112.346 232.7 
L9
grestore
8 SetSym
<02> 98.1732 232.7 SY
11 /Helvetica SetTxt
( Simple) 0 127.85 229.4 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 218.4 112.346 218.4 
L9
grestore
8 SetSym
<0d> 98.1732 218.4 SY
11 /Helvetica SetTxt
( Simple.4xP.1cL1) 0 127.85 215.1 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 204.1 112.346 204.1 
L9
grestore
8 SetSym
<06> 98.1732 204.1 SY
11 /Helvetica SetTxt
( ILP) 0 127.85 200.8 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 72 S9
[1.200000 4.800000] 1.200000 SL
247 247 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
77 77 S9
[] 1.200000 SL
112 109 M9
152 137 M9
232 167.95 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 108.35 M9
152 132.9 M9
232 145.3 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 105.35 M9
152 128.9 M9
232 136.35 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 112 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 112 55.2 TXC
12 /Helvetica SetTxt
(|) 0 152 72 TXC
14 /Helvetica-Bold SetTxt
(16) 0 152 55.2 TXC
12 /Helvetica SetTxt
(|) 0 192 72 TXC
14 /Helvetica-Bold SetTxt
(24) 0 192 55.2 TXC
12 /Helvetica SetTxt
(|) 0 232 72 TXC
14 /Helvetica-Bold SetTxt
(32) 0 232 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 112 TXC
14 /Helvetica-Bold SetTxt
(8) 0 65 107.8 TXR
12 /Helvetica SetTxt
(|) -90 72 152 TXC
14 /Helvetica-Bold SetTxt
(16) 0 65 147.8 TXR
12 /Helvetica SetTxt
(|) -90 72 192 TXC
14 /Helvetica-Bold SetTxt
(24) 0 65 187.8 TXR
12 /Helvetica SetTxt
(|) -90 72 232 TXC
14 /Helvetica-Bold SetTxt
(32) 0 65 227.8 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( Processors) 0 252 37 TXR
( Speedup) 90 29.3 252 TXR
(Erlebacher) 0 162 22 TXC
() 0 162 7.3 TXC
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 77 77 SY
<02> 112 109 SY
<02> 152 137 SY
<02> 232 167.95 SY
<0d> 77 77 SY
<0d> 112 108.35 SY
<0d> 152 132.9 SY
<0d> 232 145.3 SY
<06> 77 77 SY
<06> 112 105.35 SY
<06> 152 128.9 SY
<06> 232 136.35 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 190 887 a
 11840716 10893473 986726 657817 16577003 17497948 startTexFig
 190 887 a
%%BeginDocument: Figures/SPLOT_FILES/sim_mpsu/mpSU2_FFT_opt.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 72 S9
[1.200000 4.800000] 1.200000 SL
gsave 0.500000 0.500000 0.500000 setrgbcolor
84 247 112.346 247 
L9
grestore
8 SetSym
11 /Helvetica SetTxt
( Ideal) 0 127.85 243.7 TXL
77 77 S9
[] 1.200000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 232.7 112.346 232.7 
L9
grestore
8 SetSym
<02> 98.1732 232.7 SY
11 /Helvetica SetTxt
( Simple) 0 127.85 229.4 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 218.4 112.346 218.4 
L9
grestore
8 SetSym
<0d> 98.1732 218.4 SY
11 /Helvetica SetTxt
( Simple.4xP.1cL1) 0 127.85 215.1 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 204.1 112.346 204.1 
L9
grestore
8 SetSym
<06> 98.1732 204.1 SY
11 /Helvetica SetTxt
( ILP) 0 127.85 200.8 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 72 S9
[1.200000 4.800000] 1.200000 SL
247 247 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
77 77 S9
[] 1.200000 SL
112 107 M9
152 141.1 M9
232 205.35 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 101.8 M9
152 129.75 M9
232 178.35 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 107.3 M9
152 138.8 M9
232 199.55 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 112 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 112 55.2 TXC
12 /Helvetica SetTxt
(|) 0 152 72 TXC
14 /Helvetica-Bold SetTxt
(16) 0 152 55.2 TXC
12 /Helvetica SetTxt
(|) 0 192 72 TXC
14 /Helvetica-Bold SetTxt
(24) 0 192 55.2 TXC
12 /Helvetica SetTxt
(|) 0 232 72 TXC
14 /Helvetica-Bold SetTxt
(32) 0 232 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 112 TXC
14 /Helvetica-Bold SetTxt
(8) 0 65 107.8 TXR
12 /Helvetica SetTxt
(|) -90 72 152 TXC
14 /Helvetica-Bold SetTxt
(16) 0 65 147.8 TXR
12 /Helvetica SetTxt
(|) -90 72 192 TXC
14 /Helvetica-Bold SetTxt
(24) 0 65 187.8 TXR
12 /Helvetica SetTxt
(|) -90 72 232 TXC
14 /Helvetica-Bold SetTxt
(32) 0 65 227.8 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( Processors) 0 252 37 TXR
( Speedup) 90 29.3 252 TXR
(FFT_opt) 0 162 22 TXC
() 0 162 7.3 TXC
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 77 77 SY
<02> 112 107 SY
<02> 152 141.1 SY
<02> 232 205.35 SY
<0d> 77 77 SY
<0d> 112 101.8 SY
<0d> 152 129.75 SY
<0d> 232 178.35 SY
<06> 77 77 SY
<06> 112 107.3 SY
<06> 152 138.8 SY
<06> 232 199.55 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 1123 887 a
 11840716 10893473 986726 657817 16577003 17497948 startTexFig
 1123 887 a
%%BeginDocument: Figures/SPLOT_FILES/sim_mpsu/mpSU2_Water.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 72 S9
[1.200000 4.800000] 1.200000 SL
gsave 0.500000 0.500000 0.500000 setrgbcolor
84 247 112.346 247 
L9
grestore
8 SetSym
11 /Helvetica SetTxt
( Ideal) 0 127.85 243.7 TXL
77 77 S9
[] 1.200000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 232.7 112.346 232.7 
L9
grestore
8 SetSym
<02> 98.1732 232.7 SY
11 /Helvetica SetTxt
( Simple) 0 127.85 229.4 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 218.4 112.346 218.4 
L9
grestore
8 SetSym
<0d> 98.1732 218.4 SY
11 /Helvetica SetTxt
( Simple.4xP.1cL1) 0 127.85 215.1 TXL
77 77 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
84 204.1 112.346 204.1 
L9
grestore
8 SetSym
<06> 98.1732 204.1 SY
11 /Helvetica SetTxt
( ILP) 0 127.85 200.8 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 72 S9
[1.200000 4.800000] 1.200000 SL
247 247 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
77 77 S9
[] 1.200000 SL
112 102.25 M9
152 128.8 M9
232 175.1 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 92.25 M9
152 108.6 M9
232 134.45 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
77 77 S9
112 95.35 M9
152 114.45 M9
232 144.65 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 112 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 112 55.2 TXC
12 /Helvetica SetTxt
(|) 0 152 72 TXC
14 /Helvetica-Bold SetTxt
(16) 0 152 55.2 TXC
12 /Helvetica SetTxt
(|) 0 192 72 TXC
14 /Helvetica-Bold SetTxt
(24) 0 192 55.2 TXC
12 /Helvetica SetTxt
(|) 0 232 72 TXC
14 /Helvetica-Bold SetTxt
(32) 0 232 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 112 TXC
14 /Helvetica-Bold SetTxt
(8) 0 65 107.8 TXR
12 /Helvetica SetTxt
(|) -90 72 152 TXC
14 /Helvetica-Bold SetTxt
(16) 0 65 147.8 TXR
12 /Helvetica SetTxt
(|) -90 72 192 TXC
14 /Helvetica-Bold SetTxt
(24) 0 65 187.8 TXR
12 /Helvetica SetTxt
(|) -90 72 232 TXC
14 /Helvetica-Bold SetTxt
(32) 0 65 227.8 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( Processors) 0 252 37 TXR
( Speedup) 90 29.3 252 TXR
(Water) 0 162 22 TXC
() 0 162 7.3 TXC
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 77 77 SY
<02> 112 102.25 SY
<02> 152 128.8 SY
<02> 232 175.1 SY
<0d> 77 77 SY
<0d> 112 92.25 SY
<0d> 152 108.6 SY
<0d> 232 134.45 SY
<06> 77 77 SY
<06> 112 95.35 SY
<06> 152 114.45 SY
<06> 232 144.65 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 340 1672 a Fi(Figure)18 b(4.3)48 b Fp(Sp)q(eedups)17
b(for)f(Simple,)e(ILP)l(,)i(Simple.4xP)l(.1cL1)e(mo)q(dels)131
1842 y(is)23 b(the)g(case)f(for)i(all)e(the)h(applications)f(w)o(e)h
(consider)f(\(Section)h(4\),)h(although)g(the)f(error)g(in)131
1932 y(prediction)16 b(v)m(aries)h(b)o(y)g(application.)23
b(Th)o(us,)17 b(FFT)p 1082 1932 15 2 v 17 w(opt)h(has)g(a)f(v)o(ery)f
(sligh)o(t)g(error)h(while)f(W)l(ater)131 2023 y(sho)o(ws)h(a)g(large)f
(error.)204 2115 y Fo(Simple.4xP.)o(1cL)o(1)g Fp(is)j(a)h(go)q(o)q(d)h
(estimator)d(of)i(o)o(v)o(erall)e(execution)g(time)f(for)i
(applications)131 2205 y(that)i(do)g(not)g(exhibit)f(signi\014can)o(t)g
(memory)e(ILP)j(sp)q(eedup;)h(therefore,)f(it)f(follo)o(ws)g(that)i
(the)131 2296 y(mo)q(del)16 b(predicts)f(m)o(ultipro)q(cessor)g(sp)q
(eedups)j(fairly)d(w)o(ell)g(for)i(W)l(ater.)23 b(F)l(or)16
b(the)h(other)f(applica-)131 2386 y(tions,)f(the)g(mo)q(del)f(predicts)
h(higher)f(sp)q(eedup)i(when)f(its)g(unipro)q(cessor)h(time)d
(prediction)h(has)i(a)131 2476 y(higher)e(error)f(than)h(its)g(m)o
(ultipro)q(cessor)e(time)f(prediction.)20 b(This)14 b(is)f(the)g(case)h
(when)g(unipro)q(ces-)131 2567 y(sor)h(ILP)g(sp)q(eedup)f(is)h(higher)f
(than)g(the)h(m)o(ultipro)q(cessor)d(ILP)j(sp)q(eedup,)f(as)h(in)f
(Erlebac)o(her)g(and)131 2657 y(LU)p 201 2657 V 18 w(opt.)23
b(The)17 b(rev)o(erse)e(is)i(true)g(for)g(FFT)p 918 2657
V 17 w(opt,)g(where)g(the)f(mo)q(del)g(predicts)g(a)h(lo)o(w)o(er)f(sp)
q(eedup)p eop
%%Page: 45 52
45 51 bop 1882 72 a Fp(45)131 222 y(compared)17 b(to)i(the)f
Fo(ILP)f Fp(mo)q(del.)25 b(F)l(or)18 b(all)g(but)g(FFT)p
1119 222 15 2 v 18 w(opt,)g Fo(Simple.4xP)o(.1c)o(L1)d
Fp(giv)o(es)i(a)i(b)q(etter)131 312 y(appro)o(ximation)c(than)i
Fo(Simple)p Fp(.)131 491 y Fs(4.5)66 b(Summary)24 b(and)f(Alternativ)n
(e)h(Mo)r(dels)131 613 y Fp(The)h Fo(Simple)p Fp(,)g
Fo(Simple.2x)o(P)p Fp(,)c(and)26 b Fo(Simple.4xP)21 b
Fp(mo)q(dels)j(studied)h(in)f(this)h(c)o(hapter)f(see)h(a)131
704 y(large)19 b(range)g(of)g(errors)g(across)h(all)e(our)i
(applications.)28 b(In)19 b(con)o(trast,)g(the)g Fo(Simple.4x)o(P.1)o
(cL1)131 794 y Fp(mo)q(del)13 b(pro)o(vides)g(a)h(more)f(reasonable)h
(appro)o(ximation)f(to)i Fo(ILP)d Fp(on)j(man)o(y)d(of)i(our)h
(applications.)131 884 y(Ho)o(w)o(ev)o(er,)c(although)j(this)e(mo)q
(del)f(predicts)h(the)g(b)q(eha)o(vior)h(of)f(the)h(busy)f(and)h(L1)h
(cac)o(he)d(hit)h(com-)131 974 y(p)q(onen)o(ts)21 b(of)f(the)g
(execution)e(time)g(reasonably)i(w)o(ell,)f(it)h(do)q(es)h(not)f(mo)q
(del)e(the)i(p)q(ossibilit)o(y)f(of)131 1065 y(read)e(miss)e(sp)q
(eedup.)23 b(Consequen)o(tly)l(,)15 b(this)h(mo)q(del)f(reasonably)j
(appro)o(ximates)d Fo(ILP)g Fp(b)q(eha)o(vior)131 1155
y(for)j(applications)g(with)f(lo)o(w)h(read)f(miss)g(ILP)h(sp)q(eedup,)
f(but)h(can)g(sho)o(w)g(high)g(inaccuracies)f(in)131
1245 y(predicting)e(the)h(p)q(erformance)f(of)i Fo(ILP)e
Fp(on)h(applications)h(with)f(high)g(read)g(miss)f(ILP)h(sp)q(eedup.)
204 1336 y(A)i(k)o(ey)f(insigh)o(t)h(for)h Fo(Simple.4xP)o(.1c)o(L1)c
Fp(is)j(that)h Fo(ILP)e Fp(pro)q(cessors)j(hide)d(nearly)h(all)g(of)h
(the)131 1426 y(L1)j(cac)o(he)e(hit)g(latency)l(.)34
b(Ho)o(w)o(ev)o(er,)19 b(our)j(detailed)d(statistics)i(\(not)g(sho)o
(wn)g(here\))g(sho)o(w)g(that)131 1516 y Fo(ILP)c Fp(also)h(o)o(v)o
(erlaps)f(most)g(of)h(the)f(L2)i(cac)o(he)e(hit)g(latency)l(.)25
b(Th)o(us,)18 b(a)g(reasonable)g(extension)f(to)131 1607
y Fo(Simple.4xP.)o(1c)o(L1)11 b Fp(w)o(ould)j(b)q(e)g(to)h(sp)q(eed)f
(up)g(L2)h(cac)o(he)e(hit)h(time)e(to)i(a)h(single)e(pro)q(cessor)i
(cycle.)131 1697 y(Ho)o(w)o(ev)o(er,)d(this)h(mo)q(del)f(w)o(ould)i
(remain)e(inadequate)h(in)g(predicting)f(the)h(p)q(erformance)g(of)g
(appli-)131 1787 y(cations)i(whic)o(h)e(o)o(v)o(erlap)g(p)q(ortions)j
(of)e(their)g(lo)q(cal)g(and)g(remote)f(memory)e(accesses.)20
b(Extending)131 1878 y(the)c(ab)q(o)o(v)o(e)g(mo)q(del)f(further)h(to)h
(accoun)o(t)f(for)g(lo)q(cal)g(and)h(remote)e(memory)e(accesses)j
(seems)f(im-)131 1968 y(practical,)23 b(as)f(o)o(v)o(erlap)g(in)f
(these)h(comp)q(onen)o(ts)g(of)g(memory)d(is)j(highly)g(application-sp)
q(eci\014c)131 2058 y(and)d(hardw)o(are-dep)q(enden)o(t,)g(and)f(is)h
(not)f(kno)o(wn)h Fn(a)g(priori)p Fp(.)26 b(Th)o(us,)19
b(our)f(results)g(indicate)g(the)131 2148 y(need)f(for)h(detailed)f
(sim)o(ulators)f(that)j(emplo)o(y)c(an)j Fo(ILP)f Fp(pro)q(cessor)h(mo)
q(del)f(for)h(m)o(ultipro)q(cessor)131 2239 y(systems.)204
2329 y(Unfortunately)l(,)g(curren)o(t)f(m)o(ultipro)q(cessor)g(sim)o
(ulators)g(that)i(accoun)o(t)f(for)h(ILP)f(pro)q(cessor)131
2419 y(c)o(haracteristics)k(are)h(m)o(uc)o(h)e(slo)o(w)o(er)h(than)i
(sim)o(ulators)e(that)h(do)h(not)f(mo)q(del)f(ILP)h(pro)q(cessor)131
2510 y(c)o(haracteristics,)14 b(as)h(suc)o(h)g(sim)o(ulators)e
(generally)h(emplo)o(y)f(direct-execution)g(sim)o(ulation)g(tec)o(h-)
131 2600 y(niques.)27 b(F)l(or)19 b(example,)d(our)j(exp)q(erimen)o(ts)
c(sho)o(w)k(the)f(detailed)g(execution-driv)o(en)e(sim)o(ulator)131
2690 y(RSIM,)j(whic)o(h)g(handles)g(ILP)h(m)o(ultipro)q(cessors,)f(to)h
(b)q(e)f(at)h(least)g(7)g(times)d(slo)o(w)o(er)i(in)h(elapsed)p
eop
%%Page: 46 53
46 52 bop 1882 72 a Fp(46)131 222 y(time)16 b(than)h(the)h
(direct-execution)d(shared-memory)g(m)o(ultipro)q(cessor)h(sim)o
(ulator)g(on)i(whic)o(h)f(it)131 312 y(is)h(based,)f(RPPT)h([Ra)s(j95)q
(].)24 b(As)18 b(fast)g(sim)o(ulators)e(are)h(needed)g(to)h(c)o
(haracterize)e(the)h(b)q(eha)o(vior)131 403 y(of)e(larger)g
(applications)g(and)g(data)h(sets,)f(our)g(results)g(motiv)m(ate)e(the)
i(need)f(for)h(new)g(tec)o(hniques)131 493 y(to)i(allo)o(w)g(more)e
(e\016cien)o(t)f(ILP)j(pro)q(cessor)h(sim)o(ulation.)i(F)l(or)d
(example,)d(it)i(ma)o(y)f(b)q(e)i(p)q(ossible)g(to)131
583 y(add)k(supp)q(ort)h(for)e(non-blo)q(c)o(king)h(reads)f(to)h
(direct-execution)d(sim)o(ulation)h(tec)o(hniques,)g(th)o(us)131
674 y(allo)o(wing)d(fast)h(sim)o(ulators)e(to)i(capture)f(the)g
(e\013ects)g(of)g(memory)e(o)o(v)o(erlap.)p eop
%%Page: 47 54
47 53 bop 1882 72 a Fp(47)853 361 y Ft(Chapter)28 b(5)786
564 y(Related)e(W)-7 b(ork)131 752 y Fp(There)26 b(ha)o(v)o(e)f(b)q
(een)h(v)o(ery)f(few)h(m)o(ultipro)q(cessor)f(studies)h(that)g(mo)q
(del)f(the)h(e\013ects)g(of)h(ILP)l(.)131 842 y(Alb)q(onesi)21
b(and)g(Koren)g(pro)o(vide)g(a)g(mean-v)m(alue)f(analysis)h(mo)q(del)f
(of)h(bus-based)h(ILP)g(m)o(ulti-)131 933 y(pro)q(cessors)g(that)e
(o\013ers)h(a)g(high)f(degree)f(of)i(parametric)d(\015exibilit)o(y)g
([AK95)o(].)33 b(Ho)o(w)o(ev)o(er,)19 b(the)131 1023
y(ILP)24 b(parameters)e(for)h(their)g(exp)q(erimen)o(ts)d(\(e.g.,)k(o)o
(v)o(erlapp)q(ed)e(latency)g(and)i(p)q(ercen)o(tage)f(of)131
1113 y(requests)16 b(coalesced\))g(are)g(not)h(deriv)o(ed)e(from)g(an)o
(y)h(sp)q(eci\014c)f(w)o(orkload)i(or)g(system.)j(Our)c(sim)o(u-)131
1204 y(lation)g(study)h(sho)o(ws)g(that)f(these)g(parameters)f(v)m(ary)
i(signi\014can)o(tly)e(with)h(the)g(application)g(and)131
1294 y(hardw)o(are)k(factors,)g(and)g(pro)o(vides)f(insigh)o(t)g(in)o
(to)g(the)g(impact)f(and)i(b)q(eha)o(vior)f(of)g(the)h(param-)131
1384 y(eters.)29 b(F)l(urthermore,)17 b(their)i(mo)q(del)e(assumes)i(a)
g(uniform)f(distribution)g(of)h(misses)f(and)h(do)q(es)131
1474 y(not)f(prop)q(erly)f(accoun)o(t)g(for)g(read)g(clustering,)f
(whic)o(h)h(w)o(e)f(ha)o(v)o(e)h(sho)o(wn)g(to)h(b)q(e)f(a)g(k)o(ey)f
(factor)i(in)131 1565 y(pro)o(viding)e(read)g(miss)f(o)o(v)o(erlap)h
(and)h(exploiting)e(ILP)h(features.)204 1657 y(Na)o(yfeh)32
b(et)f(al.)h(considered)g(design)g(c)o(hoices)f(for)h(a)h(single-pac)o
(k)m(age)f(m)o(ultipro)q(cessor)131 1747 y([NHO96],)13
b(with)g(a)g(few)g(sim)o(ulation)f(results)h(that)g(used)h(an)g(ILP)f
(m)o(ultipro)q(cessor.)19 b(Oluk)o(otun)13 b(et)131 1838
y(al.)18 b(compared)f(a)i(complex)d(ILP)j(unipro)q(cessor)g(with)f(a)h
(one-c)o(hip)f(m)o(ultipro)q(cessor)f(comp)q(osed)131
1928 y(of)22 b(less)g(complex)e(ILP)i(pro)q(cessors)h([ONH)952
1910 y Fk(+)980 1928 y Fp(96)q(].)37 b(There)22 b(ha)o(v)o(e)f(also)h
(b)q(een)g(a)h(few)e(studies)h(of)131 2018 y(consistency)d(mo)q(dels)f
(using)h(ILP)g(m)o(ultipro)q(cessors)f([GGH92,)h(PRAH96,)f(ZB92)q(].)29
b(Ho)o(w)o(ev)o(er,)131 2109 y(none)17 b(of)f(the)g(ab)q(o)o(v)o(e)h(w)
o(ork)f(details)f(the)h(b)q(ene\014ts)h(ac)o(hiev)o(ed)d(b)o(y)i(ILP)h
(in)f(the)g(m)o(ultipro)q(cessor.)204 2201 y(Our)g(v)m(arian)o(ts)h(of)
f(the)g Fo(Simple)d Fp(pro)q(cessor)k(mo)q(del)e(in)h(Chapter)g(4)g
(are)g(based)h(on)f(the)g(w)o(orks)131 2291 y(of)g(Heinric)o(h)d(et)h
(al.)i([HK)o(O)629 2273 y Fk(+)657 2291 y Fp(94)q(])f(and)h(Holt)e(et)h
(al.)h([HSH96)o(].)21 b(Both)15 b(studies)g(aim)f(to)h(mo)q(del)f(ILP)
131 2381 y(pro)q(cessor)23 b(b)q(eha)o(vior)f(with)g(faster)g(simple)e
(pro)q(cessors,)k(but)f(neither)e(w)o(ork)h(v)m(alidates)g(these)131
2472 y(appro)o(ximations.)204 2564 y(The)12 b(Wisconsin)g(Wind)g(T)l
(unnel-I)q(I)g(\(used)g(in)f([RPW96)q(]\))g(uses)i(a)f(more)f(detailed)
g(analysis)h(at)131 2654 y(the)k(basic-blo)q(c)o(k)f(lev)o(el)e(that)j
(accoun)o(ts)g(for)g(pip)q(eline)e(latencies)h(and)h(functional)f(unit)
h(resource)p eop
%%Page: 48 55
48 54 bop 1882 72 a Fp(48)131 222 y(constrain)o(ts)13
b(to)g(mo)q(del)e(a)i(sup)q(erscalar)g(Hyp)q(erSP)l(AR)o(C)f(pro)q
(cessor.)21 b(Ho)o(w)o(ev)o(er,)11 b(this)h(mo)q(del)f(do)q(es)131
312 y(not)19 b(accoun)o(t)f(for)h(memory)c(o)o(v)o(erlap,)j(whic)o(h,)f
(as)i(our)g(results)f(sho)o(w,)h(is)f(an)h(imp)q(ortan)o(t)e(factor)131
403 y(in)f(determining)e(the)i(b)q(eha)o(vior)g(of)h(more)e(aggressiv)o
(e)h(ILP)g(pro)q(cessors.)204 495 y(Bro)q(oks)29 b(et)e(al.)h(describ)q
(e)f(the)g(Cerb)q(erus)i(Multipro)q(cessor)e(Sim)o(ulator,)i(a)f
(parallelized)131 585 y(instruction-driv)o(en)14 b(sim)o(ulator)f(for)j
(single-issue)e(statically-sc)o(heduled)f(pro)q(cessors)k(with)d(non-)
131 676 y(blo)q(c)o(king)22 b(reads)h(in)f(a)g(cac)o(heless)g
(\\dance-hall")g(memory)e(system)h([BIAD89)o(].)39 b(This)22
b(is)h(the)131 766 y(earliest)e(execution-driv)o(en)e(m)o(ultipro)q
(cessor)h(sim)o(ulator)f(of)j(whic)o(h)f(w)o(e)g(kno)o(w)g(that)h(mo)q
(deled)131 856 y(some)14 b(degree)g(of)h(ILP)l(.)f(It)h(w)o(as)g(also)g
(used)g(in)f(a)h(study)g(of)g(relaxed)f(consistency)g(mo)q(dels)f
([ZB92].)204 949 y(There)j(exists)g(a)g(large)h(b)q(o)q(dy)g(of)f(w)o
(ork)g(on)h(the)f(impact)e(of)j(ILP)f(on)h(unipro)q(cessor)g(systems.)
131 1039 y(Sev)o(eral)d(of)h(these)g(studies)g(also)h(iden)o(tify)d
(and/or)j(in)o(v)o(estigate)e(one)h(or)g(more)f(of)h(the)g(factors)h(w)
o(e)131 1129 y(study)j(to)g(determine)c(read)k(miss)e(ILP)h(sp)q
(eedup,)h(suc)o(h)f(as)h(read)g(clustering,)f(coalescing,)g(and)131
1219 y(con)o(ten)o(tion.)j(Oner)16 b(and)h(Dub)q(ois)h(ev)m(aluate)e
(sev)o(eral)f(applications)i(on)g(a)g(unipro)q(cessor)g(system)131
1310 y(with)j(non-blo)q(c)o(king)g(cac)o(hes.)32 b(This)20
b(w)o(ork)g(iden)o(ti\014es)f(a)h Fn(critic)n(al)i(latency)f
Fp(for)f(eac)o(h)g(program,)131 1400 y(de\014ned)d(as)h(the)f(maxim)o
(um)12 b(cac)o(he)17 b(miss)f(latency)g(whic)o(h)g(can)i(b)q(e)f(p)q
(erfectly)f(tolerated)h(b)o(y)g(the)131 1490 y(system.)i(They)14
b(\014nd)g(that)g(for)g(greater)g(cac)o(he)f(miss)f(latencies,)h(some)g
(latency)g(tolerance)g(is)g(still)131 1581 y(p)q(ossible)f(if)g(the)g
(program)g(can)g(o)o(v)o(erlap)f(m)o(ultiple)e(misses)h(together.)20
b(Our)12 b(w)o(ork)g(\014nds)h(that)f(read)131 1671 y(clustering)h(is)g
(a)h(k)o(ey)e(optimization)g(that)i(enables)f(m)o(ultipro)q(cessors)f
(to)i(exploit)e(the)i(features)f(of)131 1761 y(ILP)j(pro)q(cessors,)h
(additionally)e(\014nding)h(that)g(the)f(read)h(misses)e(clustered)g(m)
o(ust)h(ha)o(v)o(e)f(similar)131 1851 y(latency)h(in)g(order)h(to)g(ac)
o(hiev)o(e)d(e\013ectiv)o(e)h(o)o(v)o(erlap,)g(due)i(to)g(the)f(dic)o
(hotom)o(y)f(b)q(et)o(w)o(een)g(lo)q(cal)i(and)131 1942
y(remote)g(miss)f(latencies)h(in)h(a)h(m)o(ultipro)q(cessor)d
(con\014guration.)25 b(Butler)16 b(and)h(P)o(att)h(in)o(v)o(estigate)
131 2032 y(the)e(impact)f(of)i(data)g(cac)o(he)f(misses)f(on)i(ILP)g
(pro)q(cessors[BP91)q(].)k(Their)16 b(study)h(men)o(tions)e(the)131
2122 y(e\013ect)i(of)g(coalesced)g(requests)g(in)g(a)g(non-blo)q(c)o
(king)h(cac)o(he,)e(but)h(compares)f(p)q(erformance)g(only)131
2213 y(among)g(ILP)h(con\014gurations,)g(rather)f(than)h(with)f(a)g
(base)h(pro)q(cessor.)22 b(Burger)16 b(and)g(Go)q(o)q(dman)131
2303 y(ev)m(aluate)k(sev)o(eral)f(ILP)i(pro)q(cessor)g
(con\014gurations,)h(\014nding)f(that)g(tec)o(hniques)d(used)j(in)e
(suc)o(h)131 2393 y(systems)f(to)i(tolerate)e(latency)h(can)g(lead)g
(to)g(increased)g(con)o(ten)o(tion)f(for)h(system)f(bandwidth.)131
2483 y(Their)d(study)g(sho)o(ws)h(that)f(this)g(con)o(ten)o(tion)f(can)
h(con)o(tribute)f(signi\014can)o(tly)g(to)i(execution)d(time)131
2574 y(in)19 b(some)g(SPEC95)i(applications.)31 b(Our)19
b(study)h(\014nds)g(that)g(although)g(bandwidth)h(is)e(an)h(im-)131
2664 y(p)q(ortan)o(t)g(factor)g(in)f(the)g(p)q(erformance)f(of)h
(ILP-based)h(m)o(ultipro)q(cessors,)e(ev)o(en)g(systems)g(with)p
eop
%%Page: 49 56
49 55 bop 1882 72 a Fp(49)131 222 y(high)15 b(bandwidth)g(are)g
(limited)d(in)i(their)g(abilit)o(y)f(to)i(exploit)f(ILP)h(if)f
(applications)g(do)h(not)h(allo)o(w)131 312 y(su\016cien)o(t)f
(clustering)h(of)g(read)h(misses.)204 405 y(Other)k(studies)h(on)g(the)
f(impact)e(of)j(ILP)g(on)g(unipro)q(cessor)g(con\014gurations)g
(include)f(the)131 495 y(follo)o(wing.)46 b(Jouppi)25
b(and)g(W)l(all)f(lo)q(ok)h(at)g(ILP)g(sp)q(eedup)f(of)h(v)m(arious)g
(pro)q(cessor)h(con\014gura-)131 585 y(tions)f([JW89].)45
b(Ho)o(w)o(ev)o(er,)23 b(their)h(main)f(results)g(do)i(not)g(consider)f
(cac)o(he)f(misses.)43 b(When)131 676 y(they)14 b(do)g(consider)g(cac)o
(he)g(misses,)e(it)i(is)g(with)g(regard)g(to)h(the)f(impact)e(of)i(cac)
o(he)g(misses)e(on)j(p)q(eak)131 766 y(IPC,)k(rather)g(than)h(its)f
(e\013ect)g(on)g(ILP)h(sp)q(eedup.)30 b(Sohi)20 b(and)g(F)l(ranklin)e
(lo)q(ok)i(at)f(a)h(v)m(ariet)o(y)e(of)131 856 y(tec)o(hniques)12
b(for)i(impro)o(ving)d(the)i(bandwidth)h(capacit)o(y)f(of)g(the)g
(\014rst)h(lev)o(el)d(cac)o(he)i([SF91].)20 b(Their)131
946 y(w)o(ork)14 b(sp)q(eci\014cally)e(addresses)j(the)e(extra)g
(bandwidth)i(needs)e(of)h(sup)q(erscalar)h(pro)q(cessors.)21
b(This)131 1037 y(pap)q(er)c(prop)q(oses)g(using)g(m)o(ultip)q(orted)d
(non-blo)q(c)o(king)i(L1)h(cac)o(hes)e(to)i(increase)e(the)h(p)q(eak)g
(cac)o(he)131 1127 y(bandwidth.)23 b(Con)o(te)16 b(also)i(addresses)f
(the)f(b)q(ene\014ts)h(of)g(non-blo)q(c)o(king)f(cac)o(hes,)g(and)h(do)
q(es)g(so)h(in)131 1217 y(the)h(con)o(text)g(of)h(sup)q(erscalar)g(pro)
q(cessors)h([Con92)q(].)30 b(This)20 b(pap)q(er)g(sp)q(eci\014cally)e
(uses)h(a)h(trace-)131 1308 y(driv)o(en)c(sim)o(ulation)e(with)j
(sampling,)e(so)i(sp)q(eculation)g(e\013ects)f(ma)o(y)f(b)q(e)i(lost.)
23 b(This)16 b(pap)q(er)i(also)131 1398 y(uses)j(IPC,)f(rather)h(than)g
(ILP)g(sp)q(eedup,)h(as)f(a)g(metric.)32 b(F)l(ark)m(as)21
b(and)g(Jouppi)g(ev)m(aluate)g(v)m(ar-)131 1488 y(ious)g(hardw)o(are)f
(tradeo\013s)i(in)d(non-blo)q(c)o(king)i(cac)o(he)e(design)h(and)h(pro)
o(vide)f(miss)e(CPI)j(results)131 1578 y(for)c(co)q(des)f(compiled)e
(with)i(di\013eren)o(t)f(v)m(alues)h(of)g(\\load)h(latency")f([FJ94].)k
(They)c(brie\015y)f(touc)o(h)131 1669 y(on)21 b(dual-issue)g(mac)o
(hines,)e(but)i(they)f(do)h(so)h(primarily)c(in)i(the)g(con)o(text)g
(of)h(their)f(miss)f(CPI)131 1759 y(c)o(haracteristics,)d(rather)h
(than)h(their)e(ILP)i(sp)q(eedups.)24 b(Finally)l(,)16
b(Bennett)g(and)i(Flynn)e(pro)o(vide)131 1849 y(a)21
b(detailed)e(analysis)h(of)g(issues)h(in)e(the)h(p)q(erformance)f(of)h
(ILP-based)h(pro)q(cessors)h(in)d([BF95],)131 1940 y(fo)q(cusing)f(on)f
(issues)f(related)g(to)h(instruction)f(fetc)o(h)g(bandwidth,)h
(instruction)f(issue)g(rate,)h(and)131 2030 y(\014nite)f(instruction)g
(windo)o(w)g(e\013ects.)p eop
%%Page: 50 57
50 56 bop 1882 72 a Fp(50)853 361 y Ft(Chapter)28 b(6)822
564 y(Conclusions)131 752 y Fp(This)16 b(pap)q(er)g(\014rst)g(analyzes)
f(the)h(impact)e(of)i(state-of-the-art)h(ILP)e(pro)q(cessors)i(on)f
(the)g(p)q(erfor-)131 842 y(mance)d(of)h(shared-memory)e(m)o(ultipro)q
(cessors.)19 b(It)14 b(then)f(examines)g(the)g(v)m(alidit)o(y)g(of)h
(ev)m(aluating)131 933 y(suc)o(h)23 b(systems)e(using)i(commonly)d
(emplo)o(y)o(ed)g(sim)o(ulation)h(tec)o(hniques)g(based)i(on)g
(previous-)131 1023 y(generation)17 b(pro)q(cessors.)204
1115 y(T)l(o)e(determine)d(the)i(e\013ectiv)o(eness)f(of)h(ILP)h(tec)o
(hniques,)e(w)o(e)h(compare)f(the)h(execution)f(times)131
1206 y(for)g(a)f(m)o(ultipro)q(cessor)e(built)i(of)g(state-of-the-art)i
(pro)q(cessors)f(with)f(those)g(for)g(a)h(m)o(ultipro)q(cessor)131
1296 y(built)20 b(of)h(previous-generation)f(pro)q(cessors.)35
b(W)l(e)20 b(use)h(this)f(comparison)g(not)h(to)f(suggest)i(an)131
1386 y(arc)o(hitectural)17 b(tradeo\013,)i(but)g(rather)f(to)h
(understand)g(where)f(curren)o(t)f(m)o(ultipro)q(cessors)g(ha)o(v)o(e)
131 1477 y(succeeded)e(in)h(exploiting)g(ILP)g(and)h(where)f(they)g
(need)f(impro)o(v)o(em)o(en)o(t.)204 1569 y(W)l(e)21
b(\014nd)g(that,)h(for)f(our)h(applications,)f(ILP)g(tec)o(hniques)f
(e\013ectiv)o(ely)e(address)k(the)e(CPU)131 1659 y(comp)q(onen)o(t)15
b(of)g(execution)g(time,)e(but)i(are)h(less)f(successful)g(in)g(impro)o
(ving)e(the)j(data)g(read)g(stall)131 1749 y(comp)q(onen)o(t)i(of)h
(execution)e(time)g(in)h(m)o(ultipro)q(cessors.)27 b(The)19
b(primary)e(reasons)j(for)f(less)f(read)131 1840 y(miss)g(time)e(sp)q
(eedup)k(than)f(CPU)g(time)e(sp)q(eedup)i(with)f(ILP)h(tec)o(hniques)f
(are)h(an)g(insu\016cien)o(t)131 1930 y(p)q(oten)o(tial)14
b(in)f(our)h(applications)g(to)g(ha)o(v)o(e)f(m)o(ultiple)d(read)k
(misses)e(outstanding)j(sim)o(ultaneously)131 2020 y(and/or)26
b(system)c(con)o(ten)o(tion)h(from)g(more)g(frequen)o(t)g(memory)e
(accesses)j(in)f(the)h(ILP-based)131 2111 y(m)o(ultipro)q(cessor.)204
2203 y(The)15 b(disparit)o(y)f(b)q(et)o(w)o(een)f(the)h(impact)f(of)i
(ILP)g(on)g(CPU)f(time)e(and)j(on)g(read)g(miss)e(time)g(has)131
2293 y(t)o(w)o(o)f(implications.)17 b(First,)12 b(read)f(stall)h(time)d
(b)q(ecomes)h(a)i(m)o(uc)o(h)d(larger)j(comp)q(onen)o(t)f(of)g
(execution)131 2384 y(time)20 b(in)i(ILP)h(m)o(ultipro)q(cessors)e
(than)h(in)g(previous-generation)h(m)o(ultipro)q(cessors.)38
b(Second,)131 2474 y(most)14 b(of)h(our)g(applications)f(sho)o(w)h(lo)o
(w)o(er)f(parallel)g(e\016ciency)e(on)j(an)g(ILP)g(m)o(ultipro)q
(cessor)e(than)131 2564 y(on)22 b(a)f(previous-generation)h(m)o
(ultipro)q(cessor.)34 b(The)21 b(k)o(ey)f(reasons)i(for)f(the)g
(reduced)f(parallel)131 2654 y(e\016ciency)14 b(on)i(most)f(of)g(our)i
(applications)e(are)h(the)f(greater)h(impact)e(of)i(read)f(stall)h
(time)d(in)j(the)p eop
%%Page: 51 58
51 57 bop 1882 72 a Fp(51)131 222 y(m)o(ultipro)q(cessor)16
b(than)i(in)f(the)g(unipro)q(cessor,)h(increased)f(con)o(ten)o(tion)g
(in)g(the)g(m)o(ultipro)q(cessor,)131 312 y(and)j(reduced)e(o)o(v)o
(erlap)g(in)h(the)g(m)o(ultipro)q(cessor)e(due)i(to)g(the)g(dic)o
(hotom)o(y)e(b)q(et)o(w)o(een)h(lo)q(cal)h(and)131 403
y(remote)13 b(memory)e(accesses.)21 b(Ho)o(w)o(ev)o(er,)12
b(these)i(do)h(not)g(app)q(ear)g(to)g(b)q(e)f(fundamen)o(tal)f
(problems;)131 493 y(one)19 b(of)f(our)h(applications)f(exploits)f
(enough)i(o)o(v)o(erlap)f(in)f(the)h(ILP)h(m)o(ultipro)q(cessor)d(to)j
(see)f(an)131 583 y(increase)e(in)g(parallel)f(e\016ciency)l(.)204
676 y(Ov)o(erall,)k(our)i(results)f(indicate)f(that)h(despite)f(the)h
(latency-tolerating)g(tec)o(hniques)e(in)o(te-)131 766
y(grated)12 b(within)f(ILP)h(pro)q(cessors,)h(m)o(ultipro)q(cessors)d
(built)h(from)g(ILP)g(pro)q(cessors)i(ha)o(v)o(e)e(a)h
Fn(gr)n(e)n(ater)131 856 y Fp(need)20 b(for)g(additional)g(memory)c
(latency)j(reducing)h(and)g(hiding)g(tec)o(hniques)e(than)i(previous-)
131 946 y(generation)12 b(m)o(ultipro)q(cessors.)19 b(These)11
b(tec)o(hniques)f(include)h(con)o(v)o(en)o(tional)f(hardw)o(are)i(and)g
(soft-)131 1037 y(w)o(are)i(tec)o(hniques,)e(and)i(aggressiv)o(e)g
(compiler)d(tec)o(hniques)h(to)i(enhance)g(the)f(read)h(miss)e(o)o(v)o
(erlap)131 1127 y(in)g(applications,)h(while)e(accoun)o(ting)h(for)h
(the)f(dic)o(hotom)o(y)e(b)q(et)o(w)o(een)i(lo)q(cal)g(and)h(remote)d
(memory)131 1217 y(accesses.)204 1310 y(When)18 b(addressing)h(the)e(v)
m(alidit)o(y)g(of)h(using)g(curren)o(t)f(simple-pro)q(cessor-based)g
(sim)o(ulation)131 1400 y(mo)q(dels)12 b(to)h(appro)o(ximate)e(an)i
(ILP)f(m)o(ultipro)q(cessor,)g(w)o(e)g(\014nd)h(that)f(a)h(mo)q(del)f
(that)g(increases)h(the)131 1490 y(sp)q(eed)e(of)h(b)q(oth)f(the)g(CPU)
g(and)g(the)g(L1)h(cac)o(he)e(is)h(a)g(reasonable)g(appro)o(ximation)f
(for)h(applications)131 1581 y(with)k(lo)o(w)f(o)o(v)o(erlap)f(of)i
(read)g(misses.)k(Ho)o(w)o(ev)o(er,)13 b(this)h(mo)q(del)f(can)i(sho)o
(w)g(signi\014can)o(t)f(inaccuracy)131 1671 y(in)i(cases)g(of)g(high)h
(or)f(mo)q(derate)f(read)h(miss)f(o)o(v)o(erlap)g(since)g(it)h(do)q(es)
h(not)f(prop)q(erly)g(accoun)o(t)g(for)131 1761 y(the)g(e\013ects)g(of)
h(o)o(v)o(erlapping)e(read)i(misses.)204 1853 y(Unfortunately)l(,)h
(full)g(ILP)g(m)o(ultipro)q(cessor)f(sim)o(ulation)g(will)g(in)o(v)m
(ariably)h(tak)o(e)f(more)h(sim-)131 1944 y(ulation)23
b(time)d(than)j(the)g(direct-execution)d(sim)o(ulation)h(mo)q(dels)h
(allo)o(w)o(ed)f(b)o(y)i(using)f(simple)131 2034 y(pro)q(cessor)17
b(mo)q(dels.)j(Therefore,)c(in)f(the)h(absence)g(of)h(an)f(alternativ)o
(e,)f(w)o(e)g(exp)q(ect)h(that)g(direct-)131 2124 y(execution-based)c
(sim)o(ulators)f(will)g(con)o(tin)o(ue)g(to)i(b)q(e)f(used,)h
(particularly)e(for)h(large)g(applications)131 2215 y(and)j(large)f
(data)h(sets.)20 b(This)14 b(study)h(pro)o(vides)e(insigh)o(ts)h(on)g
(the)g(inaccuracies)f(that)i(can)f(b)q(e)g(gen-)131 2305
y(erated)19 b(and)g(suggests)i(that)e(the)g(results)f(of)i(suc)o(h)e
(sim)o(ulations)g(should)h(b)q(e)g(in)o(terpreted)e(with)131
2395 y(care.)31 b(F)l(or)19 b(more)f(accurate)i(analysis)f(of)h(large)f
(applications,)h(parallelization)e(ma)o(y)g(serv)o(e)h(as)131
2485 y(the)e(enabling)h(tec)o(hnology)f(for)g(high-p)q(erformance)g
(ILP)g(sim)o(ulations.)23 b(Additionally)l(,)16 b(it)h(ma)o(y)131
2576 y(b)q(e)d(p)q(ossible)f(to)h(add)f(supp)q(ort)i(for)e(non-blo)q(c)
o(king)h(reads)g(to)f(direct-execution)f(sim)o(ulation)f(tec)o(h-)131
2666 y(niques,)k(th)o(us)i(allo)o(wing)f(fast)h(sim)o(ulators)d(to)j
(capture)f(the)g(e\013ects)g(of)h(memory)c(o)o(v)o(erlap.)p
eop
%%Page: 52 59
52 58 bop 1882 72 a Fp(52)805 403 y Ft(Bibliograph)n(y)131
676 y Fp([AK95])140 b(Da)o(vid)22 b(H.)f(Alb)q(onesi)h(and)g(Israel)g
(Koren.)38 b(An)22 b(Analytical)e(Mo)q(del)i(of)g(High-)422
766 y(Performance)16 b(Sup)q(erscalar-Based)i(Multipro)q(cessors.)25
b(In)17 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)i(the)422
856 y(IFIP)14 b(WG)f(10.3)h(Working)h(Confer)n(enc)n(e)g(on)f(Par)n(al)
r(lel)i(A)o(r)n(chite)n(ctur)n(es)e(and)g(Com-)422 947
y(pilation)k(T)l(e)n(chniques)p Fp(,)g(pages)f(194{203,)h(June)e(1995.)
131 1078 y([ASHAA97])40 b(Hazim)23 b(Ab)q(del-Sha\014,)k(Jonathan)f
(Hall,)f(Sarita)g(V.)f(Adv)o(e,)i(and)f(Vikram)e(S.)422
1169 y(Adv)o(e.)17 b(An)d(Ev)m(aluation)h(of)f(Fine-Grain)g(Pro)q
(ducer-Initiated)g(Comm)o(unication)422 1259 y(in)j(Cac)o(he-Coheren)o
(t)g(Multipro)q(cessors.)23 b(In)17 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g
(of)h(the)h(3r)n(d)e(Interna-)422 1349 y(tional)j(Symp)n(osium)e(on)h
(High-Performanc)n(e)h(Computer)f(A)o(r)n(chite)n(ctur)n(e)p
Fp(,)e(pages)422 1440 y(204{215,)i(F)l(ebruary)d(1997.)131
1571 y([A)-5 b(WMC)307 1553 y Fk(+)335 1571 y Fp(95])25
b(Vikram)19 b(S.)i(Adv)o(e,)g(Jh)o(y-Ch)o(un)g(W)l(ang,)i(J.)e
(Mellor-Crumm)o(ey)l(,)e(Daniel)h(Reed,)422 1662 y(Mark)15
b(Anderson,)g(and)g(K.)f(Kennedy)l(.)19 b(An)14 b(In)o(tegrated)g
(Compilation)g(and)i(P)o(er-)422 1752 y(formance)k(Analysis)g(En)o
(vironmen)o(t)e(for)j(Data)h(P)o(arallel)d(Programs.)34
b(In)21 b Fn(Pr)n(o-)422 1842 y(c)n(e)n(e)n(dings)d(of)f(Sup)n(er)n(c)n
(omputing)h('95)p Fp(,)d(Decem)o(b)q(er)f(1995.)131 1974
y([BF95])148 b(James)17 b(E.)h(Bennett)f(and)i(Mic)o(hael)d(J.)i
(Flynn.)26 b(P)o(erformance)16 b(F)l(actors)i(for)h(Su-)422
2064 y(p)q(erscalar)e(Pro)q(cessors.)25 b(T)l(ec)o(hnical)15
b(Rep)q(ort)j(CSL-TR-95-661,)i(Stanford)e(Uni-)422 2155
y(v)o(ersit)o(y)l(,)c(F)l(ebruary)i(1995.)131 2286 y([BIAD89])88
b(Eugene)13 b(D.)f(Bro)q(oks)i(I)q(I)q(I,)d(Timoth)o(y)g(S.)h(Axelro)q
(d,)g(and)i(Gregory)f(A.)e(Darmohra)o(y)l(.)422 2377
y(The)23 b(Cerb)q(erus)g(Multipro)q(cessor)g(Sim)o(ulator.)40
b(In)22 b(Garry)h(Ro)q(drigue,)i(editor,)422 2467 y Fn(Par)n(al)r(lel)h
(Pr)n(o)n(c)n(essing)e(for)g(Scienti\014c)j(Computing:)37
b(Pr)n(o)n(c)n(e)n(e)n(dings)24 b(of)g(the)h(3r)n(d)422
2557 y(SIAM)17 b(Confer)n(enc)n(e)g(on)f(Par)n(al)r(lel)i(Pr)n(o)n(c)n
(essing)e(for)f(Scienti\014c)k(Computing)e Fp(\(De-)422
2648 y(cem)o(b)q(er)d(1987\),)k(c)o(hapter)d(58,)i(pages)g(384{390.)h
(SIAM,)d(1989.)p eop
%%Page: 53 60
53 59 bop 1882 72 a Fp(53)131 222 y([BP91])147 b(Mic)o(hael)16
b(Butler)h(and)i(Y)l(ale)e(P)o(att.)26 b(The)18 b(E\013ect)g(of)g(Real)
f(Data)i(Cac)o(he)f(Beha)o(v-)422 312 y(ior)f(on)h(the)f(P)o
(erformance)f(of)h(a)h(Microarc)o(hitecture)d(that)i(Supp)q(orts)i
(Dynamic)422 403 y(Sc)o(heduling.)d(In)c Fn(Pr)n(o)n(c)n(e)n(e)n(dings)
h(of)h(the)g(24th)g(A)o(nnual)i(International)f(Symp)n(osium)422
493 y(on)j(Micr)n(o)n(ar)n(chite)n(ctur)n(e)p Fp(,)c(pages)j(34{41,)h
(No)o(v)o(em)o(b)q(er)13 b(1991.)131 625 y([CDJ)242 607
y Fk(+)272 625 y Fp(91])88 b(R.)23 b(G.)g(Co)o(vington,)j(S.)d(Dw)o
(ark)m(adas,)j(J.)d(R.)g(Jump,)h(S.)f(Madala,)i(and)f(J.)f(B.)422
715 y(Sinclair.)18 b(The)c(E\016cien)o(t)e(Sim)o(ulation)h(of)h(P)o
(arallel)f(Computer)g(Systems.)k Fn(Inter-)422 805 y(national)i
(Journal)e(of)g(Computer)h(Simulation)p Fp(,)f(1:31{58,)g(Jan)o(uary)g
(1991.)131 937 y([Con92])129 b(Thomas)20 b(M.)e(Con)o(te.)31
b(T)l(radeo\013s)21 b(in)e(Pro)q(cessor/Memory)g(In)o(terfaces)f(for)i
(Su-)422 1027 y(p)q(erscalar)g(Pro)q(cessors.)30 b(In)19
b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)h(25th)f(A)o(nnual)h
(International)422 1118 y(Symp)n(osium)c(on)g(Micr)n(o)n(ar)n(chite)n
(ctur)n(e)p Fp(,)d(pages)j(202{205,)i(Decem)o(b)q(er)14
b(1992.)131 1249 y([ERB)249 1231 y Fk(+)278 1249 y Fp(95])82
b(John)21 b(H.)f(Edmondson,)h(P)o(aul)f(I.)g(Rubinfeld,)g(P)o(eter)g
(J.)g(Bannon,)h(Bradley)f(J.)422 1340 y(Bensc)o(hneider,)27
b(Debra)g(Bernstein,)g(Rub)q(en)g(W.)f(Castelino,)j(Elizab)q(eth)d(M.)
422 1430 y(Co)q(op)q(er,)35 b(Daniel)30 b(E.)g(Dev)o(er,)i(Dale)e(R.)g
(Donc)o(hin,)j(Timoth)o(y)c(C.)h(Fisc)o(her,)422 1520
y(Anil)22 b(K.)g(Jain,)i(Shekhar)e(Meh)o(ta,)i(Jeanne)e(E.)h(Mey)o(er,)
f(Ronald)h(P)l(.)f(Preston,)422 1611 y(Vidy)o(a)11 b(Ra)s(jagopalan,)j
(Chandrasekhara)g(Somanathan,)f(Scott)f(A.)f(T)l(a)o(ylor,)i(and)422
1701 y(Gilb)q(ert)18 b(M.)f(W)l(olric)o(h.)26 b(In)o(ternal)17
b(Organization)h(of)h(the)e(Alpha)h(21164,)i(a)f(300-)422
1791 y(MHz)14 b(64-bit)i(Quad-issue)g(CMOS)f(RISC)g(Micropro)q(cessor.)
20 b Fn(Digital)d(T)l(e)n(chnic)n(al)422 1881 y(Journal)p
Fp(,)f(7\(1\):119{132,)j(1995.)131 2013 y([FJ94])158
b(K.I.)13 b(F)l(ark)m(as)i(and)g(Norman)e(P)l(.)h(Jouppi.)19
b(Complexit)o(y/Performance)11 b(T)l(radeo\013s)422 2104
y(with)18 b(Non-Blo)q(c)o(king)g(Loads.)29 b(In)19 b
Fn(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)h(the)h(21st)f(A)o(nnual)i(Interna-)
422 2194 y(tional)15 b(Symp)n(osium)d(on)i(Computer)f(A)o(r)n(chite)n
(ctur)n(e)p Fp(,)f(pages)h(211{222,)i(June)d(1994.)131
2326 y([FJC96])123 b(K.)20 b(F)l(ark)m(as,)h(N.)f(Jouppi,)h(and)f(P)l
(.)g(Cho)o(w.)34 b(Register)19 b(File)g(Design)h(Considera-)422
2416 y(tions)f(in)f(Dynamically)f(Sc)o(heduled)g(Pro)q(cessors.)30
b(In)18 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)i(the)g(2nd)422
2506 y(International)c(Symp)n(osium)e(on)g(High-Performanc)n(e)i
(Computer)e(A)o(r)n(chite)n(ctur)n(e)p Fp(,)422 2597
y(pages)j(40{51,)h(F)l(ebruary)e(1996.)p eop
%%Page: 54 61
54 60 bop 1882 72 a Fp(54)131 222 y([GGH92])102 b(Kourosh)27
b(Gharac)o(horlo)q(o,)i(Ano)q(op)d(Gupta,)i(and)e(John)g(Hennessy)l(.)
48 b(Hiding)422 312 y(Memory)19 b(Latency)h(Using)g(Dynamic)f(Sc)o
(heduling)g(in)h(Shared-Memory)f(Mul-)422 403 y(tipro)q(cessors.)39
b(In)21 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)g(the)h(19th)f
(International)i(Symp)n(osium)e(on)422 493 y(Computer)17
b(A)o(r)n(chite)n(ctur)n(e)p Fp(,)f(pages)h(22{33,)h(1992.)131
625 y([GLL)243 607 y Fk(+)274 625 y Fp(90])86 b(Kourosh)25
b(Gharac)o(horlo)q(o,)i(Daniel)d(Lenoski,)h(James)e(Laudon,)28
b(Phillip)22 b(Gib-)422 715 y(b)q(ons,)k(Ano)q(op)e(Gupta,)h(and)f
(John)f(Hennessy)l(.)41 b(Memory)22 b(Consistency)h(and)422
805 y(Ev)o(en)o(t)d(Ordering)g(in)g(Scalable)g(Shared-Memory)f
(Multipro)q(cessors.)34 b(In)20 b Fn(Pr)n(o-)422 896
y(c)n(e)n(e)n(dings)i(of)g(the)g(17th)g(International)h(Symp)n(osium)e
(on)h(Computer)g(A)o(r)n(chite)n(c-)422 986 y(tur)n(e)p
Fp(,)16 b(pages)h(15{26,)h(Ma)o(y)d(1990.)131 1118 y([HK)o(O)257
1100 y Fk(+)285 1118 y Fp(94])75 b(Mark)12 b(Heinric)o(h,)f(Je\013rey)h
(Kuskin,)g(Da)o(vid)g(Ofelt,)g(John)h(Heinlein,)d(Jo)q(el)i(Baxter,)422
1208 y(Jaswinder)23 b(P)o(al)f(Singh,)h(Ric)o(hard)f(Simoni,)f(Kourosh)
j(Gharac)o(horlo)q(o,)h(Da)o(vid)422 1298 y(Nak)m(ahira,)31
b(Mark)d(Horo)o(witz,)j(Ano)q(op)e(Gupta,)i(Mendel)d(Rosen)o(blum,)h
(and)422 1389 y(John)23 b(Hennessy)l(.)39 b(The)22 b(P)o(erformance)e
(Impact)h(of)i(Flexibilit)n(y)c(in)j(the)g(Stan-)422
1479 y(ford)h(FLASH)e(Multipro)q(cessor.)39 b(In)22 b
Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)g(6th)g(International)422
1569 y(Confer)n(enc)n(e)f(on)g(A)o(r)n(chite)n(ctur)n(al)e(Supp)n(ort)h
(for)g(Pr)n(o)n(gr)n(amming)e(L)n(anguages)j(and)422
1659 y(Op)n(er)n(ating)c(Systems)p Fp(,)e(pages)h(274{285,)h(1994.)131
1791 y([HLR)-5 b(W92])67 b(Mark)23 b(D.)h(Hill,)f(James)f(R.)h(Larus,)j
(Stev)o(en)c(K.)h(Reinhardt,)i(and)f(Da)o(vid)f(A.)422
1881 y(W)l(o)q(o)q(d.)k(Co)q(op)q(erativ)o(e)18 b(Shared)g(Memory:)k
(Soft)o(w)o(are)17 b(and)i(Hardw)o(are)e(Supp)q(ort)422
1972 y(for)h(Scalable)f(Multipro)q(cessors.)26 b(In)17
b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(5th)h(International)h(Confer-)422
2062 y(enc)n(e)e(on)f(A)o(r)n(chite)n(ctur)n(al)f(Supp)n(ort)g(for)g
(Pr)n(o)n(gr)n(amming)f(L)n(anguages)i(and)f(Op)n(er)n(at-)422
2152 y(ing)i(Systems)p Fp(,)f(pages)g(262{273,)h(Octob)q(er)e(1992.)131
2284 y([HSH96])114 b(Chris)17 b(Holt,)f(Jaswinder)h(P)o(al)f(Singh,)h
(and)g(John)g(Hennessy)l(.)22 b(Application)16 b(and)422
2374 y(Arc)o(hitectural)j(Bottlenec)o(ks)g(in)h(Large)i(Scale)f
(Distributed)f(Shared)h(Memory)422 2465 y(Mac)o(hines.)g(In)16
b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)h(23r)n(d)e(A)o(nnual)j
(International)g(Symp)n(osium)422 2555 y(on)f(Computer)f(A)o(r)n(chite)
n(ctur)n(e)p Fp(,)f(pages)h(134{145,)h(Ma)o(y)e(1996.)p
eop
%%Page: 55 62
55 61 bop 1882 72 a Fp(55)131 222 y([JW89])140 b(Norman)23
b(P)l(.)g(Jouppi)h(and)h(Da)o(vid)e(W.)g(W)l(all.)43
b(Av)m(ailable)23 b(Instruction-Lev)o(el)422 312 y(P)o(arallelism)16
b(for)j(Sup)q(erscalar)h(and)f(Sup)q(erpip)q(elined)f(Mac)o(hines.)28
b(In)19 b Fn(Pr)n(o)n(c)n(e)n(e)n(d-)422 403 y(ings)j(of)g(the)g(3r)n
(d)e(International)j(Confer)n(enc)n(e)f(on)g(A)o(r)n(chite)n(ctur)n(al)
f(Supp)n(ort)g(for)422 493 y(Pr)n(o)n(gr)n(amming)c(L)n(anguages)j(and)
f(Op)n(er)n(ating)g(Systems)p Fp(,)f(pages)h(272{282,)i(April)422
583 y(1989.)131 709 y([Kro81])134 b(Da)o(vid)15 b(Kroft.)k(Lo)q(c)o
(kup-Free)c(Instruction)f(Fetc)o(h/Prefetc)o(h)f(Cac)o(he)i(Organiza-)
422 799 y(tion.)26 b(In)17 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)g(the)i
(8th)e(International)i(Symp)n(osium)e(on)h(Computer)422
889 y(A)o(r)n(chite)n(ctur)n(e)p Fp(,)d(pages)h(81{87,)g(Ma)o(y)f
(1981.)131 1015 y([MIP96])119 b(MIPS)18 b(T)l(ec)o(hnologies,)h(Inc.)28
b Fn(R10000)18 b(Micr)n(opr)n(o)n(c)n(essor)f(User's)j(Manual,)g(V)l
(er-)422 1105 y(sion)e(2.0)p Fp(,)d(Decem)o(b)q(er)f(1996.)131
1230 y([NHO96])103 b(Basem)10 b(A.)g(Na)o(yfeh,)h(Lance)h(Hammond,)d
(and)j(Kunle)f(Oluk)o(otun.)j(Ev)m(aluation)e(of)422
1321 y(Design)g(Alternativ)o(es)e(for)j(a)f(Multipro)q(cessor)g
(Micropro)q(cessor.)k(In)11 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)422
1411 y(of)18 b(the)h(23r)n(d)f(International)h(Symp)n(osium)f(on)h
(Computer)f(A)o(r)n(chite)n(ctur)n(e)p Fp(,)e(pages)422
1501 y(67{77,)i(Ma)o(y)e(1996.)131 1627 y([ONH)257 1609
y Fk(+)285 1627 y Fp(96])75 b(Kunle)14 b(Oluk)o(otun,)f(Basem)g(A.)g
(Na)o(yfeh,)g(Lance)h(Hammond,)e(Ken)i(Wilson,)g(and)422
1717 y(Kun)o(yung)k(Chang.)29 b(The)18 b(Case)g(for)h(a)f(Single-Chip)g
(Multipro)q(cessor.)27 b(In)18 b Fn(Pr)n(o-)422 1807
y(c)n(e)n(e)n(dings)k(of)f(the)h(7th)f(International)i(Confer)n(enc)n
(e)f(on)g(A)o(r)n(chite)n(ctur)n(al)f(Supp)n(ort)422
1898 y(for)c(Pr)n(o)n(gr)n(amming)e(L)n(anguages)j(and)f(Op)n(er)n
(ating)g(Systems)p Fp(,)f(pages)h(2{11,)g(Octo-)422 1988
y(b)q(er)g(1996.)131 2113 y([P)o(ou94])132 b(D.K.)21
b(P)o(oulsen.)39 b Fn(Memory)21 b(L)n(atency)i(R)n(e)n(duction)g(via)g
(Data)f(Pr)n(efetching)i(and)422 2204 y(Data)18 b(F)l(orwar)n(ding)f
(in)i(Shar)n(e)n(d-Memory)d(Multipr)n(o)n(c)n(essors)p
Fp(.)21 b(PhD)d(thesis,)e(Uni-)422 2294 y(v)o(ersit)o(y)f(of)h
(Illinois)f(at)i(Urbana-Champaign,)f(1994.)131 2419 y([PRA97a])85
b(Vija)o(y)15 b(S.)h(P)o(ai,)g(P)o(arthasarath)o(y)h(Ranganathan,)h
(and)f(Sarita)f(V.)g(Adv)o(e.)j(RSIM:)422 2510 y(An)f(Execution-Driv)o
(en)f(Sim)o(ulator)g(for)h(ILP-Based)h(Shared-Memory)e(Multi-)422
2600 y(pro)q(cessors)e(and)f(Unipro)q(cessors.)19 b(In)13
b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)h(Thir)n(d)e(Workshop)g(on)
422 2690 y(Computer)j(A)o(r)n(chite)n(ctur)n(e)h(Educ)n(ation)p
Fp(,)e(F)l(ebruary)g(1997.)p eop
%%Page: 56 63
56 62 bop 1882 72 a Fp(56)131 222 y([PRA97b])82 b(Vija)o(y)20
b(S.)h(P)o(ai,)g(P)o(arthasarath)o(y)h(Ranganathan,)i(and)e(Sarita)f
(V.)f(Adv)o(e.)34 b(The)422 312 y(Impact)13 b(of)i(Instruction)f(Lev)o
(el)g(Parallelism)e(on)j(Multipro)q(cessor)g(Performance)422
403 y(and)21 b(Sim)o(ulation)d(Metho)q(dology)l(.)33
b(In)20 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)g(3r)n(d)f
(International)422 493 y(Symp)n(osium)c(on)h(High)h(Performanc)n(e)f
(Computer)f(A)o(r)n(chite)n(ctur)n(e)p Fp(,)f(pages)i(72{83,)422
583 y(F)l(ebruary)f(1997.)131 715 y([PRAH96])72 b(Vija)o(y)17
b(S.)i(P)o(ai,)f(P)o(arthasarath)o(y)i(Ranganathan,)g(Sarita)f(V.)f
(Adv)o(e,)f(and)i(T)l(racy)422 805 y(Harton.)44 b(An)23
b(Ev)m(aluation)i(of)f(Memory)d(Consistency)j(Mo)q(dels)g(for)g
(Shared-)422 896 y(Memory)19 b(Systems)h(with)h(ILP)g(Pro)q(cessors.)37
b(In)20 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)g(7th)g(In-)422
986 y(ternational)c(Confer)n(enc)n(e)f(on)f(A)o(r)n(chite)n(ctur)n(al)g
(Supp)n(ort)g(for)g(Pr)n(o)n(gr)n(amming)e(L)n(an-)422
1076 y(guages)19 b(and)f(Op)n(er)n(ating)f(Systems)p
Fp(,)f(pages)h(12{23,)h(Octob)q(er)e(1996.)131 1208 y([Ra)s(j95])137
b(Usha)13 b(Ra)s(jagopalan.)18 b(The)13 b(E\013ects)f(of)h(In)o
(terconnection)e(Net)o(w)o(orks)h(on)h(the)g(P)o(er-)422
1298 y(formance)j(of)i(Shared-Memory)e(Multipro)q(cessors.)24
b(Master's)17 b(thesis,)g(Depart-)422 1389 y(men)o(t)12
b(of)i(Electrical)e(and)i(Computer)f(Engineering,)g(Rice)g(Univ)o
(ersit)o(y)l(,)e(Jan)o(uary)422 1479 y(1995.)131 1611
y([RBH)253 1593 y Fk(+)281 1611 y Fp(95])79 b(Mendel)19
b(Rosen)o(blum,)f(Edouard)j(Bugnion,)f(Stephen)g(Alan)f(Herro)q(d,)h
(Emmet)422 1701 y(Witc)o(hel,)11 b(and)h(Ano)q(op)h(Gupta.)j(The)c
(Impact)f(of)h(Arc)o(hitectural)d(Trends)k(on)f(Op-)422
1791 y(erating)18 b(System)f(P)o(erformance.)24 b(In)18
b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)g(15th)g(A)o(CM)g(Symp)n(o-)
422 1881 y(sium)e(on)g(Op)n(er)n(ating)g(Systems)h(Principles)p
Fp(,)e(pages)h(285{298,)h(Decem)o(b)q(er)13 b(1995.)131
2013 y([RP)l(ASA97])49 b(P)o(arthasarath)o(y)28 b(Ranganathan,)i(Vija)o
(y)25 b(S.)h(P)o(ai,)i(Hazim)c(Ab)q(del-Sha\014,)29 b(and)422
2104 y(Sarita)16 b(V.)e(Adv)o(e.)19 b(The)c(In)o(teraction)g(of)g(Soft)
o(w)o(are)h(Prefetc)o(hing)e(with)h(ILP)g(Pro-)422 2194
y(cessors)j(in)e(Shared-Memory)g(Systems.)22 b(In)16
b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)h(24th)f(A)o(nnual)422
2284 y(International)h(Symp)n(osium)e(on)g(Computer)h(A)o(r)n(chite)n
(ctur)n(e)p Fp(,)d(June)h(1997.)131 2416 y([RPW96])96
b(Stev)o(en)14 b(K.)g(Reinhardt,)g(Rob)q(ert)h(W.)g(P\014le,)f(and)h
(Da)o(vid)f(A.)g(W)l(o)q(o)q(d.)21 b(Decoupled)422 2506
y(Hardw)o(are)f(Supp)q(ort)g(for)g(Distributed)f(Shared)h(Memory)l(.)30
b(In)19 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)422 2597
y(the)j(23r)n(d)e(A)o(nnual)j(International)g(Symp)n(osium)d(on)i
(Computer)f(A)o(r)n(chite)n(ctur)n(e)p Fp(,)422 2687
y(pages)c(34{43,)h(Ma)o(y)e(1996.)p eop
%%Page: 57 64
57 63 bop 1882 72 a Fp(57)131 222 y([SF91])156 b(Gurindar)24
b(Sohi)f(and)g(Mano)s(j)g(F)l(ranklin.)40 b(High-Bandwidth)23
b(Data)h(Memory)422 312 y(Systems)16 b(for)h(Sup)q(erscalar)h(Pro)q
(cessors.)25 b(In)16 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)h(4th)f
(Interna-)422 403 y(tional)e(Confer)n(enc)n(e)g(on)f(A)o(r)n(chite)n
(ctur)n(al)f(Supp)n(ort)h(for)f(Pr)n(o)n(gr)n(amming)g(L)n(anguages)422
493 y(and)k(Op)n(er)n(ating)f(Systems)p Fp(,)g(pages)g(53{62,)g(April)e
(1991.)131 625 y([SW)o(G92])101 b(Jaswinder)40 b(P)o(al)f(Singh,)46
b(W)l(olf-Dietric)o(h)38 b(W)l(eb)q(er,)44 b(and)c(Ano)q(op)h(Gupta.)
422 715 y(SPLASH:)12 b(Stanford)h(P)o(arallel)e(Applications)g(for)h
(Shared-Memory)l(.)i Fn(Computer)422 805 y(A)o(r)n(chite)n(ctur)n(e)j
(News)p Fp(,)g(20\(1\):5{44,)h(Marc)o(h)e(1992.)131 937
y([W)o(OT)267 919 y Fk(+)296 937 y Fp(95])64 b(Stev)o(en)21
b(Cameron)g(W)l(o)q(o,)j(Moriy)o(oshi)d(Ohara,)i(Ev)m(an)f(T)l(orrie,)h
(Jaswinder)e(P)o(al)422 1027 y(Singh,)j(and)f(Ano)q(op)g(Gupta.)40
b(The)22 b(SPLASH-2)h(Programs:)34 b(Characteriza-)422
1118 y(tion)23 b(and)g(Metho)q(dological)f(Considerations.)41
b(In)22 b Fn(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)h(22nd)422
1208 y(International)17 b(Symp)n(osium)e(on)h(Computer)f(A)o(r)n(chite)
n(ctur)n(e)p Fp(,)f(pages)h(24{36,)h(June)422 1298 y(1995.)131
1430 y([ZB92])150 b(Ric)o(hard)13 b(N.)g(Zuc)o(k)o(er)f(and)j
(Jean-Loup)g(Baer.)j(A)13 b(P)o(erformance)f(Study)i(of)g(Mem-)422
1520 y(ory)i(Consistency)f(Mo)q(dels.)21 b(In)15 b Fn(Pr)n(o)n(c)n(e)n
(e)n(dings)h(of)h(the)g(19th)g(International)h(Sym-)422
1611 y(p)n(osium)f(on)h(Computer)f(A)o(r)n(chite)n(ctur)n(e)p
Fp(,)e(pages)i(2{12,)h(Ma)o(y)d(1992.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
