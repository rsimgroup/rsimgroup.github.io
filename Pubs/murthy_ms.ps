%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: Thesis.dvi
%%Pages: 62
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips Thesis
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1998.04.29:2319
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (Thesis.dvi)
@start /Fa 1 113 df<160816181630A21660A216C0A2ED0180A2ED0300A21506A25DA2
5DA25DA25DA25D1206001E495A122F004F49C7FCEA878000071306EA03C05CA26C6C5AA2
6C6C5AA2EB7860A26D5AA2EB1F80A26DC8FCA21306A2252E7E8126>112
D E /Fb 1 106 df<EA01C01203A2EA0180C7FCA6121C12271247A21287A2120EA25AA3
5A1380A21270EA71001232121C0A1C7E9B0E>105 D E /Fc 28 121
df<EA01C0EA0380EA0700120EA25AA25AA35AA45AAE1270A47EA37EA27EA27EEA0380EA
01C00A2A7D9E10>40 D<12E012707E7EA27EA27EA3EA0380A4EA01C0AEEA0380A4EA0700
A3120EA25AA25A5A5A0A2A7E9E10>I<EAFFE0A20B0280890E>45
D<EAFFFC13FF38F00F80EB03E01301EB00F014781438143CA2141C141EA8143CA3147814
F0A2EB03E0EB0FC0B5120013FC171D7C9C1E>68 D<B512C0A200F0C7FCABB51280A200F0
C7FCACB512C0A2121D7C9C19>I<12F0B3AB041D7C9C0C>73 D<00FCEB07E0A300EE130D
A300E71319A3EB803900E31331EBC071A200E11361A2EBE0E1A200E013C113F1EB7181A3
EB3B01A3131EA313001B1D7C9C24>77 D<EAFFF813FF38F00F80EB03C0EB01E0EB00F0A5
EB01E01303EB0FC0B51280140013F8EAF03C131C131E7FA2EB0780A2EB03C0A2EB01E0EB
00F0A21478151D7C9C1B>82 D<EA03F8EA0FFEEA1C0F487E487E0060C7FC12E0A47E1278
127FEA3FE0EA1FFCEA07FEEA01FF38001F801307EB03C0A21301A400C01380EAE00338F0
0700EA7C0EEA1FFCEA07F0121F7E9D17>I<EA0FC0EA3FF0EA7FF8EA7038EA401C1200A2
13FC120F123FEA781C12E0A3EAF07CEA7FFC13DCEA3F1C0E127E9114>97
D<12E0ABEAE3E0EAEFF8EAFFFCEAF83EEAE01E130E1307A6130EEAF01EEAF83CEAFFF8EA
EFF0EAE3E0101D7D9C15>I<EA03F0EA0FFCEA1FFEEA3C0EEA7802EA70005AA61270EA78
02EA3C0EEA1FFEEA0FFCEA03F00F127F9112>I<1307ABEA07C7EA1FF7EA3FFFEA3C1FEA
7807127012E0A61270EA780FEA3C1FEA3FFFEA1FF7EA07C7101D7F9C15>I<EA07E0EA0F
F0EA3FF8EA3C3CEA700C130EEAFFFEA3EAE000A31270EA7802EA3C0EEA1FFEEA0FFCEA03
F00F127F9112>I<13FC12011203EA0700120EA7EAFFE0A2EA0E00B00E1D809C0D>I<12F0
A41200A71270B2041D7E9C0A>105 D<12E0AB133C137813F0EAE1E0EAE3C0EAE780EAEF
00B4FC138012FBEAF9C0EAF1E012E013F013781338133C131E0F1D7D9C14>107
D<12E0B3AB031D7D9C0A>I<38E3F03F39EFF8FF80D8FFFD13C039F81F81E038F00F00EA
E00EAD1B127D9122>I<EAE3E0EAEFF0EAFFF8EAF83CEAF01C12E0AD0E127D9115>I<EA03
F0EA0FFC487EEA3C0F38780780EA700338E001C0A5EAF00300701380EA7807383C0F00EA
1FFE6C5AEA03F012127F9115>I<EAE3E0EAEFF8EAFFFCEAF83EEAE01E130E1307A5130F
130EEAF01EEAF87CEAFFF8EAEFF0EAE3E0EAE000A8101A7D9115>I<EAE38012E712EFEA
FC005A5AA25AAB09127D910E>114 D<EA1FC0EA3FF0127FEAF030EAE000A27E127FEA3F
C0EA1FE0EA01F0EA0038A21280EAF078EAFFF0EA7FE0EA1FC00D127F9110>I<121CA6EA
FFE0A2EA1C00AC1320EA1FF0120FEA07C00C187F970F>I<EAE01CAE137CEAFFFCEA7FDC
EA3F1C0E127D9115>I<EAE007A212F0EA700EA2EA381CA3EA1C38A3EA0E70A2EA066012
0713E0EA03C0A210127F9113>I<3870038038780700EA3C0EEA1C1C120E6C5AEA03F06C
5A5B7F487EEA0738EA0618EA0E1C487E487E3870038000F013C01212809113>120
D E /Fd 10 121 df<387FFFC0B512E0A26C13C013047D901A>45
D<EA03FCEA0FFF003F13C0383C03E0EA78001470A2C7FCA214E01301EB07C03803FF8014
0014C0380003E01300147014781438A2126012F01478481370007013E0EA7E03383FFFC0
000F1300EA01FC151E7E9D1A>51 D<EB0F80131F133BA2137313F313E3EA01C312031383
1207EA0F03120E121E123C1238127812F0B512FEA338000380A6EB3FF8EB7FFCEB3FF817
1E7F9D1A>I<EA0FFE383FFF804813C0EA7C07EA700100F013E0EAE000B1EAF001A20070
13C0EA7C07EA7FFF6C1380380FFE00131E7D9D1A>79 D<EB07E0EB1FF0EB3FF8EB7878EB
F030EBE000A4387FFFF0B5FCA23800E000AF383FFF804813C06C1380151E7F9D1A>102
D<3801F87C3807FFFE5A381E078C381C0380383801C0A5381C0380EA1E07381FFF005BEA
39F80038C7FCA27E381FFF8014E04813F83878007C0070131C48130EA40070131C007813
3C003E13F8381FFFF0000713C00001130017217F941A>I<EA01F0EA07FCEA1FFF383E0F
80EA3C07387803C0EA700138E000E0A6EAF001007013C0EA7803383C0780EA3E0F381FFF
00EA07FCEA01F013157D941A>111 D<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB00
38120E141CA7000F13381478EB80F0EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC048
7E6C5A16207F941A>I<387F81F838FF8FFC387F9FFE3803FE1EEBF80CEBE000A25B5BAA
EA7FFFB5FC7E17157F941A>114 D<387FC7F8EBCFFCEBC7F8380703C038038380EBC700
EA01EFEA00FE137C13781338137C13EE120113C738038380000713C0EA0F01387FC7FC00
FF13FE007F13FC17157F941A>120 D E /Fe 64 123 df<90381F83E09038F06E303901
C07878380380F8903800F03048EB7000A7B612803907007000B2383FE3FF1D20809F1B>
11 D<EB3FE013E0EA01C1EA0381EA0700A8B5FCEA0700B2383FE7FC1620809F19>13
D<D807801318EA1840486C5B011813E03960170360903808FCC000E0EB0180A24AC7FC14
06A25C00605B131000305B495AEA1840380780C03900018078EC8184903803030281EB06
07EB0C0691380E008013181330A2136013C0A23A01800601003803000714030006140248
EB01840004EB007821257EA126>37 D<13401380EA01005A12061204120C5AA212381230
A212701260A412E0AC1260A412701230A212381218A27E120412067E7EEA008013400A2E
7BA112>40 D<7E12407E12307E1208120C7EA212077EA213801201A413C0AC1380A41203
1300A25A1206A25A120812185A12205A5A0A2E7EA112>I<127012F012F8A212781208A3
1210A31220A21240050E7C840D>44 D<EAFFF0A20C02808A0F>I<127012F8A312700505
7C840D>I<144014C0EB0180A3EB0300A31306A25BA35BA35BA25BA35BA3485AA348C7FC
A21206A35AA35AA25AA35AA35AA2122D7EA117>I<EA03F0EA0E1C487EEA1806EA380738
700380A400F013C0AD00701380A3EA780700381300EA1806EA1C0E6C5AEA03F0121F7E9D
17>I<13801203120F12F31203B3A6EA07C0EAFFFE0F1E7C9D17>I<EA03F0EA0C1CEA100E
487E00401380128000F013C0EAF803A3EA200712001480A2EB0F00130E5B5B5B13605B48
5A48C7FC000613405A5A00101380EA3FFF5AB5FC121E7E9D17>I<EA03F0EA0C1CEA100E
EA200F007813801307A2EA380F12001400A2131E131C1370EA07F0EA003C130E130FEB07
80A214C0122012F8A300F013801240EB0F00EA200EEA183CEA07F0121F7E9D17>I<1306
A2130EA2131E132EA2134E138EA2EA010E1202A212041208A212101220A2124012C0B512
F038000E00A7EBFFE0141E7F9D17>I<EA1803EA1FFE5B5B13E00010C7FCA6EA11F0EA16
1CEA180EEA10071480EA0003A214C0A3127012F0A200E013801240EB0700EA20066C5AEA
0838EA07E0121F7E9D17>I<137CEA0182EA0701380E0380EA0C0712183838030090C7FC
12781270A2EAF1F0EAF21CEAF406EAF807EB0380A200F013C0A51270A214801238EB0700
1218EA0C0E6C5AEA01F0121F7E9D17>I<1240387FFFE014C0A23840008038800100A213
02485AA25B5BA25BA21360A213E05B1201A41203A76C5A131F7E9D17>I<EA03F0EA0C0C
EA1006EA3003382001801260A3127038780300123EEA3F06EA1FC8EA0FF0EA03F8487EEA
0C7EEA103F38300F80EA6007EB01C012C01300A31480EA600100201300EA1002EA0C0CEA
03F0121F7E9D17>I<EA03F0EA0E18487E487E13071270EB038012F0A214C0A5EA7007A2
1238EA180BEA0E13EA03E338000380A3EB07001230EA7806130EEA700CEA2018EA1070EA
0FC0121F7E9D17>I<127012F8A312701200AA127012F8A3127005147C930D>I<EA0FE0EA
103CEA601EEA400EEAE00F12F0A21260EA001E131C13381370136013C01380A2EA0100A6
C7FCA5EA0380EA07C0A3EA038010207E9F15>63 D<5B497EA3497EA3EB09E0A3EB10F0A3
EB2078A3497EA2EBC03EEB801EA248B5FCEB000FA20002EB0780A348EB03C0A2120C001E
14E039FF801FFE1F207F9F22>65 D<B512E0380F0078141EA2801580A515005C141E147C
EBFFF0EB007C141FEC0F80EC07C0140315E0A515C014071580EC0F00143EB512F01B1F7E
9E20>I<90380FE0109038381C309038E002703803C00139078000F048C71270121E1530
5A1510127C127800F81400A91278007C1410123CA26C1420A27E6C6C13406C6C13803900
E00300EB380CEB0FF01C217E9F21>I<B512F83807801EEC0780EC03C0EC01E0EC00F015
701578A2153CA3153EA8153CA2157C1578A215F0EC01E0EC03C0EC0780EC1E00B512F81F
1F7F9E23>I<B61280380F000F14031401140015C01540A314401500A214C0130113FF13
0113001440A3EC0020A31540A315C01401EC0380140FB6FC1B1F7E9E1F>I<B612803807
80071401A2140015C01540A4EC2000A3146014E013FF138014601420A391C7FCA87FEAFF
FE1A1F7F9E1E>I<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF81D1F7E9E22>
72 D<EAFFF0EA0F00B3ABEAFFF00C1F7E9E10>I<39FFF007FC390F0003E0EC0180150014
025C5C5C5C5C5C49C7FC5B497E130FEB13C0EB21E01341EB80F0EB0078A28080A280EC07
80A2EC03C015E015F039FFF01FFE1F1F7E9E23>75 D<EAFFF8EA0F8090C7FCB21402A414
061404A2140C141C147CB512FC171F7E9E1C>I<B46CEB07FE000715C0A2D805C0130BA2
D804E01313A301701323A26D1343A36D1383A290380E0103A3EB0702A3EB0384A2EB01C8
A3EB00F0A21460121FD8FFE0EB7FFE271F7F9E2A>I<B4EB0FF8390F8003E0EC0080EA0B
C0EA09E0A2EA08F01378A27F7FA27FEB0780A2EB03C0EB01E0A2EB00F01478A2143C141E
A2140F1407A214031401123E38FF80001D1F7E9E22>I<EB1FE0EB70383801C00E48487E
39070003804814C0001EEB01E048EB00F0A2007C14F8A20078147800F8147CA900781478
007C14F8A2003C14F0003E1301001E14E06CEB03C06C148039038007003801E01E380070
38EB1FE01E217E9F23>I<B512E0380F007C141E80EC0780A215C0A41580A2EC0F00141E
147CEBFFE090C8FCAEEAFFF01A1F7E9E1F>I<B57E380F00F0143C8080A21580A41500A2
141E5C14F0EBFF80EB01C0EB0070A280143CA3143EA31504143F141FEC0F0839FFF00788
C7EA01F01E207E9E21>82 D<3803F040380C0CC0EA1803EA3001EA6000A212E01440A36C
13007E127CEA7F80EA3FF86CB4FC00071380C613C0EB1FE013031301EB00F014707EA46C
136014E06C13C038F8018038C60300EA81FC14217E9F19>I<007FB512E038780F010060
EB006000401420A200C0143000801410A400001400B3497E3803FFFC1C1F7E9E21>I<39
FFF00FF8390F0003E0EC0080B3A46CEB01001380120314026C6C5A6C6C5AEB3830EB0FC0
1D207E9E22>I<EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E0E12381278
00F01310A3131E127838386720380F83C014147E9317>97 D<121C12FC121CAA137CEA1D
87381E0180EB00C0001C13E01470A21478A6147014F014E0001E13C0381A018038198700
EA107C15207E9F19>I<EA01FCEA0706EA1C0F123813060078C7FC127012F0A612701278
00381380A2381C0100EA0706EA01F811147F9314>I<EB01C0130F1301AAEA01F1EA070D
EA0C03EA180112381278127012F0A61270A21238EA1803120CEA070D3801F1F815207F9F
19>I<EA03F0EA0E1C487E487EA21270EB038012F0A2B5FC00F0C7FCA31270A26C1380A2
381C0100EA0706EA01F811147F9314>I<137CEA01C6EA030F1207EA0E061300A7EAFFF0
EA0E00B2EA7FE01020809F0E>I<14E03803E330EA0E3CEA1C1C38380E00EA780FA5EA38
0E6C5AEA1E38EA33E00020C7FCA21230A2EA3FFE381FFF8014C0383001E0386000704813
30A4006013606C13C0381C03803803FC00141F7F9417>I<121C12FC121CAA137C1386EA
1D03001E1380A2121CAE38FF8FF014207E9F19>I<1238127CA31238C7FCA6121C12FC12
1CB1EAFF80091F7F9E0C>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B5B136013
E0EA1DF0EA1E70EA1C38133C131C7F130F7F148014C038FF9FF014207E9F18>107
D<121C12FC121CB3ABEAFF8009207F9F0C>I<391C3E03E039FCC30C30391D039038391E
01E01CA2001C13C0AE3AFF8FF8FF8021147E9326>I<EA1C7CEAFC86EA1D03001E1380A2
121CAE38FF8FF014147E9319>I<EA01F8EA070E381C0380383801C0A2387000E0A200F0
13F0A6007013E0A2383801C0A2381C038038070E00EA01F814147F9317>I<EA1C7CEAFD
87381E018014C0381C00E014F014701478A6147014F014E0381E01C0EB0380381D8700EA
1C7C90C7FCA8B47E151D7E9319>I<3801F04038070CC0EA0E02EA1C03EA380112781270
12F0A6127012781238EA1C03EA0C05EA0709EA01F1EA0001A8EB0FF8151D7F9318>I<EA
1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E147E9312>I<EA0FC8EA3038EA6018EAC0
08A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA800E130612C0A21304EAE00CEAD818EA
87E00F147F9312>I<1202A31206A2120EA2123EEAFFF8EA0E00AB1304A5EA07081203EA
01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE1307120CEA061B3803E3F014147E9319>
I<38FF83F8383E00E0001C13C06C1380A338070100A21383EA0382A2EA01C4A213E4EA00
E8A21370A3132015147F9318>I<39FF9FE1FC393C078070391C030060EC8020000E1440
A214C0D80704138014E0A239038861001471A23801D032143A143E3800E01CA2EB6018EB
40081E147F9321>I<38FF87F8381E03C0380E0180EB0300EA0702EA0384EA01C813D8EA
00F01370137813F8139CEA010E1202EA060738040380000C13C0003C13E038FE07FC1614
7F9318>I<38FF83F8383E00E0001C13C06C1380A338070100A21383EA0382A2EA01C4A2
13E4EA00E8A21370A31320A25BA3EAF080A200F1C7FC1262123C151D7F9318>I<EA7FFF
EA700E1260EA401C133813781370EA00E0120113C0EA038012071301120E121EEA1C03EA
3802EA7006130EEAFFFE10147F9314>I E /Ff 30 123 df<14E0A2497EA3497EA2EB06
FCA2EB0EFEEB0C7EA2497EA201307F141F01707FEB600FA2496C7E90B5FC4880EB800300
0380EB0001A200066D7EA2000E803AFFE00FFFE0A2231F7E9E28>65
D<903807FC0290383FFF0E9038FE03DE3903F000FE4848133E4848131E485A48C7120EA2
481406127EA200FE1400A7127E1506127F7E150C6C7E6C6C13186C6C13386C6C13703900
FE01C090383FFF80903807FC001F1F7D9E26>67 D<B5FCA2EA07E0B3A9B5FCA2101F7E9E
14>73 D<B57EA2D807E0C7FCB115C0A31401A3EC0380A2140F141FB6FCA21A1F7E9E1F>
76 D<D8FFE0EC3FF86D147F00071600D806F814DFA3017CEB019FA26DEB031FA26D1306
A290380F800CA2903807C018A3903803E030A2903801F060A2903800F8C0A2EC7D80A2EC
3F00A3141ED8FFF0903803FFF8140C2D1F7E9E32>I<D8FFE0EBFFF07F0007EC06007FEA
06FC137E7F1480131FEB0FC0EB07E0EB03F0EB01F814FC1300147E143FEC1F8615C6EC0F
E61407EC03F6EC01FE1400A2157E153E151E150ED8FFF01306A2241F7E9E29>I<B512FE
ECFF803907E00FE0EC03F0EC01F8A215FCA515F8A2EC03F0EC0FE090B51280ECFE0001E0
C7FCACB5FCA21E1F7E9E24>80 D<B512FCECFF803907E00FE0EC03F081140181A45D1403
5DEC0FE090B5128002FCC7FCEBE03FEC0F8081140781A381A31630EC03F802011360B538
00FFC0ED3F80241F7E9E27>82 D<3803FC08380FFF38381E03F8EA3800481378143812F0
1418A26C13007EEA7FC013FE383FFF806C13C06C13E06C13F0C613F81307EB00FC147C14
3C12C0A36C1338147800F8137038FE01E038EFFFC000811300161F7D9E1D>I<EA07FC38
1FFF80383F07C0EB03E0EB01F0A2120C1200133FEA07FDEA1F81EA3E01127C12F8A3EAFC
02EA7E0C383FF87E380FE03E17147F9319>97 D<B4FCA2121FAAEB1FC0EB7FF0EBE0F8EB
807CEB007E143EA2143FA6143EA2147C1380381EC1F8381C7FE038181F8018207E9F1D>
I<EA01FE3807FF80381F0FC0123EA2127CEB030000FCC7FCA6127C127E003E1360003F13
C0EA1F813807FF00EA01FC13147E9317>I<EB07F8A21300AAEA01F8EA07FEEA1F83EA3E
01EA7E00127CA212FCA6127CA2127EEA3E01EA1F07380FFEFFEA03F818207E9F1D>I<EA
01FE3807FF80380F83C0381E01E0383E00F05A14F812FCB5FCA200FCC7FCA3127CA26C13
18121E380F80703807FFE0C6138015147F9318>I<3803FC3C380FFFFE381E079E383C03
DE007C13E0A5003C13C0381E0780381FFF00EA13FC0030C7FCA21238383FFF806C13F06C
13F84813FC3878007C0070133E00F0131EA30078133CA2383F01F8380FFFE00001130017
1E7F931A>103 D<B4FCA2121FAAEB0FC0EB3FE0EB61F0EBC0F813801300AD38FFE7FFA2
18207D9F1D>I<121C123E127FA3123E121CC7FCA6B4FCA2121FB0EAFFE0A20B217EA00E>
I<B4FCA2121FAAEB01FEA2EB00F014C0EB0380EB0700130C5B137C13FC139E130F001E13
80EB07C01303EB01E014F0EB00F838FFC3FFA218207E9F1C>107
D<B4FCA2121FB3AAEAFFE0A20B207E9F0E>I<3AFE0FE03F8090391FF07FC03A1E70F9C3
E09039407D01F0EB807E121FEB007CAC3AFFE3FF8FFEA227147D932C>I<38FE0FC0EB3F
E0381E61F0EBC0F81380EA1F00AD38FFE7FFA218147D931D>I<48B4FC000713C0381F83
F0383E00F8A248137CA200FC137EA6007C137CA26C13F8A2381F83F03807FFC000011300
17147F931A>I<38FF1FC0EB7FF0381FE1F8EB80FCEB007EA2143E143FA6143E147E147C
EB80FCEBC1F8EB7FE0EB1F8090C7FCA7EAFFE0A2181D7E931D>I<EAFE3EEB7F80381ECF
C0138FA2121FEB030090C7FCABEAFFF0A212147E9316>114 D<EA0FE6EA3FFEEA701EEA
600EEAE006A2EAF800EAFFC0EA7FF8EA3FFCEA1FFE1203EA001FEAC007A212E0EAF006EA
F81EEAFFFCEAC7F010147E9315>I<1203A45AA25AA2123FEAFFFCA2EA1F00AA1306A5EA
0F8CEA07F8EA03F00F1D7F9C14>I<38FF07F8A2EA1F00AD1301A2EA0F063807FCFF6C5A
18147D931D>I<3AFFC7FE1FE0A23A1F00F0030014F8D80F801306A29038C1BC0E000714
0CEBC3BE3903E31E18A29038F60F380001143001FE13B03900FC07E0A2EBF80301785BA2
903830018023147F9326>119 D<39FFE07F80A2391F001C00380F8018A26C6C5AA26C6C
5AA2EBF0E000015B13F900005B13FF6DC7FCA2133EA2131CA21318A2EA783012FC5BEAC0
E0EAE1C0EA7F80001EC8FC191D7F931C>121 D<383FFFE0A2383C07C038380F80EA701F
38603F00133E5BC65A1201485AEBE060EA07C0EA0F80001F13E0383F00C0EA3E01EA7C03
B5FCA213147F9317>I E /Fg 1 106 df<13E0A21201EA00C01300A9121E1223EA4380A2
1283EA8700A21207120EA35AA3EA38201340127013801230EA3100121E0B227EA111>
105 D E /Fh 47 122 df<90380FF83F90397FFDFFC03A01F81FE3E03903E03F87EA07C0
D80F801307ED03C06EC7FCA6B612FCA2260F801FC7FCB2397FF0FFF0A223237FA221>11
D<EB0FF0EB7FFC3801F80E3803E01F48485AEA0F80A2141E140C91C7FCA4B6FCA2380F80
1FB2397FF0FFE0A21B237FA21F>I<EAFFFCA40E047F8C13>45 D<1238127C12FEA3127C
123807077C8610>I<13181378EA01F812FFA21201B3A7387FFFE0A213207C9F1C>49
D<EA03FCEA0FFF383C1FC0387007E0007C13F0EAFE0314F8A21301127CEA3803120014F0
A2EB07E014C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA0700000E1338380FFF
F05A5A5AB5FCA215207D9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F
0314F0120014E0EB07C0EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13FE12
7EB4FCA314FCEA7E01007813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E01301
1303A21307130F131FA21337137713E7EA01C71387EA03071207120E120C121812381270
12E0B6FCA2380007E0A790B5FCA218207E9F1C>I<00301320383E01E0383FFFC0148014
005B13F8EA33C00030C7FCA4EA31FCEA37FF383E0FC0383807E0EA3003000013F0A214F8
A21238127C12FEA200FC13F0A2387007E0003013C0383C1F80380FFF00EA03F815207D9F
1C>I<1470A214F8A3497EA2497EA3EB067FA2010C7F143FA2496C7EA201307F140F0170
7FEB6007A201C07F90B5FC4880EB8001A2D803007F14004880000680A23AFFE007FFF8A2
25227EA12A>65 D<B67E15F03907F001F86E7E157EA2157FA5157E15FE5DEC03F890B55A
A29038F001FCEC007E811680151F16C0A6ED3F80A2ED7F00EC01FEB612F815C022227EA1
28>I<D903FE138090381FFF819038FF01E33901F8003FD803E0131F4848130F48481307
121F48C71203A2481401127EA200FE91C7FCA8127EED0180127F7E15036C6C1400120F6C
6C1306D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21227DA128>I<B67E15F0
3907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316F8A916F0A3ED07E0A2ED0F
C0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B612F8A23807F001EC007815
381518151CA2150CA21418A21500A214381478EBFFF8A2EBF07814381418A491C7FCA8B5
12C0A21E227EA123>70 D<B53883FFFEA23A07F0001FC0AD90B6FCA29038F0001FAFB538
83FFFEA227227EA12C>72 D<B51280A23807F000B3ACB51280A211227EA115>I<B512C0
A2D807F0C7FCB31518A41538A21570A215F014011407B6FCA21D227EA122>76
D<D8FFF0EC0FFF6D5C000716E0D806FC1437A3017E1467A26D14C7A290391F800187A290
390FC00307A3903807E006A2903803F00CA2903801F818A3903800FC30A2EC7E60A2EC3F
C0A2EC1F80A3EC0F00D8FFF091B5FC140630227EA135>I<D8FFF8EB1FFE7F0007EC00C0
7FEA06FF6D7E6D7E6D7E130F806D7E6D7E6D7E130080EC7F80EC3FC0EC1FE0EC0FF01407
15F8EC03FCEC01FEEC00FF157FA2153F151F150F15071503A2D8FFF01301150027227EA1
2C>I<EB07FC90383FFF809038FC07E03903F001F848486C7E4848137E48487FA248C7EA
1F80A24815C0007E140FA200FE15E0A9007E15C0007F141FA26C15806D133F001F15006C
6C137E6C6C5B6C6C485A3900FC07E090383FFF80D907FCC7FC23227DA12A>I<B6FC15E0
3907F007F0EC01FC1400157EA2157FA5157EA215FC1401EC07F090B512E0150001F0C7FC
ADB57EA220227EA126>I<B512FEECFFC03907F007F0EC01F86E7E157E157FA6157E5D4A
5AEC07F090B512C05D9038F00FE06E7E6E7E6E7EA81606EC00FEEDFF0CB538803FF8ED0F
F027227EA12A>82 D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F8
1306A27E1400B4FC13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F
143FA200C0131FA36C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<00
7FB61280A2397E03F80F00781407007014030060140100E015C0A200C01400A400001500
B3A248B512F0A222227EA127>I<EA0FFC383FFF80387E07C0EB03E0130114F0123C1200
A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B
>97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497EEC0F80A215C0A81580141F0180
1300EBC03E381EE07C381C3FF838180FC01A237EA21F>I<EBFF80000713E0380F83F0EA
1F03123E127E387C01E090C7FC12FCA6127C127EA2003E13186C1330380FC0603807FFC0
C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807FFBE380F81FE381F007E003E13
3E127E127C12FCA8127CA26C137E6C13FE380F83BE3907FF3FC0EA01FC1A237EA21F>I<
13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127C
A2127E003E13186C1330380FC0703803FFC0C6130015167E951A>I<EB1FC0EB7FE0EBF1
F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0B2EA3FFCA2142380A211>I<38
01FE0F3907FFBF80380F87C7381F03E7391E01E000003E7FA5001E5BEA1F03380F87C0EB
FF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48EB0F8048
1307A40078EB0F006C131E001F137C6CB45A000113C019217F951C>I<B4FCA2121FABEB
07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<121C123E12
7FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA310>I<B4FCA2121FABECFF80A2
EC38001460495A495A49C7FC130E5B137E13FF13CFEB0F806D7E6D7E1301806D7E147C14
3C39FFE0FFC0A21A237EA21E>107 D<B4FCA2121FB3ADEAFFE0A20B237EA210>I<3AFF07
F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0FFE0FFE0
A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A
167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137EA7007C13
7CA26C13F8381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF838
1FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC0
90C8FCA8EAFFE0A21A207E951F>I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7
FCADEAFFF0A213167E9517>114 D<EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7
FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312E0A238F00700EAFC0EEAEFFC
EAC7F011167E9516>I<487EA41203A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB83
00EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA2381F003EAF147E14FE380F81BE39
07FF3FC0EA01FC1A167E951F>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C
13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA21B167F951E>
I<3AFFE3FF07F8A23A1F007800C09038807C01000F1580A23A07C07E030014DE5D3903E1
DF06148FD801F1138CEBF307A2D800FF13D8EBFE0315F890387C01F0A2013C5BEB3800A2
25167F9528>I<39FFE07FC0A2390F801C006C6C5A6C6C5AEBF0606C6C5A3800F980137F
6DC7FC7F80497E1337EB63E0EBC1F03801C0F848487E3807007E000E133E39FF80FFE0A2
1B167F951E>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C13E000035BA26C
6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2130CA25B1278EAFC3813305BEA
69C0EA7F80001FC8FC1B207F951E>I E /Fi 1 16 df<EA03F0EA0FFC487E487E481380
A2B512C0A86C1380A26C13006C5A6C5AEA03F012147D9519>15 D
E /Fj 61 123 df<EB7E1F3901C1B180390303E3C0000713C3000EEBC180903801C000A6
B512FC380E01C0B0387F87FC1A1D809C18>11 D<137E3801C180EA0301380703C0120EEB
018090C7FCA5B512C0EA0E01B0387F87F8151D809C17>I<1380EA0100120212065AA25A
A25AA35AA412E0AC1260A47EA37EA27EA27E12027EEA0080092A7C9E10>40
D<7E12407E12307EA27EA27EA37EA41380AC1300A41206A35AA25AA25A12205A5A092A7E
9E10>I<1306ADB612E0A2D80006C7FCAD1B1C7E9720>43 D<126012F0A212701210A412
20A212401280040C7C830C>I<EAFFE0A20B0280890E>I<126012F0A2126004047C830C>
I<EA03C0EA0C30EA1818EA300CA2EA700EEA6006A2EAE007ADEA6006A2EA700EEA300CA2
EA1818EA0C30EA07E0101D7E9B15>48 D<5A1207123F12C71207B3A5EAFFF80D1C7C9B15
>I<EA07C0EA1830EA201CEA400C130EEAF00F12F81307A21270EA000F130EA2131CA213
381370136013C0EA0180EA0300EA0601120C1218EA1002EA3FFE127F12FF101C7E9B15>
I<EA07E0EA1830EA201CA2EA781E130E131E1238EA001CA2131813301360EA07C0EA0030
131CA2130E130FA2127012F8A3EAF00EEA401C1220EA1830EA07C0101D7E9B15>I<130C
A2131C133CA2135C13DC139CEA011C120312021204120C1208121012301220124012C0B5
12C038001C00A73801FFC0121C7F9B15>I<EA300CEA3FF813F013C0EA2000A6EA23E0EA
2C30EA3018131CEA200E1200130FA3126012F0A3EA800EEA401E131CEA2038EA1870EA07
C0101D7E9B15>I<13F0EA030CEA0404EA0C0EEA181E1230130CEA7000A21260EAE3E0EA
E430EAE818EAF00C130EEAE0061307A51260A2EA7006EA300E130CEA1818EA0C30EA03E0
101D7E9B15>I<1240387FFF801400A2EA4002485AA25B485AA25B1360134013C0A21201
5BA21203A41207A66CC7FC111D7E9B15>I<EA03E0EA0C30EA1008EA200C13061260A212
70A2EA7C0CEA3E18EA3FB0EA1FE0EA07F013F8EA18FCEA307EEA601E130FEAC0071303A4
EA60021304EA300CEA1C10EA07E0101D7E9B15>I<EA03C0EA0C30EA1818EA300C1270EA
600EEAE006A21307A51260EA700F1230EA1817EA0C27EA07C7EA0006A2130EEA300C1278
13181270EA2030EA10C0EA0F80101D7E9B15>I<126012F0A212601200AA126012F0A212
701210A41220A212401280041A7C910C>59 D<1306A3130FA3EB1780A2EB37C01323A2EB
43E01341A2EB80F0A338010078A2EBFFF83802003CA3487FA2000C131F80001E5BB4EBFF
F01C1D7F9C1F>65 D<B512C0380F00788080140E140FA4140E141E5C14F8EBFFF0EB003C
8080801580A5EC0F00A2141E1478B512E0191C7F9B1D>I<90381F8080EBE06138018019
38070007000E13035A14015A00781300A2127000F01400A8007014801278A212386CEB01
00A26C13026C5B380180083800E030EB1FC0191E7E9C1E>I<B512FC380F003C140C1404
A214061402A213011400A35B13FF13037FA3140113001402A31406A2140C143CB512FC18
1C7E9B1C>69 D<B512F8380F007814181408A2140C1404A213011400A35B13FF13037FA4
90C7FCA8EAFFF8161C7E9B1B>I<EAFFF0EA0F00B3A8EAFFF00C1C7F9B0F>73
D<EAFFF8EA0F8090C7FCB01408A31418A2141014301470EB01F0B5FC151C7E9B1A>76
D<B46CEBFF80000FECF800A2390BC00178A33809E002A23808F004A3EB7808A3EB3C10A3
EB1E20A3EB0F40A2EB0780A3EB0300121C3AFF8307FF80211C7E9B26>I<EB3F80EBE0E0
3803803848487E000E7F487F003C148000381303007814C0A20070130100F014E0A80070
14C000781303A200381480003C1307001C14006C130E6C5B6C6C5A3800E0E0EB3F801B1E
7E9C20>79 D<B51280380F00E01478143C141C141EA5141C143C147814E0EBFF8090C7FC
ACEAFFF0171C7E9B1C>I<B5FC380F01E0EB007880141C141EA4141C143C5CEB01E001FF
C7FCEB01E0EB0070147880A61510A2141CA239FFF00E20C7EA03C01C1D7E9B1F>82
D<3807E080EA1C19EA30051303EA600112E01300A36C13007E127CEA7FC0EA3FF8EA1FFE
EA07FFC61380130FEB07C0130313011280A300C01380A238E00300EAD002EACC0CEA83F8
121E7E9C17>I<007FB512C038700F010060130000401440A200C014201280A300001400
B1497E3803FFFC1B1C7F9B1E>I<39FFF01FF0390F000380EC0100B3A26C130213800003
5BEA01C03800E018EB7060EB0F801C1D7F9B1F>I<3AFFE1FFC0FF3A1F003E003C001E01
3C13186C6D1310A32607801F1320A33A03C0278040A33A01E043C080A33A00F081E100A3
9038F900F3017913F2A2017E137E013E137CA2013C133C011C1338A20118131801081310
281D7F9B2B>87 D<12FEA212C0B3B312FEA207297C9E0C>91 D<12FEA21206B3B312FEA2
0729809E0C>93 D<EA1FC0EA3070EA78387F12301200A2EA01FCEA0F1C12381270126000
E01340A3EA603C38304E80381F870012127E9115>97 D<12FC121CAA137CEA1D87381E01
80381C00C014E014601470A6146014E014C0381E018038190700EA10FC141D7F9C17>I<
EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260EA70021230EA1804EA0C18EA03E0
0F127F9112>I<EB1F801303AAEA03F3EA0E0BEA1807EA30031270126012E0A612601270
1230EA1807EA0E1B3803E3F0141D7F9C17>I<EA07E0EA0C30EA1818EA300CEA700EEA60
0612E0EAFFFEEAE000A41260EA70021230EA1804EA0C18EA03E00F127F9112>I<13F8EA
018CEA071E1206EA0E0C1300A6EAFFE0EA0E00B0EA7FE00F1D809C0D>I<EB03803807C4
C0EA1C783838388038301800EA701CA4EA3018EA38386C5AEA27C00020C7FCA21230EA3F
F86CB4FC1480EA2003386001C0EAC000A33860018038300300EA1C0EEA07F8121C7F9215
>I<12FC121CAA137C1387EA1D03001E1380121CAD38FF9FF0141D7F9C17>I<1218123CA2
1218C7FCA712FC121CB0EAFF80091D7F9C0C>I<12FC121CAAEB0FE0EB0780EB06005B13
105B5B13E0121DEA1E70EA1C781338133C131C7F130F148038FF9FE0131D7F9C16>107
D<12FC121CB3A9EAFF80091D7F9C0C>I<39FC7E07E0391C838838391D019018001EEBE0
1C001C13C0AD3AFF8FF8FF8021127F9124>I<EAFC7CEA1C87EA1D03001E1380121CAD38
FF9FF014127F9117>I<EA03F0EA0E1CEA1806487E00701380EA600100E013C0A6006013
80EA700300301300EA1806EA0E1CEA03F012127F9115>I<EAFC7CEA1D87381E0180001C
13C0EB00E0A21470A614E0A2EB01C0001E1380381D0700EA1CFC90C7FCA7B47E141A7F91
17>I<3803E080EA0E19EA1805EA3807EA7003A212E0A61270A2EA38071218EA0E1BEA03
E3EA0003A7EB1FF0141A7F9116>I<EAFCE0EA1D38EA1E78A2EA1C301300ACEAFFC00D12
7F9110>I<EA1F90EA2070EA4030EAC010A212E0EAF800EA7F80EA3FE0EA0FF0EA00F8EA
8038131812C0A2EAE010EAD060EA8FC00D127F9110>I<1204A4120CA2121C123CEAFFE0
EA1C00A91310A5120CEA0E20EA03C00C1A7F9910>I<38FC1F80EA1C03AD1307120CEA0E
1B3803E3F014127F9117>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2
EA0388A213C8EA01D0A2EA00E0A3134013127F9116>I<39FF3FC7E0393C0703C0001CEB
01801500130B000E1382A21311000713C4A213203803A0E8A2EBC06800011370A2EB8030
000013201B127F911E>I<38FF0FE0381E0700EA1C06EA0E046C5AEA039013B0EA01E012
007F12011338EA021C1204EA0C0E487E003C138038FE1FF014127F9116>I<38FF07E038
3C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA00E0A31340A2
5BA212F000F1C7FC12F312661238131A7F9116>I<EA7FFCEA70381260EA407013F013E0
EA41C012031380EA0700EA0F04120E121CEA3C0CEA380812701338EAFFF80E127F9112>
I E /Fk 6 55 df<120C121C12EC120CAFEAFFC00A137D9211>49
D<121FEA60C01360EAF07013301260EA0070A2136013C012011380EA02005AEA08101210
EA2020EA7FE012FF0C137E9211>I<EA0FC0EA3070EA7038A31200133013E0EA0FC0EA00
7013381318131C126012F01318EAE038EA6070EA1FC00E137F9211>I<136013E0A2EA01
6012021206120C120812101220126012C0EAFFFCEA0060A5EA03FC0E137F9211>I<EA60
60EA7FC01380EA44001240A3124FEA70C0EA40E0EA00601370A212E0A21360EA40E0EA21
C0EA1F000C137E9211>I<EA07C0EA0C20EA10701220EA6000A25A12CFEAD0C0EAE060EA
C0201330A31240EA6020EA2060EA10C0EA0F000C137E9211>I E
/Fl 6 55 df<1206120E12FE120EB1EAFFE00B157D9412>49 D<EA0F80EA30E0EA4070EA
8030EAC03812E0124012001370A2136013C0EA0180EA03001206EA0C081208EA1018EA3F
F0127F12FF0D157E9412>I<EA0FE0EA3030EA6018EA701CA21200131813381360EA07E0
EA00301318130C130EA212E0A2EAC00CEA4018EA3030EA0FE00F157F9412>I<1330A213
7013F012011370120212041208121812101220124012C0EAFFFEEA0070A5EA03FE0F157F
9412>I<EA6030EA7FE013C0EA44001240A4EA4F80EA70E0EA4070EA00301338A2124012
E0A2EA8030EA4060EA20C0EA1F000D157E9412>I<EA01F0EA0608EA080CEA181C1230EA
7000126012E0EAE3E0EAEC30EAF018130CEAE00EA31260A2EA300C1318EA1830EA07C00F
157F9412>I E /Fm 54 122 df<1480EB010013025B5B5B13305B5BA2485A48C7FCA212
06A2120E120C121C1218A212381230A21270A21260A212E0A35AAD12401260A212201230
12107E113278A414>40 D<13087F130613021303A27F1480AD1303A31400A25BA21306A2
130E130CA2131C131813381330A25BA25B485AA248C7FC120612045A5A5A5A5A113280A4
14>I<120E121EA41202A21204A21208A21210122012401280070F7D840F>44
D<EAFFF0A213E00C037C8B11>I<127012F8A212F012E005057A840F>I<EB0F80EB30C0EB
E0603801C070EA038013005A5A120E121EA2001C13F0123CA3387801E0A438F003C0A314
80EAE007A214005B130E5BA25BEA60706C5A001FC7FC14227AA019>48
D<13011303A21306131E132EEA03CEEA001CA41338A41370A413E0A4EA01C0A4EA0380A4
1207EAFFFC10217AA019>I<EB0FC0EB1060EB6038EB8018141CEA01003802201E131012
04A33808203CA2EB40381478EB80F0380700E0380001C0EB030013061318132013C048C7
FC1202481310481330481320481360385F80C0EA63FF0040138038807F00131E17227CA0
19>I<EB0FC0EB3070EBC0183801001C120248130CEB401CEA0820A3EB403813C0380700
70C71260EB01C0EB070013FC1307EB0380A2EB01C0A31303126012F01480EAE007008013
00130E5BEA4038EA20F0EA1F8016227BA019>I<14181438A21470A314E0A314C0130114
8013031400A21306A25BA25B1310EB3180EB61C0EB438013831201EA0303380207001204
1208EA3FC7EA403E38800FF038000E00A25BA45BA31330152B7EA019>I<EB4004EB7038
EBFFF014E0EBBF80EB800048C7FCA41202A2133E13C338050180000613C01204000013E0
A6387003C012F0A238E00780008013005B130EEA401C5BEA30E0EA0F8016227BA019>I<
EB03E0EB0C10EB3008EB6038EBC07812013803803048C7FCA2120E121EA2EA1C7CEA3C86
EA3D03007A1380127C387801C0130312F812F0A338E00780A314005B130E5BEA60185BEA
30E0EA0F8015227AA019>I<380278023804FC041207000F1308EB0C18381E0470381803
A03830006000201340006013C000401380EA8001EA000314005B1306130EA25BA2133C13
381378A25BA3485AA312035BA26C5A172279A019>I<EB0FC0EB3060EB4010EB80183801
000848130CA2481318A21410EB8030EBC060EBE0C03803F100EA01FE6C5A7FEA033F3806
1F80380C0FC0EA1803EA3001126013005AA214801301140013021306EA6008EA3030EA0F
C016227BA019>I<1403A25CA25CA25C142FA2EC4F80A21487A2EB01071302A21304A213
08131813101320A290387FFFC0EB40031380EA0100A21202A25AA2120C003CEB07E0B4EB
3FFC1E237DA224>65 D<027F138090390380810090380E00630138132749131F49130E48
5A485A48C7FC481404120E121E5A5D4891C7FCA35AA55A1520A25DA26C5C12704AC7FC6C
130200185B001C5B00061330380381C0D800FEC8FC212479A223>67
D<90B512F090380F003C150E81011EEB0380A2ED01C0A25B16E0A35BA449EB03C0A44848
EB0780A216005D4848130E5D153C153848485B5DEC03804AC7FC000F131CB512F023227D
A125>I<90B6128090380F00071501A2131EA21600A25BA2140192C7FCEB7802A2140614
0EEBFFFCEBF00CA33801E008A21504EC0008485AA25DA248485B15605D1401380F0007B6
5A21227DA121>I<90B6FC90380F000F1503A2131EA21502A25BA214011500EB7802A214
06140EEBFFFCEBF00CA33801E008A391C7FC485AA4485AA4120FEAFFF820227DA120>I<
027F138090390380810090380E00630138132749131F49130E485A485A48C7FC48140412
0E121E5A5D4891C7FCA35AA4EC3FFC48EB01E0A34A5AA27E12704A5A7E0018130F001C13
1300060123C7FC380381C1D800FEC8FC212479A226>I<9039FFF87FFC90390F000780A3
011EEB0F00A449131EA4495BA490B512F89038F00078A348485BA44848485AA44848485A
A4000F130739FFF07FF826227DA124>I<EBFFF8EB0F00A3131EA45BA45BA45BA4485AA4
485AA4485AA4120FEAFFF015227DA113>I<903807FFC09038003C00A35CA45CA4495AA4
495AA4495AA449C7FCA212381278EAF81EA2485AEA40385BEA21E0EA1F801A237CA11A>
I<EBFFFCEB0F8091C7FCA2131EA45BA45BA45BA4485AA21520A248481340A21580A23807
800115005C140F000F133EB512FE1B227DA11F>76 D<D9FF80EB07FC010FEC0F801617A2
0117EC2F00EB13C0164F168F0123149EED011EA215020143495AA21508EB41E00181495A
1520A21540D801015C1580ECE100A23A0200F201E0A214F414F8484A5A14F0A2000C13E0
001EEBC007D8FF80EB7FF82E227DA12C>I<01FFEB0FFC90390F8001E01680ECC0000113
EB0100A2EB11E0A201211302EB20F0A39038407804A3143C01805B143E141EA23901001F
10140FA2EC0790000214A0A2EC03E0A2485C1401A2120C001E6D5AB47E26227DA124>I<
14FE903807838090380C00E0013813704913385B4848131C485A48C7FC48141E121E121C
123CA25AA348143CA31578A25A15F0A2EC01E015C06C1303EC0780007014000078130E00
385B6C5B6C13E038070380D801FCC7FC1F2479A225>I<90B512E090380F0038151E150E
011E1307A449130FA3151E5B153C157815E09038F003C09038FFFE0001F0C7FCA2485AA4
485AA4485AA4120FEAFFF020227DA121>I<90B512C090380F0070153C151C011E130EA2
150FA249131EA3153C4913381570EC01E0EC07809038FFFC00EBF00E80EC0380D801E013
C0A43903C00780A43907800F001501A2EC0702120F39FFF0038CC812F020237DA124>82
D<903801F02090380E0C4090381802C0EB3001136001E0138013C01201A200031400A291
C7FCA27FEA01F813FF6C13E06D7EEB1FF8EB03FCEB007C143C80A30020131CA314180060
1338143000705B5C38C80180D8C607C7FCEA81FC1B247DA21B>I<001FB512F8391E03C0
3800181418123038200780A200401410A2EB0F001280A200001400131EA45BA45BA45BA4
485AA41203B5FC1D2277A123>I<3BFFE07FF00FF83B1F000F8003C0001E913800018017
001602A2001F5DA26C495BA2022F5BA291384F802002475B14875EEB010701030181C7FC
130201041382A201081384158C011013881590132001A013A013C0D8078013C0A201005B
A2000691C8FC140212042D2376A131>87 D<EBF8C0EA0185EA0705380E0380A2121C123C
383807001278A3EAF00EA31410EB1C201270133C38305C40138C380F078014157B9419>
97 D<EA03C0EA1F801203A3EA0700A4120EA45A13F8EA1D0CEA1E0EEA3C06EA3807A213
0F1270A4EAE01EA3133C1338A2EA607013E0EA31C0EA1F0010237BA216>I<137EEA01C1
38030180EA0703EA0E07121C003CC7FC12381278A35AA45B12701302EA300CEA1830EA0F
C011157B9416>I<143CEB03F8EB0038A31470A414E0A4EB01C013F9EA0185EA0705380E
0380A2121C123C383807001278A3EAF00EA31410EB1C201270133C38305C40138C380F07
8016237BA219>I<13F8EA0384EA0E02121C123C1238EA7804EAF018EAFFE0EAF000A25A
A41302A2EA6004EA7018EA3060EA0F800F157A9416>I<143E144714CFEB018F1486EB03
80A3EB0700A5130EEBFFF0EB0E00A35BA55BA55BA55BA45B1201A2EA718012F100F3C7FC
1262123C182D82A20F>I<EB1F18EB30B813E03801C070A2EA03801207EB00E05AA3381E
01C0A4EB0380120E1307EA060BEB1700EA01E7EA0007A2130EA3EA701CEAF0185BEA60E0
EA3F80151F7E9416>I<13F0EA0FE01200A3485AA4485AA448C7FC131FEB2180EBC0C038
0F00E0A2120EA2381C01C0A438380380A3EB070400701308130E1410130600E013203860
03C016237DA219>I<13C0EA01E013C0A2C7FCA8121E12231243A25AA3120EA25AA35AA2
1340EA7080A3EA71001232121C0B217BA00F>I<13F0EA07E01200A3485AA4485AA448C7
FCEB01E0EB0210EB0470380E08F01310EB2060EB4000EA1D80001EC7FCEA1FC0EA1C7048
7EA27F142038703840A3EB188012E038600F0014237DA216>107
D<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45AA45AA3127112E2A412641238
0B237CA20C>I<391C0F80F8392610C10C39476066063987807807A2EB0070A2000EEBE0
0EA44848485AA3ED38202638038013401570168015303A7007003100D83003131E23157B
9428>I<38380F80384C30C0384E4060388E8070EA8F00128EA24813E0A4383801C0A3EB
03840070138814081307EB031012E0386001E016157B941B>I<137EEA01C33803818038
0701C0120E001C13E0123C12381278A338F003C0A21480130700701300130E130CEA3018
EA1870EA07C013157B9419>I<3801C1F0380262183804741C3808780CEB700EA2141EEA
00E0A43801C03CA3147838038070A2EBC0E0EBC1C038072380EB1E0090C7FCA2120EA45A
A3EAFFC0171F7F9419>I<EBF840380184C0EA0705380E0380A2121C123C383807001278
A3EAF00EA45B1270133CEA305C5BEA0F381200A25BA45BA3EA0FFC121F7B9416>I<EA1C
1F38262080384741C0EA87831303EB018090C7FC120EA45AA45AA45A123012157B9415>
I<13FCEA018338020080EA0401EA0C03140090C7FC120F13F0EA07FC6C7EEA003E130F7F
1270EAF006A2EAE004EA4008EA2030EA1FC011157D9414>I<13C01201A4EA0380A4EA07
00EAFFF8EA0700A2120EA45AA45AA31310EA7020A213401380EA3100121E0D1F7C9E10>
I<001E1360002313E0EA4380EB81C01283EA8701A238070380120EA3381C0700A31408EB
0E101218121CEB1E20EA0C263807C3C015157B941A>I<001EEB60E00023EBE0F0384380
E1EB81C000831470D887011330A23907038020120EA3391C070040A31580A2EC0100130F
380C0B02380613843803E0F81C157B9420>119 D<001E133000231370EA438014E01283
EA8700A2380701C0120EA3381C0380A4EB0700A35BEA0C3EEA03CEEA000EA25B1260EAF0
381330485AEA80C0EA4380003EC7FC141F7B9418>121 D E /Fn
79 124 df<90381FC1F090387037189038C03E3C3801807C000313783907003800A9B612
C03907003800B2143C397FE1FFC01E2380A21C>11 D<EB1FC0EB7020EBC0103801803800
031378EA0700143091C7FCA7B512F8380700781438B2397FE1FF80192380A21B>I<EB1F
D8EB7038EBC078EA0180120338070038A9B512F838070038B3397FF3FF80192380A21B>
I<90380FC07F90397031C0809039E00B00402601801E13E00003EB3E013807003C91381C
00C01600A7B712E03907001C011500B23A7FF1FFCFFE272380A229>I<EA7038EAF87CEA
FC7EA2EA743AEA0402A4EA0804A2EA1008A2EA2010EA40200F0F7EA218>34
D<D80780130CEA18406D5B486C1370D8701C13B0396013FF6038E008005D4A5AA24AC7FC
1406A25C38601018127000305BEA1820495A390780C03CC7134290380180C19038030181
9138038080010613001640495A1318A213301360A213C048487E1680D803001380913801
81000006EB00C14814420004143C22287DA429>37 D<127012F812FCA212741204A41208
A21210A212201240060F7CA20E>39 D<132013401380EA01005A12061204120CA25AA25A
A312701260A312E0AE1260A312701230A37EA27EA2120412067E7EEA0080134013200B32
7CA413>I<7E12407E7E12187E12041206A27EA2EA0180A313C01200A313E0AE13C0A312
011380A3EA0300A21206A21204120C5A12105A5A5A0B327DA413>I<497EB0B612FEA239
00018000B01F227D9C26>43 D<127012F812FCA212741204A41208A21210A21220124006
0F7C840E>I<EAFFF8A20D02808B10>I<127012F8A3127005057C840E>I<14801301A2EB
0300A31306A35BA35BA35BA35BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA3
11317DA418>I<EA01F0EA071CEA0C06487E00381380A2387001C0A400F013E0AE007013
C0A3EA780300381380A2381C0700EA0C06EA071CEA01F013227EA018>I<13801203120F
12F31203B3A9EA07C0EAFFFE0F217CA018>I<EA03F0EA0C1CEA100700201380384003C0
A2008013E012F0EAF801A3EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7
FC000213205A5A00181360481340383FFFC05AB5FC13217EA018>I<EA03F8EA0C1EEA10
0F38200780004013C0127813031307123800001380A214005B130C1338EA03F0EA001C13
0FEB0780A2EB03C0A214E01220127012F8A200F013C01240EB0780122038100F00EA0C1C
EA03F013227EA018>I<1303A25BA25B1317A21327136713471387120113071202120612
041208A212101220A2124012C0B512F838000700A7EB0F80EB7FF015217FA018>I<0010
1380381E0700EA1FFF5B13F8EA17E00010C7FCA6EA11F8EA120CEA1C0738180380121038
0001C0A214E0A4127012F0A200E013C01280EA4003148038200700EA1006EA0C1CEA03F0
13227EA018>I<137EEA01C138030080380601C0EA0C03121C381801800038C7FCA21278
1270A2EAF0F8EAF30CEAF4067F00F81380EB01C012F014E0A51270A3003813C0A2381803
80001C1300EA0C06EA070CEA01F013227EA018>I<12401260387FFFE014C0A238400080
38C0010012801302A2485A5BA25B5BA21360134013C0A21201A25B1203A41207A76CC7FC
13237DA118>I<EA01F8EA060EEA0803381001801220386000C0A31270A238780180003E
1300EA3F02EA1FC4EA0FF812036C7EEA067EEA083F38100F80383007C0EA6003EB00E05A
1460A40060134014C06C138038180300EA0E0EEA03F013227EA018>I<EA01F0EA060C48
7EEA1807383803801270A238F001C0A314E0A5127013031238EA1805120CEA0619EA03E1
380001C0A3EB0380A21230387807001306EA700CEA20186C5AEA0FC013227EA018>I<12
7012F8A312701200AB127012F8A3127005157C940E>I<127012F8A312701200AB127012
F8A312781208A41210A312201240A2051F7C940E>I<497EA3497EA3EB05E0A2EB09F013
08A2EB1078A3497EA3497EA2EBC01F497EA248B51280EB0007A20002EB03C0A348EB01E0
A348EB00F0121C003EEB01F839FF800FFF20237EA225>65 D<B512F8380F800E0007EB07
80EC03C015E0140115F0A515E01403EC07C0EC0F80EC3E00EBFFFE9038800780EC03C0EC
01E015F0140015F8A6EC01F0A2EC03E0EC07C0000FEB0F00B512FC1D227EA123>I<9038
07E0109038381830EBE0063901C0017039038000F048C7FC000E1470121E001C1430123C
A2007C14101278A200F81400A812781510127C123CA2001C1420121E000E14407E6C6C13
803901C001003800E002EB381CEB07E01C247DA223>I<B512F0380F801E00071307EC03
80EC01C0EC00E015F01578A2157C153CA3153EA9153CA2157C1578A215F015E01401EC03
C0EC0700000F131EB512F01F227EA125>I<B612C0380F80070007130114001540A21560
1520A314201500A3146014E013FF138014601420A315081400A21510A31530A2157015E0
000F1303B6FC1D227EA121>I<B612C0380F80070007130114001540A215601520A31420
1500A3146014E013FF138014601420A491C7FCA9487EEAFFFE1B227EA120>I<903807F0
0890383C0C18EBE0023901C001B839038000F848C71278481438121E15185AA2007C1408
1278A200F81400A7EC1FFF0078EB00F81578127C123CA27EA27E7E6C6C13B86C7E3900E0
031890383C0C08903807F00020247DA226>I<39FFFC3FFF390FC003F039078001E0AE90
B5FCEB8001AF390FC003F039FFFC3FFF20227EA125>I<EAFFFCEA0FC0EA0780B3ACEA0F
C0EAFFFC0E227EA112>I<3803FFE038001F007FB3A6127012F8A2130EEAF01EEA401C6C
5AEA1870EA07C013237EA119>I<D8FFFCEBFF80D80FC0EB7C006C48133015205D5D4AC7
FC14025C5C5C5C5C5CEB81C0EB83E01385EB88F01390EBA078EBC03C13808080A26E7E81
14036E7EA26E7E81486C7F3AFFFC07FF8021227EA126>I<EAFFFCEA1F806CC7FCB3A214
01A41403A214021406A2141E48137EB512FE18227DA11E>I<D8FFC0EB03FF000F15F000
0715E0D805E01305A2D804F01309A301781311A36D1321A36D1341A26D1381A390380781
01A3EB03C2A2EB01E4A3EB00F8A31470120E001FEC03F03AFFE0203FFF28227EA12D>I<
39FF8007FF3907C000F81570D805E01320EA04F0A21378137C133C7F131F7FEB0780A2EB
03C0EB01E0A2EB00F014F81478143C143E141E140FA2EC07A0EC03E0A21401A21400000E
1460121FD8FFE0132020227EA125>I<EB0FE0EB783CEBE00E3903C0078039078003C039
0F0001E0000E1300001E14F0481478A2007C147CA20078143CA200F8143EA90078143C00
7C147CA2003C1478003E14F8001E14F06CEB01E0A239078003C03903C007803900E00E00
EB783CEB0FE01F247DA226>I<B512F0380F803C0007130FEC078015C0140315E0A615C0
14071580EC0F00143CEBFFF00180C7FCAE487EEAFFFC1B227EA121>I<B512E0380F803C
0007130E6E7E81140381A55D14075D020EC7FC143CEBFFE0EB80708080141E140E140FA4
81A3168015C014073A0FC003C10039FFFC01E2C8127C21237EA124>82
D<3803F020380C0C60EA1802383001E0EA70000060136012E0A21420A36C1300A2127812
7FEA3FF0EA1FFE6C7E0003138038003FC0EB07E01301EB00F0A214707EA46C1360A26C13
C07E38C8018038C60700EA81FC14247DA21B>I<007FB512F83978078078006014180040
1408A300C0140C00801404A400001400B3A3497E3801FFFE1E227EA123>I<39FFFC07FF
390FC000F86C4813701520B3A5000314407FA2000114806C7E9038600100EB3006EB1C08
EB03F020237EA125>I<D8FFF0EB7FC0D81F80EB1F006CC7120C7F00071408A26C6C5BA3
6C6C5BA26D136000001440A201785BA2137CD93C01C7FCA2EB1E02A36D5AA2148CEB0788
A2EB03D0A214F06D5AA26D5AA322237FA125>I<3BFFF03FFC03FE3B1F8007E000F86C48
6C48137017206E7ED807801540A24A7E2603C0021480A39039E004780100011600A2EC08
3CD800F01402A2EC101E01785CA2EC200F013C5CA20260138890391E400790A216D09039
1F8003F0010F5CA2EC00016D5CA20106130001025C2F237FA132>I<397FF803FF390FE0
01F83907C000E06C6C5B00015CEBF001D800F890C7FCEB7802EB7C04133EEB1E08EB1F10
EB0FB0EB07A014C06D7E130180497EEB0278EB047CEB0C3EEB081EEB101F496C7E140701
407F496C7E1401D801007F486D7E5AD81F807F3AFFC003FFC022227FA125>I<12FEA212
C0B3B3A912FEA207317BA40E>91 D<EA0804EA1008EA2010A2EA4020A2EA8040A4EAB85C
EAFC7EA2EA7C3EEA381C0F0F7AA218>I<12FEA21206B3B3A912FEA207317FA40E>I<EA1F
E0EA3038EA780C130EEA30071200A313FFEA07C7EA1E07123C1278127000F01308A3130F
EA7817383C2390380FC1E015157E9418>97 D<120E12FE121E120EAB131FEB61C0EB8060
380F0030000E1338143C141C141EA7141C143C1438000F1370380C8060EB41C038083F00
17237FA21B>I<EA01FEEA0703380C0780121C383803000078C7FC127012F0A712700078
134012386C1380380C0100EA0706EA01F812157E9416>I<14E0130F13011300ABEA01F8
EA0704EA0C02EA1C01EA38001278127012F0A7127012781238EA1801EA0C0238070CF038
01F0FE17237EA21B>I<EA01FCEA0707380C0380381C01C01238007813E0EA700012F0B5
FC00F0C7FCA512700078132012386C13406C138038070300EA00FC13157F9416>I<133E
13E33801C780EA0387130748C7FCA9EAFFF80007C7FCB27FEA7FF0112380A20F>I<1470
3803F198380E1E18EA1C0E38380700A200781380A400381300A2EA1C0EEA1E1CEA33F000
20C7FCA212301238EA3FFE381FFFC06C13E0383000F0481330481318A400601330A20038
13E0380E03803803FE0015217F9518>I<120E12FE121E120EABEB1F80EB60C0EB80E038
0F0070A2120EAF38FFE7FF18237FA21B>I<121C123EA3121CC7FCA8120E127E121E120E
B1EAFFC00A227FA10E>I<13E0EA01F0A3EA00E01300A81370EA07F012001370B3A51260
EAF0E013C0EA6180EA3F000C2C83A10F>I<120E12FE121E120EABEB03FCEB01F014C014
80EB02005B5B5B133813F8EA0F1CEA0E1E130E7F1480EB03C0130114E0EB00F014F838FF
E3FE17237FA21A>I<120E12FE121E120EB3ADEAFFE00B237FA20E>I<390E1FC07F3AFE60
E183803A1E807201C03A0F003C00E0A2000E1338AF3AFFE3FF8FFE27157F942A>I<380E
1F8038FE60C0381E80E0380F0070A2120EAF38FFE7FF18157F941B>I<EA01FCEA070738
0C0180381800C0003813E0481370A200F01378A700701370007813F0003813E0381C01C0
380E038038070700EA01FC15157F9418>I<EA0E1F38FE61C0380E8060380F0070000E13
38143CA2141EA7143CA21438000F1370380E80E0EB41C0EB3F0090C7FCA9EAFFE0171F7F
941B>I<3801F82038070460EA0E02EA1C01003813E0EA7800A25AA71278A2EA3801121C
EA0C02EA070CEA01F0C7FCA9EB0FFE171F7E941A>I<EA0E3CEAFE46EA1E8FEA0F0F1306
1300120EAD120FEAFFF010157F9413>I<EA0F88EA3078EA601812C01308A212E0EAF000
127FEA3FE0EA0FF0EA01F8EA003CEA801C130CA212C01308EAE018EAD030EA8FC00E157E
9413>I<1202A41206A3120E121E123EEAFFFCEA0E00AB1304A6EA07081203EA01F00E1F
7F9E13>I<000E137038FE07F0EA1E00000E1370AD14F0A238060170380382783800FC7F
18157F941B>I<38FF80FE381E00781430000E1320A26C1340A2EB80C000031380A23801
C100A2EA00E2A31374A21338A3131017157F941A>I<39FF8FF87F393E01E03C001CEBC0
1814E0000E1410EB0260147000071420EB04301438D803841340EB8818141CD801C81380
EBD00C140E3900F00F00497EA2EB6006EB400220157F9423>I<38FF83FE381F00F0000E
13C06C1380EB8100EA0383EA01C2EA00E41378A21338133C134E138FEA0187EB03803802
01C0000413E0EA0C00383E01F038FF03FE17157F941A>I<38FF80FE381E00781430000E
1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A31310A25BA35B
12F05B12F10043C7FC123C171F7F941A>I<383FFFC038380380EA300700201300EA600E
EA401C133C1338C65A5B12015B38038040EA07005A000E13C04813805AEA7801EA7007B5
FC12157F9416>I<B512FE1701808C18>I E /Fo 16 119 df<127012F812FCA212741204
A41208A21210A212201240060F7A8410>44 D<127012F8A312701200AB127012F8A31270
05157A9410>58 D<144014E0A3497EA2497EEB0278A2497EA3497EA2497EA3496C7EA201
407F1403A290B57EA239018001F090C7FCA200021478A34880A2001E143E3AFFC003FFE0
A223237DA229>65 D<903803F80290381FFF0690387E03863901F000CE4848133ED80780
131E48C7FC48140E001E1406123E123C007C1402A2127800F81400A81278007C1402A212
3C123E001E1404121F6C14086C6C1318D803E013306C6C136039007E03C090381FFF00EB
03FC1F247CA227>67 D<007FB6FCA2397801E00F0060140381124000C01580A200801400
A400001500B3A290B512C0A221227DA127>84 D<B57E381E01E0EB0070808080A280A215
80A81500A25C140E5C5C5C495AB51280191A7E991F>100 D<B512F8381E007814181408
140C1404A3EB0200A31306EA1FFEEA1E061302A3EB0002A314061404A2140C143CB512FC
171A7E991C>I<39FFC1FF80391E003C00AB381FFFFC381E003CAC39FFC1FF80191A7E99
1F>104 D<EAFFC0EA1E00B3A6EAFFC00A1A7E990F>I<00FEEB01FE001E14F0A200171302
A238138004A33811C008A23810E010A3EB7020A3EB3840A2EB1C80A3EB0F00A213061238
00FEEB07FE1F1A7E9925>109 D<EB7F803801C0E038070038000E7F487F003C130F0038
7F0078148000701303A200F014C0A70078EB0780A200381400003C5B001C130E6C5B6C5B
3801C0E038007F801A1A7E9920>111 D<B5FC381E01E0EB007014781438143CA4143814
781470EB01E0381FFF00001EC7FCABEAFFC0161A7E991C>I<EAFFFE381E03C0EB00E080
1478A55C5CEB03C0D81FFEC7FC381E0380EB01E0130080A615401470EC388039FFC01F00
1A1A7E991E>114 D<EA07E1EA181BEA3007487EA2EAE001A36CC7FC12FCEA7F80EA3FF8
6C7E6C7EC67E131FEB0780A2EA8003A300C013005BEAE006EADC0CEA83F0111A7E9917>
I<007FB5FC38701E0700601301124000C0148000801300A300001400B0133F3803FFF019
1A7F991D>I<39FFC00FE0393F000380001E14007E1402138000075BA26C6C5AA2EBE018
00011310A26C6C5AA2EB7840A2137CEB3C80A2011FC7FCA3130EA213041B1A7F991F>
118 D E /Fp 24 118 df<140CA3141EA2143FA3EC4F80A2ECCFC01487A290380103E0A3
90380201F0A201047F1400A249137CA3497FA2013FB5FCA2903820001F496D7EA201C080
491307A248C76C7EA300026E7E1207D81F80497ED8FFF090383FFFC0A22A2A7DA931>65
D<B612C015F83907E000FE0003141FED07C06F7E6F7E6F7EA2167CA282A2163F82A21780
A91700A35E163EA25E167816F84B5A4B5A4B5AED1F80000702FEC7FCB612F815C029297C
A832>68 D<B7FCA23907E0003F00031407ED03801501A21500A416405CA21600A25CA214
0F90B5FCA2EBE00F1403A280A491C8FCAA487EB512C0A222297CA82B>70
D<B67E15F03907E001FC0003EB003E81ED0F8016C0150716E0A616C0150F1680ED1F0015
3EEC01F890B512E001E0C8FCB1487EB57EA223297CA82C>80 D<B512FEECFFC03907E003
F00003EB00FC153E8182150F82A65E4BC7FC151E5D15F8EC03E0D9FFFEC8FC9038E00780
EC01E06E7E1578157C153C153EA4153FA417401680151F486C010F1380B5388007C09238
03E100C912FE2A2A7CA830>82 D<017F13403903FFE0C0380780F0380E00194813074813
0300781301127000F01300A315407EA2007C1400127EEA7F80EA3FF06CB47E6C13F06C13
FC00017F38003FFF010313809038003FC0EC0FE0140315F014017E1400A37E15E07E1401
6C14C06CEB038000E6EB070038C3E01E38C0FFF838801FE01C2B7CA925>I<007FB612FE
A23A7C003E003E0070150E006015061602124000C01503A2481501A5C71400B3A6147F90
383FFFFEA228297DA82F>I<5B497EA3497EA2EB09E0A3EB10F0A2EB2078A3497EA2497E
A348B5FCA23902000780A348EB03C0A2000CEB01E0A2003C14F0B4EB0FFEA21F1F7E9E25
>97 D<B512F014FC380F003E140F1580EC07C0A51580140FEC1F00143EEBFFF8EB003C14
0FEC078015C0140315E0A5EC07C0A2EC0F80EC3F00B512FE14F81B1F7D9E23>I<B512E0
14F8380F007E140FEC0780EC03C0A2EC01E015F01400A215F8A915F0A2140115E0140315
C0EC0780EC0F00143EB512F814E01D1F7D9E25>100 D<B61280A2380F00071403140114
0015C01540A21440A2150014C0130113FFA21301130014401520A214001540A315C0A214
01EC0F80B6FCA21B1F7D9E21>I<B6FCA2380F000F1403A28015801400A21480A21500A2
130113FFA213011300A491C7FCA77FEAFFF8A2191F7D9E20>I<90380FE01090387FFC30
9038FC0E703803E00339078000F048C71270121E003E1430123C007C1410A2127800F814
00A6EC3FFE1278007CEB01F01400123C123E121E7E6C7E3803E0013900FC077090387FFE
3090380FF0101F1F7D9E26>I<39FFF07FF8A2390F000780AC90B5FCA2EB0007AD39FFF0
7FF8A21D1F7D9E25>I<EAFFF0A2EA0F00B3A9EAFFF0A20C1F7E9E12>I<EAFFF8A2EA0F80
90C7FCB01401A41403A214021406140E143EB512FEA2181F7D9E1F>108
D<B4EC0FF8A2000F1580D80B801317A2D809C01327A3D808E01347A201701387A3903838
0107A2EB1C02A3EB0E04A3EB0708A2EB0390A3EB01E0120C383E00C0D8FF80EB7FF8A225
1F7D9E2D>I<B4EB0FF81380000FEB03E0390BC00080EA09E0A2EA08F01378A27F7FA27F
EB0780A2EB03C0EB01E0A2EB00F01478A2143C141EA2140F1407A21403003E1301EAFF80
14001D1F7D9E25>I<EB1FE0EB70383801C00E48487E390F0003C0000E1301001E14E048
EB00F0A2007C14F800781478A200F8147CA8007C14F8A2003C14F0A26CEB01E0001F1303
6C14C039078007803901C00E0038007038EB1FE01E1F7D9E26>I<EB1FE0EB70383801C0
0E48487E390F0003C0000E1301001E14E048EB00F0A2007C14F800781478A200F8147CA8
00781478007C14F8003C14F0A2391E0781E0EB0841390F1023C039079027803901D01E00
3800783890381FF804EB0018141CEC0C0CEC0E1CEC0FF8A2140715F0EC01E01E287D9E26
>113 D<B57E14F0380F00FC143E80801580A51500141E5C14F0EBFFC01301EB0070A280
143CA3143EA31502143F141F39FFF00F8CEC03F01F1F7D9E24>I<3803F040380FFCC0EA
1C0FEA3003EA7001EA600000E01340A36C1300A21278EA7F80EA3FF8EA1FFE380FFF8000
0113C038001FE01303EB00F0A214707EA36C136014E038F001C038FC078038CFFF00EA81
FC141F7D9E1B>I<007FB512F0A2387807800060143000401410A200C0141800801408A4
00001400B1497E3801FFFEA21D1F7E9E23>I<39FFF00FF8A2390F0003E0EC0080B3A339
07800100A2000313026C6C5A3800F038EB3FF0EB0FC01D1F7D9E25>I
E /Fq 54 123 df<123C127FEAFF80A213C0A3127F123E1200A2EA0180A3EA0300A21206
120E5A5A12100A157BA913>39 D<B51280A611067F9016>45 D<121C127FA2EAFF80A3EA
7F00A2121C09097B8813>I<130E131E137EEA07FE12FFA212F81200B3ABB512FEA31727
7BA622>49 D<EBFF80000713F04813FC381E03FE393800FF80007C133F00FE14C06C131F
15E0140FA2127E003C131FC7FC15C0A2EC3F801500147E5C5C495A495AEB078049C7FC13
1E4913E013705B3901C001C0EA0380EA0600000FB5FC5A5A5AB61280A31B277DA622>I<
EB7F803803FFF04813FC380F81FE381F007FEA3F80EC3F80A3121F1300C7EA7F00A2147E
5C495AEB07F0EBFFC0A2EB01F8EB007E801580EC1FC0A215E0A2123C127EB4FCA215C014
3F481480007CEB7F00383F01FE6CB45A000713F0C613801B277DA622>I<140FA25C5C5C
5C5BA2EB03BFEB073F130E131C133C1338137013E0EA01C0EA038012071300120E5A5A5A
12F0B612F8A3C7EA7F00A890381FFFF8A31D277EA622>I<00181303381F801FEBFFFE5C
5C5C14C091C7FC001CC8FCA7EB7FC0381DFFF8381F80FC381E003F1208C7EA1F8015C0A2
15E0A21218127C12FEA315C05A0078EB3F80A26CEB7F00381F01FE6CB45A000313F0C613
801B277DA622>I<EB07F8EB3FFE90B5FC3901FC07803903F00FC03807C01FEA0F80121F
130048EB0F8091C7FC127EA3EAFE02EB1FF0EB3FFCEB603EEB801F00FF14809038000FC0
A24814E0A4127EA4123E003F14C07EEC1F80D80F8013003807E07E6CB45A6C5B38003FC0
1B277DA622>I<1238123E003FB512F0A34814E015C0158015003870000EA25C485B5C5C
C6485AA2495A130791C7FC5B5B131E133EA2137E137CA213FCA41201A76C5A13701C297C
A822>I<EB7F803801FFF000077F380FC0FC381F803E48487E007E1480A2140F00FE14C0
A315E0A5007E131FA26C133F6C132F380F80CF3807FF8F0001130FEA0008010013C0A3EC
1F80123E127FEC3F00143E147E007E5B383E03F8381FFFE06C1380D801FEC7FC1B277DA6
22>57 D<EC0780A24A7EA34A7EA24A7EA3EC77F8A2ECF7FC14E3A2903801C1FEA201037F
1480A249486C7EA24980010E133FA2496D7EA2013FB57EA39039700007F8A201F0804913
03000181491301A2000381D8FFFE013F13FCA32E297EA833>65 D<B612F815FF16C03A03
F8001FE0ED0FF0ED07F8150316FCA21501A3150316F8A2ED07F0150FED1FC0EDFF8090B5
EAFE00EDFFC09039F8000FF0ED03F8ED01FC16FE1500A216FFA616FE1501ED03FC1507ED
1FF8B712E016C0EDFE0028297DA830>I<91387FE003903907FFFC07011FEBFF0F90397F
F00F9F9039FF0001FFD801FC7F4848147F4848143F4848141F485A160F485A1607127FA2
90C9FC5AA97E7F1607123FA26C7E160E6C7E6C6C141C6C6C143C6C6C14786CB4EB01F090
397FF007C0011FB512800107EBFE009038007FF028297CA831>I<B612FCEDFF8016E03A
03FC001FF8ED03FCED00FE167FEE3F80EE1FC0A2EE0FE0A2EE07F0A417F8AA17F0A3EE0F
E0A217C0161FEE3F80EE7F005EED03FCED1FF8B75A168003FCC7FC2D297EA834>I<B712
E0A33903FC001FED07F01501A215001670A3913801C0781638A302031300A2140F90B5FC
A3EBFC0F1403A20201130EA3161C91C7FCA3163C1638167816F815011503151FB712F0A3
27297EA82C>I<B712C0A33903FC003FED0FE015031501A21500A316F0913801C070A316
001403A2140F90B5FCA3EBFC0F1403A21401A491C8FCA9B512FCA324297EA82A>I<B5D8
F00FB5FCA3D803FCC7EA3FC0AF90B7FCA301FCC7123FB1B5D8F00FB5FCA330297EA835>
72 D<B512F0A33803FC00B3B1B512F0A314297EA819>I<B512FCA3D803FCC8FCB3A3ED01
C0A415031680A21507A2150FA2151F157F913801FF00B7FCA322297EA828>76
D<D8FFFE92383FFF80A26D5D0003EFE000A2D9BF8014EFA2D99FC0EB01CFA2D98FE0EB03
8FA3D987F0EB070FA2D983F8130EA2D981FC131CA3D980FE1338A2027F1370A291383F80
E0A391381FC1C0A291380FE380A2913807F700A3EC03FEA26E5AA26E5AD8FFFE0203B512
80A2157039297DA840>I<D8FFFCEC7FFF7F7F00036DEB01C080EBBFE0139F80EB8FF8EB
87FCEB83FEEB81FF01801380147F15C0EC3FE0EC1FF0EC0FF8EC07FC140315FEEC01FF6E
1381ED7FC1ED3FE1ED1FF1150F16F9ED07FDED03FF8181167FA2163F161F160F1607D8FF
FE14031601A230297EA835>I<ECFFC0010F13FC90383F807F9039FE001FC0D801F8EB07
E048486D7E48486D7E000F8148486D7EA24848147FA2007F168090C8123FA34816C0AA6C
16806D147FA2003F1600A26C6C14FEA26C6C495A6C6C495A6C6C495A6C6C495A6C6C495A
90263FC0FFC7FC90380FFFFC010013C02A297CA833>I<B612F815FF16C03A03FC003FE0
ED07F0ED03F816FC150116FEA716FC150316F8ED07F0ED3FE090B61280EDFE0001FCC8FC
B0B512F0A327297EA82E>I<B612E015FE6F7E3A03FC003FE0ED0FF06F7E6F7E150182A6
5E4B5A1507ED0FE0ED3FC090B500FEC7FCA29039FC00FF80ED3FC06F7E6F7E6F7EA9170E
A21503923801FC1CB538F000FEEE7FF8EE0FE02F297EA832>82 D<9038FF80600003EBF0
E0000F13F8381F80FD383F001F003E1307481303A200FC1301A214007EA26C140013C0EA
7FFCEBFFE06C13F86C13FE80000714806C14C0C6FC010F13E0EB007FEC1FF0140F140700
E01303A46C14E0A26C13076C14C0B4EB0F80EBE03F39E3FFFE0000E15B38C01FF01C297C
A825>I<007FB71280A39039807F807FD87C00140F00781507A20070150300F016C0A248
1501A5C791C7FCB3A490B612C0A32A287EA72F>I<B500F0EBFFFEA3D803FCC7EA0380B3
AA0001ED07007F0000150E137F6D143CD91FC05B90390FF003F06DB55A01001480DA1FFC
C7FC2F297EA834>I<B53CE07FFFE01FFFC0A32803FC0003FCC7EA7000A26D6D7E000160
A26D6E13016C604B138002801503017F5F4B13C0D93FC0013F49C7FCA2913AE00E1FE00F
011F160E17F09126F01C0F131E010F161C033C13F8902707F838075BA2037813FC902703
FC70035BA2913AFEE001FEF001015E02FF14FF4B7E6D5EA26E486D5AA36EC76CC8FCA202
3E80021E141EA242297FA845>87 D<3803FF80000F13F0381F01FC383F80FE147F801580
EA1F00C7FCA4EB3FFF3801FC3FEA0FE0EA1F80EA3F00127E5AA4145F007E13DF393F839F
FC381FFE0F3803FC031E1B7E9A21>97 D<EAFFE0A3120FACEBE1FE9038EFFF809038FE07
E09038F803F09038F001F89038E000FCA2157EA2157FA8157EA315FCA29038F001F89038
F803F090389C0FE090380FFF80390E01FC00202A7EA925>I<EB3FF03801FFFC3803F03E
380FC07FEA1F80EA3F00A248133E007E90C7FCA212FEA7127EA2127F6CEB03801380001F
EB0700380FE00E3803F83C3801FFF838003FC0191B7E9A1E>I<EC7FF0A31407ACEB3F87
3801FFF73807F03F380FC00F381F8007EA3F00A2127EA312FEA8127EA27EA2381F800F38
0FC01F3907E07FFF3801FFE738007F87202A7EA925>I<EB3FC03801FFF03803E07C380F
803E001F7F130048EB0F80127E15C0A200FE1307A2B6FCA248C8FCA3127EA2127F6CEB01
C07E390F8003803907C007003803F01E3800FFFCEB3FE01A1B7E9A1F>I<EB07F8EB3FFC
EB7E3E3801FC7FEA03F813F01207143E1400A7B512C0A33807F000B3A3387FFF80A3182A
7EA915>I<9038FF80F00003EBE3F8390FC1FE1C391F007C7C48137E003EEB3E10007EEB
3F00A6003E133E003F137E6C137C380FC1F8380BFFE00018138090C8FC1238A2123C383F
FFF814FF6C14C06C14E06C14F0121F383C0007007CEB01F8481300A4007CEB01F0A2003F
EB07E0390FC01F806CB5120038007FF01E287E9A22>I<EAFFE0A3120FAC147E9038E1FF
809038E30FC001E413E0EBE80701F813F013F0A213E0B039FFFE3FFFA3202A7DA925>I<
1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFFE0A3120FB3A3EAFFFEA3
0F2B7EAA12>I<EAFFE0A3120FACEC1FFCA3EC0780EC0F00141E5C5C14E0EBE3C013E7EB
EFE0EBFFF08013F3EBE1FCEBC0FE147FA2EC3F80EC1FC0EC0FE0A2EC07F039FFFC1FFFA3
202A7FA923>107 D<EAFFE0A3120FB3B2EAFFFEA30F2A7EA912>I<26FFC07FEB1FC0903A
C1FFC07FF0903AC307E0C1F8D80FC49038F101FC9039C803F20001D801FE7F01D05BA201
E05BB03CFFFE3FFF8FFFE0A3331B7D9A38>I<38FFC07E9038C1FF809038C30FC0D80FC4
13E0EBC80701D813F013D0A213E0B039FFFE3FFFA3201B7D9A25>I<EB3FE03801FFFC38
03F07E390FC01F80391F800FC0393F0007E0A2007EEB03F0A300FE14F8A8007E14F0A26C
EB07E0A2391F800FC0390FC01F803907F07F003801FFFC38003FE01D1B7E9A22>I<38FF
E1FE9038EFFF809038FE0FE0390FF803F09038F001F801E013FC140015FEA2157FA8157E
15FEA215FC140101F013F89038F807F09038FC0FE09038EFFF809038E1FC0001E0C7FCA9
EAFFFEA320277E9A25>I<90383F80703901FFE0F03803F079380FE01D381F800F123FEB
00075AA2127E12FEA8127FA27E1380001F130F380FC01F3807F0773801FFE738007F87EB
0007A9EC7FFFA320277E9A23>I<38FFC1F0EBC7FCEBC63E380FCC7F13D813D0A2EBF03E
EBE000B0B5FCA3181B7F9A1B>I<3803FE30380FFFF0EA3E03EA7800127000F01370A27E
00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6FCEB07FC130000E0137C143C7E
14387E6C137038FF01E038E7FFC000C11300161B7E9A1B>I<13E0A41201A31203A21207
120F381FFFE0B5FCA2380FE000AD1470A73807F0E0000313C03801FF8038007F0014267F
A51A>I<39FFE07FF0A3000F1307B2140FA2000713173903F067FF3801FFC738007F8720
1B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2EBFC0300011480EB
FE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA2201B7F9A23
>I<3BFFFC7FFC1FFCA33B0FE00FE001C02607F007EB0380A201F8EBF00700031600EC0F
F801FC5C0001150EEC1FFC2600FE1C5B15FE9039FF387E3C017F1438EC787F6D486C5A16
F0ECE01F011F5CA26D486C5AA2EC800701075CA22E1B7F9A31>I<39FFFC1FFEA33907F0
03803803F8079038FC0F003801FE1E00005BEB7F3814F86D5A6D5A130F806D7E130F497E
EB3CFEEB38FFEB787F9038F03F803901E01FC0D803C013E0EB800F39FFF03FFFA3201B7F
9A23>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2EBFC0300011480EBFE07
0000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA25CA21307003890
C7FCEA7C0FEAFE0E131E131C5BEA74F0EA3FE0EA0F8020277F9A23>I<003FB5FCA2EB00
FEEA3C01383803FC007813F8EB07F0EA700F14E0EB1FC0EA003F1480EB7F005B5B3801FC
07120313F8EA07F0000F130F13E0381FC00E003F131E387F803EEB00FEB5FCA2181B7E9A
1E>I E /Fr 46 122 df<91393FFC07F80103B5EA3FFE903A0FF807FF0F903B3FC003FC
1F80903B7F0007F83FC001FE130F000115F05B0003EE1F80EF060094C7FCA8B812F0A328
03FC000FF0C7FCB3A8267FFFE1B512C0A332327FB12F>11 D<B512F8A715077F921B>45
D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A7A8916>I<EB01C01303130F137F
EA1FFFB5FC13BFEAE03F1200B3B1007FB512F0A31C2E7AAD28>49
D<EB3FE03801FFFE0007EBFF80D80F8013C0391E003FE00038EB1FF0007CEB0FF8007EEB
07FCB4FC018013FEA21403A2EA7F00003E1307C7FC15FCA2EC0FF8A215F0EC1FE015C0EC
3F80EC7F00147E14F8495A495A495A49C7FC011E130E5B133849131E49131C485A48C712
3C48B512FC5A5A5A4814F8B6FCA31F2E7CAD28>I<EB1FF890B5FC000314C03907E01FF0
390F0007F8D81F807FEA3FC06E7EA4EA1F80380F0007C75BA25D4A5A4A5AEC3F8002FFC7
FCEB3FF8ECFF809038001FE06E7E6E7E6E7E816E7EA21680A3121C123E127FEAFF801600
A24A5AEA7F00007E495A003C5C391FC01FF06CB512C0000391C7FC38003FF8212E7DAD28
>I<157015F0140114031407140FA2141F143F147714F714E7EB01C7EB0387EB0707130F
130E131C1338137013F013E0EA01C0EA0380EA07005A120E5A5A5A5AB712E0A3C7380FF0
00A9010FB512E0A3232E7EAD28>I<000C1430390FC007F090B512E015C0158015005C14
F85C1480000EC8FCA8EB1FF0EBFFFE390FE03F809038000FC0000EEB07E0000C14F0C713
F8140315FCA215FEA21218123E127F5AA215FCA25A0078EB07F815F06CEB0FE06CEB1FC0
390FC07F806CB51200000113FC38003FE01F2E7CAD28>I<14FF010713E0011F7F90387F
80F89038FE003CD801F8137C484813FE00071301EA0FE0A2EA1FC0003F6D5A157892C7FC
485AA338FF83FC90388FFF8090389C0FC09038B003F06E7E01E07F01C07F140081A24914
80A4127FA4003F15007F121F5D000F495AEA07E06C6C485A3901FC0FE06CB55A013F90C7
FCEB0FFC212E7DAD28>I<1238123E003FB612C0A316804815005D5D5D0078C712380070
5C5D00F0495A48495A4AC7FCA2C7120E5C5C1478147014F0495AA213035C1307A2130FA2
131F5CA2133FA4137FA86DC8FC131E22307CAF28>I<1578A215FCA34A7EA24A7EA24A7F
A34A7FEC0E7F021E7FEC1C3FA202387F151F02787FEC700FA202E07F1507010180ECC003
A249486C7EA201078191C7FC498191B6FCA24981011CC7123F013C810138141FA2498116
0F01F081491407A2484881486C1403B549B512FCA336317DB03D>65
D<B712C016FC16FFD801FEC77FEE7FE0707E161F707EA2831607A4160FA25FA24C5A4C5A
4C5A4B485ADB1FFEC7FC90B65AEEFF8049C7EA3FE0EE0FF0EE07FCA2707E83821880A718
005E5F16074C5A4C5AEEFFF0B812C094C7FC16F831317DB039>I<913A03FF800180023F
EBF00349B5EAFC0701079038003F0FD91FF8EB079FD93FC0EB01FFD9FF807F4848C8127F
4848153F0007161F49150F485A001F1607A2485A1703127FA24992C7FCA212FFA9127FA2
7FEF0380123FA26C7E1707000F17006C7E6D150E0003161E6C6C151C6C6C6C1478D93FC0
5CD91FF8EB03E0D907FFEB3F800101D9FFFEC7FCD9003F13F80203138031317CB03A>I<
B712F016FF17C0C6D9800013F0EE0FF8EE03FE707E701380EF7FC0173FEF1FE018F0170F
18F8A2EF07FCA418FEAB18FCA4EF0FF8A218F0171F18E0173FEF7FC01880933801FF004C
5AEE0FFCEE7FF0B812C094C7FC16F037317EB03E>I<B812F0A3C6903880003FEE07F816
031600A21778A21738A3171C1507A31700A25D5D5D91B5FCA3EC803F818181A21707A392
C7120EA4171EA2173CA2177C17FC16011607163FB812F8A330317EB035>I<B61280A3C6
EB8000B3B3A7B61280A319317EB01E>73 D<B67EA3000190C9FCB3A9EE0380A416071700
A25EA35E5E5E5E4B5A150FB7FCA329317DB030>76 D<B500C00303B5FCA26E5DC61900D9
EFF0150EA3D9E7F85DA2D9E3FC5DA2D9E1FE5DA2D9E0FF5DA26E6C495AA26E6C495AA36E
6C495AA26E6C130EA26E6C5BA26E6C5BA26E6C5BA26E6C5BA392387F81C0A292383FC380
A2DB1FE7C7FCA2ED0FFEA26F5AA36F5A487EB526E001F090B6FCA26F5A48317EB04D>I<
B712E016FEEEFF80C6D9800013E0EE3FF0EE0FF8EE07FCA2EE03FEA217FFA717FEA2EE07
FC17F8160FEE3FE0EEFFC091B6120016F80280C8FCB3A2B67EA330317EB037>80
D<B77E16F816FEC690398003FF809238007FE0EE1FF0707EA283160783A65F160F5F4C5A
4C5A4C5ADB03FFC8FC91B512F816E091388007F8ED01FC6F7E167F83707EA283A583A4F0
038017F8161F1900706C5AB6398003FE0E933801FFFC9338001FF039317EB03C>82
D<90391FF8018090B51203000314C73907F007EF390F8000FF48C7127F003E141F150F5A
150712FCA215037EA26C91C7FC13C0EA7FF0EBFF806C13F8ECFF806C14F06C806C806C14
FFC6FC013F1480010114C0D9001F13E01401EC003FED1FF0150F1507126000E01403A316
E07EA26CEC07C07EB4EC0F8001C0EB1F00D8FBFC13FE00F1B512F8D8E03F5BD8C0031380
24317CB02D>I<007FB8FCA39039C00FF801D87E00EC003F007C82007882A200708200F0
1780A3481603A5C792C7FCB3AA017FB6FCA331307DAF38>I<B5D8FC03B539F003FFFCA3
D803FEC7D80FF8C7EA0F80F207006D6F5C6C0307150EA26C6D6E5CA26E80017F4A5DA26E
496D1378013F021C1570A26E013C6D13F0011FDA387F5CA26D6C496C6C485AA26EEDF003
0107DAE01F5CA2DAFE01ECF8070103DAC00F91C7FCA2902601FF03ECFC0EEE800715836D
903A870003FE1CA203CFECFF3CDA7FCE6D1338A203FE15F86E486D5BA26E486E5AA36E48
6E5AA36E486E5AA36E486EC8FCA24E317EB053>87 D<EBFFF0000313FF390F803F809038
C00FE0486C6C7EA26E7ED80FC07FEA0780C7FCA414FF131FEBFFE33803FC03EA0FF0EA1F
C0123FEA7F80A2EAFF00A31407A2387F800D393FC01DFE3A1FE078FFF03907FFE07FC6EB
803F24207E9F27>97 D<EA01F812FFA3120F1207ADEC3FE0ECFFFC9038FBE07F9039FF00
1F8049EB0FC04914E049EB07F016F8A2ED03FCA316FEA816FCA3ED07F8A216F06DEB0FE0
6D14C001E7EB3F809039C3C0FE00903880FFF89038003FC027327EB12D>I<EB0FFF017F
13C03901FC01F03803F0033907E007F8120FEA1FC0003FEB03F0EC01E04848C7FCA312FF
A8127FA36C6C131CA2001F14386C7E000714703903F001E03901FC07C039007FFF00EB0F
F81E207D9F24>I<ED0FC0EC07FFA3EC007F153FADEB07F8EB3FFF9038FE07BF3903F801
FF3907E0007F120F4848133F123FA2485AA312FFA8127FA36C7EA2121F6C6C137F000714
FF2603F00313E03A01FC0F3FFE38007FFEEB0FF027327DB12D>I<EB0FFC90387FFF8039
01FC0FC03903F003E03907E001F0000F14F8391FC000FC003F14FEA24848137E157FA212
FFA290B6FCA20180C7FCA4127FA36C6C1307121F150E6C7E6C6C131C6C6C13783900FE03
E090383FFFC0903807FE0020207E9F25>I<EB01FE90380FFF8090381FC3C090387F07E0
9038FE0FF0120113FC1203EC07E0EC018091C7FCA8B512FCA3D803FCC7FCB3A8387FFFF0
A31C327EB119>I<90391FF007C09039FFFE3FE03A01F83F79F03907E00FC3000F14E190
39C007E0E0001FECF000A2003F80A5001F5CA2000F5CEBE00F00075C2603F83FC7FC3806
FFFE380E1FF090C9FC121EA2121F7F90B57E6C14F015FC6C806C801680000F15C0003FC7
127F007EEC1FE0007C140F00FC1407A4007EEC0FC0003E1580003F141FD80FC0EB7E0039
07F803FC0001B512F0D8001F90C7FC242F7E9F28>I<EA01F812FFA3120F1207ADEC07F8
EC3FFEEC783F02C013809039F9801FC0EBFB0001FE14E05BA35BB3B500C3B5FCA328327D
B12D>I<EA03C0487E487E487EA46C5A6C5A6C5AC8FCA9EA01F8127FA31207B3A7B51280
A311337DB217>I<EA01F812FFA3120F1207ADEDFFF8A3ED3F00153C5D5DEC03C04A5A4A
C7FC141E147814FCEBF9FE13FB90B5FC496C7E01FC7FEBF83F496C7E6E7E816E7E14036E
7E6E7E1680157F16C0B53881FFFEA327327EB12B>107 D<EA01F812FFA3120F1207B3B3
A6B512C0A312327DB117>I<2703F007F8EB1FE000FFD93FFEEBFFF8913A783F01E0FC02
C090388300FE280FF1801FC6137F2607F30013CC01F602F8148001FC5CA3495CB3B500C3
B5380FFFFCA33E207D9F43>I<3903F007F800FFEB3FFEEC783F02C013803A0FF1801FC0
3807F30001F614E013FCA35BB3B500C3B5FCA328207D9F2D>I<EB07FC90387FFFC03901
FC07F03903F001F848486C7E4848137E001F147F003F158049133F007F15C0A300FF15E0
A8007F15C0A36C6CEB7F80A2001F15006C6C13FE00075C3903F803F83901FE0FF039007F
FFC0D907FCC7FC23207E9F28>I<3901F83FE000FFEBFFFC9038FBE07F9039FF003F80D8
07FEEB1FC049EB0FE04914F0ED07F8A216FC1503A216FEA816FC1507A216F8A2ED0FF06D
14E06DEB1FC06DEB3F809039FBC0FE009038F8FFF8EC3FC091C8FCABB512C0A3272E7E9F
2D>I<3803F03F00FFEB7FC09038F1C3E01487390FF30FF0EA07F6A29038FC07E0EC03C0
91C7FCA25BB2B512E0A31C207E9F21>114 D<3801FF86000713FEEA1F00003C133E4813
1E140E12F8A36C90C7FCB47E13FC387FFFC06C13F0806C7F00077F00017FEA003F010013
80143F0060131F00E0130FA27E15007E6C131E6C131C38FF807838F3FFF038C07F801920
7D9F20>I<131CA5133CA3137CA213FC120112031207381FFFFEB5FCA2D803FCC7FCB0EC
0380A71201EC0700EA00FEEB7F0EEB3FFCEB07F0192E7FAD1F>I<D801F8EB07E000FFEB
03FFA3000FEB003F0007141FB3153FA20003147FA26C6CEBDFF03A00FE039FFF90387FFF
1FEB0FFC28207D9F2D>I<B5EB1FFCA3D80FF8EB03C0000715806D1307000315007F0001
140E7F6C5CA2EC803C017F1338ECC078013F1370ECE0F0011F5B14F1010F5B14F9903807
FB80A214FF6D90C7FCA26D5AA26D5AA21478A226207E9F2B>I<B53A1FFFE03FF8A33C0F
F000FE0007806D150300076EEB0700816D5D00039138FF800EA26C6C486D5A15DF01FF15
3C6C9039038FE038A2D97F876D5A150702C714F0D93FCF6D5AECCE03D91FFEEBF9C09138
FC01FD16FF010F5D4A7EA26D486DC7FCA20103147E4A133EA26D48131C35207E9F3A>I<
3A7FFF807FFCA33A03FC000F006C6C131E6C6C5BEC803890387FC078013F5B90381FE1E0
90380FF3C0ECFF806D90C7FC6D5A13016D7E81815B903803DFE09038078FF08190380F07
FC90381E03FEEB3C01496C7E4914804848EB7FC00003EC3FE026FFFC01B5FCA328207F9F
2B>I<B5EB1FFCA3D80FF8EB03C0000715806D1307000315007F0001140E7F6C5CA2EC80
3C017F1338ECC078013F1370ECE0F0011F5B14F1010F5B14F9903807FB80A214FF6D90C7
FCA26D5AA26D5AA21478A21470A214F05C1301007C5BEAFE035C49C8FC5BEAFC1EEA787C
EA3FF0EA0FC0262E7E9F2B>I E /Fs 35 122 df<127812FCA212FEA2127A1202A41204
A31208A212101220124007127B8510>44 D<127812FCA4127806067B8510>46
D<132013E01201120F12FF12F11201B3AD487EB512C0A212287BA71D>49
D<137E3801FF80380381E038060070481338121C0018131C1238A3123CA2003E13386C13
30EBC070380FE0E03807F9803803FF007E38007F803801FFC038031FF0380E07F8381C03
FCEA38000030137E0070131E140F5A1407A414060070130E0078130C00381318001E1338
380F81E03803FFC03800FE0018297EA71D>56 D<137E3801FF80380781C0380F00E0001E
1370481338A248133CA200F8131EA4141FA41278143FA27E001C135F7E6C139F3803831F
EA00FCEB001EA3143E143CA21438001C1378003E137014E0383C01C038180380381C0F00
EA0FFEEA03F818297EA71D>I<14101438A3147CA314BEA3EB011FA39038020F80A20104
7F1407A201087F1403A2496C7EA3496C7EA390387FFFFCA29038C0007E49133EA248C712
3F81A20002EC0F80A21206ED07C0001FEC0FE0D8FFE0EBFFFEA2272A7EA92C>65
D<02FF13200107EBC06090381F807090397E0018E001F813054848130348481301485A48
481300A248C812605A123E007E1520A2127C160012FCA9127CA2007E1520A2123E123F6C
15406C7EA26C6C14806C6CEB01006C6C5B6C6C1306017E131C90381F8070903807FFE001
0090C7FC232B7DA92A>67 D<B67E15F03907E001FC0003EB003E81ED0F80ED07C0ED03E0
ED01F0A2ED00F8A216FC167CA3167EAA167CA216FC16F8A2ED01F0A2ED03E016C0ED0780
ED1F00153E0007EB01FCB612F0158027297EA82D>I<B7FCA23907E0003F00031407ED03
801501A21500A416405CA21600A25CA2140F90B5FCA2EBE00F1403A2801620A391C7FC16
40A416C0A215011503ED07800007143FB7FCA223297EA828>I<B53883FFFEA23A07F000
1FC06C48EB0F80B090B6FCA29038E0000FB1486CEB1FC0B53883FFFEA227297EA82C>72
D<EAFFFEA2EA0FE0EA07C0B3B1EA0FE0EAFFFEA20F297DA815>I<D8FFE0913807FF80A2
0007EEF000D802F0EC0BE0A201781413A36D1423A36D1443A26D1483A3903907800103A3
903803C002A2903801E004A3903800F008A2EC7810A3EC3C20A3EC1E40A2EC0F80A30007
EB0700D80F804A7ED8FFF891B51280140231297EA836>77 D<D8FFE0EB3FFE7FD803F8EB
03E00002EC01C0017CEB0080137E133E7FA26D7E8013076D7E8013016D7E80147C80143F
80EC0F8015C01407EC03E015F01401EC00F8A2157C157E153E151FA2150F1507A2000714
03486C1301EAFFF8150027297EA82C>I<B512FCECFFC03907E007F00003EB00F8157C81
153F811680A61600153EA215784A5AEC07C0D9FFFEC7FCEBE007EC03C06E7E6E7E811578
157CA4157EA41601157F153F486CEB1F02B538800F82ED0784C8EA01F8282A7EA82B>82
D<EBFE013803FF83380F81E3381E003748131F00387F00787F127000F07FA3807EA26C90
C7FC127E127FEA3FE0EA1FFE380FFFE06C13F86C7FC66C7EEB07FFEB007FEC1F80140FEC
07C0A26C1303A47E1580A26C13076C14006C130E00EE5B38C3C07838C1FFF038803FC01A
2B7DA921>I<007FB612F0A2397C00F8010070EC00700060153000401510A200C01518A2
481508A5C71400B3A6497E90B512F8A225297EA82A>I<B538803FFEA23A07F00003E06C
48EB01C0ED0080B3A90001EC01007FA2000014020178130615046D5B6D133090380780E0
6DB45AD9007FC7FC272A7EA82C>I<D8FFFE903803FF80A2D80FE09038007C006C481430
6C6C1420A27F00015DA26C6C5CA27F017C49C7FCA2017E5B013E1302A26D5BA21480010F
5BA26D6C5AA36D6C5AA214F001015BA26D6C5AA214FC027DC8FCA2147F143EA2141CA314
08292A7FA82C>I<D8FFFE903801FF80A2D80FE09038007C00000715306C6C142000015D
7F00005D6D1301017E91C7FC013E1302133F6D5BEC800C90380FC00801075B14E001035B
ECF060903801F84001005B14FC027DC8FC147F143EAE147E90380FFFF0A229297FA82C>
89 D<EA03FCEA0C0738100380383C01C0003E7F6D7E121C1208C7FCA3137FEA03E0EA0F
80EA1E005A127C0078144012F8A31301127C393C027880381E0C7F3907F01E001A1A7E99
1D>97 D<120FB4FCA2121F7EACEB07E0EB1838EB600EEB8007158090380003C0A2EC01E0
A215F0A715E0A2140315C01580EB8007000EEB0F00EB401C380C303838080FC01C2A7EA9
21>I<13FC38038780380701C0000E13E0EA1C00003C13F0A2481378A212F8A2B512F800
F8C7FCA51278A26C1308A26C1310000E13206C13403801C18038007E00151A7E991A>
101 D<120FB4FCA2121F7EACEB07F0EB1838EB201C497E140F1380A21300B139FFF0FFF0
A21C2A7EA921>104 D<121E123FA4121EC7FCA9120FB4FCA2121F7EB3A2EAFFF0A20C29
7EA811>I<120FB4FCA2121F7EACECFFC0A2EC7E0014305C14405C0103C7FC1304130C13
1E133E135F138FEB0780801303806D7E1300801478147C147E39FFF1FFE0A21B2A7EA91F
>107 D<120FB4FCA2121F7EB3B2EAFFF0A20C2A7EA911>I<380F07F038FF1838EB201C38
1F400E000F130F1380A21300B139FFF0FFF0A21C1A7E9921>110
D<137E3803C3C0380700E0000E1370481338003C133CA248131EA200F8131FA80078131E
A26C133CA2001C13386C13706C13E03803C3C038007E00181A7E991D>I<380F07E038FF
1838EB601E380F800FEC0780010013C0140315E0A2EC01F0A715E01403A215C0EC078013
80EC0F00EB401CEB3078EB0FC090C8FCAAEAFFF0A21C267E9921>I<380F0F8038FF11C0
EB23E0EA1F43EA0F83EB81C0EB800090C7FCB07FEAFFFCA2131A7E9917>114
D<3807F080EA1C0DEA3003EA600112E01300A27E6C1300127EEA7FE0EA3FFC6C7EEA07FF
38003F801307388003C0A2130112C0A200E01380130300F01300EACC0EEA83F8121A7E99
17>I<7FA41201A31203A21207120F381FFF80B5FC38078000AD1440A73803C080120138
00E100133E12257FA417>I<000F130FB413FFA2001F131F6C7FB05CA26C132F3903804F
803901C08FF038007F0F1C1A7E9921>I<39FFF03FF0A2390FC01F003807801C3803C018
3801E0106D5A00005BEB78C06D5A013DC7FC7F7F80A2EB13C0EB21E0EB61F01340EB8078
3801007C48133C487F001F133F39FF807FF8A21D1A7F991F>120
D<39FFF01FF0A2390F8007800007EB03001402A26C6C5AA2EBE00C00011308A26C6C5AA2
EBF830EB7820A26D5AA2EB3EC0EB1E80A26DC7FCA31306A21304A2130C1308A2EA701012
F85BA2485AEA6180001FC8FC1C267F991F>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: Letter
%%BeginPaperSize: Letter
/setpagedevice where {
pop 1 dict dup /PageSize [ 612 792 ] put setpagedevice
} {
statusdict /lettertray known {
statusdict begin lettertray end
/letter where { pop letter } if
} {
/letter where {
pop letter
} {
statusdict /setpage known {
statusdict begin
612 792 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 761 104 a Fs(RICE)19 b(UNIVERSITY)196 312 y Fr(Impro)n(ving)26
b(the)h(Sp)r(eed)f(vs.)36 b(Accuracy)26 b(T)-7 b(radeo\013)28
b(for)160 403 y(Sim)n(ulating)e(Shared-Memory)g(Multipro)r(cessors)f
(with)765 495 y(ILP)i(Pro)r(cessors)1000 620 y Fs(b)n(y)658
734 y Fq(S.N.)22 b(Murth)n(y)i(Durbhakula)734 925 y Fp(A)e(Thesis)h
(Submitted)571 999 y(in)f(P)-5 b(ar)l(tial)23 b(Fulfillment)d(of)j(the)
570 1074 y(Requirements)g(f)o(or)g(the)f(Degree)771 1192
y Fq(Master)g(of)f(Science)1031 1427 y Fo(Appr)o(o)o(ved,)c(Thesis)h
(Committee:)p 1031 1609 900 2 v 1031 1669 a Fn(Sarita)f(V.)e(Adv)o(e,)g
(Chair)1031 1729 y(Assistan)o(t)h(Professor)i(in)e(Electrical)e(and)
1031 1789 y(Computer)i(Engineering)p 1031 1959 V 1031
2019 a(James)g(B.)f(Sinclair)1031 2080 y(Asso)q(ciate)i(Professor)g(of)
f(Electrical)f(and)1031 2140 y(Computer)h(Engineering)p
1031 2310 V 1031 2370 a(Alan)g(L.)g(Co)o(x)1031 2430
y(Asso)q(ciate)h(Professor)g(of)f(Computer)g(Science)833
2583 y Fs(Houston,)j(T)-5 b(exas)889 2688 y(April,)17
b(1998)p eop
%%Page: 2 2
2 1 bop 196 343 a Fr(Impro)n(ving)26 b(the)h(Sp)r(eed)f(vs.)36
b(Accuracy)26 b(T)-7 b(radeo\013)28 b(for)160 435 y(Sim)n(ulating)e
(Shared-Memory)g(Multipro)r(cessors)f(with)765 526 y(ILP)i(Pro)r
(cessors)709 691 y Fs(S.N.)19 b(Murth)n(y)f(Durbhakula)903
930 y Fq(Abstract)131 1035 y Fn(Curren)o(t)j(sim)o(ulators)g(for)h
(shared-memory)d(m)o(ultipro)q(cessor)h(arc)o(hitectures)g(in)o(v)o
(olv)o(e)f(a)j(large)131 1107 y(tradeo\013)c(b)q(et)o(w)o(een)d(sim)o
(ulation)f(sp)q(eed)j(and)g(accuracy)l(.)k(Most)c(sim)o(ulators)e
(assume)g(m)o(uc)o(h)g(sim-)131 1179 y(pler)22 b(pro)q(cessors)h(than)g
(the)e(curren)o(t)h(generation)g(of)g(pro)q(cessors)i(that)e(aggressiv)
o(ely)f(exploit)131 1252 y(instruction-lev)o(el)c(parallelism)g
(\(ILP\).)i(This)h(can)f(result)g(in)g(large)g(sim)o(ulation)f
(inaccuracies.)131 1324 y(A)c(few)h(new)o(er)f(sim)o(ulators)f(mo)q
(del)g(curren)o(t)h(ILP)h(pro)q(cessors)h(more)d(accurately)l(,)h(but)g
(are)h(ab)q(out)131 1396 y(ten)h(times)f(slo)o(w)o(er.)204
1468 y(This)d(study)g(prop)q(oses)h(and)f(ev)m(aluates)g(a)g(new)f(sim)
o(ulation)f(tec)o(hnique)g(that)i(requires)e(almost)131
1540 y(no)17 b(compromise)d(in)i(accuracy)f(and)i(far)g(less)f
(compromise)d(in)j(sp)q(eed)h(compared)e(to)i(the)f(state-)131
1613 y(of-the-art.)22 b(This)14 b(tec)o(hnique)e(uses)i(a)g(no)o(v)o
(el)e(adaptation)k(of)e(direct)f(execution,)f(a)j(metho)q(dology)131
1685 y(used)j(widely)f(for)i(sim)o(ulation)d(of)i(m)o(ultipro)q
(cessors)f(with)h(simple)e(pro)q(cessors.)28 b(W)l(e)18
b(dev)o(elop)f(a)131 1757 y(new)g(sim)o(ulator)d(based)j(on)g(this)f
(tec)o(hnique,)e(called)h(DirectRSIM.)204 1829 y(W)l(e)i(compare)f(the)
g(p)q(erformance)g(and)h(accuracy)g(of)g(DirectRSIM)e(with)h(three)h
(other)g(sim-)131 1902 y(ulators)h({)f(t)o(w)o(o)f(curren)o(t)g(direct)
g(execution)f(sim)o(ulators)h(that)h(use)g(a)g(simple)d(pro)q(cessor)k
(mo)q(del,)131 1974 y(and)e(RSIM,)f(a)h(state-of-the-art)h(detailed)d
(sim)o(ulator)g(for)i(m)o(ultipro)q(cessors)e(with)i(ILP)g(pro)q(ces-)
131 2046 y(sors.)21 b(F)l(or)13 b(v)m(arious)g(com)o(binations)e(of)i
(applications)f(and)h(system)e(con\014gurations,)j(w)o(e)e(\014nd)h
(that)131 2118 y(DirectRSIM)h(is)h(an)h(a)o(v)o(erage)f(of)h(4)g(times)
d(faster)j(than)g(RSIM)f(with)g(an)h(a)o(v)o(erage)f(relativ)o(e)e
(error)131 2191 y(of)20 b(1.6\045.)29 b(In)19 b(con)o(trast,)g(the)g
(curren)o(t)f(direct)g(execution)g(sim)o(ulators)f(see)i(large)g(and)h
(v)m(ariable)131 2263 y(errors)e(relativ)o(e)e(to)i(RSIM,)f(with)h(an)g
(a)o(v)o(erage)f(of)h(around)h(40\045)f(with)g(the)f(b)q(est)i(metho)q
(dology)131 2335 y(and)g(130\045)f(for)g(the)g(most)e(commonly)f(used)j
(metho)q(dology)l(.)25 b(Despite)18 b(its)f(sup)q(erior)h(accuracy)l(,)
131 2407 y(DirectRSIM)f(ac)o(hiev)o(es)g(a)i(sp)q(eed)g(within)f(a)i
(factor)f(of)g(2.7)g(of)g(that)g(ac)o(hiev)o(ed)e(b)o(y)h(the)g(curren)
o(t)131 2479 y(direct)i(execution)f(sim)o(ulators)h(with)g(simple)e
(pro)q(cessors.)36 b(Although)21 b(the)f(p)q(erformance)g(ad-)131
2552 y(v)m(an)o(tage)f(of)f(simple)d(pro)q(cessor)k(based)g(sim)o
(ulators)d(is)i(still)f(signi\014can)o(t,)g(it)h(ma)o(y)e(no)i(longer)g
(b)q(e)131 2624 y(enough)f(to)g(justify)f(the)g(errors)g(that)h(suc)o
(h)f(sim)o(ulators)f(see)h(in)g(mo)q(deling)f(the)h(p)q(erformance)f
(of)131 2696 y(shared-memory)f(systems)h(with)h(state-of-the-art)i(pro)
q(cessors.)p eop
%%Page: 3 3
3 2 bop 715 403 a Fr(Ac)n(kno)n(wledgmen)n(ts)131 658
y Fn(I)13 b(w)o(ould)g(lik)o(e)f(to)i(thank)f(m)o(y)e(advisor,)j
(Sarita)g(Adv)o(e,)e(for)i(her)f(guidance)g(throughout)i(this)e(w)o
(ork.)131 730 y(Without)h(her)g(motiv)m(ation)e(and)j(supp)q(ort)f
(this)g(w)o(ork)g(w)o(ould)f(not)i(ha)o(v)o(e)d(b)q(een)i(p)q(ossible.)
21 b(I)13 b(thank)131 802 y(m)o(y)e(group)j(mem)o(b)q(ers)c(P)o(artha,)
k(Vija)o(y)e(and)i(Hazim)c(for)k(their)e(encouragemen)o(t)f(and)j
(advice)e(o)o(v)o(er)131 874 y(the)20 b(last)g(t)o(w)o(o)f(y)o(ears.)32
b(I)19 b(w)o(ould)h(also)g(lik)o(e)e(to)i(thank)g(m)o(y)e(other)i
(commit)o(tee)d(mem)n(b)q(ers,)h(Alan)131 947 y(Co)o(x)f(and)f(Bart)g
(Sinclair,)f(for)i(their)e(v)m(aluable)h(feedbac)o(k.)204
1021 y(This)i(thesis)g(originated)f(from)g(m)o(y)e(join)o(t)j(w)o(ork)f
(with)h(Vija)o(y)e(P)o(ai.)25 b(Man)o(y)18 b(thanks)g(are)f(due)131
1093 y(to)i(him)d(for)i(con)o(tributing)f(hea)o(vily)g(to)h(this)g(pro)
s(ject)f(b)q(oth)i(through)g(substan)o(tial)f(co)q(ding)h(and)131
1165 y(enric)o(hing)c(discussions)i(o)o(v)o(er)e(the)h(course)h(of)f
(our)h(researc)o(h.)204 1240 y(Sp)q(ecial)d(thanks)h(to)f(Mahesh)g(for)
h(w)o(orking)f(with)g(me)e(on)j(the)f(initial)e(phase)j(of)f(this)g
(pro)s(ject.)204 1314 y(I)j(w)o(ould)g(also)h(lik)o(e)d(to)i(thank)h
(all)e(m)o(y)f(friends)i(at)g(Rice)f(who)i(made)e(w)o(orking)h(at)g(sc)
o(ho)q(ol)h(an)131 1386 y(enjo)o(y)o(able)d(and)i(rew)o(arding)f(exp)q
(erience.)204 1461 y(Finally)l(,)22 b(I)g(w)o(ould)g(lik)o(e)f(to)h
(thank)h(m)o(y)d(paren)o(ts,)j(m)o(y)d(brother)j(and)f(m)o(y)f(sister)h
(for)g(their)131 1533 y(un)o(w)o(a)o(v)o(ering)15 b(encouragemen)o(t)g
(and)i(supp)q(ort)g(while)f(I)f(sp)q(en)o(t)i(time)d(far)i(a)o(w)o(a)o
(y)g(from)g(home.)p eop
%%Page: 4 4
4 3 bop 874 403 a Fr(Con)n(ten)n(ts)204 657 y Fn(Abstract)1514
b(ii)204 730 y(Ac)o(kno)o(wledgmen)o(ts)1303 b(iii)204
803 y(List)17 b(of)f(Illustrations)1277 b(vi)131 942
y Fq(1)39 b(In)n(tro)r(duction)1326 b(1)204 1015 y Fn(1.1)51
b(Motiv)m(ation)17 b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)96 b(1)204 1088 y(1.2)51 b(Con)o(tributions)33
b(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96
b(2)204 1161 y(1.3)51 b(Organization)g(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)g(.)h(.)f(.)h(.)f(.)96 b(5)131 1300 y Fq(2)39 b(Bac)n(kground)1344
b(6)204 1373 y Fn(2.1)51 b(Ov)o(erview)14 b(of)j(Curren)o(t)e(Sim)o
(ulation)g(T)l(ec)o(hniques)45 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g
(.)h(.)f(.)h(.)f(.)96 b(6)204 1446 y(2.2)51 b(Direct)15
b(Execution)h(Sim)o(ulation)e(for)i(Shared-Memory)f(Arc)o(hitectures)f
(with)317 1518 y(Simple)f(Pro)q(cessors)24 b(.)g(.)g(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g
(.)h(.)f(.)h(.)f(.)96 b(8)204 1592 y(2.3)51 b(Sim)o(ulators)14
b(for)j(Shared-Memory)e(Arc)o(hitectures)f(with)i(ILP)h(Pro)q(cessors)
39 b(.)24 b(.)96 b(9)317 1665 y(2.3.1)56 b(ILP)16 b(Pro)q(cessors)45
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96 b(9)317 1738 y(2.3.2)56
b(Detailed)15 b(Sim)o(ulation)f(of)j(Shared-Memory)e(Arc)o(hitectures)f
(with)473 1810 y(ILP)i(Pro)q(cessors)45 b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(10)317 1883 y(2.3.3)56 b(Curren)o(t)16 b(appro)o(ximations)
f(for)i(Sim)o(ulating)d(Shared-Memory)473 1956 y(Arc)o(hitectures)g
(with)i(ILP)g(Pro)q(cessors)h(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)g(.)h(.)f(.)h(.)f(.)71 b(10)131 2094 y Fq(3)39 b(Direct)22
b(Execution)g(for)f(Sim)n(ulation)j(of)c(Multipro)r(cessors)h(with)204
2184 y(ILP)i(Pro)r(cessors)1214 b(12)204 2257 y Fn(3.1)51
b(Handling)16 b(Non-Blo)q(c)o(king)f(Loads)34 b(.)24
b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h
(.)f(.)h(.)f(.)71 b(13)204 2330 y(3.2)51 b(Timing)14
b(Sim)o(ulation)h(of)h(other)g(ILP)h(F)l(eatures)f(and)h(Mispredicted)d
(P)o(aths)43 b(.)24 b(.)71 b(14)204 2403 y(3.3)51 b(Implem)o(e)o(n)o
(tation)14 b(of)i(the)g(DirectRSIM)f(Sim)o(ulator)45
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(17)317 2477 y(3.3.1)56 b(Application)15 b(Co)q(de)i(Instrumen)o
(tation)11 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(17)317 2550 y(3.3.2)56 b(Arc)o(hitectural)14
b(Timing)g(Sim)o(ulator)h(Implem)o(en)o(tati)o(on)25
b(.)g(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(18)131 2688 y Fq(4)39
b(Ev)l(aluation)25 b(Metho)r(dology)938 b(23)p eop
%%Page: 5 5
5 4 bop 1906 72 a Fn(v)204 222 y(4.1)51 b(Sim)o(ulated)14
b(Arc)o(hitectures)41 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(23)204 296 y(4.2)51 b(Sim)o(ulators)14 b(Used)i(in)g(the)g(Study)43
b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
g(.)h(.)f(.)h(.)f(.)71 b(24)204 371 y(4.3)51 b(Metrics)13
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(26)204 445 y(4.4)51 b(Applications)20 b(.)25
b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(27)131 583 y Fq(5)39 b(Results)1444 b(29)204 658 y
Fn(5.1)51 b(Sim)o(ulator)14 b(Accuracy)20 b(.)k(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)71 b(30)317 732 y(5.1.1)56 b(Base)16 b(Con\014guration)33
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(30)317 806 y(5.1.2)56
b(Other)16 b(system)e(con\014gurations)33 b(.)25 b(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(32)204 881 y(5.2)51 b(Sim)o(ulator)14 b(P)o(erformance)28
b(.)c(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(33)204 955 y(5.3)51
b(Detailed)15 b(analysis)h(of)h(DirectRSIM's)d(p)q(erformance)i(.)24
b(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(35)317
1029 y(5.3.1)56 b(Comparing)16 b(DirectRSIM)e(with)i(RSIM)24
b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(35)317 1104 y(5.3.2)56 b(Comparing)16 b(DirectRSIM)e(with)i(Simple)42
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(39)131 1242 y Fq(6)39 b(Related)23 b(W)-6 b(ork)1252
b(42)131 1380 y(7)39 b(Conclusions)1312 b(45)204 1455
y Fn(7.1)51 b(Thesis)16 b(Summary)45 b(.)24 b(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)71 b(45)204 1529 y(7.2)51 b(F)l(uture)15
b(W)l(ork)h(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)
71 b(47)204 1667 y Fq(Bibliograph)n(y)1286 b(49)131 1806
y(A)22 b(P)n(erformance)g(Comparison)h(of)e(Simple)k(Sim)n(ulators)283
b(53)131 1944 y(B)25 b(Absolute)g(P)n(erformance)f(of)g(Sim)n(ulators)i
(in)g(Instructions)f(p)r(er)204 2034 y(Second)1454 b(55)p
eop
%%Page: 6 6
6 5 bop 818 403 a Fr(Illustrations)204 730 y Fn(2.1)51
b(Classi\014cation)16 b(of)h(Sim)o(ulation)d(T)l(ec)o(hniques)30
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)
96 b(7)204 876 y(4.1)51 b(Base)16 b(system)e(parameters)43
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(25)204 951 y(4.2)51
b(Application)15 b(input)h(sizes)f(and)i(con\014gurations)45
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(28)204 1097 y(5.1)51 b(Comparison)16 b(of)g(sim)o(ulator)f(accuracy)h
(and)h(p)q(erformance)e(for)h(the)g(base)317 1170 y(system)e
(con\014guration)41 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(31)204 1244 y(5.2)51 b(Execution)15 b(time)f(errors)j(of)f(sim)o
(ulation)f(mo)q(dels.)20 b(\(Av)o(erages)15 b(are)i(o)o(v)o(er)e(the)
317 1316 y(absolute)h(v)m(alues)g(of)h(the)f(errors.\))41
b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
g(.)h(.)f(.)h(.)f(.)71 b(34)204 1390 y(5.3)51 b(P)o(erformance)14
b(analysis)j(of)f(the)g(sim)o(ulators.)26 b(.)e(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(36)204 1465
y(5.4)51 b(Comp)q(onen)o(ts)16 b(of)g(RSIM's)g(sim)o(ulation)e(time)g
(and)j(impact)d(of)j(DirectRSIM)48 b(.)71 b(38)204 1539
y(5.5)51 b(DirectRSIM)14 b(sim)o(ulation)h(o)o(v)o(erhead)g(and)i
(sources)g(of)f(slo)o(wdo)o(wn)h(relativ)o(e)d(to)317
1611 y(Simple)27 b(.)d(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)71 b(40)204 1758 y(A.1)38 b(Sim)o(ulation)14
b(time)g(for)i(SPLASH-2)h(applications)47 b(.)25 b(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(54)204 1904 y(B.1)40
b(Absolute)15 b(p)q(erformance)h(of)g(the)g(sim)o(ulators)f(in)h
(kilo-instructions)f(p)q(er)i(second.)50 b(55)p eop
%%Page: 7 7
7 6 bop eop
%%Page: 1 8
1 7 bop 1907 72 a Fn(1)853 361 y Fr(Chapter)28 b(1)809
564 y(In)n(tro)r(duction)131 774 y Fq(1.1)66 b(Motiv)l(ation)131
898 y Fn(Shared-memory)17 b(m)o(ultipro)q(cessors)h(o\013er)i
(signi\014can)o(t)f(p)q(erformance)f(increases)h(o)o(v)o(er)f(unipro-)
131 989 y(cessors,)28 b(and)f(are)e(a)i(gro)o(wing)f(segmen)o(t)e(of)i
(the)g(high)f(p)q(erformance)g(computing)g(mark)o(et.)131
1079 y(Sim)o(ulation)f(has)i(b)q(een)f(the)g(most)g(widely)f(used)i
(tec)o(hnique)e(for)h(ev)m(aluating)h(new)g(shared-)131
1169 y(memory)17 b(arc)o(hitectures.)31 b(Recen)o(t)18
b(adv)m(ances)j(in)e(pro)q(cessor)i(arc)o(hitecture,)d(ho)o(w)o(ev)o
(er,)h(force)h(a)131 1260 y(re-ev)m(aluation)d(of)h(shared-memory)d
(sim)o(ulation)g(metho)q(dology)l(.)23 b(Sp)q(eci\014cally)l(,)16
b(recen)o(t)g(pro)q(ces-)131 1350 y(sors)h(\(referred)e(to)h(as)h
Fm(ILP)g(pr)n(o)n(c)n(essors)d Fn(in)h(this)h(thesis\))g(exploit)f
(instruction-lev)o(el)f(parallelism)131 1440 y(\(ILP\))19
b(through)h(aggressiv)o(e)f(tec)o(hniques)e(suc)o(h)i(as)g(m)o(ultiple)
d(issue,)i(out-of-order)j(issue,)d(non-)131 1530 y(blo)q(c)o(king)h
(loads,)i(and)f(sp)q(eculativ)o(e)e(execution.)30 b(Most)20
b(shared-memory)e(sim)o(ulation)f(studies)131 1621 y(rep)q(orted)c(in)f
(the)g(literature,)f(ho)o(w)o(ev)o(er,)g(use)i(a)f(m)o(uc)o(h)e
(simpler)g(mo)q(del)h(of)i(the)f(pro)q(cessor,)h(assum-)131
1711 y(ing)j(single-issue,)e(in-order)h(issue,)g(blo)q(c)o(king)g
(loads,)h(and)g(no)f(sp)q(eculativ)o(e)f(execution)g(\(referred)131
1801 y(to)j(as)g Fm(simple)h(pr)n(o)n(c)n(essors)c Fn(in)i(this)g
(thesis\))g([10,)g(11)q(].)204 1894 y(P)o(ai)f(et)f(al.)21
b(sho)o(w)o(ed)15 b(that)g(using)g(simple-pro)q(cessor)f(based)h(sim)o
(ulation)e(mo)q(dels)h(to)h(appro)o(x-)131 1984 y(imate)e(ILP)i(pro)q
(cessor)g(based)g(systems)f(can)g(result)g(in)h(large)f(inaccuracies)g
([17].)20 b(F)l(or)15 b(the)f(most)131 2074 y(commonly)k(used)j
(simple-pro)q(cessor)e(based)i(sim)o(ulation)e(mo)q(dels,)h(P)o(ai)g
(et)g(al.)34 b(rep)q(ort)21 b(errors)131 2165 y(in)h(execution)e(time)g
(ranging)i(from)f(26\045)h(to)g(192\045)h(for)e(their)g(applications)h
(and)g(sim)o(ulated)131 2255 y(systems.)38 b(A)21 b(less)h(commonly)d
(used)j(appro)o(ximation)f(based)i(on)f(simple)e(pro)q(cessor)j(mo)q
(dels)131 2345 y(reduced)17 b(these)h(errors,)f(but)h(the)g(errors)g
(remained)d(large)j(and)g(application)g(dep)q(enden)o(t)f(\(-8\045)131
2435 y(to)g(73\045\).)204 2528 y(In)k(spite)g(of)g(the)f(p)q(oten)o
(tial)h(for)g(large)g(errors,)h(the)f(practice)f(of)h(using)g
(simple-pro)q(cessor)131 2618 y(based)e(sim)o(ulators)d(con)o(tin)o
(ues.)26 b(This)18 b(is)f(largely)h(b)q(ecause)g(although)h(the)e(more)
g(detailed)g(ILP)p eop
%%Page: 2 9
2 8 bop 1907 72 a Fn(2)131 222 y(sim)o(ulators)13 b(are)i(more)e
(accurate,)h(they)g(are)g(generally)g(m)o(uc)o(h)e(slo)o(w)o(er)h(than)
i(the)f(simple)f(pro)q(ces-)131 312 y(sor)j(sim)o(ulators.)j(Studies)c
(with)g(slo)o(w)f(sim)o(ulators)g(are)h(also)g(p)q(oten)o(tially)f(sub)
s(ject)h(to)g(erroneous)131 403 y(conclusions)i(as)h(they)e(ma)o(y)g(b)
q(e)h(restricted)f(to)h(smaller)e(application)i(input)g(sizes)f(or)h
(few)o(er)g(ap-)131 493 y(plications.)23 b(Confron)o(ted)18
b(with)e(this)h(dilemm)o(a)e(of)i(sp)q(eed)g(vs.)23 b(accuracy)l(,)17
b(the)f(shared-memory)131 583 y(arc)o(hitecture)c(comm)o(unit)n(y)f(so)
j(far)g(app)q(ears)g(to)g(b)q(e)g(reconciled)e(to)i(accepting)f(the)g
(errors)h(of)g(sim-)131 674 y(ple)19 b(pro)q(cessor)h(based)f(sim)o
(ulators.)28 b(F)l(or)19 b(example,)e(of)i(the)g(\014v)o(e)f
(shared-memory)f(sim)o(ulation)131 764 y(studies)j(in)f(ISCA)h('97)557
746 y Fl(1)596 764 y Fn(that)h(rep)q(orted)f(results)f(for)h(full)f
(applications,)h(four)g(studies)g(used)g(a)131 854 y(pro)q(cessor)j(mo)
q(del)d(with)h(in-order)h(issue,)g(blo)q(c)o(king)f(loads,)i(and)f(no)g
(sp)q(eculativ)o(e)e(execution,)131 944 y(and)d(three)f(of)g(these)g
(studies)g(assumed)g(a)h(single-issue)e(pro)q(cessor.)204
1037 y(In)o(tuitiv)o(ely)l(,)21 b(sim)o(ulators)g(that)i(mo)q(del)e
(ILP)i(pro)q(cessors)g(in)g(detail)e(can)i(b)q(e)f(exp)q(ected)g(to)131
1127 y(b)q(e)f(m)o(uc)o(h)d(slo)o(w)o(er)h(than)i(simple-pro)q(cessor)f
(based)g(sim)o(ulators)f(b)q(ecause)i(sim)o(ulating)d(an)j(ILP)131
1217 y(pro)q(cessor)16 b(is)e(inheren)o(tly)f(more)h(complex)e(\(and)j
(therefore)f(slo)o(w)o(er\))g(than)i(sim)o(ulating)c(a)j(simple)131
1308 y(pro)q(cessor.)21 b(Additionally)l(,)11 b(o)o(v)o(er)g(the)h
(last)g(decade,)g(sev)o(eral)f(sp)q(eed)h(enhancing)h(tec)o(hniques)d
(ha)o(v)o(e)131 1398 y(b)q(een)19 b(dev)o(elop)q(ed)f(for)i(simple-pro)
q(cessor)e(sim)o(ulators)f(that)j(are)f(curren)o(tly)e(not)j
(applicable)e(to)131 1488 y(ILP)e(pro)q(cessor)h(sim)o(ulators.)j(One)c
(suc)o(h)f(widely)g(used)h(tec)o(hnique)e(is)i(direct)f(execution,)f
(whic)o(h)131 1578 y(decouples)22 b(functional)g(and)h(timing)e(sim)o
(ulation.)37 b(F)l(unctional)22 b(sim)o(ulation)f(is)h(done)h(at)g(the)
131 1669 y(sp)q(eed)13 b(of)g(the)f(sim)o(ulation)f(host)i(mac)o(hine)d
(b)o(y)i(directly)f(executing)g(application)h(instructions)h(on)131
1759 y(the)g(host)h(mac)o(hine.)k(F)l(or)c(the)f(timing)f(sim)o
(ulation,)f(t)o(ypically)g(only)i(memory)e(accesses)i(are)g(fully)131
1849 y(sim)o(ulated;)h(the)h(timing)f(for)i(other)g(instructions)f(is)h
(computed)e(through)j(static)f(instrumen)o(ta-)131 1940
y(tion)e(of)h(the)f(application)g(program.)20 b(W)l(e)14
b(h)o(yp)q(othesize)f(that)i(sp)q(eed)f(enhancing)g(tec)o(hniques)f
(for)131 2030 y(simple-pro)q(cessor)h(sim)o(ulators)f(can)i(also)g(b)q
(e)g(applied)f(to)h(ILP)g(pro)q(cessor)h(sim)o(ulators,)d(and)i(test)
131 2120 y(our)i(h)o(yp)q(othesis)f(for)h(direct)e(execution.)131
2304 y Fq(1.2)66 b(Con)n(tributions)131 2429 y Fn(This)21
b(thesis)f(dev)o(elops)f(and)i(ev)m(aluates)g(a)f(new)h(sim)o(ulation)d
(tec)o(hnique)h(based)h(on)h(direct)f(ex-)131 2519 y(ecution)i(that)h
(signi\014can)o(tly)e(impro)o(v)o(es)e(the)j(sp)q(eed)h(vs.)39
b(accuracy)22 b(tradeo\013)h(for)f(sim)o(ulating)p 131
2592 450 2 v 131 2636 a Fk(1)150 2651 y Fj(Pro)q(ceedings)15
b(of)f(the)g(24th)g(Ann)o(ual)f(In)o(ternational)g(Symp)q(osium)e(on)j
(Computer)f(Arc)o(hitecture)p eop
%%Page: 3 10
3 9 bop 1907 72 a Fn(3)131 222 y(shared-memory)20 b(m)o(ultipro)q
(cessors)g(with)h(ILP)h(pro)q(cessors.)38 b(W)l(e)21
b(compare)g(four)h(sim)o(ulators)131 312 y(equiv)m(alen)o(t)15
b(in)h(ev)o(ery)f(resp)q(ect)g(other)i(than)g(the)f(pro)q(cessor)h(sim)
o(ulation:)204 450 y Fi(\017)24 b Fh(RSIM)14 b Fn({)g(State-of-the-art)
h(detailed)e(sim)o(ulator)f(for)i(shared-memory)e(m)o(ultipro)q
(cessors)253 540 y(with)k(ILP)h(pro)q(cessors.)204 670
y Fi(\017)24 b Fh(DirectRSIM)14 b Fn({)i(Uses)f(our)h(new)g(tec)o
(hnique)d(for)j(sim)o(ulating)e(ILP-based)i(m)o(ultipro)q(ces-)253
760 y(sors)h(using)g(direct)e(execution.)204 890 y Fi(\017)24
b Fh(Simple)13 b Fn({)j(Direct)e(execution)g(based)i(sim)o(ulator)d
(for)j(shared-memory)d(m)o(ultipro)q(cessors)253 980
y(with)j(simple)e(pro)q(cessors)204 1110 y Fi(\017)24
b Fh(Simple-ix)12 b Fn({)k(This)g(is)f(iden)o(tical)e(to)j(Simple)d
(except)i(that)h(to)f(mo)q(del)g(an)h(ILP)f(pro)q(cessor)253
1200 y(of)g(issue)f(width)g Fm(i)p Fn(,)g(it)g(sim)o(ulates)e(a)j
(simple)d(pro)q(cessor)j(whose)g(clo)q(c)o(k)e(sp)q(eed)h(and)h(L1)g
(cac)o(he)253 1290 y(access)23 b(time)d(are)j(sp)q(ed)g(b)o(y)g(a)g
(factor)g(of)g Fm(i)f Fn(compared)g(to)h(the)g(ILP)g(pro)q(cessor.)41
b(This)253 1380 y(appro)o(ximation)16 b(has)i(b)q(een)f(used)g(in)g(a)g
(few)g(studies,)g(and)g(w)o(as)h(sho)o(wn)f(b)o(y)g(P)o(ai)g(et)f(al.)
24 b(to)253 1471 y(b)q(e)14 b(the)g(b)q(est)g(curren)o(t)f(appro)o
(ximation)g(when)h(mo)q(deling)e(ILP)i(pro)q(cessors)i(with)d(a)h
(simple)253 1561 y(pro)q(cessor)j(based)g(mo)q(del)e([17].)204
1698 y(W)l(e)j(p)q(erform)e(our)i(analysis)f(for)h(di\013eren)o(t)f
(system)f(con\014gurations)i(and)g(application)g(pro-)131
1789 y(grams.)j(F)l(or)16 b(these)g(con\014gurations)i(and)f(programs,)
f(our)g(k)o(ey)g(\014ndings)g(are:)204 1926 y Fi(\017)24
b Fh(RSIM)19 b(vs.)26 b(simple-pro)r(ce)o(ssor)17 b(sim)n(ulators)e
Fn({)i(The)f(simple)f(pro)q(cessor)j(sim)o(ulators)253
2016 y(are)i(an)f(a)o(v)o(erage)g(of)h(10)g(times)d(faster)j(than)f
(RSIM.)g(The)g(sp)q(eed)g(adv)m(an)o(tage,)i(ho)o(w)o(ev)o(er,)253
2106 y(comes)13 b(at)h(the)g(cost)g(of)g(large)g(errors)g(\(as)h(also)f
(rep)q(orted)g(b)o(y)g(P)o(ai)g(et)f(al.)h([17]\).)20
b(W)l(e)14 b(\014nd)g(an)253 2197 y(error)h(in)g(execution)f(time)f(of)
i(2\045)g(to)g(128\045)h(\(a)o(v)o(erage)f(of)g(42\045\))g(with)g
(Simple-)p Fg(i)p Fn(x)e(and)i(9\045)253 2287 y(to)j(438\045)h(\(a)o(v)
o(erage)e(of)i(131\045\))f(with)g(Simple.)24 b(The)18
b(errors)g(are)g(relativ)o(e)e(to)i(the)g(results)253
2377 y(rep)q(orted)f(b)o(y)e(RSIM.)204 2507 y Fi(\017)24
b Fh(New)17 b(sim)n(ulator)f(vs.)23 b(RSIM)15 b Fn({)g(DirectRSIM)e(is)
i(an)g(a)o(v)o(erage)g(of)g(4)g(times)e(faster)i(than)253
2597 y(RSIM)k(with)h(1.6\045)f(error)h(in)f(execution)g(time)e(on)k
(the)e(a)o(v)o(erage)g(\(within)g(2\045)h(for)g(most)253
2688 y(cases)d(and)g(a)f(maxim)o(um)c(of)k(6.3\045\).)p
eop
%%Page: 4 11
4 10 bop 1907 72 a Fn(4)204 222 y Fi(\017)24 b Fh(Simple)16
b(pro)r(cessor)h(sim)n(ulators)f(vs.)24 b(New)18 b(sim)n(ulator)32
b Fn({)16 b(Simple)d(and)j(Simple-)p Fg(i)p Fn(x)253
312 y(are)f(an)g(a)o(v)o(erage)f(of)h(2.7)g(times)e(faster)h(than)h
(DirectRSIM.)e(This)i(sp)q(eed,)f(ho)o(w)o(ev)o(er,)f(again)253
403 y(has)19 b(a)g(high)g(cost)f({)h(up)f(to)h(128\045)g(error)g(in)f
(execution)f(time)f(for)j(Simple-)p Fg(i)p Fn(x)c(and)k(up)g(to)253
493 y(438\045)e(error)f(for)h(Simple.)204 639 y(The)23
b(ab)q(o)o(v)o(e)f(results)g(clearly)f(illustrate)h(the)g(v)m(alue)g
(of)g(the)h(new)f(sim)o(ulation)e(tec)o(hnique.)131 730
y(DirectRSIM)f(is)g(m)o(uc)o(h)f(faster)i(than,)h(and)f(almost)g(as)g
(accurate)g(as,)h(the)e(detailed)g(ILP)i(sim-)131 820
y(ulator.)32 b(Comparisons)20 b(with)g(the)f(more)g(common)e(simple)h
(sim)o(ulators)g(yield)h(an)h(ev)o(en)f(more)131 910
y(striking)c(result.)20 b(The)15 b(10x)h(sp)q(eed)f(adv)m(an)o(tage)h
(of)f(the)g(simple)e(sim)o(ulators)h(o)o(v)o(er)g(RSIM)g(made)g(a)131
1000 y(comp)q(elling)e(argumen)o(t)g(for)i(their)e(use)i(in)f(spite)g
(of)g(their)g(p)q(oten)o(tial)g(for)h(large)f(errors.)21
b(Ho)o(w)o(ev)o(er,)131 1091 y(the)12 b(simple)f(sim)o(ulators)g(only)h
(ha)o(v)o(e)f(a)i(2.7x)g(sp)q(eed)f(adv)m(an)o(tage)i(relativ)o(e)c(to)
j(DirectRSIM.)d(While)131 1181 y(this)18 b(factor)h(is)f(still)f
(signi\014can)o(t,)h(it)g(is)g(not)h(clear)e(that)i(this)f(adv)m(an)o
(tage)i(is)e(alw)o(a)o(ys)g(w)o(orth)h(the)131 1271 y(cost)c(of)g(the)g
(p)q(oten)o(tial)f(errors)h(\(up)g(to)g(128\045)g(error)g(in)f
(execution)g(time)f(for)h(Simple-)p Fg(i)p Fn(x\).)k(Th)o(us,)131
1362 y(our)h(results)f(suggest)h(a)g(reconsideration)f(of)g(the)g
(appropriate)h(sim)o(ulation)d(metho)q(dology)i(for)131
1452 y(shared-memory)c(systems.)204 1544 y(This)j(thesis)g(fo)q(cuses)g
(on)g(using)g(direct)f(execution)g(as)h(an)g(optimization)e(tec)o
(hnique)g(to)i(en-)131 1634 y(hance)i(sim)o(ulation)f(sp)q(eed.)30
b(Ho)o(w)o(ev)o(er,)17 b(most)i(of)g(the)g(discussion)g(in)g(this)g
(thesis)g(also)h(applies)131 1725 y(to)15 b(sim)o(ulators)e(based)i(on)
h(dynamic)c(binary)j(translation)g([24].)20 b(Suc)o(h)15
b(sim)o(ulators)e(dynamically)131 1815 y(translate)20
b(the)f(application)h(co)q(de)f(in)o(to)h(optimized)d(sequences)h(of)i
(the)g(nativ)o(e)e(host)i(mac)o(hine)131 1905 y(co)q(de,)c(thereb)o(y)f
(also)h(applying)g(a)g(form)f(of)h(direct)f(execution)g(and)h(sharing)h
(most)e(of)h(the)f(prob-)131 1996 y(lems)g(and)i(solutions)h(p)q(osed)f
(in)g(this)f(thesis.)23 b(Other)16 b(sim)o(ulation)f(optimizations)h
(suc)o(h)g(as)i(par-)131 2086 y(allelization)e([18])i(and)g(sampling)e
([4])h(are)h(orthogonal)h(to)f(the)f(pro)q(cessor)i(mo)q(del,)d(and)i
(can)g(b)q(e)131 2176 y(used)e(to)g(further)f(enhance)h(the)f(p)q
(erformance)g(of)h(ILP-based)g(sim)o(ulations)e(in)h(a)h(manner)f
(simi-)131 2267 y(lar)i(to)g(their)e(use)i(for)g(simple-pro)q(cessor)e
(based)i(sim)o(ulations.)j(W)l(e)d(also)g(consider)f(sim)o(ulations)131
2357 y(for)i(only)f(user-lev)o(el)f(co)q(de.)25 b(The)18
b(core)f(ideas)h(presen)o(ted)e(here)h(should)h(apply)g(to)g
(system-lev)o(el)131 2447 y(sim)o(ulations)d(as)i(w)o(ell.)p
eop
%%Page: 5 12
5 11 bop 1907 72 a Fn(5)131 222 y Fq(1.3)66 b(Organization)131
347 y Fn(The)13 b(rest)g(of)g(the)g(thesis)g(is)g(organized)g(as)g
(follo)o(ws.)20 b(Chapter)14 b(2)f(pro)o(vides)g(bac)o(kground)g
(material)131 437 y(on)k(sim)o(ulation)c(metho)q(ds.)21
b(Chapter)16 b(3)g(describ)q(es)g(the)f(tec)o(hnique)f(for)i(using)h
(direct)d(execution)131 527 y(for)k(ILP-based)g(shared-memory)d(m)o
(ultipro)q(cessors)h(and)h(the)g(DirectRSIM)f(implem)o(en)n(tation.)131
617 y(Chapter)21 b(4)f(describ)q(es)g(the)f(ev)m(aluation)i(metho)q
(dology)l(.)32 b(Chapter)20 b(5)g(presen)o(ts)g(some)f(results.)131
708 y(Chapter)14 b(6)f(describ)q(es)g(related)f(w)o(ork.)20
b(Chapter)13 b(7)h(concludes)e(the)h(thesis)g(and)g(discusses)h(future)
131 798 y(w)o(ork.)25 b(App)q(endix)16 b(A)h(compares)f(the)h(p)q
(erformance)g(of)g(the)g(baseline)g(Simple)e(sim)o(ulator)g(with)131
888 y(Wisconsin)21 b(Wind)h(T)l(unnel-I)q(I,)e(a)i(state-of-the-art)g
(direct-execution)e(sim)o(ulator)f(for)j(shared)131 979
y(memory)f(m)o(ultipro)q(cessors)h(with)i(mo)q(dels)f(of)g(simple)f
(pro)q(cessors.)45 b(App)q(endix)23 b(B)g(pro)o(vides)131
1069 y(p)q(erformance)13 b(data)i(for)f(all)g(the)g(sim)o(ulators)e
(studied)i(in)g(terms)e(of)i(sim)o(ulated)e(instructions)i(p)q(er)131
1159 y(second.)p eop
%%Page: 6 13
6 12 bop 1907 72 a Fn(6)853 361 y Fr(Chapter)28 b(2)821
564 y(Bac)n(kground)131 752 y Fn(This)21 b(c)o(hapter)f(pro)o(vides)g
(a)h(brief)f(bac)o(kground)h(on)g(existing)e(sim)o(ulation)g(metho)q
(dologies)h(for)131 842 y(shared-memory)f(systems.)32
b(Section)20 b(2.1)h(presen)o(ts)f(a)h(classi\014cation)g(of)f(curren)o
(t)g(sim)o(ulation)131 933 y(tec)o(hniques)f(for)i(shared-memory)d
(systems,)h(Section)h(2.2)h(discusses)f(the)g(curren)o(t)f(use)i(of)f
(di-)131 1023 y(rect)12 b(execution)g(in)h(sim)o(ulating)e
(shared-memory)f(arc)o(hitectures)i(with)h(simple)d(pro)q(cessors,)15
b(and)131 1113 y(Section)20 b(2.3)g(discusses)h(b)q(oth)g(detailed)e
(and)i(appro)o(ximate)e(mo)q(dels)g(for)h(sim)o(ulating)f(shared-)131
1204 y(memory)14 b(systems)h(with)h(state-of-the-art)h(ILP)g(pro)q
(cessors.)131 1478 y Fq(2.1)66 b(Ov)n(erview)24 b(of)d(Curren)n(t)j
(Sim)n(ulation)h(T)-6 b(ec)n(hniques)131 1602 y Fn(Figure)17
b(2.1)h(summarizes)d(a)j(classi\014cation)f(of)h(sim)o(ulation)e(tec)o
(hniques.)24 b(Existing)17 b(sim)o(ulation)131 1693 y(tec)o(hniques)f
(can)i(b)q(e)f(broadly)h(classi\014ed)f(as)h(execution-driv)o(en)d(and)
j(trace-driv)o(en)e(sim)o(ulation)131 1783 y(tec)o(hniques.)i
(Execution-driv)o(en)11 b(sim)o(ulation)f(refers)h(to)h(tec)o(hniques)f
(that)h(execute)f(the)g(applica-)131 1873 y(tion)i(during)f(the)g
(course)g(of)h(sim)o(ulation)d(and)j(are)g(in\015uenced)e(b)o(y)h(the)g
(execution)f(path)i(tak)o(en)f(b)o(y)131 1963 y(the)17
b(application.)23 b(The)16 b(input)h(to)g(an)h(execution-driv)o(en)c
(sim)o(ulator)i(is)g(the)h(executable)e(of)j(the)131
2054 y(application)c(to)g(b)q(e)g(sim)o(ulated.)19 b(With)13
b(trace-driv)o(en)g(sim)o(ulation,)f(the)i(input)g(to)g(the)g(sim)o
(ulator)131 2144 y(is)j(a)g(trace)g(of)g(instructions)g(or)g(memory)d
(references)h(of)j(a)f(giv)o(en)f(execution)g(of)h(the)f(sim)o(ulated)
131 2234 y(application.)34 b(Execution-driv)o(en)18 b(sim)o(ulation)h
(is)h(widely)f(considered)h(to)h(b)q(e)f(more)f(accurate)131
2325 y(than)f(trace-driv)o(en)e(sim)o(ulation)g(b)q(ecause)h(it)g
(enables)g(dynamic)e(e\013ects)i(suc)o(h)h(as)f(the)h(order)f(of)131
2415 y(sync)o(hronization)c(and)i(con)o(ten)o(tion)e(in)g(the)g(sim)o
(ulation)f(to)i(a\013ect)g(the)f(sim)o(ulated)f(application's)131
2505 y(execution)j(path.)204 2597 y(Execution-driv)o(en)10
b(sim)o(ulation)f(can)i(further)g(b)q(e)g(classi\014ed)g(in)o(to)f(t)o
(w)o(o)h(categories)g(dep)q(ending)131 2688 y(on)16 b(whether)g(all)f
(instructions)h(are)f(in)o(terpreted.)20 b(Sim)o(ulators)14
b(in)h(the)h(\014rst)g(category)g(in)o(terpret)p eop
%%Page: 7 14
7 13 bop 1907 72 a Fn(7)131 181 y
 25411320 15400800 7038648 -31641026 45060505 -8617410 startTexFig

 270 rotate
 131 181 a
%%BeginDocument: sim.ps
%Magnification: 1.00
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
54.0 -77.0 translate
 90 rotate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n 0 612 m 0 0 l 792 0 l 792 612 l cp clip
 0.06000 0.06000 sc
15.000 slw
% Polyline
n 6450 1650 m 4050 2850 l gs col-1 s gr 
% Polyline
n 6450 1650 m 8550 2850 l gs col-1 s gr 
% Polyline
n 8550 3225 m 7050 4050 l gs col-1 s gr 
% Polyline
n 8550 3225 m 10050 4050 l gs col-1 s gr 
% Polyline
n 7050 4950 m 5250 5850 l 5325 5850 l gs col-1 s gr 
% Polyline
n 7050 4950 m 8850 5850 l gs col-1 s gr 
/Times-Roman ff 270.00 scf sf
3075 3150 m
gs 1 -1 sc (Trace-driven) col-1 sh gr
/Times-Roman ff 270.00 scf sf
7500 3150 m
gs 1 -1 sc (Execution-driven) col-1 sh gr
/Times-Roman ff 270.00 scf sf
4200 1500 m
gs 1 -1 sc (Simulation techniques for shared-memory systems) col-1 sh gr
/Times-Roman ff 270.00 scf sf
3150 3600 m
gs 1 -1 sc (eg., Dinero, Shade) col-1 sh gr
/Times-Roman ff 270.00 scf sf
9825 5025 m
gs 1 -1 sc (e.g., RSIM, SimOS+MXS) col-1 sh gr
/Times-Roman ff 270.00 scf sf
8175 6600 m
gs 1 -1 sc (e.g., Embra, MINT) col-1 sh gr
/Times-Roman ff 270.00 scf sf
4200 6675 m
gs 1 -1 sc (e.g., Proteus, RPPT,) col-1 sh gr
/Times-Roman ff 270.00 scf sf
4725 7050 m
gs 1 -1 sc (Tango, WWT-II) col-1 sh gr
/Times-Roman ff 270.00 scf sf
6000 4575 m
gs 1 -1 sc (Partial interpretation) col-1 sh gr
/Times-Roman ff 270.00 scf sf
9525 4575 m
gs 1 -1 sc (Full interpretation) col-1 sh gr
/Times-Roman ff 270.00 scf sf
4125 6150 m
gs 1 -1 sc (Direct execution) col-1 sh gr
/Times-Roman ff 270.00 scf sf
7650 6150 m
gs 1 -1 sc (Dynamic binary) col-1 sh gr
/Times-Roman ff 270.00 scf sf
9600 6150 m
gs 1 -1 sc (translation) col-1 sh gr
showpage
$F2psEnd
rs
%%EndDocument

 endTexFig
 465 1289 a Fh(Figure)19 b(2.1)48 b Fn(Classi\014cation)17
b(of)f(Sim)o(ulation)e(T)l(ec)o(hniques)131 1490 y(eac)o(h)k
(instruction)g(in)g(soft)o(w)o(are,)g(em)o(ulating)e(the)i(e\013ects)g
(of)g(the)g(instruction)g(on)h(a)f(sim)o(ulated)131 1580
y(mac)o(hine)c(state)j(and)f(measuring)f(its)h(impact)f(on)h(system)f
(timing.)k(RSIM,)c(SimOS+MXS)f(are)131 1671 y(examples)j(of)h(suc)o(h)g
(sim)o(ulators)f([16)q(,)g(19)q(].)27 b(These)18 b(sim)o(ulators)f(are)
i(signi\014can)o(tly)e(slo)o(w)o(er)h(than)131 1761 y(trace-driv)o(en)h
(sim)o(ulation)629 1743 y Fl(2)647 1761 y Fn(,)i(as)f(they)g(sim)o
(ulate)e(not)j(only)f Fm(timing)g Fn(but)h(also)g(the)e
Fm(function)j Fn(of)131 1851 y(eac)o(h)16 b(instruction.)204
1944 y(Decoupling)32 b(functional)g(and)g(timing)e(sim)o(ulation)g(can)
j(impro)o(v)o(e)c(the)i(sp)q(eed)i(of)f(an)131 2034 y(execution-driv)o
(en)20 b(sim)o(ulator.)36 b(This)21 b(concept)g(forms)g(the)h(basis)g
(of)g(b)q(oth)g(direct-execution)131 2124 y(and)g(dynamic)c(binary)j
(translation)g(based)h(sim)o(ulators.)33 b(RPPT,)21 b(Proteus,)h(WWT,)e
(Em)o(bra)131 2214 y(are)e(all)e(examples)g(of)h(suc)o(h)g(sim)o
(ulators)f([6,)h(3)q(,)f(18)q(,)h(24)q(].)24 b(Henceforth)16
b(,)h(only)g(direct-execution)131 2305 y(sim)o(ulators)22
b(are)h(considered,)g(but)h(most)e(of)h(our)g(discussion)g(applies)g
(to)g(sim)o(ulators)f(based)131 2395 y(on)e(dynamic)d(binary)i
(translation)h(as)g(w)o(ell.)28 b(The)19 b(next)g(section)g(describ)q
(es)f(direct)g(execution)131 2485 y(sim)o(ulators.)p
131 2549 450 2 v 131 2592 a Fk(2)150 2607 y Fj(W)m(e)13
b(only)g(consider)i(sim)o(ulation)c(of)j(user-lev)o(el)g(instructions)h
(here)p eop
%%Page: 8 15
8 14 bop 1907 72 a Fn(8)131 222 y Fq(2.2)66 b(Direct)76
b(Execution)g(Sim)n(ulation)i(for)d(Shared-Memory)284
334 y(Arc)n(hitectures)24 b(with)f(Simple)h(Pro)r(cessors)131
459 y Fn(As)17 b(discussed)g(in)f(the)h(previous)g(section,)f(in)h
(direct)f(execution)f(based)j(sim)o(ulators)e(functional)131
549 y(and)h(timing)e(sim)o(ulation)g(are)i(decoupled)f(from)f(eac)o(h)h
(other.)23 b(F)l(unctional)16 b(sim)o(ulation)f(is)h(done)131
639 y(b)o(y)j(directly)e(executing)h(the)h(application)g(on)g(the)g
(host)h(sim)o(ulation)d(mac)o(hine)g(and)j(therefore)131
730 y(is)h(v)o(ery)f(fast.)35 b(Additionally)l(,)20 b(timing)f(sim)o
(ulation)g(is)i(sp)q(ed)g(up)g(b)o(y)g(statically)f(assessing)i(the)131
820 y(execution)16 b(time)e(for)j(non-memory)d(instructions)i(and)i
(sim)o(ulating)c(timing)h(in)h(detail)g(only)g(for)131
910 y(memory)f(instructions.)25 b(Man)o(y)18 b(direct)e(execution)h
(sim)o(ulators)f(ha)o(v)o(e)h(b)q(een)h(built)e(to)i(sim)o(ulate)131
1000 y(shared-memory)c(m)o(ultipro)q(cessors)h(with)h(simple)e(pro)q
(cessors)k([3,)e(6,)g(7,)g(18)q(].)131 1183 y Fh(Comp)r(onen)n(ts)i(of)
h(a)g(direct)e(execution)g(sim)n(ulator)131 1273 y Fn(Common)e(direct)f
(execution)h(sim)o(ulators)g(for)h(shared-memory)e(m)o(ultipro)q
(cessors)h(consist)h(of)g(a)131 1364 y(mec)o(hanism)h(to)j(instrumen)o
(t)e(the)i(application)g(to)g(b)q(e)g(sim)o(ulated,)e(and)j(a)f(timing)
e(sim)o(ulator.)131 1454 y(The)k(instrumen)o(tation)e(mec)o(hanism)e
(ma)o(y)i(instrumen)o(t)f(either)h(assem)o(bly)g(co)q(de)i(or)g(the)f
(exe-)131 1544 y(cutable)e(of)h(the)f(application.)30
b(It)19 b(inserts)g(calls)g(to)h(the)f(timing)f(sim)o(ulator)g(at)h
(eac)o(h)g(memory)131 1634 y(reference,)i(as)g(these)g(are)h(the)f
(only)g(p)q(oin)o(ts)g(of)h(in)o(teraction)e(among)h(the)g(pro)q
(cessors.)37 b(Some)131 1725 y(sim)o(ulators)12 b(impro)o(v)o(e)f(p)q
(erformance)i(further)g(b)o(y)g(calling)g(the)g(timing)f(sim)o(ulator)g
(only)h(on)h(cac)o(he)131 1815 y(misses)j([18].)26 b(The)18
b(instrumen)o(tation)e(mec)o(hanism)f(also)j(statically)f(determines)f
(cycle)g(coun)o(ts)131 1905 y(for)21 b(the)f(non-memory)f(p)q(ortion)i
(of)g(eac)o(h)f(basic)h(blo)q(c)o(k)f(according)g(to)h(the)f(latencies)
g(of)h(indi-)131 1996 y(vidual)d(instructions,)g(p)q(ossibly)h(accoun)o
(ting)f(for)h(pip)q(elining)e(within)h(the)h(basic)f(blo)q(c)o(k.)27
b(Most)131 2086 y(curren)o(t)15 b(sim)o(ulators)f(assume)h(single)g
(cycle)f(functional)h(units)h(when)f(accoun)o(ting)h(for)g(this)f(exe-)
131 2176 y(cution)h(time.)j(The)c(Wisconsin)h(Wind)g(T)l(unnel)f(I)q(I)
g(sim)o(ulator)g(assumes)g(a)h(more)e(sophisticated)131
2267 y(statically)20 b(sc)o(heduled)g(pip)q(eline)g(mo)q(deled)g(after)
h(the)g(Ross)h(Hyp)q(erSP)l(AR)o(C)e(pro)q(cessor)43
b([14].)131 2357 y(Ho)o(w)o(ev)o(er,)20 b(curren)o(t)g(sim)o(ulators)f
(based)i(on)g(direct)f(execution)f(cannot)j(mo)q(del)d(the)i(e\013ects)
f(of)131 2447 y(out-of-order)e(issue)e(since)g(they)g(determine)d(the)j
(cycle-coun)o(ts)f(for)i(the)f(non-memory)e(p)q(ortion)131
2537 y(statically)i(and)g(they)g(only)g(view)g(one)g(basic)g(blo)q(c)o
(k)g(at)h(a)f(time.)p eop
%%Page: 9 16
9 15 bop 1907 72 a Fn(9)204 222 y(The)20 b(timing)d(sim)o(ulation)h(in)
h(most)g(rep)q(orted)g(direct)f(execution)h(sim)o(ulators)f(is)h(based)
h(on)131 312 y(a)f(discrete)d(ev)o(en)o(t)h(sim)o(ulation)f(system,)g
(and)j(is)e(resp)q(onsible)h(for)g(the)g(sim)o(ulation)e(of)i(memory)
131 403 y(references.)42 b(When)24 b(a)g(pro)q(cess)g(in)o(v)o(ok)o(es)
e(the)i(timing)e(sim)o(ulator)g(on)i(a)g(store,)i(the)d(actions)131
493 y(tak)o(en)c(dep)q(end)h(on)f(whether)g(the)g(sim)o(ulated)f
(target)h(hardw)o(are)h(supp)q(orts)h(blo)q(c)o(king)e(or)g(non-)131
583 y(blo)q(c)o(king)d(stores.)22 b(If)15 b(the)h(target)h(mac)o(hine)d
(blo)q(c)o(ks)i(on)g(a)h(store,)f(then)g(con)o(trol)g(is)g(not)h
(returned)131 674 y(to)22 b(the)f(direct)f(execution)g(of)i(the)f
(store's)g(pro)q(cess)h(un)o(til)e(the)h(timing)f(sim)o(ulator)f
(completes)131 764 y(the)f(sim)o(ulation)d(of)j(the)f(store.)25
b(F)l(or)18 b(a)g(non-blo)q(c)o(king)g(store,)f(direct)g(execution)f
(of)i(the)f(store's)131 854 y(pro)q(cess)i(ma)o(y)e(b)q(e)h(resumed)f
(as)i(so)q(on)g(as)g(the)f(appropriate)h(ev)o(en)o(ts)e(for)h(the)g
(store's)g(execution)131 944 y(are)j(sc)o(heduled)e(b)o(y)g(the)h
(timing)f(sim)o(ulator.)31 b(The)21 b(resumed)d(pro)q(cess)j(pro)q
(ceeds)g(correctly)e(in)131 1035 y(spite)f(of)g(the)f(incomplete)e
(store)j(b)q(ecause)h(the)e(execution)g(of)h(the)f(rest)h(of)g(the)g
(instructions)f(is)131 1125 y(not)g(dep)q(enden)o(t)f(on)g(the)g
(completion)f(of)h(the)g(store.)204 1217 y(The)j(timing)e(sim)o(ulator)
g(treats)i(a)g(load)g(similar)d(to)j(a)g(blo)q(c)o(king)f(store.)29
b(Th)o(us,)19 b(the)f(direct)131 1308 y(execution)e(of)i(the)f(load's)g
(pro)q(cess)h(is)f(susp)q(ended)g(un)o(til)f(the)h(sim)o(ulator)f
(completes)f(the)i(sim)o(u-)131 1398 y(lation)h(of)g(the)f(load)h(and)g
(the)g(load)g(returns)f(a)h(v)m(alue.)25 b(Curren)o(t)18
b(direct)e(execution)h(sim)o(ulators)131 1488 y(do)g(not)g(mo)q(del)e
(non-blo)q(c)o(king)h(loads.)204 1581 y(In)21 b(this)f(thesis,)h(w)o(e)
f(use)g(a)h(direct)f(execution)f(sim)o(ulator,)h(called)f(Simple,)g(as)
i(a)g(baseline)131 1671 y(simple)14 b(pro)q(cessor)k(based)e(sim)o
(ulator.)131 1855 y Fq(2.3)66 b(Sim)n(ulators)30 b(for)e(Shared-Memory)
i(Arc)n(hitectures)f(with)g(ILP)284 1967 y(Pro)r(cessors)131
2091 y Fh(2.3.1)55 b(ILP)19 b(Pro)r(cessors)131 2216
y Fn(The)12 b(base)g(ILP)h(pro)q(cessor)f(considered)g(in)f(this)h
(thesis)g(incorp)q(orates)g(features)g(suc)o(h)g(as)g(m)o(ultiple)131
2306 y(issue,)h(out-of-order)h(issue,)f(non-blo)q(c)o(king)h(loads)f
(and)h(stores,)f(register)g(renaming,)f(sp)q(eculativ)o(e)131
2396 y(execution,)22 b(and)g(aggressiv)o(e)g(forw)o(arding)g(of)g(v)m
(alues)g(from)f(a)h(store)g(to)g(a)g(later)f(load)h(to)h(the)131
2487 y(same)17 b(lo)q(cation,)i(as)g(supp)q(orted)g(b)o(y)f(man)o(y)f
(curren)o(t)g(pro)q(cessors)j(\(e.g.,)d(Digital)h(Alpha)g(21264,)131
2577 y(HP-P)l(A8000,)i(In)o(tel)d(P)o(en)o(tium)e(Pro,)k(MIPS)f
(R10000\).)29 b(A)18 b(cen)o(tral)f(data)i(structure)f(in)g(suc)o(h)g
(a)131 2667 y(pro)q(cessor)k(is)f(a)h(reorder)f(bu\013er)g(whic)o(h)g
(k)o(eeps)f(trac)o(k)g(of)i(all)f(curren)o(tly)e(activ)o(e)h
(instructions.)p eop
%%Page: 10 17
10 16 bop 1882 72 a Fn(10)131 222 y(The)21 b(pro)q(cessor)g(fetc)o(hes)
f(and)h(deco)q(des)g(instructions)f(in)g(program)h(order)f(and)i
(inserts)e(them)131 312 y(in)e(the)g(reorder)g(bu\013er.)28
b(Instruction)18 b(issue)g(and)h(completion)e(ma)o(y)f(o)q(ccur)j
(out-of-order.)29 b(An)131 403 y(instruction)17 b(other)f(than)i(a)f
(store)g(is)f(issued)h(to)g(its)g(functional)f(unit)h(as)g(so)q(on)h
(as)f(its)g(op)q(erands)131 493 y(are)j(ready)l(.)31
b(As)20 b(in)f(most)g(pro)q(cessors)i(that)f(implem)o(en)o(t)c(precise)
j(exceptions,)g(a)h(store)g(is)g(not)131 583 y(issued)c(to)g(the)f
(memory)e(system)h(un)o(til)g(it)h(reac)o(hes)g(the)h(top)g(of)g(the)f
(instruction)g(windo)o(w.)21 b(Our)131 674 y(base)16
b(pro)q(cessor)f(also)h(implem)o(en)n(ts)d(register)h(renaming)g(and)h
(sp)q(eculativ)o(e)f(execution)f(as)j(in)f(the)131 764
y(MIPS)f(R10000)h(and)g(Digital)e(Alpha)h(21264.)22 b(Sp)q
(eci\014cally)l(,)13 b(on)h(a)g(branc)o(h)g(prediction,)f(it)h(copies)
131 854 y(the)e(register)f(\014le)h(mappings)f(in)o(to)h(the)g(shado)o
(w)h(mapp)q(ers.)19 b(On)12 b(a)h(misprediction,)c(these)j(shado)o(w)
131 944 y(mapp)q(ers)j(are)g(used)g(to)h(restore)f(the)f(register)h
(mappings)f(in)h(a)h(single)e(cycle.)19 b(Other)c(imp)q(ortan)o(t)131
1035 y(pro)q(cessor)k(structures)f(are)h(the)f(load)g(and)h(store)f
(queues,)g(whic)o(h)g(also)g(serv)o(e)f(as)i(the)f(memory)131
1125 y(disam)o(biguation)e(units)g(in)g(our)g(base)h(pro)q(cessor.)131
1287 y Fh(2.3.2)55 b(Detailed)30 b(Sim)n(ulation)g(of)i(Shared-Memory)d
(Arc)n(hitectures)i(with)g(ILP)302 1377 y(Pro)r(cessors)131
1501 y Fn(T)l(o)c(the)e(b)q(est)i(of)f(our)g(kno)o(wledge,)h(only)f(t)o
(w)o(o)g(detailed)f(sim)o(ulators)f(dev)o(elop)q(ed)h(explicitly)131
1592 y(for)20 b(shared-memory)e(arc)o(hitectures)g(with)h
(state-of-the-art)i(ILP)f(pro)q(cessors)h(ha)o(v)o(e)e(b)q(een)g(re-)
131 1682 y(p)q(orted)h(in)e(the)h(literature.)28 b(These)19
b(are)g(RSIM)f([16])h(and)g(SimOS)f(with)g(the)h(MXS)f(pro)q(cessor)131
1772 y(sim)o(ulator[19)o(].)24 b(These)18 b(sim)o(ulators)e(use)h
(straigh)o(tforw)o(ard)i(execution-driv)o(en)c(sim)o(ulation,)g(in-)131
1862 y(terpreting)23 b(ev)o(ery)g(instruction)g(and)i(sim)o(ulating)d
(its)h(e\013ects)h(in)g(soft)o(w)o(are.)44 b(The)24 b(complete)131
1953 y(pro)q(cessor)18 b(pip)q(eline)c(and)j(memory)d(system)g(are)j
(faithfully)e(sim)o(ulated.)131 2114 y Fh(2.3.3)55 b(Curren)n(t)84
b(appro)n(ximations)e(for)i(Sim)n(ulating)e(Shared-Memory)302
2205 y(Arc)n(hitectures)18 b(with)h(ILP)f(Pro)r(cessors)131
2329 y Fn(Researc)o(hers)29 b(ha)o(v)o(e)f(also)i(used)g(simple-pro)q
(cessor)e(based)i(sim)o(ulators)e(to)h(mo)q(del)g(shared-)131
2419 y(memory)16 b(systems)h(with)h(state-of-the-art)i(ILP)f(pro)q
(cessors,)g(using)g(certain)f(simple)e(appro)o(xi-)131
2510 y(mations.)22 b(An)16 b(implicit)e(appro)o(ximation)h(made)h(b)o
(y)g(man)o(y)f(studies)i(is)f(that)h(a)g(sim)o(ulation)e(of)i(a)131
2600 y(system)h(with)h(a)g(simple)e(pro)q(cessor)j(appro)o(ximates)e(a)
h(system)f(with)h(an)g(ILP)g(pro)q(cessor)h(with)131
2690 y(the)c(same)g(clo)q(c)o(k)f(sp)q(eed.)22 b(W)l(e)16
b(refer)f(to)i(this)f(appro)o(ximation)g(as)h(Simple.)i(Other)d
(studies)g(ha)o(v)o(e)p eop
%%Page: 11 18
11 17 bop 1882 72 a Fn(11)131 222 y(sp)q(ed)14 b(up)f(the)f(clo)q(c)o
(k)g(rate)h(of)g(the)g(sim)o(ulated)d(pro)q(cessor)k(to)f(mo)q(del)f
(the)g(b)q(ene\014ts)h(of)h(ILP)f([10,)f(11)q(].)131
312 y(A)k(previous)f(study)h(b)o(y)g(P)o(ai)f(et)h(al.)21
b(sho)o(w)o(ed)16 b(that)g(the)f(b)q(est)i(appro)o(ximation)d(curren)o
(tly)h(used)g(is)131 403 y(to)k(sp)q(eed)f(up)g(the)f(simple)f(pro)q
(cessor's)j(clo)q(c)o(k)e(cycle)f(and)j(L1)f(cac)o(he)g(access)f(time)f
(b)o(y)i(a)g(factor)131 493 y(equal)j(to)h(the)g(ILP)g(pro)q(cessor's)g
(p)q(eak)g(instruction)f(issue)h(rate)g(\()p Fg(i)p Fn(\))f([17].)37
b(W)l(e)22 b(refer)e(to)i(this)131 583 y(appro)o(ximation)15
b(as)i(Simple-)p Fg(i)p Fn(x.)204 676 y(P)o(ai)c(et)f(al.)g(studied)h
(the)f(errors)h(pro)q(duced)g(b)o(y)f(the)h(Simple)d(and)j(Simple-)p
Fg(i)p Fn(x)d(appro)o(ximations)131 766 y(for)i(6)g(applications)g(dra)
o(wn)g(primarily)d(from)h(the)i(SPLASH)f(and)h(SPLASH-2)h(suites)e
([17].)20 b(They)131 856 y(sho)o(w)o(ed)15 b(that)g(Simple)d(sees)i
(errors)h(in)f(execution)f(time)f(ranging)k(from)d(26\045)i(to)g
(192\045.)21 b(Simple-)131 946 y Fg(i)p Fn(x)j(is)g(reasonable)g(for)h
(some)e(applications,)i(but)g(con)o(tin)o(ues)e(to)h(see)g(large)g
(errors)g(in)g(other)131 1037 y(applications)16 b(\(up)f(to)h
(73\045\).)21 b(Their)15 b(study)g(sho)o(ws)h(that)g(the)f(k)o(ey)f
(source)h(of)h(inaccuracy)e(is)i(the)131 1127 y(inabilit)o(y)i(of)j
(simple-pro)q(cessor)e(based)h(sim)o(ulators)f(to)h(mo)q(del)f(the)g
(impact)g(of)h(non-blo)q(c)o(king)131 1217 y(reads.)g(Sp)q
(eci\014cally)l(,)11 b(the)g(impact)f(of)i(o)o(v)o(erlapping)f(read)h
(misses)e(w)o(as)j(found)f(to)g(b)q(e)g(con)o(tributing)131
1308 y(to)i(a)f(large)g(p)q(ortion)h(of)g(inaccuracy)l(.)19
b(Applications)13 b(with)g(a)g(signi\014can)o(t)g(n)o(um)o(b)q(er)e(of)
j(o)o(v)o(erlapp)q(ed)131 1398 y(read)f(misses)e(can)i(exp)q(erience)e
(dramatic)g(reductions)h(in)g(memory)e(stall)i(time)f(at)h(the)h(pro)q
(cessor;)131 1488 y(suc)o(h)i(o)o(v)o(erlap)f(is)g(not)h(mo)q(deled)f
(b)o(y)g(curren)o(t)g(simple-pro)q(cessor)g(based)h(sim)o(ulators.)k
(This)c(w)o(ork)131 1578 y(pro)o(vided)h(the)g(k)o(ey)f(motiv)m(ation)g
(for)i(this)f(thesis.)p eop
%%Page: 12 19
12 18 bop 1882 72 a Fn(12)853 361 y Fr(Chapter)28 b(3)420
564 y(Direct)f(Execution)f(for)g(Sim)n(ulation)g(of)380
655 y(Multipro)r(cessors)f(with)i(ILP)h(Pro)r(cessors)131
843 y Fn(This)16 b(section)f(in)o(v)o(estigates)f(the)i(use)f(of)h
(direct)f(execution)f(to)i(enhance)f(the)g(sp)q(eed)h(of)g(sim)o(ulat-)
131 933 y(ing)g(shared-memory)e(systems)h(with)g(ILP)i(pro)q(cessors)g
(without)f(signi\014can)o(t)g(loss)g(of)g(accuracy)l(.)131
1024 y(There)g(are)g(three)f(k)o(ey)g(problems)g(with)h(using)g(curren)
o(t)f(direct)g(execution)g(tec)o(hniques)g(for)h(ILP)131
1114 y(pro)q(cessor-based)i(shared-memory)c(systems:)204
1255 y Fi(\017)24 b Fh(Handling)18 b(non-blo)r(c)n(king)g(loads)p
Fn(:)j(With)16 b(non-blo)q(c)o(king)h(loads,)f(the)g(timing)f(sim)o
(ula-)253 1346 y(tor)g(needs)f(to)h(transfer)g(con)o(trol)f(bac)o(k)g
(in)o(to)h(the)f(direct)f(execution)h(of)h(the)f(load's)h(pro)q(cess)
253 1436 y(b)q(efore)g(the)g(sim)o(ulation)e(of)i(the)f(load)h(is)g
(complete)e(and)i(b)q(efore)g(the)f(v)m(alue)h(that)g(the)g(load)253
1526 y(will)i(return)g(\(in)g(the)h(sim)o(ulation\))d(is)j(kno)o(wn.)25
b(This)18 b(will)e(enable)h(the)h(direct)e(execution)253
1616 y(pro)q(cess)e(to)f(generate)g(later)f(instructions)h(that)g(the)g
(timing)e(sim)o(ulator)g(needs)i(to)g(execute)253 1707
y(in)18 b(parallel)g(with)g(the)g(load.)28 b(Since)17
b(at)i(this)f(p)q(oin)o(t,)h(the)f(v)m(alue)g(to)g(b)q(e)h(returned)f
(b)o(y)g(the)253 1797 y(sim)o(ulated)d(load)j(is)f(not)g(kno)o(wn,)g
(it)g(is)g(unclear)f(what)i(action)f(to)h(tak)o(e)e(when)h(the)g
(direct)253 1887 y(execution)e(reac)o(hes)g(a)i(later)e(instruction)h
(dep)q(enden)o(t)f(on)h(suc)o(h)g(a)g(load,)g(and)h(when)f(\(and)253
1978 y(if)s(\))g(to)h(blo)q(c)o(k)f(for)g(this)g(load.)204
2108 y Fi(\017)24 b Fh(Timing)c(sim)n(ulation)g(of)h(other)g(ILP)h
(features)p Fn(:)j(A)19 b(simple)d(static)j(analysis)g(is)f(in-)253
2199 y(su\016cien)o(t)h(to)i(mo)q(del)e(the)i(impact)d(of)j(ILP)g
(features)f(suc)o(h)g(as)i(out-of-order)f(issue)g(and)253
2289 y(sp)q(eculativ)o(e)f(execution)g(on)i(the)f(execution)f(time)f
(of)j(CPU)f(instructions)g(and)h(on)g(the)253 2379 y(time)16
b(at)i(whic)o(h)f(a)h(memory)c(instruction)k(can)g(b)q(e)f(issued.)26
b(Therefore,)17 b(additional)h(sup-)253 2469 y(p)q(ort)f(is)f(required)
f(for)i(this)f(purp)q(ose.)204 2600 y Fi(\017)24 b Fh(Accoun)n(ting)13
b(for)g(instructions)e(in)h(mispredicted)e(paths)p Fn(:)19
b(Sp)q(eculativ)o(e)9 b(execution)253 2690 y(in)14 b(ILP)g(pro)q
(cessors)i(implies)11 b(that)j(o)q(ccasionally)g(a)h(pro)q(cessor)g
(will)e(execute)f(instructions)p eop
%%Page: 13 20
13 19 bop 1882 72 a Fn(13)253 222 y(from)23 b(an)i(execution)e(path)i
(that)f(is)h(later)e(rolled)h(bac)o(k.)44 b(Curren)o(t)24
b(direct)f(execution)253 312 y(tec)o(hniques)e(do)j(not)f(directly)e
(pro)o(vide)h(a)h(w)o(a)o(y)f(to)h(accoun)o(t)g(for)g(the)f(impact)f
(of)i(suc)o(h)253 403 y(instructions.)204 548 y(Sections)e(3.1)h(and)42
b(3.2)22 b(discuss)f(our)g(solutions)h(to)f(the)g(ab)q(o)o(v)o(e)g
(problems.)34 b(Section)21 b(3.3)131 638 y(describ)q(es)16
b(the)g(detailed)f(impleme)o(n)o(tation)f(of)i(our)h(approac)o(h)g(in)f
(DirectRSIM.)131 822 y Fq(3.1)66 b(Handling)24 b(Non-Blo)r(c)n(king)g
(Loads)131 947 y Fn(W)l(e)16 b(fo)q(cus)h(on)g(a)g(release)e(consisten)
o(t)h(shared-memory)e(arc)o(hitecture)1431 928 y Fl(3)1449
947 y Fn(.)22 b(W)l(e)16 b(assume)f(that)i(syn-)131 1037
y(c)o(hronization)f(loads)h(and)g(stores)f(are)h(iden)o(ti\014ed)d(to)j
(the)f(sim)o(ulator.)204 1129 y(When)d(a)g(sync)o(hronization)g(load)g
(in)o(v)o(ok)o(es)e(the)i(timing)e(sim)o(ulator,)g(it)i(is)f(treated)h
(as)g(a)h(blo)q(c)o(k-)131 1219 y(ing)e(load)g(as)g(in)f(curren)o(t)f
(direct)h(execution)f(sim)o(ulators.)18 b(F)l(or)12 b(data)g(loads,)h
(the)e(timing)f(sim)o(ulator)131 1310 y(attempts)16 b(to)i(bring)f(the)
g(load)g(in)o(to)g(the)f(sim)o(ulated)f(pro)q(cessor)j(in)f(order)g(to)
h(send)f(the)f(load)i(to)131 1400 y(the)e(memory)e(hierarc)o(h)o(y)l(.)
20 b(Ho)o(w)o(ev)o(er,)14 b(the)j(timing)d(sim)o(ulator)h(do)q(es)i
(not)g(blo)q(c)o(k)f(the)g(direct)g(exe-)131 1490 y(cution)i(w)o
(aiting)g(for)g(the)g(load)h(to)f(complete)e(at)j(\(or)f(ev)o(en)f
(issue)h(to\))g(the)g(memory)d(hierarc)o(h)o(y)l(.)131
1581 y(Instead,)j(the)g(timing)f(sim)o(ulator)f(ma)o(y)h(return)h(con)o
(trol)g(to)g(direct)f(execution)g(as)i(so)q(on)h(as)f(the)131
1671 y(load)e(is)f(brough)o(t)h(in)o(to)f(the)g(sim)o(ulated)e(pro)q
(cessor.)204 1763 y(Up)q(on)23 b(return)f(to)g(direct)f(execution,)g
(the)h(sim)o(ulation)e(executes)h(the)g(load)i(and)f(returns)131
1853 y(the)17 b(v)m(alue)g(curren)o(tly)e(in)i(the)g(accessed)g(memory)
d(lo)q(cation,)j(based)h(on)g(the)e(follo)o(wing)h(insigh)o(t.)131
1944 y(If)h(the)f(load)h(do)q(es)h(not)f(form)f(a)h(race)g(with)f(a)i
(store)f(from)e(another)j(pro)q(cess)f(in)g(the)f(sim)o(ulated)131
2034 y(execution,)11 b(the)h(load)g(and)g(store)g(will)f(b)q(e)g
(executed)g(in)g(the)h(same)e(order)i(in)f(the)h(direct)e(execution)131
2124 y(as)19 b(in)f(the)g(sim)o(ulated)f(execution.)26
b(This)19 b(is)f(b)q(ecause)g(the)h(load)f(and)h(store)g(will)e(b)q(e)i
(separated)131 2215 y(b)o(y)c(a)g(c)o(hain)g(of)g(sync)o(hronization)g
(releases)f(and)i(acquires;)e(these)h(sync)o(hronization)f(op)q
(erations)131 2305 y(are)19 b(executed)f(as)h(in)f(a)i(direct)d
(execution)h(sim)o(ulator)f(and)j(enforce)e(the)g(necessary)h
(orderings)p 131 2378 450 2 v 131 2421 a Fk(3)150 2436
y Fj(Our)e(approac)o(h)g(is)g(also)f(applicable)h(to)f(other)i(p)q
(opular)f(memory)d(consistency)19 b(mo)q(dels)c(suc)o(h)j(as)f(sequen)o
(tial)131 2486 y(consistency)11 b(and)f(pro)q(cessor)h(consistency)m(.)
18 b(Straigh)o(tforw)o(ard)9 b(implem)o(en)o(tations)e(of)i(these)i(mo)
q(dels)e(use)h(blo)q(c)o(king)131 2536 y(loads,)h(and)g(so)g(direct)h
(execution)g(is)g(straigh)o(tforw)o(ard)e(to)h(implemen)o(t)e(for)i
(them.)16 b(Optimized)10 b(implemen)o(tations)131 2585
y(of)15 b(these)h(mo)q(dels)e(allo)o(w)f(non-blo)q(c)o(king)h(loads)g
(using)h(a)g(sp)q(eculation)g(mec)o(hanism)e([9)o(].)21
b(As)15 b(will)f(b)q(e)i(clear)f(from)131 2635 y(the)e(rest)g(of)f(the)
h(discussion,)f(our)g(approac)o(h)g(applies)g(to)g(suc)o(h)h(implemen)o
(tations)c(as)j(w)o(ell)g(if)f(these)j(sp)q(eculations)131
2685 y(usually)f(succeed;)j(previous)e(w)o(ork)g(has)g(sho)o(wn)g(that)
g(to)f(b)q(e)i(the)f(case)h([15)o(].)p eop
%%Page: 14 21
14 20 bop 1882 72 a Fn(14)131 222 y(among)22 b(op)q(erations)g(that)g
(do)h(not)f(race)f(with)g(eac)o(h)g(other.)38 b(Th)o(us,)23
b(for)e(a)h(load)g(that)g(is)g(not)131 312 y(in)o(v)o(olv)o(ed)15
b(in)h(a)i(data)f(race,)g(the)f(v)m(alue)h(in)g(the)f(memory)e(at)j
(the)g(time)e(of)i(the)g(direct)e(execution)131 403 y(can)i(b)q(e)f
(safely)g(returned)g(b)o(y)f(the)h(load)h(and)g(used)f(b)o(y)g(dep)q
(enden)o(t)g(instructions)1638 385 y Fl(4)1657 403 y
Fn(.)204 495 y(On)i(the)g(other)f(hand,)i(a)f(load)g(that)g(is)g(in)o
(v)o(olv)o(ed)d(in)i(a)h(data)h(race)e(ma)o(y)g(return)g(a)h
(di\013eren)o(t)131 585 y(v)m(alue)13 b(in)g(the)f(direct)g(execution)g
(than)i(what)f(w)o(ould)g(b)q(e)g(returned)g(in)f(the)h(sim)o(ulated)e
(execution.)131 676 y(The)17 b(v)m(alue)f(returned)g(w)o(ould)g(b)q(e)g
(a)h(legal)f(v)m(alue)g(giv)o(en)g(the)g(release)f(consistency)h(mo)q
(del;)f(ho)o(w-)131 766 y(ev)o(er,)e(the)h(sim)o(ulator)e(ma)o(y)h(not)
h(mo)q(del)f(the)h(timing)e(for)j(this)f(load)g(correctly)l(.)19
b(Since)13 b(data)i(races)131 856 y(are)g(generally)f(rare)g(in)h
(parallel)f(programs,)g(w)o(e)g(exp)q(ect)g(that)h(this)g(will)e(not)j
(ha)o(v)o(e)d(a)j(signi\014can)o(t)131 946 y(impact)f(on)i(accuracy)l
(.)131 1130 y Fq(3.2)66 b(Timing)76 b(Sim)n(ulation)g(of)e(other)g(ILP)
h(F)-6 b(eatures)74 b(and)284 1242 y(Mispredicted)24
b(P)n(aths)131 1367 y Fn(Lik)o(e)12 b(curren)o(t)h(direct)f(execution)g
(sim)o(ulators,)g(our)h(o)o(v)o(erall)f(approac)o(h)i(also)g(separates)
f(the)g(func-)131 1457 y(tional)k(and)h(timing)d(sim)o(ulation,)g
(executing)g(the)i(functional)g(part)g(directly)e(on)j(the)e(host)i
(ma-)131 1547 y(c)o(hine.)29 b(Also,)20 b(lik)o(e)d(curren)o(t)i(sim)o
(ulators,)f(our)i(base)f(metho)q(dology)g(in)o(v)o(ok)o(es)f(the)h
(timing)f(sim-)131 1638 y(ulator)h(just)f(b)q(efore)h(the)f
(application)g(executes)f(a)i(memory)c(instruction.)27
b(Ho)o(w)o(ev)o(er,)16 b(the)j(ap-)131 1728 y(plication)f(is)h(not)g
(instrumen)o(ted)d(to)j(accoun)o(t)f(for)h(the)g(execution)e(time)g(of)
h(an)o(y)h(instructions.)131 1818 y(Instead,)14 b(the)g(application)f
(is)h(instrumen)o(ted)e(to)i(comm)o(unic)o(ate)d(the)j(path)g(tak)o(en)
f(b)o(y)h(the)f(direct)131 1909 y(execution)i(since)h(the)f(previous)h
(in)o(v)o(o)q(cation)g(of)g(the)g(timing)e(sim)o(ulator)h(b)o(y)g(the)h
(same)f(pro)q(cess.)131 1999 y(The)21 b(timing)e(sim)o(ulator)g(pro)q
(cesses)j(this)e(path)i(to)f(p)q(erform)f(a)h(timing)e(sim)o(ulation)g
(with)i(the)131 2089 y(goal)c(of)g(pro)o(viding)f(the)g(b)q(est)g
(accuracy)g(and)h(p)q(erformance)e(p)q(ossible.)204 2182
y(A)g(naiv)o(e)e(timing)g(sim)o(ulator)g(w)o(ould)i(simply)d(replicate)
h(the)h(sim)o(ulation)f(features)i(of)f(RSIM:)131 2272
y(mo)q(deling)e(the)g(register)g(state,)h(instruction)f(e\013ects,)h
(and)g(pip)q(eline)e(stages)j(in)e(detail.)20 b(Ho)o(w)o(ev)o(er,)131
2362 y(RSIM)c(p)q(erforms)f(m)o(uc)o(h)f(of)i(its)g(w)o(ork)g(for)g
(the)g(purp)q(ose)h(of)f(functional)g(sim)o(ulation)e(itself.)20
b(Our)131 2452 y(timing)c(sim)o(ulator)h(impro)o(v)o(es)e(p)q
(erformance)i(relativ)o(e)f(to)i(RSIM)g(through)h(features)e(based)i
(on)131 2543 y(t)o(w)o(o)13 b(insigh)o(ts.)20 b(First,)13
b(the)f(functional)h(sim)o(ulation)e(of)i(an)h(instruction)e(is)h
(already)g(p)q(erformed)f(in)p 131 2616 450 2 v 131 2659
a Fk(4)150 2674 y Fj(This)i(is)f(alw)o(a)o(ys)g(v)n(alid)g(in)g(unipro)
q(cessor)i(con\014gurations,)f(as)g(there)h(are)f(no)g(data)f(races)j
(in)d(suc)o(h)i(systems.)p eop
%%Page: 15 22
15 21 bop 1882 72 a Fn(15)131 222 y(the)17 b(direct)e(execution.)22
b(Second,)16 b(some)g(parts)h(of)g(the)g(pro)q(cessor)g(sim)o(ulation)e
(can)i(b)q(e)g(appro)o(x-)131 312 y(imated,)i(as)h(the)f(most)g(imp)q
(ortan)o(t)g(c)o(haracteristic)f(in)h(determining)e(shared-memory)h(m)o
(ulti-)131 403 y(pro)q(cessor)e(p)q(erformance)e(is)g(the)h(b)q(eha)o
(vior)g(of)g(the)f(memory)e(system)i(and)h(its)g(in)o(teraction)e(with)
131 493 y(the)22 b(pro)q(cessor)g([17)q(].)36 b(The)22
b(follo)o(wing)f(explains)g(ho)o(w)h(eac)o(h)f(of)h(the)g(ab)q(o)o(v)o
(e)f(insigh)o(ts)h(enables)131 583 y(p)q(erformance)15
b(impro)o(v)o(em)o(en)o(ts)e(in)j(our)h(timing)d(sim)o(ulator.)204
676 y(Our)24 b(timing)f(sim)o(ulator)f(can)i(a)o(v)o(oid)g(some)f(of)h
(the)g(o)o(v)o(erhead)f(of)h(sim)o(ulation)e(functions)131
766 y(p)q(erformed)15 b(b)o(y)h(sim)o(ulators)f(suc)o(h)h(as)h(RSIM)e
(b)o(y)h(the)g(follo)o(wing)g(means:)213 912 y(-)24 b(The)17
b(sim)o(ulator)f(a)o(v)o(oids)h(the)g(o)o(v)o(erhead)f(of)i
(instruction)f(em)o(ulation,)d(or)k(the)f(calculation)253
1002 y(of)f(the)f(e\013ects)g(of)g(eac)o(h)g(instruction.)20
b(The)15 b(sim)o(ulator)f(also)i(do)q(es)g(not)g(need)e(to)i(main)o
(tain)253 1093 y(the)f(sim)o(ulated)d(pro)q(cessor)k(state,)f(as)h
(this)e(is)h(main)o(tained)e(b)o(y)h(the)h(host)g(pro)q(cessor)h
(itself.)213 1225 y(-)24 b(The)18 b(sim)o(ulator)f(do)q(es)h(not)h(p)q
(erform)e(a)h(detailed)f(cycle-b)o(y-cycle)e(sim)o(ulation)h(of)i(all)g
(the)253 1315 y(stages)23 b(in)f(the)f(pro)q(cessor)i(pip)q(eline.)37
b(Instead,)23 b(on)f(arriv)m(al,)h(eac)o(h)e(instruction)h(gets)g(a)253
1405 y(timestamp)17 b(for)j(when)f(it)g(is)h(exp)q(ected)e(to)i
(complete)d(\(when)j(kno)o(wn\);)h(for)e(a)h(load,)h(w)o(e)253
1495 y(also)e(determine)d(a)j(timestamp)d(for)i(when)h(it)f(can)h(b)q
(e)f(issued.)28 b(The)19 b(details)f(of)h(the)f(im-)253
1586 y(plemen)o(tation)c(of)j(these)f(timestamps)d(are)k(describ)q(ed)e
(in)h(Section)g(3.3.)213 1718 y(-)24 b(Details)18 b(of)h(register)f
(renaming)f(need)h(not)h(b)q(e)f(mo)q(delled.)26 b(Register)18
b(renaming)f(is)h(used)253 1808 y(to)e(alleviate)d(write)i(after)g
(write)f(and)i(write)e(after)h(read)g(hazards.)22 b(Ho)o(w)o(ev)o(er,)
13 b(the)i(timing)253 1898 y(sim)o(ulator)f(do)q(es)i(not)f(actually)g
(write)g(v)m(alues)g(in)o(to)g(the)g(sim)o(ulated)e(registers.)20
b(Th)o(us,)c(the)253 1988 y(actual)j(pro)q(cess)g(of)g(mapping)f
(logical)g(registers)g(to)h(ph)o(ysical)f(registers)g(is)g(not)h
(needed,)253 2079 y(and)g(the)e(sim)o(ulator)g(can)h(mo)q(del)f(the)g
(b)q(ene\014ts)i(of)f(register)f(renaming)g(without)h(pa)o(ying)253
2169 y(the)e(o)o(v)o(erhead)g(of)g(this)g(task.)213 2301
y(-)24 b(F)l(or)19 b(memory)d(instructions,)i(address)h(disam)o
(biguation)f(and)h(detection)f(of)h(forw)o(arding)253
2391 y(\(of)e(a)g(v)m(alue)g(from)f(a)h(previous)f(p)q(ending)i(store)f
(to)g(a)g(later)f(load)h(to)h(the)e(same)g(lo)q(cation\))253
2481 y(can)f(b)q(e)f(made)g(more)f(e\016cien)o(t,)f(since)i(the)g(load)
h(and)g(store)g(addresses)g(are)f(kno)o(wn)h(to)g(the)253
2572 y(timing)g(sim)o(ulator)f(as)j(so)q(on)h(as)f(it)f(sees)g(these)g
(instructions.)p eop
%%Page: 16 23
16 22 bop 1882 72 a Fn(16)213 222 y(-)24 b(A)o(t)f(branc)o(hes,)h(the)f
(register)f(\014le)h(mappings)g(need)f(not)i(b)q(e)f(stored)h(in)f
(shado)o(w)h(map-)253 312 y(p)q(ers)c(since)e(the)g(timing)g(sim)o
(ulator)f(do)q(es)j(not)f(need)g(to)g(restore)g(register)f(mappings)h
(at)253 403 y(mispredictions.)213 534 y(-)24 b(Other)12
b(optimizations)e(are)i(artifacts)g(of)g(the)g(ab)q(o)o(v)o(e.)20
b(F)l(or)12 b(example,)e(the)i(amoun)o(t)f(of)h(state)253
625 y(that)18 b(m)o(ust)f(trac)o(k)o(ed)f(along)j(with)e(an)h
(instruction)f(is)h(reduced)f(\(e.g.,)g(renamed)f(register)253
715 y(names\).)26 b(This)18 b(results)g(in)f(less)h(o)o(v)o(erhead)f
(when)i(initializing)c(the)j(data)h(structures)f(for)253
805 y(eac)o(h)e(dynamic)e(instruction)i(instance.)204
952 y(None)j(of)g(the)f(ab)q(o)o(v)o(e)g(optimizations)f(sacri\014ces)h
(sim)o(ulation)f(accuracy)l(.)28 b(Ho)o(w)o(ev)o(er,)17
b(w)o(e)h(do)131 1042 y(include)e(some)h(appro)o(ximations)f(in)h(the)h
(timing)d(sim)o(ulator)h(based)i(on)g(previous)f(results.)25
b(W)l(e)131 1132 y(observ)o(e)12 b(that)h(shared-memory)e(arc)o
(hitecture)f(studies)j(are)f(often)h(most)f(concerned)g(with)g(mem-)131
1222 y(ory)i(system)f(p)q(erformance;)g(therefore,)g(w)o(e)h(need)g(to)
g(b)q(e)g(concerned)g(ab)q(out)h(the)f(accurate)g(mo)q(d-)131
1313 y(eling)j(of)i(memory)c(instructions)j(and)g(their)f(in)o
(teraction)g(with)h(the)g(pro)q(cessor)h([17].)26 b(W)l(e)18
b(ma)o(y)131 1403 y(b)q(e)f(able)f(to)g(appro)o(ximate)f(pro)q(cessor)i
(features)f(that)h(do)g(not)g(impact)d(memory)g(instructions.)204
1495 y(Based)g(on)g(the)f(ab)q(o)o(v)o(e)g(observ)m(ation,)i(the)e
(most)f(p)q(oten)o(tially)h(pro\014table)g(appro)o(ximation)g(w)o(e)131
1586 y(mak)o(e)i(is)h(that)h(w)o(e)f(do)h(not)g(sim)o(ulate)e(sp)q
(eculated)h(execution)f(paths)j(that)f(w)o(ere)e(mispredicted.)131
1676 y(This)k(assumption)f(greatly)g(reduces)f(the)h(complexit)o(y)d
(of)k(mo)q(deling)e(an)i(ILP)f(pro)q(cessor)h(with)131
1766 y(direct)14 b(execution.)20 b(Note)15 b(that)g(this)g(assumption)g
(do)q(es)g(not)h(preclude)e(mo)q(deling)f(other)j(e\013ects)131
1857 y(of)k(sp)q(eculation.)31 b(Th)o(us,)20 b(on)g(branc)o(hes,)g(w)o
(e)f(can)h(still)e(k)o(eep)h(trac)o(k)g(of)h(prediction)e(tables)i(and)
131 1947 y(determine)h(whether)h(the)h(branc)o(h)g(w)o(ould)g(b)q(e)g
(mispredicted)d(in)i(the)h(sim)o(ulated)e(execution.)131
2037 y(Since)f(the)h(correct)g(direction)f(for)h(the)g(branc)o(h)g(is)g
(pro)o(vided)f(b)o(y)h(the)g(direct)f(execution,)h(the)131
2127 y(timing)13 b(sim)o(ulator)g(can)h(determine)e(if)i(the)g(branc)o
(h)h(is)f(predicted)f(correctly)h(as)h(so)q(on)h(as)f(a)g(v)m(alue)131
2218 y(is)24 b(returned)f(from)f(the)h(branc)o(h)h(predictor.)42
b(On)23 b(a)h(misprediction,)f(w)o(e)g(can)g(sim)o(ulate)f(the)131
2308 y(actual)17 b(dela)o(y)e(in)h(instruction)g(fetc)o(h)g(from)f(the)
h(correct)g(path)h(as)g(the)f(pro)q(cessor)h(w)o(aits)g(for)g(the)131
2398 y(branc)o(h)23 b(to)g(b)q(e)f(resolv)o(ed.)39 b(The)23
b(only)f(appro)o(ximation)f(made)h(is)g(that)h(w)o(e)f(do)h(not)g
(actually)131 2489 y(sim)o(ulate)12 b(the)h(instructions)h(from)e(the)i
(mispredicted)d(path.)21 b(Non-memory)11 b(instructions)i(from)131
2579 y(the)22 b(mispredicted)d(path)j(should)g(ha)o(v)o(e)f(little)f
(impact)g(on)i(system)e(p)q(erformance.)36 b(Memory)131
2669 y(instructions)23 b(allo)o(w)o(ed)f(to)i(issue)f(from)f(the)h
(mispredicted)d(path)k(can)f(help)f(or)i(h)o(urt)f(o)o(v)o(erall)p
eop
%%Page: 17 24
17 23 bop 1882 72 a Fn(17)131 222 y(system)14 b(p)q(erformance)f(b)o(y)
i(increasing)f(con)o(ten)o(tion)g(in)h(the)f(memory)e(hierarc)o(h)o(y)l
(,)h(b)o(y)i(in)o(terfering)131 312 y(with)k(the)g(cac)o(hed)f(data)i
(of)f(other)g(pro)q(cessors,)h(or)f(b)o(y)g(bringing)g(useful)f(data)i
(in)o(to)e(the)h(cac)o(he)131 403 y(early)l(.)i(Ho)o(w)o(ev)o(er,)13
b(the)j(appro)o(ximation)f(of)h(not)h(sim)o(ulating)d(mispredicted)f
(paths)k(is)e(not)i(lik)o(ely)131 493 y(to)12 b(b)q(e)f(a)h
(signi\014can)o(t)f(source)h(of)f(error)g(as)h(long)g(as)g(sp)q
(eculation)g(usually)f(succeeds.)19 b(This)11 b(solution)131
583 y(also)18 b(addresses)g(the)g(third)f(problem)f(raised)h(at)h(the)f
(b)q(eginning)h(of)f(this)h(section.)24 b(Section)17
b(7.2)131 674 y(discusses)22 b(the)g(p)q(ossibilit)o(y)f(of)h
(including)f(mispredicted-path)g(sim)o(ulation)f(in)h(DirectRSIM.)131
764 y(Note)15 b(that)g(the)f(optimization)f(of)j(not)f(sim)o(ulating)e
(the)h(mispredicted)e(path)k(is)e(di\016cult)g(\(if)g(not)131
854 y(imp)q(ossible\))d(to)i(incorp)q(orate)h(within)e(sim)o(ulators)f
(suc)o(h)i(as)g(RSIM)f(since)g(RSIM)g(do)q(es)i(not)f(kno)o(w)131
944 y(whether)j(the)g(branc)o(h)g(is)g(mispredicted)e(or)j(not)f(un)o
(til)f(the)h(branc)o(h)h(is)f(actually)f(resolv)o(ed.)204
1035 y(Con)o(temp)q(orary)f(pro)q(cessors)i(also)e(p)q(erform)f(sp)q
(eculativ)o(e)g(load)i(execution,)e(whic)o(h)g(is)h(analo-)131
1125 y(gous)g(in)e(man)o(y)e(w)o(a)o(ys)i(to)h(branc)o(h)f(sp)q
(eculation.)20 b(With)12 b(this)g(tec)o(hnique,)f(hardw)o(are)i(issues)
f(a)h(load)131 1215 y(while)g(the)h(address)h(of)f(a)g(previous)g
(store)g(is)g(not)h(y)o(et)e(disam)o(biguated.)19 b(If)13
b(the)h(store)g(later)g(turns)131 1306 y(out)j(to)f(b)q(e)g(to)h(the)f
(same)f(address)h(as)h(the)f(load,)g(then)g(the)g(load)g(and)h(the)f
(execution)f(follo)o(wing)131 1396 y(it)h(needs)g(to)g(b)q(e)h(rolled)e
(bac)o(k.)21 b(W)l(e)15 b(assume)h(p)q(erfect)f(memory)f(disam)o
(biguation)h(in)g(our)i(timing)131 1486 y(sim)o(ulator;)f(i.e.,)g
(neither)g(an)i(incorrectly)e(sp)q(eculated)h(load)h(nor)g(its)f(follo)
o(wing)g(execution)f(are)131 1576 y(sim)o(ulated.)23
b(Again,)17 b(this)h(is)f(not)h(lik)o(ely)d(to)i(b)q(e)h(a)g(ma)s(jor)e
(source)i(of)g(error)f(if)g(sp)q(eculation)h(usu-)131
1667 y(ally)d(succeeds.)20 b(As)15 b(with)g(branc)o(h)g(prediction,)f
(this)h(appro)o(ximation)f(is)h(di\016cult)e(to)j(include)e(in)131
1757 y(sim)o(ulators)h(suc)o(h)h(as)h(RSIM.)131 1934
y Fq(3.3)66 b(Implemen)n(tation)25 b(of)c(the)i(DirectRSIM)g(Sim)n
(ulator)131 2057 y Fn(DirectRSIM)16 b(implem)o(en)n(ts)f(the)i(direct)f
(execution)g(metho)q(dology)h(describ)q(ed)g(in)g(this)g(section.)131
2147 y(It)c(consists)g(of)g(an)g(application)f Fm(instrumentation)k(me)
n(chanism)d Fn(\(Section)25 b(3.3.1\),)13 b(and)g(a)h
Fm(timing)131 2237 y(simulator)i Fn(\(Section)32 b(3.3.2\).)131
2393 y Fh(3.3.1)55 b(Application)19 b(Co)r(de)f(Instrumen)n(tation)131
2516 y Fn(Lik)o(e)36 b(curren)o(t)g(direct)g(execution)g(sim)o
(ulators,)k(the)c(instrumen)o(tation)g(mec)o(hanism)d(for)131
2606 y(DirectRSIM)22 b(inserts)i(calls)f(to)h(the)f(timing)f(sim)o
(ulator)g(b)q(efore)i(eac)o(h)f(memory)e(instruction)131
2696 y(in)g(the)h(application.)37 b(Ho)o(w)o(ev)o(er,)20
b(the)i(instrumen)o(tation)e(co)q(de)h(do)q(es)i(not)f(attempt)e(to)i
(stati-)p eop
%%Page: 18 25
18 24 bop 1882 72 a Fn(18)131 222 y(cally)17 b(determine)d(cycle)i
(coun)o(ts)h(for)h(the)f(ILP)h(pro)q(cessor.)25 b(Instead,)17
b(it)g(records)h(the)f(ranges)h(of)131 312 y(con)o(tiguous)j
(program-coun)o(ter)g(v)m(alues)f(tra)o(v)o(ersed)g(b)o(y)g(the)h
(direct)e(execution)h(since)g(the)g(last)131 403 y(memory)15
b(instruction)j(w)o(as)g(passed)h(to)f(the)g(timing)e(sim)o(ulator.)25
b(F)l(or)18 b(this)g(purp)q(ose,)g(the)g(co)q(de)131
493 y(instrumen)o(tation)f(marks)g(all)h(unconditional)h(branc)o(hes)f
(and)h(the)f(tak)o(en)g(paths)i(of)e(all)g(condi-)131
583 y(tional)g(branc)o(hes)g(as)h(ending)f(a)g(program-coun)o(ter)g
(range)g(and)h(starting)g(a)f(new)g(range.)27 b(Eac)o(h)131
674 y(con)o(tiguous)12 b(program-coun)o(ter)g(range)g(can)g(span)g(m)o
(ultiple)c(basic)k(blo)q(c)o(ks,)g(and)g(m)o(ultiple)c(ranges)131
764 y(can)17 b(b)q(e)f(passed)h(to)g(the)f(timing)e(sim)o(ulator)h(on)i
(eac)o(h)e(call.)204 856 y(Our)f(curren)o(t)e(implem)o(en)o(tation)e
(of)k(the)f(instrumen)o(tation)f(system)g(w)o(orks)h(on)h(the)f(assem)o
(bly)131 946 y(co)q(de)18 b(of)f(a)h(program.)24 b(Ho)o(w)o(ev)o(er,)15
b(the)i(tec)o(hniques)e(used)j(here)e(can)i(b)q(e)f(extended)f(to)i
(the)f(more)131 1037 y(general)f(metho)q(ds)g(of)h(executable-editing)d
(or)j(dynamic)d(compilation.)131 1199 y Fh(3.3.2)55 b(Arc)n(hitectural)
18 b(Timing)f(Sim)n(ulator)g(Impleme)o(n)n(tation)131
1323 y Fn(The)12 b(timing)f(sim)o(ulator)f(consists)i(of)h(three)e
(main)g(parts:)20 b(the)12 b(ev)o(en)o(t-driv)o(en)d(sim)o(ulation)h
(engine,)131 1414 y(the)h(m)o(ultipro)q(cessor)f(memory)f(system)g(sim)
o(ulator,)i(and)h(the)f(pro)q(cessor)h(sim)o(ulator.)18
b(The)12 b(ev)o(en)o(t-)131 1504 y(driv)o(en)j(sim)o(ulation)e(engine)i
(and)h(m)o(ultipro)q(cessor)e(memory)f(system)h(sim)o(ulation)g(are)h
(common)131 1594 y(to)k(all)g(our)g(sim)o(ulators)f(and)h(are)g
(describ)q(ed)f(in)h(more)e(detail)h(in)h(Chapter)g(4.)29
b(The)19 b(pro)q(cessor)131 1684 y(sim)o(ulator)c(is)h(the)g(k)o(ey)f
(feature)h(that)h(sets)f(DirectRSIM)f(apart.)131 1777
y Fh(Pro)r(cessor)j(sim)n(ulator)131 1867 y Fn(As)g(discussed)h(in)f
(Section)f(3.3.1,)i(the)f(instrumen)o(ted)e(application)i(co)q(de)h
(calls)e(the)h(pro)q(cessor)131 1957 y(sim)o(ulator)f(at)j(eac)o(h)e
(memory)e(reference.)27 b(The)19 b(co)q(de)f(main)o(tains)g(a)h(list)f
(of)h(program)g(coun)o(ter)131 2048 y(ranges)i(tra)o(v)o(ersed)e(since)
h(the)g(last)g(sim)o(ulator)e(call.)32 b(Up)q(on)21 b(en)o(try)l(,)f
(the)g(pro)q(cessor)h(sim)o(ulator)131 2138 y(pro)q(cesses)f(this)e
(list)h(and)g(attempts)f(to)h(bring)g(eac)o(h)f(instruction)h(from)e
(this)i(list)f(in)o(to)h(the)f(in-)131 2228 y(struction)e(windo)o(w.)
204 2321 y(In)h(pro)q(cessing)h(these)f(instructions,)g(the)h(k)o(ey)e
(w)o(ork)h(that)h(needs)f(to)h(b)q(e)f(done)h(b)o(y)e(the)i(pro-)131
2411 y(cessor)c(sim)o(ulator)d(is:)20 b(\(1\))13 b(k)o(eeping)f(trac)o
(k)h(of)g(true)g(dep)q(endences)g(and)g(structural)g(hazards,)i(and)131
2501 y(determining)c(when)j(instructions)f(complete)e(or)j(when)f
(loads)h(and)g(stores)g(can)f(b)q(e)h(issued)f(based)131
2591 y(on)i(these)e(dep)q(endences,)g(\(2\))h(retiring)f(instructions)h
(from)f(the)g(instruction)h(windo)o(w)g(at)g(appro-)131
2682 y(priate)j(times)e(based)i(on)h(the)f(ab)q(o)o(v)o(e)f
(determination)g(of)h(completion)e(times,)g(\(3\))i(main)o(taining)p
eop
%%Page: 19 26
19 25 bop 1882 72 a Fn(19)131 222 y(branc)o(h)14 b(prediction)e
(tables,)h(and)h(\(4\))g(implem)o(en)o(tation)c(of)k(forw)o(arding)g
(\(i.e.,)e(if)h(a)g(load)h(is)f(ready)131 312 y(to)j(issue)f(while)f(a)
i(previous)f(store)g(to)h(the)f(same)f(lo)q(cation)i(is)f(p)q(ending,)g
(then)g(the)g(store's)h(v)m(alue)131 403 y(is)g(forw)o(arded)h(to)g
(the)f(load)g(without)h(issuing)f(the)g(load\).)204 495
y(The)i(k)o(ey)e(data)i(structures)f(in)g(the)f(pro)q(cessor)j(sim)o
(ulator)c(are)i(\(1\))h(a)f(structure)g(analogous)131
585 y(to)22 b(the)f(reorder)f(bu\013er)i(or)f(instruction)g(windo)o(w)g
(of)h(an)f(ILP)h(pro)q(cessor,)h(\(2\))e(a)g(load)h(queue)131
676 y(and)c(a)h(store)e(queue)g(to)h(k)o(eep)f(trac)o(k)g(of)h(memory)d
(op)q(erations)j(that)g(need)g(to)g(b)q(e)f(issued,)h(\(3\))g(a)131
766 y(data)h(structure)f(that)h(k)o(eeps)e(trac)o(k)h(of)g(outstanding)
h(stores,)g(hashed)g(on)g(their)e(addresses,)i(to)131
856 y(enable)c(easy)g(store)g(v)m(alue)f(forw)o(arding)i(to)f(later)f
(loads)i(to)f(the)g(same)e(lo)q(cation,)i(\(4\))h(the)e(branc)o(h)131
946 y(prediction)i(table,)h(and)g(\(5\))g(a)h(structure)e(for)i(sim)o
(ulating)d(structural)i(hazards)g(for)h(functional)131
1037 y(units.)204 1129 y(The)13 b(memory)c(system)i(and)i(sim)o
(ulation)e(engine)h(of)g(DirectRSIM)f(pro)o(vide)h(a)h(global)f(view)g
(of)131 1219 y(time)g(shared)i(b)o(y)f(all)g(the)h(no)q(des)g(in)f(the)
h(system.)19 b(Ho)o(w)o(ev)o(er,)11 b(unlik)o(e)h(RSIM,)h(the)g(pro)q
(cessors)i(are)131 1310 y(not)g(required)d(to)i(act)g(in)g(lo)q(c)o
(kstep)f(with)h(the)f(global)h(clo)q(c)o(k)f(when)h(handling)g(in)o
(ternal)f(pro)q(cessor)131 1400 y(actions.)21 b(The)16
b(pro)q(cessor)g(is)f(allo)o(w)o(ed)f(to)i(main)o(tain)d(lo)q(cal)i
(views)g(of)g(the)g(clo)q(c)o(k)g(that)g(run)h(ahead)131
1490 y(of)22 b(the)f(global)g(clo)q(c)o(k,)g(as)h(long)g(as)g(it)f
(sync)o(hronizes)f(with)h(the)g(global)h(clo)q(c)o(k)e(b)q(efore)h
(issuing)131 1581 y(an)o(y)h(instruction)g(to)g(the)g(memory)d(system.)
37 b(The)23 b(completion)d(timestamps)f(of)k(individual)131
1671 y(instructions)d(are)g(one)g(t)o(yp)q(e)f(of)h(lo)q(calized)e(clo)
q(c)o(k.)31 b(Additionally)l(,)19 b(eac)o(h)g(pro)q(cessor)i(sim)o
(ulator)131 1761 y(has)c(t)o(w)o(o)f(other)h(views)f(of)g(time:)j(a)e
(fetc)o(h)e(time)g(and)h(a)h(retire)e(time.)20 b(Instructions)c(are)g
(mark)o(ed)131 1851 y(with)22 b(the)g(v)m(alue)f(of)h(the)g(fetc)o(h)f
(time)f(when)i(they)f(are)h(fetc)o(hed)f(in)o(to)g(the)h(windo)o(w,)h
(and)g(the)131 1942 y(pro)q(cessor)14 b(retires)e(instructions)h(from)f
(the)h(head)g(of)g(its)g(instruction)g(windo)o(w)g(according)g(to)h
(the)131 2032 y(v)m(alue)j(of)g(the)f(retire)f(time.)20
b(Both)d(of)g(these)f(clo)q(c)o(ks)g(can)h(run)g(ahead)g(of)g(the)f
(global)h(sim)o(ulation)131 2122 y(clo)q(c)o(k.)204 2215
y(As)d(the)f(pro)q(cessor)i(sim)o(ulator)d(brings)i(instructions)f(in,)
g(it)g(tags)i(non-memory)c(instructions)131 2305 y(with)22
b(their)f(completion)f(times,)g(if)i(kno)o(wn.)38 b(The)21
b(completion)f(time)g(for)i(an)g(instruction)f(is)131
2395 y(kno)o(wn)e(as)h(long)g(as)f(it)g(is)g(not)g(data)h(dep)q(enden)o
(t)f(on)g(an)o(y)g(incomplete)d(loads)k(\(either)e(directly)131
2485 y(or)k(through)g(other)f(instructions)g(dep)q(enden)o(t)f(on)h
(the)g(load\).)36 b(The)21 b(completion)e(timestamp)131
2576 y(also)j(dep)q(ends)g(on)g(the)g(latency)e(of)i(the)f(instruction)
h(and)g(the)f(a)o(v)m(ailabilit)o(y)f(of)i(a)g(functional)131
2666 y(unit.)f(If)14 b(the)g(completion)f(time)g(is)h(not)h(immedi)o
(ately)c(kno)o(wn,)k(the)g(instruction)f(is)g(attac)o(hed)h(to)p
eop
%%Page: 20 27
20 26 bop 1882 72 a Fn(20)131 222 y(the)16 b(instructions)g(on)g(whic)o
(h)f(it)g(is)h(dep)q(enden)o(t;)f(its)h(completion)e(timestamp)f(will)h
(b)q(e)i(set)g(up)q(on)131 312 y(completion)f(of)h(these)g
(instructions.)204 405 y(F)l(or)e(a)f(load)g(instruction,)g(the)g(pro)q
(cessor)h(sim)o(ulator)d(calculates)i(a)g(timestamp)d(for)k(the)e(time)
131 495 y(when)18 b(the)g(load)h(is)e(ready)h(to)h(issue)e(\(if)h(kno)o
(wn\),)g(and)g(inserts)g(it)g(in)f(the)h(load)h(queue)e(in)g(issue)131
585 y(time)12 b(order.)20 b(When)14 b(the)f(global)h(sim)o(ulation)e
(time)f(catc)o(hes)i(up)h(with)f(the)h(issue)f(time)e(of)j(a)g(load,)
131 676 y(the)20 b(pro)q(cessor)g(sim)o(ulator)e(c)o(hec)o(ks)g(to)i
(see)f(if)g(the)h(load)g(can)f(b)q(e)h(forw)o(arded)g(from)f(a)g
(previous)131 766 y(store.)36 b(DirectRSIM)19 b(uses)j(the)e(addresses)
i(passed)g(in)e(for)i(memory)c(instructions)j(from)f(the)131
856 y(direct-execution)15 b(to)h(e\016cien)o(tly)e(c)o(hec)o(k)g(for)j
(an)o(y)f(instances)h(of)f(a)h(load)g(matc)o(hing)d(the)j(address)131
946 y(of)e(a)g(previous)g(store)f(in)h(the)f(instruction)g(windo)o(w.)
21 b(If)14 b(the)h(load)g(do)q(es)g(matc)o(h)e(an)i(earlier)e(store,)
131 1037 y(the)19 b(pro)q(cessor)i(sim)o(ulator)d(considers)h(the)h
(load)g(forw)o(arded)f(and)h(marks)f(a)h(completion)d(time)131
1127 y(for)g(the)g(access.)23 b(Otherwise,)16 b(the)h(pro)q(cessor)g
(sim)o(ulator)f(sc)o(hedules)g(an)h(ev)o(en)o(t)e(for)i(issuing)h(the)
131 1217 y(load)f(to)g(the)f(memory)d(system.)204 1310
y(As)20 b(with)g(most)g(curren)o(t)f(pro)q(cessor)i(sim)o(ulators,)f
(to)g(insure)g(precise)f(in)o(terrupts,)h(a)h(store)131
1400 y(instruction)c(is)g(mark)o(ed)e(ready)i(for)g(issue)g(only)g
(when)g(it)g(reac)o(hes)f(the)h(top)g(of)h(the)f(instruction)131
1490 y(windo)o(w.)37 b(A)o(t)20 b(this)i(time,)d(the)j(store)f(will)f
(b)q(e)i(inserted)e(in)h(the)g(store)h(queue)e(with)i(an)f(issue)131
1581 y(timestamp)16 b(equal)j(to)g(the)g(curren)o(t)f(retire)g(time.)27
b(When)19 b(the)g(global)g(time)e(catc)o(hes)h(up)h(with)131
1671 y(the)13 b(issue)g(time,)e(the)i(ev)o(en)o(t-driv)o(en)d(sim)o
(ulator)i(sc)o(hedules)g(an)h(ev)o(en)o(t)f(for)h(the)g(issue)f(of)i
(the)e(store.)204 1763 y(Instruction)19 b(fetc)o(hing)f(con)o(tin)o
(ues)g(un)o(til)g(either)g(the)h(instruction)f(windo)o(w)i(\014lls)e
(up,)h(or)h(all)131 1853 y(instructions)c(that)h(w)o(ere)e(executed)g
(in)h(the)f(direct)h(execution)f(are)h(exhausted,)f(or)i(a)f(branc)o(h)
g(is)131 1944 y(mispredicted.)k(In)d(the)f(latter)h(case,)f(the)h(fetc)
o(h)f(con)o(tin)o(ues)g(once)g(the)h(branc)o(h)g(miss)e(p)q(enalt)o(y)h
(is)131 2034 y(determined.)24 b(If)18 b(the)g(instruction)g(windo)o(w)g
(is)g(full,)f(the)h(pro)q(cessor)h(sim)o(ulator)d(tries)i(to)g(retire)
131 2124 y(the)c(\014rst)g(set)g(of)h(instructions.)20
b(This)14 b(is)g(an)h(en)o(tirely)d(lo)q(cal)i(action,)g(and)h(tak)o
(es)f(place)f(according)131 2215 y(to)k(the)f(retire)f(time,)f(p)q
(ossibly)i(setting)g(a)h(new)f(v)m(alue)g(for)h(this)f(clo)q(c)o(k.)204
2307 y(The)j(pro)q(cessor)h(sim)o(ulation)d(\(and)i(the)f(corresp)q
(onding)i(direct)e(execution\))f(is)i(susp)q(ended)131
2397 y(when)k(the)f(instruction)h(windo)o(w)g(of)g(the)f(pro)q(cessor)i
(is)e(full,)h(it)f(cannot)i(retire)d(an)o(y)i(further)131
2488 y(instructions)h(\(this)h(can)f(only)g(happ)q(en)h(if)f(there)g
(is)g(an)h(incomplete)d(load)j(at)f(the)g(head)h(of)131
2578 y(the)d(windo)o(w\),)h(and)f(no)h(other)f(loads)g(or)h(stores)f
(can)g(b)q(e)g(issued)g(\(either)f(b)q(ecause)h(they)f(are)131
2668 y(dep)q(enden)o(t)c(on)h(other)g(loads,)g(or)f(b)q(ecause)h(the)f
(cac)o(he)g(p)q(orts)h(are)g(full,)e(or)i(b)q(ecause)g(the)f(global)p
eop
%%Page: 21 28
21 27 bop 1882 72 a Fn(21)131 222 y(time)22 b(has)j(not)f(caugh)o(t)g
(up)g(with)g(their)f(issue)h(time)d(y)o(et\).)43 b(A)o(t)23
b(this)h(p)q(oin)o(t,)i(the)d(pro)q(cessor)131 312 y(stalls)d(in)g(a)h
(state)f(w)o(aiting)g(for)g(an)h(action)f(that)h(will)e(allo)o(w)g
(progress)i(on)g(an)o(y)f(of)g(the)g(ab)q(o)o(v)o(e)131
403 y(situations.)38 b(A)21 b(pro)q(cessor's)i(direct)d(execution)h(ma)
o(y)f(b)q(e)h(resumed)f(once)i(all)f(of)h(its)f(directly)131
493 y(executed)15 b(instructions)h(ha)o(v)o(e)g(b)q(een)g(en)o(tered)f
(in)h(its)g(instruction)g(windo)o(w.)204 585 y(E\013ectiv)o(ely)l(,)h
(the)h(timing)f(sim)o(ulator)g(acts)i(lik)o(e)d(a)j(trace-driv)o(en)e
(sim)o(ulator,)g(op)q(erating)j(on)131 676 y(the)d(trace)f(of)h
(instructions)g(executed)e(since)h(its)h(last)g(in)o(v)o(o)q(cation)f
(b)o(y)g(the)h(same)f(pro)q(cess.)23 b(The)131 766 y(metho)q(dology)l
(,)d(ho)o(w)o(ev)o(er,)e(is)h(still)f(execution-driv)o(en)g(and)i
(di\013ers)f(from)f(con)o(v)o(en)o(tional)g(trace-)131
856 y(driv)o(en)h(sim)o(ulation)e(b)q(ecause)j(the)f(execution)g(path)h
(of)g(the)f(sim)o(ulated)e(application)j(can)f(still)131
946 y(b)q(e)i(a\013ected)g(b)o(y)f(the)g(dynamic)f(ordering)i(of)g
(sync)o(hronization)f(accesses)h(and)g(con)o(ten)o(tion)f(in)131
1037 y(the)i(system.)37 b(In)22 b(the)g(unipro)q(cessor)g(case,)h(ho)o
(w)o(ev)o(er,)f(DirectRSIM)f(e\013ectiv)o(ely)e(b)q(ecomes)i(a)131
1127 y(trace-driv)o(en)15 b(sim)o(ulator)g(for)h(ILP)h(pro)q(cessors.)
131 1219 y Fh(Other)h(di\013erences)f(b)r(et)n(w)n(een)i(DirectRSIM)e
(and)i(RSIM)131 1310 y Fn(In)28 b(addition)h(to)g(the)f(di\013erences)g
(describ)q(ed)g(ab)q(o)o(v)o(e,)j(DirectRSIM)26 b(also)j(uses)g
(user-lev)o(el)131 1400 y(ligh)o(t)o(w)o(eigh)o(t)19
b(pro)q(cesses)i(to)h(pro)o(vide)e(the)g(register)g(and)i(stac)o(k)e
(state)h(needed)f(b)o(y)h(eac)o(h)f(sim)o(u-)131 1490
y(lated)j(pro)q(cessor)g(for)g(direct)f(execution.)39
b(Eac)o(h)23 b(activ)m(ation)f(or)h(deactiv)m(ation)g(of)g(a)g(pro)q
(cess)131 1581 y(requires)g(the)g(o)o(v)o(erhead)f(of)i(a)g(ligh)o(t)o
(w)o(eigh)o(t)d(con)o(text-switc)o(h.)41 b(Simple)21
b(and)j(Simple-)p Fg(i)p Fn(x)d(also)131 1671 y(use)d(the)g(same)f
(ligh)o(t)o(w)o(eigh)o(t)f(pro)q(cess)j(structure)f(for)g(direct)f
(execution.)26 b(RSIM)17 b(do)q(es)i(not)f(use)131 1761
y(ligh)o(t)o(w)o(eigh)o(t)c(pro)q(cesses,)i(as)g(all)f(register)g(and)h
(stac)o(k)f(state)h(for)g(the)f(RSIM)g(CPUs)h(is)f(sim)o(ulated)131
1851 y(in)h(soft)o(w)o(are.)204 1944 y(DirectRSIM)21
b(also)j(a)o(v)o(oids)e(sim)o(ulating)f(L1)j(cac)o(he)d(hits)i(whenev)o
(er)f(p)q(ossible)g(\(whenev)o(er)131 2034 y(the)17 b(cac)o(he)f(is)g
(guaran)o(teed)h(to)g(ha)o(v)o(e)f(p)q(orts)i(a)o(v)m(ailable)e(and)h
(not)g(b)q(e)g(stalled)f(for)h(resources)f(suc)o(h)131
2124 y(as)25 b(MSHRs\).)44 b(The)24 b(pro)q(cessor)h(sim)o(ulator)e(ma)
o(y)f(still)h(ha)o(v)o(e)h(to)g(stall)g(to)g(allo)o(w)g(the)g(global)
131 2215 y(sim)o(ulation)19 b(clo)q(c)o(k)g(to)i(catc)o(h)f(up)g(with)g
(the)h(issue)f(time)e(of)j(an)g(access,)f(but)h(if)f(it)g(determines)
131 2305 y(\(when)h(the)f(global)h(clo)q(c)o(k)f(has)h(caugh)o(t)g
(up\))f(that)h(the)g(access)f(is)h(a)g(hit)f(and)h(that)g(the)f(cac)o
(he)131 2395 y(is)h(a)o(v)m(ailable,)g(the)f(pro)q(cessor)i(do)q(es)f
(not)h(send)f(the)f(access)h(to)g(the)g(cac)o(hes)f(to)h(b)q(e)g(sim)o
(ulated.)131 2485 y(Instead,)i(the)e(pro)q(cessor)h(lets)f(a)h(store)f
(that)h(hits)f(in)g(the)g(L1)h(cac)o(he)f(lea)o(v)o(e)f(the)h(system)f
(and)131 2576 y(assigns)e(a)g(load)f(that)g(hits)g(in)f(the)h(L1)h(cac)
o(he)e(a)h(completion)e(time)g(stamp)h(based)h(on)h(the)e(issue)131
2666 y(time)f(and)j(the)f(L1)h(cac)o(he)f(access)g(time.)22
b(This)17 b(can)h(sa)o(v)o(e)e(o)o(v)o(erhead)h(in)g(in)o(v)o(o)q
(cations)g(of)g(the)g(L1)p eop
%%Page: 22 29
22 28 bop 1882 72 a Fn(22)131 222 y(cac)o(he)19 b(sim)o(ulation)f(mo)q
(dule,)g(as)j(w)o(ell)d(as)i(the)f(memory)e(allo)q(cation)j(and)g
(deallo)q(cation)g(of)g(the)131 312 y(data)e(structures)f(used)h(to)f
(trac)o(k)g(accesses)g(in)g(the)g(memory)d(system.)22
b(Simple)15 b(and)j(Simple-)p Fg(i)p Fn(x)131 403 y(also)d(use)e(this)h
(optimization;)e(RSIM)h(actually)h(issues)f(all)h(hits)f(to)h(the)g
(cac)o(hes,)f(consisten)o(t)g(with)131 493 y(its)j(cycle-b)o(y-cycle)d
(detailed)i(sim)o(ulation)g(philosoph)o(y)l(.)p eop
%%Page: 23 30
23 29 bop 1882 72 a Fn(23)853 361 y Fr(Chapter)28 b(4)598
564 y(Ev)l(aluation)e(Metho)r(dology)131 752 y Fn(This)15
b(study)f(compares)g(the)g(accuracy)g(and)g(p)q(erformance)g(of)g(four)
h(shared-memory)d(m)o(ultipro-)131 842 y(cessor)j(sim)o(ulators.)k(The)
14 b(follo)o(wing)g(sections)h(describ)q(e)e(the)h(arc)o(hitectural)f
(parameters)h(of)h(the)131 933 y(systems)g(mo)q(deled,)f(the)h(sim)o
(ulators)g(used)g(in)h(this)f(study)h(and)h(their)e(di\013erences,)f
(the)i(metrics)131 1023 y(used)h(to)f(ev)m(aluate)g(the)g(sim)o
(ulators,)f(and)i(the)f(applications)g(studied.)131 1207
y Fq(4.1)66 b(Sim)n(ulated)25 b(Arc)n(hitectures)131
1331 y Fn(W)l(e)i(mo)q(del)e(the)h(p)q(erformance)f(of)i(cac)o
(he-coheren)o(t,)h(non-uniform)e(memory)d(access)k(\(CC-)131
1421 y(NUMA\))20 b(shared)h(memory)e(m)o(ultipro)q(cessor)g(systems)h
(in)h(this)g(study)l(.)36 b(Cac)o(he)21 b(coherence)f(is)131
1512 y(main)o(tained)c(through)i(an)g(in)o(v)m(alidation-based)f(MESI)g
(directory)f(coherence)g(proto)q(col.)25 b(Eac)o(h)131
1602 y(system)18 b(no)q(de)i(includes)f(one)g(pro)q(cessor,)i(a)f(t)o
(w)o(o-lev)o(el)d(write-bac)o(k)h(cac)o(he)h(hierarc)o(h)o(y)l(,)f
(part)i(of)131 1692 y(the)f(system's)f(distributed)g(ph)o(ysical)g
(memory)f(and)j(directory)e(structure,)h(a)h(net)o(w)o(ork)e(in)o(ter-)
131 1783 y(face,)c(and)g(a)g(split-transaction)g(bus)g(connecting)f
(the)g(di\013eren)o(t)g(comp)q(onen)o(ts)g(of)g(the)h(no)q(de.)21
b(All)131 1873 y(no)q(des)e(are)e(connected)g(b)o(y)g(a)h(t)o(w)o
(o-dimensional)e(mesh)h(net)o(w)o(ork.)24 b(Con)o(ten)o(tion)17
b(is)h(mo)q(deled)e(at)131 1963 y(all)g(resources)g(in)g(the)g(pro)q
(cessor,)h(memory)c(hierarc)o(h)o(y)l(,)h(bus,)j(and)f(net)o(w)o(ork.)
204 2056 y(The)23 b(base)h(pro)q(cessor)g(incorp)q(orates)g(aggressiv)o
(e)f(features)g(suc)o(h)g(as)g(out-of-order)i(issue,)131
2146 y(m)o(ultiple)10 b(instruction)i(issue,)h(non-blo)q(c)o(king)g
(loads)h(and)f(stores,)h(register)e(renaming,)g(and)h(sp)q(ec-)131
2236 y(ulativ)o(e)19 b(execution,)g(as)i(describ)q(ed)e(in)h(Section)f
(2.3.1.)33 b(Both)20 b(cac)o(hes)f(are)h(non-blo)q(c)o(king)h(and)131
2326 y(use)14 b(a)g(write-allo)q(cate)g(write-bac)o(k)f(p)q(olicy)l(.)
19 b(Eac)o(h)14 b(cac)o(he)f(supp)q(orts)j(8)e(miss)e(status)j(holding)
f(reg-)131 2417 y(isters)k(\(MSHRs\))f([12])h(to)g(hold)g(state)g
(related)f(to)i(outstanding)g(cac)o(he)e(misses)f(and)j(to)f(merge)131
2507 y(misses)f(to)i(a)f(single)g(cac)o(he)f(line)g(in)o(to)h(a)h
(single)e(external)h(miss.)25 b(The)19 b(L1)g(cac)o(he)e(has)i(a)g
(size)e(of)131 2597 y(16)g(KB)d(and)g(the)f(L2)i(cac)o(he)e(has)i(a)f
(size)f(of)h(64)j(KB)o(.)k(These)14 b(sizes)f(re\015ect)g(our)h
(application)f(input)131 2688 y(sizes)21 b(\(describ)q(ed)f(in)h
(Section)f(4.4\),)i(follo)o(wing)f(the)g(metho)q(dology)f(of)i(W)l(o)q
(o)g(et)e(al.)c([25)q(])o(.)36 b(All)p eop
%%Page: 24 31
24 30 bop 1882 72 a Fn(24)131 222 y(primary)18 b(w)o(orking)h(sets)h
(in)f(these)g(applications)g(\014t)g(in)g(the)g(L1)i(cac)o(he,)d(while)
h(the)g(secondary)131 312 y(w)o(orking)h(sets)h(do)g(not)f(\014t)g(in)g
(the)g(L2)h(cac)o(he.)33 b(Curren)o(tly)l(,)19 b(a)i(p)q(erfect)e(TLB)i
(and)g(instruction)131 403 y(cac)o(he)d(are)h(mo)q(delled)e(since)h
(the)h(application)f(suite)g(is)h(kno)o(wn)g(to)g(ha)o(v)o(e)f(a)h
(small)f(instruction)131 493 y(cac)o(he)g(and)g(TLB)h(miss)d(ratio.)27
b(More)18 b(realistic)f(mo)q(dels)g(of)h(the)g(instruction)g(cac)o(he)f
(and)i(TLB)131 583 y(can)e(b)q(e)f(implem)o(en)o(te)o(d)e(in)i(all)f
(the)h(sim)o(ulators)f(in)h(a)h(straigh)o(tforw)o(ard)g(manner.)204
674 y(Figure)e(4.1)g(summarizes)e(the)h(k)o(ey)g(system)g(parameters)g
(of)h(in)o(terest)f(for)h(our)h(base)f(system.)131 764
y(Results)f(from)g(\014v)o(e)f(other)i(v)m(ariations)g(of)g(the)f(base)
h(system)e(parameters)g(are)i(also)g(rep)q(orted,)g(as)131
854 y(describ)q(ed)h(in)g(Section)g(5.)131 1033 y Fq(4.2)66
b(Sim)n(ulators)25 b(Used)c(in)j(the)e(Study)131 1155
y Fn(W)l(e)12 b(compare)f(the)g(p)q(erformance)g(of)h(four)g
(di\013eren)o(t)f(sim)o(ulators)g(in)h(this)f(study)l(.)20
b(The)12 b(di\013erences)131 1245 y(among)j(all)g(four)h(sim)o(ulators)
e(are)h(limited)d(to)k(the)f(pro)q(cessor)h(mo)q(del)e(and)i(its)f(in)o
(teraction)f(with)131 1336 y(the)e(cac)o(he)f(hierarc)o(h)o(y)l(.)18
b(RSIM)11 b(and)h(DirectRSIM)e(mo)q(del)g(a)j(pro)q(cessor)f(with)g
(out-of-order)h(issue,)131 1426 y(m)o(ultiple)i(issue,)i(and)h(non)o
(blo)q(c)o(king)g(loads.)26 b(RSIM)17 b(uses)h(detailed)f(sim)o
(ulation)e(\(Section)i(2.3\),)131 1516 y(and)h(DirectRSIM)e(uses)h(our)
h(new)f(tec)o(hnique)f(\(Section)h(3.3\).)24 b(Simple)15
b(and)j(Simple-)p Fg(i)p Fn(x)d(mo)q(del)131 1607 y(a)i(single-issue,)f
(in-order)h(issue)f(pro)q(cessor)i(with)f(blo)q(c)o(king)f(loads)h(and)
g(no)g(sp)q(eculation,)g(using)131 1697 y(curren)o(t)j(direct)f
(execution)g(metho)q(dology)l(.)33 b(The)20 b(memory)e(system)g(sim)o
(ulation)h(in)h(all)g(these)131 1787 y(sim)o(ulators)c(uses)h(nearly)g
(iden)o(tical)e(co)q(de)i(and)h(is)f(based)g(on)h(an)f(ev)o(en)o
(t-driv)o(en)e(sim)o(ulation)g(en-)131 1878 y(gine.)33
b(Most)21 b(of)f(the)g(system)f(is)h(divided)f(in)o(to)h(di\013eren)o
(t)g(mo)q(dules)f(that)i(generate)f(ev)o(en)o(ts)f(in)131
1968 y(an)d(ob)o(vious)f(manner)f(\(example)e(mo)q(dules)i(are)h(L1)h
(cac)o(he,)e(L2)i(cac)o(he,)d(bus,)j(memory)c(mo)q(dules,)131
2058 y(net)o(w)o(ork)k(in)o(terfaces,)e(etc.\).)204 2149
y(Ev)o(en)o(ts)k(for)g(the)g(sim)o(ulated)e(mo)q(dules)h(\(including)h
(ligh)o(t)o(w)o(eigh)o(t)e(pro)q(cess)j(activ)m(ations\))f(are)131
2239 y(sc)o(heduled)g(b)o(y)g(inserting)g(them)g(on)h(a)g(cen)o(tral)f
(ev)o(en)o(t)f(queue.)28 b(The)19 b(sc)o(heduled)e(activities)g(are)131
2329 y(triggered)j(at)g(an)g(appropriate)h(time)c(b)o(y)i(a)i(cen)o
(tralized)c(driv)o(er)i(routine.)31 b(One)20 b(di\013erence)f(in)131
2419 y(the)k(RSIM's)f(ev)o(en)o(t-driv)o(en)f(sim)o(ulation)g(is)i(a)h
(sp)q(ecial)e(ev)o(en)o(t)g(called)g(RSIM)p 1611 2419
15 2 v 17 w(EVENT.)g(This)131 2510 y(ev)o(en)o(t)15 b(o)q(ccurs)i(ev)o
(ery)e(cycle)g(and)i(examines)e(the)h(state)h(of)g(eac)o(h)f(pro)q
(cessor,)h(L1)h(cac)o(he,)d(and)i(L2)131 2600 y(cac)o(he,)i(sc)o
(heduling)f(an)o(y)h(external)g(ev)o(en)o(ts)f(triggered)h(b)o(y)f
(these)h(parts)h(of)g(the)f(system)f(in)h(the)131 2690
y(ev)o(en)o(t)d(queue.)25 b(In)18 b(cycles)e(in)h(whic)o(h)g(no)i
(other)e(ev)o(en)o(t)g(is)g(sc)o(heduled,)g(RSIM)p 1572
2690 V 16 w(EVENT)h(rep)q(eats)p eop
%%Page: 25 32
25 31 bop 1882 72 a Fn(25)p 316 474 1431 2 v 315 531
2 57 v 869 514 a Ff(ILP)17 b(Pro)q(cessor)p 1745 531
V 316 532 1431 2 v 315 589 2 57 v 341 572 a Fe(Pro)q(cessor)e(sp)q(eed)
p 1230 589 V 601 w(500MHz)p 1745 589 V 315 645 V 341
628 a(Maxim)o(um)g(fetc)o(h/retire)g(rate)p 1230 645
V 380 w(4)p 1745 645 V 315 702 V 341 685 a(\(instructions)h(p)q(er)g
(cycle\))p 1230 702 V 1745 702 V 315 758 V 341 741 a(Instruction)g
(issue)g(windo)o(w)p 1230 758 V 422 w(64)f(en)o(tries)p
1745 758 V 315 814 V 341 798 a(F)l(unctional)i(units)p
1230 814 V 591 w(4)e(in)o(teger)g(arithmetic)p 1745 814
V 315 871 V 1230 871 V 1256 854 a(4)g(\015oating)g(p)q(oin)o(t)p
1745 871 V 315 927 V 1230 927 V 1256 910 a(4)g(address)g(generation)p
1745 927 V 315 984 V 341 967 a(Branc)o(h)g(sp)q(eculation)i(depth)p
1230 984 V 406 w(8)p 1745 984 V 315 1040 V 341 1023 a(Memory)e(unit)h
(size)p 1230 1040 V 569 w(32)f(en)o(tries)p 1745 1040
V 316 1042 1431 2 v 315 1098 2 57 v 826 1081 a Ff(Cac)o(he)i
(parameters)p 1745 1098 V 316 1100 1431 2 v 315 1156
2 57 v 341 1140 a Fe(Cac)o(he)e(line)i(size)p 1230 1156
V 624 w(64)e(b)o(ytes)p 1745 1156 V 315 1213 V 341 1196
a(L1)g(cac)o(he)h(\(on-c)o(hip\))p 1230 1213 V 546 w(Direct)g(mapp)q
(ed,)f(16)g(K)p 1745 1213 V 315 1269 V 341 1252 a(L1)g(request)h(p)q
(orts)p 1230 1269 V 587 w(2)p 1745 1269 V 315 1326 V
341 1309 a(L1)f(hit)h(time)p 1230 1326 V 690 w(1)f(cycle)p
1745 1326 V 315 1382 V 341 1365 a(Num)o(b)q(er)h(of)f(L1)g(MSHRs)p
1230 1382 V 469 w(8)p 1745 1382 V 315 1439 V 341 1422
a(L2)g(cac)o(he)h(\(o\013-c)o(hip\))p 1230 1439 V 544
w(4-w)o(a)o(y)e(asso)q(ciativ)o(e,)h(64)g(K)p 1745 1439
V 315 1495 V 341 1478 a(L2)g(request)h(p)q(orts)p 1230
1495 V 587 w(1)p 1745 1495 V 315 1552 V 341 1535 a(L2)f(hit)h(time)p
1230 1552 V 690 w(8)f(cycles,)h(pip)q(elined)p 1745 1552
V 315 1608 V 341 1591 a(Num)o(b)q(er)g(of)f(L2)g(MSHRs)p
1230 1608 V 469 w(8)p 1745 1608 V 316 1610 1431 2 v 315
1666 2 57 v 700 1649 a Ff(Memory)h(and)i(bus)f(parameters)p
1745 1666 V 316 1668 1431 2 v 315 1724 2 57 v 341 1707
a Fe(Memory)e(access)g(time)p 1230 1724 V 513 w(60)g(cycles)p
1745 1724 V 315 1781 V 341 1764 a(Memory)g(in)o(terlea)o(ving)p
1230 1781 V 505 w(4-w)o(a)o(y)p 1745 1781 V 315 1837
V 341 1820 a(Bus)h(width)p 1230 1837 V 711 w(32)f(b)o(ytes)p
1745 1837 V 315 1894 V 341 1877 a(Bus)h(frequency)p 1230
1894 V 634 w(167)f(MHz)p 1745 1894 V 316 1895 1431 2
v 315 1952 2 57 v 797 1935 a Ff(Net)o(w)o(ork)h(parameters)p
1745 1952 V 316 1954 1431 2 v 315 2010 2 57 v 341 1993
a Fe(Net)o(w)o(ork)e(sp)q(eed)p 1230 2010 V 624 w(125)h(MHz)p
1745 2010 V 315 2066 V 341 2049 a(Net)o(w)o(ork)f(width)p
1230 2066 V 620 w(64)h(bits)p 1745 2066 V 315 2123 V
341 2106 a(Flit)h(dela)o(y)g(\(p)q(er)f(hop\))p 1230
2123 V 520 w(1)g(net)o(w)o(ork)f(cycle)p 1745 2123 V
316 2125 1431 2 v 315 2181 2 57 v 546 2164 a Ff(Resulting)19
b(con)o(ten)o(tionless)f(memory)e(latencies)p 1745 2181
V 316 2183 1431 2 v 315 2239 2 57 v 341 2222 a Fe(Lo)q(cal)g(memory)p
1230 2239 V 631 w(85)f(cycles)p 1745 2239 V 315 2296
V 341 2279 a(Nearest)g(remote)g(memory)p 1230 2296 V
436 w(182)g(cycles)p 1745 2296 V 315 2352 V 341 2335
a(F)l(arthest)f(remote)h(memory)p 1230 2352 V 422 w(262)g(cycles)p
1745 2352 V 315 2408 V 341 2392 a(Latency)h(for)e(nearest)h(cac)o(he)h
(to)e(cac)o(he)i(transfer)p 1230 2408 V 60 w(210)f(cycles)p
1745 2408 V 315 2465 V 341 2448 a(Latency)h(for)e(farthest)h(cac)o(he)g
(to)g(cac)o(he)g(transfer)p 1230 2465 V 49 w(309)g(cycles)p
1745 2465 V 316 2467 1431 2 v 626 2531 a Fh(Figure)j(4.1)48
b Fn(Base)16 b(system)f(parameters)p eop
%%Page: 26 33
26 32 bop 1882 72 a Fn(26)131 222 y(automatically)16
b(without)h(the)h(o)o(v)o(erhead)e(of)i(enqueueing)e(and)i(dequeueing)e
(the)i(ev)o(en)o(t.)k(Th)o(us,)131 312 y(the)i(pro)q(cessors)g(and)h
(cac)o(hes)e(are)g(sim)o(ulated)f(on)i(a)g(cycle)e(b)o(y)h(cycle)f
(basis)i(in)f(RSIM.)f(The)131 403 y(motiv)m(ation)15
b(for)h(this)g(is)g(that)g(in)g(a)g(detailed)f(ILP)h(pro)q(cessor)h
(sim)o(ulation,)d(it)h(can)h(b)q(e)g(exp)q(ected)131
493 y(that)f(some)e(pro)q(cessor)j(or)e(cac)o(he)g(will)f(ha)o(v)o(e)g
(some)h(ev)o(en)o(t)e(sc)o(heduled)i(ev)o(ery)e(cycle.)19
b(In)14 b(con)o(trast,)131 583 y(the)h(other)g(sim)o(ulators)e(do)j(no)
f(ha)o(v)o(e)f(an)o(y)h(ev)o(en)o(ts)e(that)j(are)f(alw)o(a)o(ys)f(sc)o
(heduled)g(for)h(ev)o(ery)e(cycle.)131 761 y Fq(4.3)66
b(Metrics)131 884 y Fn(This)17 b(study)f(ev)m(aluates)g(the)g(sim)o
(ulators)f(based)i(on)g(their)e(accuracy)h(and)h(p)q(erformance.)131
975 y Fh(Sim)n(ulator)g(accuracy)131 1065 y Fn(The)c(primary)f(metric)f
(used)i(to)g(ev)m(aluate)g(the)g(accuracy)g(of)g(a)h(sim)o(ulator)e(is)
g(the)h(execution)f(time)131 1155 y(it)17 b(rep)q(orts)g(for)g(the)f
(sim)o(ulated)f(application.)22 b(T)l(o)c(gain)f(further)f(insigh)o(t,)
g(w)o(e)h(also)g(study)g(three)131 1245 y(comp)q(onen)o(ts)i(of)h(the)f
(execution)g(time)e(rep)q(orted)j(b)o(y)f(the)g(sim)o(ulator)f({)i(CPU)
f(time,)f(memory)131 1336 y(stall)h(time,)e(and)i(sync)o(hronization)g
(stall)f(time.)27 b(While)18 b(it)g(is)h(straigh)o(tforw)o(ard)h(to)f
(determine)131 1426 y(these)13 b(comp)q(onen)o(ts)f(for)h(a)g
(simple-pro)q(cessor)f(based)h(system,)f(it)g(is)h(more)e(di\016cult)g
(for)j(a)f(system)131 1516 y(that)h(mo)q(dels)f(state-of-the-art)i(ILP)
f(pro)q(cessors)h(where)e(instructions)h(can)g(b)q(e)g(o)o(v)o(erlapp)q
(ed)f(and)131 1607 y(reordered.)23 b(RSIM)16 b(and)h(DirectRSIM)e
(calculate)h(v)m(arious)h(stall)g(comp)q(onen)o(ts)f(according)h(to)g
(a)131 1697 y(heuristic)g(used)h(in)f(previous)g(w)o(ork)h([17,)f(19)q
(]:)24 b(an)o(y)17 b(cycle)f(in)i(whic)o(h)f(the)g(pro)q(cessor)i(can)e
(retire)131 1787 y(instructions)h(at)g(its)f(p)q(eak)h(rate)f(is)h
(considered)f(a)h Fm(busy)f Fn(cycle.)24 b(All)16 b(other)i(cycles)e
(are)h(c)o(harged)131 1878 y(to)i(the)f(\014rst)g(instruction)g(that)h
(could)f(not)h(retire)e(in)h(that)g(cycle,)f(as)i(that)g(instruction)e
(is)i(the)131 1968 y(one)e(that)f(is)g(prev)o(en)o(ting)f(the)h(pro)q
(cessor)h(from)f(retiring)f(at)i(p)q(eak)f(rate.)204
2058 y(The)h(execution)f(times)f(and)i(comp)q(onen)o(ts)f(for)h(the)g
(v)m(arious)g(sim)o(ulators)f(are)h(rep)q(orted)g(not)131
2149 y(to)j(suggest)g(an)o(y)e(arc)o(hitectural)g(tradeo\013s)i(or)f
(adv)m(an)o(tages,)i(but)e(rather)g(to)g(sho)o(w)h(the)f(abilit)o(y)131
2239 y(of)d(eac)o(h)e(t)o(yp)q(e)h(of)g(sim)o(ulator)f(to)h(capture)g
(the)g(b)q(eha)o(vior)g(of)g(a)h(shared-memory)d(m)o(ultipro)q(cessor)
131 2329 y(with)k(state-of-the-art)h(pro)q(cessors.)25
b(In)17 b(particular,)f(this)h(study)g(measures)f(the)h(error)g(of)g
(eac)o(h)131 2419 y(of)k(the)f(direct-execution)f(sim)o(ulators)g
(\(Simple,)g(Simple-)p Fg(i)p Fn(x,)f(and)j(DirectRSIM\))e(relativ)o(e)
g(to)131 2510 y(the)14 b(times)f(rep)q(orted)h(b)o(y)g(the)g(detailed)f
(execution-driv)o(en)f(sim)o(ulator)h(\(RSIM\).)g(RSIM)h(has)h(not)131
2600 y(b)q(een)k(v)m(alidated)f(against)i(a)f(real)g(mac)o(hine,)d(as)k
(w)o(e)e(do)h(not)g(ha)o(v)o(e)f(access)h(to)g(a)g(mac)o(hine)d(with)
131 2690 y(the)j(arc)o(hitecture)f(mo)q(deled)g(b)o(y)h(RSIM.)f(Ho)o(w)
o(ev)o(er,)g(an)o(y)h(errors)h(seen)f(b)o(y)f(RSIM)h(outside)h(the)p
eop
%%Page: 27 34
27 33 bop 1882 72 a Fn(27)131 222 y(pro)q(cessor)19 b(w)o(ould)f(also)h
(b)q(e)f(seen)f(in)h(the)g(other)g(sim)o(ulators,)e(as)j(these)e(sim)o
(ulators)g(use)h(nearly)131 312 y(iden)o(tical)h(co)q(de)h(in)g(all)g
(other)g(mo)q(dules.)33 b(Consequen)o(tly)l(,)20 b(this)g(error)g
(metric)e(represen)o(ts)i(the)131 403 y(additional)d(discrepancy)e
(seen)h(b)o(y)g(a)g(sim)o(ulator)f(with)h(an)h(appro)o(ximate)e(pro)q
(cessor)i(mo)q(del.)131 493 y Fh(Sim)n(ulator)g(p)r(erformance)131
583 y Fn(T)l(o)24 b(measure)d(sim)o(ulator)g(p)q(erformance,)i(the)f
(elapsed)h(\(w)o(all-clo)q(c)o(k\))e(time)f(is)j(used)g(for)g(eac)o(h)
131 674 y(sim)o(ulation)18 b(when)j(run)f(on)g(a)h(single)e(250MHz)i
(UltraSP)l(AR)o(C-I)q(I)e(pro)q(cessor)i(of)f(a)g(Sun)h(Ultra)131
764 y(En)o(terprise)13 b(4000)h(serv)o(er)e(with)h(1GB)h(memory)l(.)j
(The)c(sim)o(ulators)f(w)o(ere)g(all)h(compiled)e(using)j(the)131
854 y(Sun)j(C)f(4.0)h(compiler)d(with)i(the)g(highest)h(practical)e
(lev)o(el)g(of)h(optimization)f({)i(for)f(most)g(of)h(the)131
945 y(source)g(\014les,)g(this)g(is)f Fd(-xO4)p Fn(;)g(ho)o(w)o(ev)o
(er,)f(some)h(of)i(the)e(con)o(text-switc)o(hing)g(libraries)g(in)h
(Simple,)131 1035 y(Simple-)p Fg(i)p Fn(x,)c(and)k(DirectRSIM)e(m)o
(ust)g(b)q(e)h(compiled)e(with)i Fd(-xO3)p Fn(.)204 1125
y(Although)k(eac)o(h)g(of)g(the)f(sim)o(ulators)g(supp)q(orts)i
(detailed)d(statistics)i(related)f(to)h(all)f(of)h(its)131
1216 y(main)15 b(mo)q(dules,)g(the)i(runs)g(for)f(the)g(sim)o(ulator)f
(p)q(erformance)h(metrics)e(are)i(measured)g Fm(without)131
1306 y Fn(collecting)j(or)h(rep)q(orting)h(an)o(y)f(of)g(the)g(most)g
(detailed)f(statistics;)i(only)f(the)g(total)g(execution)131
1396 y(time,)d(the)i(p)q(ercen)o(tage)g(of)g(execution)f(time)f(sp)q
(en)o(t)i(in)f(eac)o(h)h(comp)q(onen)o(t)f(of)h(time,)e(the)i(cac)o(he)
131 1487 y(miss)e(b)q(eha)o(vior,)h(and)h(the)f(cac)o(he)f(MSHR)h(o)q
(ccupancy)g(are)g(collected.)25 b(Th)o(us,)19 b(these)f(n)o(um)o(b)q
(ers)131 1577 y(represen)o(t)d(the)h(p)q(erformance)f(of)h(the)g
(actual)g(sim)o(ulation)e(core,)h(without)h(the)g(need)f(for)h(p)q
(oten-)131 1667 y(tially)f(extraneous)i(statistics.)131
1845 y Fq(4.4)66 b(Applications)131 1968 y Fn(This)27
b(study)f(uses)h(5)g(di\013eren)o(t)e(applications)i({)g(FFT)f(and)h
(Radix)f(from)f(the)i(SPLASH-2)131 2058 y(suite)16 b([25],)f(LUopt)h
(an)h(optimized)c(v)o(ersion)i(of)h(LU)g(from)f(the)h(SPLASH-2)g
(suite,)f(MP3D)h(from)131 2149 y(the)22 b(SPLASH)f(suite)g([21)q(],)h
(and)g(Erlebac)o(her)e(from)h(the)g(Rice)g(parallel)g(compiler)e(group)
j([1].)131 2239 y(In)d(LUopt)g(when)f(compared)g(to)h(LU)f(one)h(imp)q
(ortan)o(t)f(lo)q(op)h(nest)g(has)g(b)q(een)f(in)o(terc)o(hanged)g(to)
131 2329 y(increase)k(the)f(o)o(v)o(erlap)h(of)g(read)g(misses)f(and)h
(thereb)o(y)f(impro)o(v)o(e)f(p)q(erformance)h(in)g(a)i(system)131
2419 y(with)c(ILP)h(pro)q(cessors.)31 b(F)l(or)20 b(b)q(etter)f(load)g
(balance,)h(LUopt)g(has)g(b)q(een)f(mo)q(di\014ed)f(sligh)o(tly)g(to)
131 2510 y(use)h(\015ags)g(for)g(sync)o(hronization)f(rather)h(than)g
(barriers.)28 b(The)18 b(n)o(um)o(b)q(er)f(of)i(pro)q(cessors)g(in)g
(the)131 2600 y(sim)o(ulated)c(con\014guration)j(for)g(eac)o(h)e
(application)h(is)g(c)o(hosen)g(according)g(to)h(the)f(scalabilit)o(y)e
(of)131 2690 y(the)f(application.)21 b(Using)14 b(systems)f(with)h
(more)f(pro)q(cessors)j(w)o(ould)e(require)f(an)i(increase)f(in)g(the)p
eop
%%Page: 28 35
28 34 bop 1882 72 a Fn(28)131 222 y(input)15 b(size)g(for)g(reasonable)
h(scalabilit)o(y;)d(this)i(w)o(ould)h(result)e(in)h(a)h(v)o(ery)e(long)
h(running)h(time)d(for)131 312 y(RSIM.)204 495 y(Figure)g(4.2)g(lists)g
(the)f(input)h(sizes)f(for)h(the)g(applications)g(and)g(the)g(n)o(um)o
(b)q(er)e(of)i(pro)q(cessors)i(in)131 585 y(eac)o(h)g(m)o(ultipro)q
(cessor)e(con\014guration.)22 b(The)15 b(input)f(sizes)g(are)h(at)h
(least)e(as)i(large)f(as)g(the)g(default)131 676 y(size)e(sp)q
(eci\014ed)g(in)g(the)h(distribution)f(for)h(eac)o(h)f(application,)g
(with)h(the)f(exception)g(of)h(LUopt.)21 b(In)131 766
y(LUopt,)16 b(a)f(matrix)f(one)h(size)g(smaller)e(than)j(the)f(default)
g(has)h(b)q(een)f(used)g(b)q(ecause)h(of)f(the)g(large)131
856 y(sim)o(ulation)c(time)g(required)h(with)g(RSIM;)g(ho)o(w)o(ev)o
(er,)g(the)h(n)o(um)o(b)q(er)e(of)i(pro)q(cessors)h(has)g(also)f(b)q
(een)131 946 y(scaled)j(do)o(wn)h(corresp)q(ondingly)f(from)g(the)g
(maxim)n(um)c(recommended)h(con\014guration.)p 402 2029
1228 2 v 401 2085 2 57 v 427 2068 a Ff(Application)p
716 2085 V 716 2085 V 220 w(Input)k(Size)p 1337 2085
V 1337 2085 V 219 w(Pro)q(cessors)p 1628 2085 V 402 2087
1228 2 v 401 2143 2 57 v 427 2126 a Fe(FFT)p 716 2143
V 222 w(65536)d(p)q(oin)o(ts)p 1337 2143 V 371 w(16)p
1628 2143 V 401 2200 V 427 2183 a(LUopt)p 716 2200 V
187 w(256)g(b)o(y)h(256)g(matrix,)f(blo)q(c)o(k)i(8)p
1337 2200 V 88 w(8)p 1628 2200 V 401 2256 V 427 2239
a(Radix)p 716 2256 V 198 w(512K)f(k)o(eys,)f(max:)20
b(512K,)14 b(1024)p 1337 2256 V 49 w(8)p 1628 2256 V
401 2313 V 427 2296 a(Mp3d)p 716 2313 V 200 w(50000)g(particles)p
1337 2313 V 326 w(8)p 1628 2313 V 401 2369 V 427 2352
a(Erlebac)o(her)p 716 2369 V 104 w(64)h(b)o(y)g(64)f(b)o(y)h(64)g(cub)q
(e,)h(blo)q(c)o(k)g(8)p 1337 2369 V 50 w(16)p 1628 2369
V 402 2371 1228 2 v 433 2453 a Fh(Figure)i(4.2)48 b Fn(Application)16
b(input)g(sizes)f(and)i(con\014gurations)p eop
%%Page: 29 36
29 35 bop 1882 72 a Fn(29)853 361 y Fr(Chapter)28 b(5)902
564 y(Results)131 752 y Fn(This)17 b(c)o(hapter)f(ev)m(aluates)g(the)h
(accuracy)f(and)h(p)q(erformance)e(of)i(the)f(sim)o(ulator)f(mo)q(dels)
g(under)131 842 y(in)o(v)o(estigation.)20 b(Previous)c(w)o(ork)g(has)h
(explored)e(the)h(di\013erences)f(in)h(accuracy)g(b)q(et)o(w)o(een)f
(RSIM)131 933 y(and)d(mo)q(dels)f(suc)o(h)g(as)h(Simple)d(and)j
(Simple-)p Fg(i)p Fn(x)991 915 y Fl(5)1019 933 y Fn([17)q(].)19
b(Th)o(us,)12 b(this)f(c)o(hapter)g(particularly)g(fo)q(cuses)131
1023 y(on)17 b(DirectRSIM.)204 1115 y(Section)d(5.1)h(examines)e(the)h
(accuracy)g(of)h(DirectRSIM,)d(Simple-)p Fg(i)p Fn(x,)g(and)j(Simple)d
(b)o(y)i(com-)131 1206 y(paring)h(the)f(v)m(alues)g(these)g(sim)o
(ulators)f(rep)q(ort)i(for)f(total)h(execution)e(time)f(and)j(its)f
(comp)q(onen)o(ts)131 1296 y(with)h(those)g(rep)q(orted)g(b)o(y)f
(RSIM.)g(The)h(execution)e(time)g(is)i(divided)e(in)o(to)i(CPU,)f
(memory)l(,)e(and)131 1386 y(sync)o(hronization)h(comp)q(onen)o(ts)f
(according)i(to)f(the)g(metho)q(dology)g(in)f(Section)h(4.3.)20
b(Section)13 b(5.2)131 1477 y(discusses)g(the)g(p)q(erformance)f(of)i
(the)f(four)g(sim)o(ulators.)19 b(Section)13 b(5.3)g(pro)o(vides)g(a)g
(detailed)g(anal-)131 1567 y(ysis)20 b(of)f(the)h(sources)f(of)h
(DirectRSIM's)e(p)q(erformance)g(b)q(ene\014ts)i(relativ)o(e)e(to)i
(RSIM)e(and)j(the)131 1657 y(sources)c(of)f(an)o(y)g(slo)o(wdo)o(wn)h
(seen)f(b)o(y)g(DirectRSIM)f(relativ)o(e)f(to)j(Simple.)204
1749 y(A)28 b(discussion)f(of)h(the)g(p)q(erformance)e(of)i(Simple,)g
(relativ)o(e)e(to)i(the)f(recen)o(tly)f(released)131
1840 y(Wisconsin)17 b(Wind)g(T)l(unnel-I)q(I,)f(is)h(pro)o(vided)f(in)h
(App)q(endix)f(A.)23 b(The)17 b(results)g(in)f(the)h(app)q(endix)131
1930 y(sho)o(w)12 b(that)g(Simple)e(p)q(erforms)g(comparably)h(to)h
(the)f(Wisconsin)h(Wind)f(T)l(unnel-I)q(I)g(and)h(can)g(th)o(us)131
2020 y(b)q(e)k(considered)g(represen)o(tativ)o(e)e(of)i(the)g
(state-of-the-art)h(in)f(direct-execution)e(sim)o(ulators)h(for)131
2111 y(shared-memory)f(m)o(ultipro)q(cessors)h(with)h(simple)e(pro)q
(cessor)k(mo)q(dels.)p 131 2184 450 2 v 131 2227 a Fk(5)150
2242 y Fj(The)c(n)o(um)o(b)q(ers)g(rep)q(orted)h(here)h(di\013er)e
(from)e(those)j(in)f(previous)g(w)o(ork)g([17)o(])f(b)q(ecause)j(this)e
(study)g(uses)i(a)d(more)131 2292 y(aggressiv)o(e)h(compiler)d(\(Sun)j
(C)f(compiler\))e(and)i(uses)i(a)d(sligh)o(tly)g(di\013eren)o(t)i
(memory)d(hierarc)o(h)o(y)i(\(write-bac)o(k)h(L1)131
2342 y(cac)o(he,)h(MESI)f(coherence)i(proto)q(col,)d(sligh)o(tly)g
(longer)g(memory)f(latencies\).)p eop
%%Page: 30 37
30 36 bop 1882 72 a Fn(30)131 222 y Fq(5.1)66 b(Sim)n(ulator)25
b(Accuracy)131 347 y Fh(5.1.1)55 b(Base)19 b(Con\014guration)131
471 y Fn(Figure)d(5.1\(a\))22 b(sho)o(ws)g(the)f(execution)e(time)g
(rep)q(orted)j(b)o(y)e(eac)o(h)h(of)g(the)g(sim)o(ulation)e(mo)q(dels)
131 561 y(for)h(eac)o(h)f(of)g(the)g(application)g(programs)g(using)h
(the)f(base)h(system)d(con\014guration)k(describ)q(ed)131
652 y(in)g(Section)g(4.1.)37 b(Eac)o(h)21 b(one)h(of)f(these)g(graphs)i
(sho)o(ws)f(the)f(total)h(execution)e(time)f(rep)q(orted)131
742 y(b)o(y)e(RSIM,)f(DirectRSIM,)e(Simple-4x,)h(and)j(Simple.)j(These)
c(graphs)h(are)f(split)f(up)h(in)o(to)g(three)131 832
y(comp)q(onen)o(ts)h(of)h(execution)e(time)f(\(CPU,)i(memory)e(stall,)i
(and)h(sync)o(hronization)f(stall\),)h(and)131 923 y(the)14
b(lengths)f(of)i(the)e(bars)h(are)g(normalized)e(to)i(the)g(length)f
(of)h(the)g(execution)e(time)g(rep)q(orted)i(b)o(y)131
1013 y(RSIM.)g(The)g(n)o(um)o(b)q(er)f(ab)q(o)o(v)o(e)i(eac)o(h)f(bar)h
(giv)o(es)f(the)h(p)q(ercen)o(tage)f(error)h(in)f(total)h(execution)e
(time)131 1103 y(for)20 b(the)g(corresp)q(onding)h(sim)o(ulator)d
(relativ)o(e)g(to)j(RSIM.)d(Num)o(b)q(ers)h(sho)o(wn)h(to)h(the)e(side)
h(of)g(a)131 1193 y(bar)14 b(represen)o(t)f(the)g(breakup)g(of)h(the)f
(total)h(error)f(among)h(the)f(three)g(comp)q(onen)o(ts)g(of)g
(execution)131 1284 y(time.)204 1376 y(Figure)j(5.1\(a\))24
b(sho)o(ws)g(that)g(DirectRSIM)d(rep)q(orts)j(o)o(v)o(erall)e(sim)o
(ulated)f(execution)h(time)131 1466 y(within)12 b(5\045)h(of)g(RSIM)f
(on)h(all)f(of)h(our)g(applications.)20 b(This)13 b(is)f(a)h(striking)f
(impro)o(v)o(em)o(en)n(t)e(from)i(the)131 1557 y(b)q(est)h(previous)f
(appro)o(ximate)f(sim)o(ulation)g(mo)q(del)g(using)i(Simple-4x,)d(whic)
o(h)i(sees)g(an)h(execution)131 1647 y(time)21 b(error)h(of)h(87\045)g
(for)f(LUopt)h(and)g(20\045-40\045)h(on)f(4)g(other)f(applications)h
(studied.)39 b(The)131 1737 y(straigh)o(tforw)o(ard)17
b(v)o(ersion)f(of)g(Simple)e(sees)i(errors)h(ranging)g(from)e(29\045)i
(to)f(271\045.)204 1830 y(Figure)g(5.1\(a\))24 b(also)h(sho)o(ws)f
(that)g(most)f(of)h(the)f(errors)h(seen)g(in)f(Simple-4x)f(are)h(in)h
(the)131 1920 y(memory)d(comp)q(onen)o(t)i(of)h(execution)e(time.)41
b(Prop)q(er)25 b(prediction)d(of)i(the)g(fraction)f(of)h(time)131
2010 y(sp)q(en)o(t)15 b(in)f(the)g(memory)d(comp)q(onen)o(t)i(is)h(imp)
q(ortan)o(t)g(for)g(a)h(large)f(class)h(of)f(arc)o(hitectural)f
(studies)131 2100 y(that)i(target)g(this)g(execution)e(time)g(comp)q
(onen)o(t.)19 b(Figure)d(5.1\(a\))f(sho)o(ws)h(that)f(Simple-4x)d
(often)131 2191 y(signi\014can)o(tly)f(o)o(v)o(erestimates)f(the)i(imp)
q(ortance)f(of)h(memory)d(time,)i(while)g(Simple)e(often)k(greatly)131
2281 y(underestimates)18 b(this)h(comp)q(onen)o(t.)29
b(In)19 b(con)o(trast,)h(DirectRSIM)e(pro)o(vides)h(a)g(close)g
(estimate)131 2371 y(in)d(all)g(cases.)204 2464 y(The)k(di\013erences)e
(b)q(et)o(w)o(een)g(these)h(four)g(sim)o(ulation)f(mo)q(dels)g(arise)h
(from)f(their)g(abilit)o(y)g(to)131 2554 y(capture)f(the)f(b)q
(ene\014ts)g(that)h(ILP)g(pro)o(vides)f(to)h(the)f(v)m(arious)h(comp)q
(onen)o(ts)f(of)h(execution)e(time.)131 2644 y(F)l(or)f(example,)e(ILP)
i(can)g(reduce)g(the)f(CPU)h(comp)q(onen)o(t)f(of)h(execution)f(time)f
(b)o(y)h(issuing)i(m)o(ulti-)p eop
%%Page: 31 38
31 37 bop 1882 72 a Fn(31)156 299 y
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 156 299 a
%%BeginDocument: ErlebacherSimulatedCycles_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
89.28 72 S9
[] 16.800000 SL
89.28 169.738 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 157.618 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 102.494 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 168.467 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 157.032 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 102.299 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 194.954 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 181.173 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 101.712 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 283.406 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 268.55 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 190.947 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 278.226 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 265.52 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 252.814 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 241.086 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 91.5475 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 87.3475 TXR
12 /Helvetica SetTxt
(|) -90 72 111.095 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 106.895 TXR
12 /Helvetica SetTxt
(|) -90 72 130.643 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 126.443 TXR
12 /Helvetica SetTxt
(|) -90 72 150.19 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 145.99 TXR
12 /Helvetica SetTxt
(|) -90 72 169.738 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 165.538 TXR
12 /Helvetica SetTxt
(|) -90 72 189.285 TXC
10 /Helvetica-Bold SetTxt
(120) 0 67 185.085 TXR
12 /Helvetica SetTxt
(|) -90 72 208.833 TXC
10 /Helvetica-Bold SetTxt
(140) 0 67 204.633 TXR
12 /Helvetica SetTxt
(|) -90 72 228.38 TXC
10 /Helvetica-Bold SetTxt
(160) 0 67 224.18 TXR
12 /Helvetica SetTxt
(|) -90 72 247.928 TXC
10 /Helvetica-Bold SetTxt
(180) 0 67 243.728 TXR
12 /Helvetica SetTxt
(|) -90 72 267.475 TXC
10 /Helvetica-Bold SetTxt
(200) 0 67 263.275 TXR
12 /Helvetica SetTxt
(|) -90 72 287.023 TXC
10 /Helvetica-Bold SetTxt
(220) 0 67 282.823 TXR
14 /Helvetica SetTxt
( Erlebacher -- Simulated Cycles) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized execution time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 89.28 62.2262 TXC
(DirRSIM) 0 141.12 62.2262 TXC
8 /Helvetica-Bold SetTxt
(-0.7) 0 158.4 162.7 TXC
(-0.4) 0 158.4 129.665 TXC
(-0.2) 0 158.4 87.1493 TXC
10 /Helvetica SetTxt
(-1.3) 0 141.12 172.376 TXC
(Simple-4X) 0 192.96 62.2262 TXC
8 /Helvetica-Bold SetTxt
(1.7) 0 210.24 188.112 TXC
(24.9) 0 210.24 141.394 TXC
(-0.9) 0 210.24 86.8561 TXC
10 /Helvetica SetTxt
(25.8) 0 192.96 198.863 TXC
(Simple) 0 244.8 62.2262 TXC
8 /Helvetica-Bold SetTxt
(2.8) 0 262.08 275.978 TXC
(23.0) 0 262.08 229.748 TXC
(90.5) 0 262.08 131.424 TXC
10 /Helvetica SetTxt
(116.3) 0 244.8 287.316 TXC
(synch) 0 296.64 268.452 TXR
(mem) 0 296.64 255.747 TXR
(cpu) 0 296.64 243.041 TXR
() 0 89.28 51.7262 TXC
() 0 141.12 51.7262 TXC
8 /Helvetica-Bold SetTxt
() 0 158.4 154.3 TXC
() 0 158.4 121.265 TXC
() 0 158.4 78.7493 TXC
10 /Helvetica SetTxt
() 0 141.12 161.876 TXC
() 0 192.96 51.7262 TXC
8 /Helvetica-Bold SetTxt
() 0 210.24 179.712 TXC
() 0 210.24 132.994 TXC
() 0 210.24 78.4561 TXC
10 /Helvetica SetTxt
() 0 192.96 188.363 TXC
() 0 244.8 51.7262 TXC
8 /Helvetica-Bold SetTxt
() 0 262.08 267.578 TXC
() 0 262.08 221.348 TXC
() 0 262.08 123.024 TXC
10 /Helvetica SetTxt
() 0 244.8 276.816 TXC
() 0 296.64 257.952 TXR
() 0 296.64 245.247 TXR
() 0 296.64 232.541 TXR
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1106 299 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 1106 299 a
%%BeginDocument: Erlebacher_simtime.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 268.364 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
158.4 72 S9
158.4 135.183 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
223.2 88.7668 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
288 72 S9
288 87.2833 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 111.273 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 107.073 TXR
12 /Helvetica SetTxt
(|) -90 72 150.545 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 146.345 TXR
12 /Helvetica SetTxt
(|) -90 72 189.818 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 185.618 TXR
12 /Helvetica SetTxt
(|) -90 72 229.091 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 224.891 TXR
12 /Helvetica SetTxt
(|) -90 72 268.364 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 264.164 TXR
14 /Helvetica SetTxt
( Erlebacher --  Simulation Time) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized simulation time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 93.6 62.1818 TXC
(1.00) 0 93.6 278.182 TXC
(DirRSIM) 0 158.4 62.1818 TXC
(3.11) 0 158.4 145.001 TXC
(Simple-4X) 0 223.2 62.1818 TXC
(11.71) 0 223.2 98.585 TXC
(Simple) 0 288 62.1818 TXC
(12.85) 0 288 97.1015 TXC
() 0 93.6 51.6818 TXC
() 0 93.6 267.682 TXC
() 0 158.4 51.6818 TXC
() 0 158.4 134.501 TXC
() 0 223.2 51.6818 TXC
() 0 223.2 88.085 TXC
() 0 288 51.6818 TXC
() 0 288 86.6015 TXC
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 707 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 156 707 a
%%BeginDocument: FFTSimulatedCycles_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
89.28 72 S9
[] 16.800000 SL
89.28 156.706 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 153.148 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 107.831 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 156.028 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 153.148 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 107.407 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 184.744 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 182.541 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 106.475 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 283.765 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 281.647 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 209.816 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 279.529 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 266.824 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 254.118 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 241.412 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 88.9412 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 84.7412 TXR
12 /Helvetica SetTxt
(|) -90 72 105.882 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 101.682 TXR
12 /Helvetica SetTxt
(|) -90 72 122.824 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 118.624 TXR
12 /Helvetica SetTxt
(|) -90 72 139.765 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 135.565 TXR
12 /Helvetica SetTxt
(|) -90 72 156.706 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 152.506 TXR
12 /Helvetica SetTxt
(|) -90 72 173.647 TXC
10 /Helvetica-Bold SetTxt
(120) 0 67 169.447 TXR
12 /Helvetica SetTxt
(|) -90 72 190.588 TXC
10 /Helvetica-Bold SetTxt
(140) 0 67 186.388 TXR
12 /Helvetica SetTxt
(|) -90 72 207.529 TXC
10 /Helvetica-Bold SetTxt
(160) 0 67 203.329 TXR
12 /Helvetica SetTxt
(|) -90 72 224.471 TXC
10 /Helvetica-Bold SetTxt
(180) 0 67 220.271 TXR
12 /Helvetica SetTxt
(|) -90 72 241.412 TXC
10 /Helvetica-Bold SetTxt
(200) 0 67 237.212 TXR
12 /Helvetica SetTxt
(|) -90 72 258.353 TXC
10 /Helvetica-Bold SetTxt
(220) 0 67 254.153 TXR
12 /Helvetica SetTxt
(|) -90 72 275.294 TXC
10 /Helvetica-Bold SetTxt
(240) 0 67 271.094 TXR
14 /Helvetica SetTxt
( FFT -- Simulated Cycles) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized execution time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 89.28 61.8353 TXC
(DirRSIM) 0 141.12 61.8353 TXC
8 /Helvetica-Bold SetTxt
(-0.8) 0 158.4 154.588 TXC
(0.5) 0 158.4 130.278 TXC
(-0.5) 0 158.4 89.7035 TXC
10 /Helvetica SetTxt
(-0.8) 0 141.12 159.416 TXC
(Simple-4X) 0 192.96 61.8353 TXC
8 /Helvetica-Bold SetTxt
(-1.7) 0 210.24 183.642 TXC
(36.4) 0 210.24 144.508 TXC
(-1.6) 0 210.24 89.1953 TXC
10 /Helvetica SetTxt
(33.1) 0 192.96 188.132 TXC
(Simple) 0 244.8 61.8353 TXC
8 /Helvetica-Bold SetTxt
(-1.7) 0 262.08 282.664 TXC
(31.3) 0 262.08 245.732 TXC
(120.4) 0 262.08 140.951 TXC
10 /Helvetica SetTxt
(150.0) 0 244.8 287.153 TXC
(synch) 0 296.64 268.518 TXR
(mem) 0 296.64 255.812 TXR
(cpu) 0 296.64 243.106 TXR
() 0 89.28 51.3353 TXC
() 0 141.12 51.3353 TXC
8 /Helvetica-Bold SetTxt
() 0 158.4 146.188 TXC
() 0 158.4 121.878 TXC
() 0 158.4 81.3035 TXC
10 /Helvetica SetTxt
() 0 141.12 148.916 TXC
() 0 192.96 51.3353 TXC
8 /Helvetica-Bold SetTxt
() 0 210.24 175.242 TXC
() 0 210.24 136.108 TXC
() 0 210.24 80.7953 TXC
10 /Helvetica SetTxt
() 0 192.96 177.632 TXC
() 0 244.8 51.3353 TXC
8 /Helvetica-Bold SetTxt
() 0 262.08 274.264 TXC
() 0 262.08 237.332 TXC
() 0 262.08 132.551 TXC
10 /Helvetica SetTxt
() 0 244.8 276.653 TXC
() 0 296.64 258.018 TXR
() 0 296.64 245.312 TXR
() 0 296.64 232.606 TXR
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1106 707 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 1106 707 a
%%BeginDocument: FFT_simtime.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 268.364 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
158.4 72 S9
158.4 125.806 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
223.2 92.6125 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
288 72 S9
288 92.9475 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 111.273 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 107.073 TXR
12 /Helvetica SetTxt
(|) -90 72 150.545 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 146.345 TXR
12 /Helvetica SetTxt
(|) -90 72 189.818 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 185.618 TXR
12 /Helvetica SetTxt
(|) -90 72 229.091 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 224.891 TXR
12 /Helvetica SetTxt
(|) -90 72 268.364 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 264.164 TXR
14 /Helvetica SetTxt
( FFT --  Simulation Time) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized simulation time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 93.6 62.1818 TXC
(1.00) 0 93.6 278.182 TXC
(DirRSIM) 0 158.4 62.1818 TXC
(3.65) 0 158.4 135.624 TXC
(Simple-4X) 0 223.2 62.1818 TXC
(9.53) 0 223.2 102.431 TXC
(Simple) 0 288 62.1818 TXC
(9.37) 0 288 102.766 TXC
() 0 93.6 51.6818 TXC
() 0 93.6 267.682 TXC
() 0 158.4 51.6818 TXC
() 0 158.4 125.124 TXC
() 0 223.2 51.6818 TXC
() 0 223.2 91.9306 TXC
() 0 288 51.6818 TXC
() 0 288 92.2657 TXC
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1115 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 156 1115 a
%%BeginDocument: LUoptSimulatedCycles_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
89.28 72 S9
[] 16.800000 SL
89.28 129.6 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 122.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 103.45 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 130.061 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 123.379 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 104.659 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 179.77 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 169.056 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 104.544 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 285.581 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 266.4 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 201.6 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 281.088 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 268.416 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 255.168 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 242.496 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 83.52 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 79.32 TXR
12 /Helvetica SetTxt
(|) -90 72 95.04 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 90.84 TXR
12 /Helvetica SetTxt
(|) -90 72 106.56 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 102.36 TXR
12 /Helvetica SetTxt
(|) -90 72 118.08 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 113.88 TXR
12 /Helvetica SetTxt
(|) -90 72 129.6 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 125.4 TXR
12 /Helvetica SetTxt
(|) -90 72 141.12 TXC
10 /Helvetica-Bold SetTxt
(120) 0 67 136.92 TXR
12 /Helvetica SetTxt
(|) -90 72 152.64 TXC
10 /Helvetica-Bold SetTxt
(140) 0 67 148.44 TXR
12 /Helvetica SetTxt
(|) -90 72 164.16 TXC
10 /Helvetica-Bold SetTxt
(160) 0 67 159.96 TXR
12 /Helvetica SetTxt
(|) -90 72 175.68 TXC
10 /Helvetica-Bold SetTxt
(180) 0 67 171.48 TXR
12 /Helvetica SetTxt
(|) -90 72 187.2 TXC
10 /Helvetica-Bold SetTxt
(200) 0 67 183 TXR
12 /Helvetica SetTxt
(|) -90 72 198.72 TXC
10 /Helvetica-Bold SetTxt
(220) 0 67 194.52 TXR
12 /Helvetica SetTxt
(|) -90 72 210.24 TXC
10 /Helvetica-Bold SetTxt
(240) 0 67 206.04 TXR
12 /Helvetica SetTxt
(|) -90 72 221.76 TXC
10 /Helvetica-Bold SetTxt
(260) 0 67 217.56 TXR
12 /Helvetica SetTxt
(|) -90 72 233.28 TXC
10 /Helvetica-Bold SetTxt
(280) 0 67 229.08 TXR
12 /Helvetica SetTxt
(|) -90 72 244.8 TXC
10 /Helvetica-Bold SetTxt
(300) 0 67 240.6 TXR
12 /Helvetica SetTxt
(|) -90 72 256.32 TXC
10 /Helvetica-Bold SetTxt
(320) 0 67 252.12 TXR
12 /Helvetica SetTxt
(|) -90 72 267.84 TXC
10 /Helvetica-Bold SetTxt
(340) 0 67 263.64 TXR
12 /Helvetica SetTxt
(|) -90 72 279.36 TXC
10 /Helvetica-Bold SetTxt
(360) 0 67 275.16 TXR
14 /Helvetica SetTxt
( LUopt -- Simulated Cycles) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized execution time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 89.28 61.632 TXC
(DirRSIM) 0 141.12 61.632 TXC
8 /Helvetica-Bold SetTxt
(-0.8) 0 158.4 126.72 TXC
(-0.4) 0 158.4 113.99 TXC
(2.1) 0 158.4 88.3008 TXC
10 /Helvetica SetTxt
(0.8) 0 141.12 132.365 TXC
(Simple-4X) 0 192.96 61.632 TXC
8 /Helvetica-Bold SetTxt
(6.0) 0 210.24 174.413 TXC
(79.2) 0 210.24 136.8 TXC
(1.9) 0 210.24 88.2432 TXC
10 /Helvetica SetTxt
(87.1) 0 192.96 182.074 TXC
(Simple) 0 244.8 61.632 TXC
8 /Helvetica-Bold SetTxt
(20.8) 0 262.08 276.019 TXC
(79.6) 0 262.08 233.971 TXC
(170.4) 0 262.08 136.8 TXC
10 /Helvetica SetTxt
(270.8) 0 244.8 287.885 TXC
(synch) 0 296.64 270.144 TXR
(mem) 0 296.64 257.472 TXR
(cpu) 0 296.64 244.8 TXR
() 0 89.28 51.132 TXC
() 0 141.12 51.132 TXC
8 /Helvetica-Bold SetTxt
() 0 158.4 118.32 TXC
() 0 158.4 105.59 TXC
() 0 158.4 79.9008 TXC
10 /Helvetica SetTxt
() 0 141.12 121.865 TXC
() 0 192.96 51.132 TXC
8 /Helvetica-Bold SetTxt
() 0 210.24 166.013 TXC
() 0 210.24 128.4 TXC
() 0 210.24 79.8432 TXC
10 /Helvetica SetTxt
() 0 192.96 171.574 TXC
() 0 244.8 51.132 TXC
8 /Helvetica-Bold SetTxt
() 0 262.08 267.619 TXC
() 0 262.08 225.571 TXC
() 0 262.08 128.4 TXC
10 /Helvetica SetTxt
() 0 244.8 277.385 TXC
() 0 296.64 259.644 TXR
() 0 296.64 246.972 TXR
() 0 296.64 234.3 TXR
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1106 1115 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 1106 1115 a
%%BeginDocument: LUopt_simtime.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 268.364 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
158.4 72 S9
158.4 137.51 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
223.2 95.6739 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
288 72 S9
288 94.5871 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 111.273 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 107.073 TXR
12 /Helvetica SetTxt
(|) -90 72 150.545 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 146.345 TXR
12 /Helvetica SetTxt
(|) -90 72 189.818 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 185.618 TXR
12 /Helvetica SetTxt
(|) -90 72 229.091 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 224.891 TXR
12 /Helvetica SetTxt
(|) -90 72 268.364 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 264.164 TXR
14 /Helvetica SetTxt
( LUopt --  Simulation Time) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized simulation time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 93.6 62.1818 TXC
(1.00) 0 93.6 278.182 TXC
(DirRSIM) 0 158.4 62.1818 TXC
(3.00) 0 158.4 147.328 TXC
(Simple-4X) 0 223.2 62.1818 TXC
(8.29) 0 223.2 105.492 TXC
(Simple) 0 288 62.1818 TXC
(8.69) 0 288 104.405 TXC
() 0 93.6 51.6818 TXC
() 0 93.6 267.682 TXC
() 0 158.4 51.6818 TXC
() 0 158.4 136.828 TXC
() 0 223.2 51.6818 TXC
() 0 223.2 94.9921 TXC
() 0 288 51.6818 TXC
() 0 288 93.9053 TXC
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1523 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 156 1523 a
%%BeginDocument: Mp3dSimulatedCycles_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
89.28 72 S9
[] 16.800000 SL
89.28 234.406 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 224.174 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 78.9835 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 227.91 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 215.405 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 79.3083 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 266.4 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 254.869 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 78.8211 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 280.692 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 269.811 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 99.609 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 275.008 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 263.639 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 250.647 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 237.654 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 104.481 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 100.281 TXR
12 /Helvetica SetTxt
(|) -90 72 136.962 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 132.762 TXR
12 /Helvetica SetTxt
(|) -90 72 169.444 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 165.244 TXR
12 /Helvetica SetTxt
(|) -90 72 201.925 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 197.725 TXR
12 /Helvetica SetTxt
(|) -90 72 234.406 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 230.206 TXR
12 /Helvetica SetTxt
(|) -90 72 266.887 TXC
10 /Helvetica-Bold SetTxt
(120) 0 67 262.687 TXR
14 /Helvetica SetTxt
( Mp3d -- Simulated Cycles) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized execution time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 89.28 62.2556 TXC
(DirRSIM) 0 141.12 62.2556 TXC
8 /Helvetica-Bold SetTxt
(1.5) 0 158.4 221.576 TXC
(-5.7) 0 158.4 147.356 TXC
(0.2) 0 158.4 75.5729 TXC
10 /Helvetica SetTxt
(-4.0) 0 141.12 234.406 TXC
(Simple-4X) 0 192.96 62.2556 TXC
8 /Helvetica-Bold SetTxt
(0.8) 0 210.24 260.553 TXC
(18.9) 0 210.24 166.845 TXC
(-0.0) 0 210.24 75.4105 TXC
10 /Helvetica SetTxt
(19.7) 0 192.96 272.896 TXC
(Simple) 0 244.8 62.2556 TXC
8 /Helvetica-Bold SetTxt
(0.4) 0 262.08 275.332 TXC
(15.4) 0 262.08 184.71 TXC
(12.7) 0 262.08 85.8045 TXC
10 /Helvetica SetTxt
(28.5) 0 244.8 287.188 TXC
(synch) 0 296.64 265.263 TXR
(mem) 0 296.64 252.271 TXR
(cpu) 0 296.64 240.902 TXR
() 0 89.28 51.7556 TXC
() 0 141.12 51.7556 TXC
8 /Helvetica-Bold SetTxt
() 0 158.4 213.176 TXC
() 0 158.4 138.956 TXC
() 0 158.4 67.1729 TXC
10 /Helvetica SetTxt
() 0 141.12 223.906 TXC
() 0 192.96 51.7556 TXC
8 /Helvetica-Bold SetTxt
() 0 210.24 252.153 TXC
() 0 210.24 158.445 TXC
() 0 210.24 67.0105 TXC
10 /Helvetica SetTxt
() 0 192.96 262.396 TXC
() 0 244.8 51.7556 TXC
8 /Helvetica-Bold SetTxt
() 0 262.08 266.932 TXC
() 0 262.08 176.31 TXC
() 0 262.08 77.4045 TXC
10 /Helvetica SetTxt
() 0 244.8 276.688 TXC
() 0 296.64 254.763 TXR
() 0 296.64 241.771 TXR
() 0 296.64 230.402 TXR
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1106 1523 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 1106 1523 a
%%BeginDocument: Mp3d_simtime.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 268.364 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
158.4 72 S9
158.4 116.094 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
223.2 98.5442 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
288 72 S9
288 96.8543 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 111.273 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 107.073 TXR
12 /Helvetica SetTxt
(|) -90 72 150.545 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 146.345 TXR
12 /Helvetica SetTxt
(|) -90 72 189.818 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 185.618 TXR
12 /Helvetica SetTxt
(|) -90 72 229.091 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 224.891 TXR
12 /Helvetica SetTxt
(|) -90 72 268.364 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 264.164 TXR
14 /Helvetica SetTxt
( Mp3d --  Simulation Time) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized simulation time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 93.6 62.1818 TXC
(1.00) 0 93.6 278.182 TXC
(DirRSIM) 0 158.4 62.1818 TXC
(4.45) 0 158.4 125.912 TXC
(Simple-4X) 0 223.2 62.1818 TXC
(7.40) 0 223.2 108.362 TXC
(Simple) 0 288 62.1818 TXC
(7.90) 0 288 106.672 TXC
() 0 93.6 51.6818 TXC
() 0 93.6 267.682 TXC
() 0 158.4 51.6818 TXC
() 0 158.4 115.412 TXC
() 0 223.2 51.6818 TXC
() 0 223.2 97.8623 TXC
() 0 288 51.6818 TXC
() 0 288 96.1725 TXC
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1931 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 156 1931 a
%%BeginDocument: RadixSimulatedCycles_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
89.28 72 S9
[] 16.800000 SL
89.28 210.462 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 201.738 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
89.28 72 S9
[] 16.800000 SL
89.28 107.585 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 210.462 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 202.569 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
141.12 72 S9
[] 16.800000 SL
141.12 108.277 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 215.031 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 205.062 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
192.96 72 S9
[] 16.800000 SL
192.96 106.892 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 281.492 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 270.138 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
244.8 72 S9
[] 16.800000 SL
244.8 211.431 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 276.923 M9
gsave 0.000000 1.000000 1.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 264.462 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 252 M9
gsave 1.000000 1.000000 0.000000 setrgbcolor
D9
grestore
313.92 72 S9
[] 16.800000 SL
313.92 239.538 M9
gsave 1.000000 G9
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 99.6923 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 95.4923 TXR
12 /Helvetica SetTxt
(|) -90 72 127.385 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 123.185 TXR
12 /Helvetica SetTxt
(|) -90 72 155.077 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 150.877 TXR
12 /Helvetica SetTxt
(|) -90 72 182.769 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 178.569 TXR
12 /Helvetica SetTxt
(|) -90 72 210.462 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 206.262 TXR
12 /Helvetica SetTxt
(|) -90 72 238.154 TXC
10 /Helvetica-Bold SetTxt
(120) 0 67 233.954 TXR
12 /Helvetica SetTxt
(|) -90 72 265.846 TXC
10 /Helvetica-Bold SetTxt
(140) 0 67 261.646 TXR
14 /Helvetica SetTxt
( Radix -- Simulated Cycles) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized execution time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 89.28 62.3077 TXC
(DirRSIM) 0 141.12 62.3077 TXC
8 /Helvetica-Bold SetTxt
(-0.7) 0 158.4 206.585 TXC
(0.2) 0 158.4 155.492 TXC
(0.5) 0 158.4 90.1385 TXC
10 /Helvetica SetTxt
(0.0) 0 141.12 216 TXC
(Simple-4X) 0 192.96 62.3077 TXC
8 /Helvetica-Bold SetTxt
(0.9) 0 210.24 210.046 TXC
(2.9) 0 210.24 155.908 TXC
(-0.5) 0 210.24 89.4462 TXC
10 /Helvetica SetTxt
(3.3) 0 192.96 220.569 TXC
(Simple) 0 244.8 62.3077 TXC
8 /Helvetica-Bold SetTxt
(1.9) 0 262.08 275.815 TXC
(-25.6) 0 262.08 240.785 TXC
(75.0) 0 262.08 141.646 TXC
10 /Helvetica SetTxt
(51.3) 0 244.8 287.031 TXC
(synch) 0 296.64 265.846 TXR
(mem) 0 296.64 253.385 TXR
(cpu) 0 296.64 240.923 TXR
() 0 89.28 51.8077 TXC
() 0 141.12 51.8077 TXC
8 /Helvetica-Bold SetTxt
() 0 158.4 198.185 TXC
() 0 158.4 147.092 TXC
() 0 158.4 81.7385 TXC
10 /Helvetica SetTxt
() 0 141.12 205.5 TXC
() 0 192.96 51.8077 TXC
8 /Helvetica-Bold SetTxt
() 0 210.24 201.646 TXC
() 0 210.24 147.508 TXC
() 0 210.24 81.0462 TXC
10 /Helvetica SetTxt
() 0 192.96 210.069 TXC
() 0 244.8 51.8077 TXC
8 /Helvetica-Bold SetTxt
() 0 262.08 267.415 TXC
() 0 262.08 232.385 TXC
() 0 262.08 133.246 TXC
10 /Helvetica SetTxt
() 0 244.8 276.531 TXC
() 0 296.64 255.346 TXR
() 0 296.64 242.885 TXR
() 0 296.64 230.423 TXR
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1106 1931 a
 14208860 6157187 1710325 657817 21839544 19602964 startTexFig
 1106 1931 a
%%BeginDocument: Radix_simtime.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 268.364 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
158.4 72 S9
158.4 146.793 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
223.2 103.948 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
288 72 S9
288 103.15 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 111.273 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 107.073 TXR
12 /Helvetica SetTxt
(|) -90 72 150.545 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 146.345 TXR
12 /Helvetica SetTxt
(|) -90 72 189.818 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 185.618 TXR
12 /Helvetica SetTxt
(|) -90 72 229.091 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 224.891 TXR
12 /Helvetica SetTxt
(|) -90 72 268.364 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 264.164 TXR
14 /Helvetica SetTxt
( Radix --  Simulation Time) 0 201.6 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 331.2 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 331.2 42 TXR
( Normalized simulation time) 90 40.3 288 TXR
10 /Helvetica SetTxt
(RSIM) 0 93.6 62.1818 TXC
(1.00) 0 93.6 278.182 TXC
(DirRSIM) 0 158.4 62.1818 TXC
(2.63) 0 158.4 156.611 TXC
(Simple-4X) 0 223.2 62.1818 TXC
(6.15) 0 223.2 113.766 TXC
(Simple) 0 288 62.1818 TXC
(6.30) 0 288 112.968 TXC
() 0 93.6 51.6818 TXC
() 0 93.6 267.682 TXC
() 0 158.4 51.6818 TXC
() 0 158.4 146.111 TXC
() 0 223.2 51.6818 TXC
() 0 223.2 103.266 TXC
() 0 288 51.6818 TXC
() 0 288 102.468 TXC
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 331.200000 72.000000 331.200000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 302 2382 a Fn(\(a\))17 b(Rep)q(orted)f(sim)o(ulated)e(time)318
b(\(b\))16 b(Elapsed)h(time)d(of)j(sim)o(ulation)471
2512 y Fh(Figure)h(5.1)49 b Fn(Comparison)16 b(of)g(sim)o(ulator)f
(accuracy)h(and)538 2572 y(p)q(erformance)f(for)h(the)g(base)h(system)e
(con\014guration)p eop
%%Page: 32 39
32 38 bop 1882 72 a Fn(32)131 222 y(ple)14 b(instructions)h(at)g(a)g
(time,)e(or)i(b)o(y)f(issuing)h(instructions)g(out)g(of)g(order.)21
b(ILP)15 b(can)g(reduce)f(the)131 312 y(memory)19 b(comp)q(onen)o(t)h
(b)o(y)h(o)o(v)o(erlapping)g(m)o(ultiple)d(long)k(latency)e(memory)f
(op)q(erations)j(with)131 403 y(eac)o(h)17 b(other,)h(or)f(b)o(y)g(o)o
(v)o(erlapping)g(memory)d(latency)j(with)g(CPU)h(instructions.)24
b(ILP)18 b(can)g(also)131 493 y(increase)f(a)g(comp)q(onen)o(t)g(of)g
(execution)f(time)f(b)o(y)i(increasing)g(con)o(ten)o(tion)f(for)i
(resources)f(or)h(b)o(y)131 583 y(c)o(hanging)f(an)g(access)f(pattern.)
204 676 y(As)22 b(rep)q(orted)g(b)o(y)f(P)o(ai)h(et)f(al.)g([17)q(],)h
(the)f(Simple)f(mo)q(del)g(cannot)i(capture)g(the)g(e\013ects)f(of)131
766 y(ILP)i(on)h(either)d(the)i(CPU)g(comp)q(onen)o(t)f(of)h(execution)
e(time)g(or)i(the)g(memory)d(comp)q(onen)o(t.)131 856
y(Simple-4x)i(mo)q(dels)g(m)o(uc)o(h)f(of)j(the)f(b)q(ene\014ts)h(of)f
(m)o(ultiple)d(instruction)j(issue)h(for)f(the)g(CPU)131
946 y(comp)q(onen)o(t)16 b(\(b)q(ecause)h(its)f(clo)q(c)o(k)g(sp)q(eed)
h(is)f(increased)g(b)o(y)g(a)h(factor)g(equal)f(to)h(the)g(issue)f
(width)131 1037 y(of)i(the)g(pro)q(cessor\).)26 b(Ho)o(w)o(ev)o(er,)16
b(it)h(do)q(es)i(not)f(allo)o(w)f(m)o(ultiple)e(read)j(misses)e(to)i(b)
q(e)g(o)o(v)o(erlapp)q(ed)131 1127 y(with)d(eac)o(h)f(other.)20
b(As)15 b(a)g(result,)f(this)g(metho)q(d)g(is)g(not)h(able)g(to)g(prop)
q(erly)f(capture)g(ILP-sp)q(eci\014c)131 1217 y(impro)o(v)o(em)o(en)o
(ts)i(in)i(the)h(memory)d(comp)q(onen)o(t)i(of)h(execution)f(time,)f
(whic)o(h)h(is)h(dominated)f(b)o(y)131 1308 y(read)f(miss)e(p)q
(enalties.)204 1400 y(In)22 b(con)o(trast,)h(DirectRSIM)d(mo)q(dels)g
(the)i(impact)e(of)i(ILP)f(in)h(b)q(oth)g(CPU)g(and)g(memory)131
1490 y(comp)q(onen)o(ts)15 b(of)g(execution)f(time.)19
b(Th)o(us,)c(DirectRSIM)f(pro)o(vides)h(a)g(closer)g(and)h(more)e
(consis-)131 1581 y(ten)o(t)i(appro)o(ximation)g(to)h(the)g
(functionalit)o(y)e(of)i(detailed)f(execution-driv)o(en)e(sim)o
(ulators)i(than)131 1671 y(either)f(Simple)f(or)j(Simple-)p
Fg(i)p Fn(x.)131 1833 y Fh(5.1.2)55 b(Other)19 b(system)d
(con\014gurations)131 1957 y Fn(Figure)21 b(5.2)g(sho)o(ws)h(the)f
(errors)g(relativ)o(e)e(to)j(RSIM)e(seen)h(b)o(y)g(DirectRSIM,)e
(Simple-)p Fg(i)p Fn(x,)g(and)131 2048 y(Simple)d(in)i(a)h(v)m(ariet)o
(y)e(of)h(m)o(ultipro)q(cessor)f(con\014gurations.)28
b(It)18 b(sho)o(ws)h(the)f(error)g(in)g(the)g(total)131
2138 y(execution)e(time,)d(as)k(w)o(ell)e(as)j(the)e(comp)q(onen)o(t)f
(of)i(the)f(error)g(in)g(the)h(memory)c(time.)20 b(The)c(\014rst)131
2228 y(ro)o(w)f(in)f(these)h(tables)f(rep)q(eats)h(the)f(data)i(of)f
(the)f(base)h(con\014guration)h(sho)o(wn)f(in)f(Figure)i(5.1\(a\))q(.)
131 2319 y(The)h(second)f(ro)o(w)h(represen)o(ts)e(a)i(system)e(with)h
(rougly)g(t)o(wice)f(the)h(lo)q(cal)h(and)g(remote)d(memory)131
2409 y(latency)g(of)h(the)f(base)h(con\014guration.)21
b(The)15 b(third)f(ro)o(w)h(sho)o(ws)g(a)g(system)e(with)h(three)g
(times)f(the)131 2499 y(lo)q(cal)f(memory)e(latency)h(of)h(the)g(base)h
(con\014guration)g(and)g(a)g(minim)n(um)8 b(con)o(ten)o(tionless)j
(remote-)131 2589 y(to-lo)q(cal)k(latency)e(ratio)h(of)g(3:1;)g(this)g
(is)g(c)o(hosen)g(to)g(represen)o(t)f(p)q(oten)o(tial)g(future)h
(con\014gurations)131 2680 y(with)k(faster)g(pro)q(cessors)h(and)f
(relativ)o(ely)d(higher)i(remote)f(memory)f(latencies)i(that)h(are)f(m)
o(uc)o(h)p eop
%%Page: 33 40
33 39 bop 1882 72 a Fn(33)131 222 y(harder)14 b(to)f(o)o(v)o(erlap.)19
b(The)13 b(fourth)h(ro)o(w)f(sho)o(ws)h(a)f(system)f(with)h(the)g(base)
g(memory)d(and)k(net)o(w)o(ork)131 312 y(parameters,)h(but)g(with)h(a)g
(pro)q(cessor)g(that)g(is)f(t)o(wice)g(as)h(aggressiv)o(e)f(as)i(the)e
(base.)21 b(Sp)q(eci\014cally)l(,)131 403 y(w)o(e)12
b(double)f(the)h(instruction)f(issue)h(width,)g(instruction)f(windo)o
(w)h(size,)g(pro)q(cessor)h(memory)c(unit)131 493 y(size,)i(functional)
g(units,)h(branc)o(h-prediction)f(hardw)o(are,)h(cac)o(he)f(p)q(orts,)i
(and)f(MSHRs.)19 b(The)11 b(\014fth)131 583 y(ro)o(w)k(similar)e(to)i
(the)f(previous)g(ro)o(w,)h(except)f(that)h(the)f(instruction)g(windo)o
(w)h(size)f(is)g(four)h(times)131 674 y(that)23 b(of)f(the)f(base)485
655 y Fl(6)505 674 y Fn(.)38 b(The)22 b(sixth)g(ro)o(w)g(sho)o(ws)h(a)f
(system)e(with)i(the)f(base)i(pro)q(cessor,)h(cac)o(he,)131
764 y(and)16 b(memory)c(parameters,)i(but)h(with)g(a)h(constan)o
(t-latency)f(50-cycle)f(net)o(w)o(ork)h(rather)g(than)h(a)131
854 y(2-D)e(mesh)e(con\014guration.)22 b(These)13 b(con\014gurations)h
(are)g(c)o(hosen)f(to)g(represen)o(t)f(exp)q(ected)h(future)131
944 y(trends)i(to)o(w)o(ard)g(higher)g(pro)q(cessor)h(clo)q(c)o(k)d(sp)
q(eeds,)i(aggressiv)o(e)g(pro)q(cessor)h(microarc)o(hitecture)o(s,)131
1035 y(and)h(aggressiv)o(e)f(net)o(w)o(ork)g(con\014gurations.)204
1127 y(As)21 b(Figure)e(5.2)i(sho)o(ws,)h(DirectRSIM)d(con)o(tin)o(ues)
g(to)i(see)f(v)o(ery)f(lo)o(w)h(errors)g(in)g(execution)131
1217 y(time)14 b(relativ)o(e)h(to)h(RSIM)g({)h(an)f(a)o(v)o(erage)g(of)
h(1.6\045)f(and)h(a)f(maxim)o(um)c(of)17 b(6.3\045.)204
1310 y(In)12 b(con)o(trast,)g(the)g(errors)g(with)g(Simple-)p
Fg(i)p Fn(x)d(remain)h(high)i(for)g(most)f(of)h(the)f(applications,)i
(and)131 1400 y(con)o(tin)o(ue)g(to)h(v)m(ary)f(widely)l(,)g(with)g
(errors)h(in)f(total)h(execution)e(time)g(ranging)i(from)e(2\045)i(to)g
(128\045,)131 1490 y(a)o(v)o(eraging)f(nearly)f(40\045.)21
b(The)13 b(errors)g(seen)g(with)f(Simple)f(range)i(from)f(9\045)h(to)g
(438\045,)h(a)o(v)o(eraging)131 1581 y(around)j(130\045.)22
b(As)16 b(exp)q(ected,)f(the)h(errors)g(are)g(greatest)h(in)e(the)h
(applications)g(with)g(the)g(most)131 1671 y(read)j(miss)f(o)o(v)o
(erlap.)29 b(This)19 b(application)g(c)o(haracteristic)e(b)q(ecomes)h
(ev)o(en)g(more)g(imp)q(ortan)o(t)g(in)131 1761 y(determining)11
b(the)i(p)q(erformance)g(of)g(systems)f(with)i(future)f(aggressiv)o(e)g
(pro)q(cessors)h(\(e.g.,)f(ILP+)131 1851 y(and)k(ILP++)f
(con\014gurations\).)204 1944 y(In)i(conclusion,)h(DirectRSIM)d(ac)o
(hiev)o(es)h(signi\014can)o(tly)g(greater)i(and)f(more)f(reliable)g
(accu-)131 2034 y(racy)f(than)g(Simple-)p Fg(i)p Fn(x)c(or)k(Simple)e
(in)h(a)h(v)m(ariet)o(y)e(of)i(curren)o(t-generation)f(and)h
(next-generation)131 2124 y(m)o(ultipro)q(cessor)f(con\014gurations.)
131 2308 y Fq(5.2)66 b(Sim)n(ulator)25 b(P)n(erformance)131
2433 y Fn(Figure)16 b(5.1\(b\))j(graphically)f(depicts)g(the)h(relativ)
o(e)e(sim)o(ulation)g(times)g(tak)o(en)h(b)o(y)g(eac)o(h)g(of)i(the)131
2523 y(four)13 b(sim)o(ulators)e(in)g(the)h(base)h(con\014guration.)21
b(The)12 b(bars)h(in)f(this)g(graph)h(are)f(normalized)e(to)j(the)p
131 2597 450 2 v 131 2640 a Fk(6)150 2655 y Fj(In)h(the)g(fourth)g(and)
g(\014fth)g(ro)o(ws,)f(Simple-8x)f(is)h(used)i(rather)g(than)f
(Simple-4x.)p eop
%%Page: 34 41
34 40 bop 1882 72 a Fn(34)p 144 562 1774 2 v 143 612
2 50 v 329 612 V 338 612 V 337 612 V 424 597 a Fj(Erle.)p
595 612 V 604 612 V 603 612 V 181 w(FFT)p 861 612 V 870
612 V 869 612 V 163 w(LUopt)p 1123 612 V 1132 612 V 1131
612 V 154 w(Mp3d)p 1389 612 V 1398 612 V 1397 612 V 159
w(Radix)p 1655 612 V 1664 612 V 1663 612 V 166 w(Avg.)p
1917 612 V 144 613 1774 2 v 143 663 2 50 v 329 663 V
338 663 V 363 648 a(T)m(ot)p 454 663 V 53 w(Mem)p 595
663 V 604 663 V 57 w(T)m(ot)p 720 663 V 52 w(Mem)p 861
663 V 870 663 V 58 w(T)m(ot)p 982 663 V 49 w(Mem)p 1123
663 V 1132 663 V 57 w(T)m(ot)p 1248 663 V 53 w(Mem)p
1389 663 V 1398 663 V 57 w(T)m(ot)p 1514 663 V 53 w(Mem)p
1655 663 V 1664 663 V 57 w(T)m(ot)p 1776 663 V 49 w(Mem)p
1917 663 V 144 665 1774 2 v 144 673 V 143 723 2 50 v
169 708 a(Base)p 329 723 V 338 723 V 110 w(-1.3)p 454
723 V 49 w(-0.4)p 595 723 V 604 723 V 81 w(-0.8)p 720
723 V 48 w(0.5)p 861 723 V 870 723 V 96 w(0.8)p 982 723
V 59 w(-0.4)p 1123 723 V 1132 723 V 81 w(-4.0)p 1248
723 V 49 w(-5.7)p 1389 723 V 1398 723 V 81 w(0.0)p 1514
723 V 63 w(0.2)p 1655 723 V 1664 723 V 95 w(1.4)p 1776
723 V 59 w(1.4)p 1917 723 V 144 725 1774 2 v 143 774
2 50 v 169 760 a(Lat.)18 b(x2)p 329 774 V 338 774 V 58
w(-1.2)p 454 774 V 49 w(-1.0)p 595 774 V 604 774 V 81
w(-2.0)p 720 774 V 48 w(0.7)p 861 774 V 870 774 V 96
w(1.5)p 982 774 V 59 w(1.1)p 1123 774 V 1132 774 V 95
w(-3.8)p 1248 774 V 49 w(-5.2)p 1389 774 V 1398 774 V
81 w(0.0)p 1514 774 V 63 w(0.5)p 1655 774 V 1664 774
V 95 w(1.7)p 1776 774 V 59 w(1.7)p 1917 774 V 144 776
1774 2 v 143 826 2 50 v 169 811 a(Lat.)g(x3)p 329 826
V 338 826 V 58 w(-0.7)p 454 826 V 49 w(-1.3)p 595 826
V 604 826 V 81 w(0.5)p 720 826 V 62 w(0.2)p 861 826 V
870 826 V 96 w(0.7)p 982 826 V 59 w(-0.0)p 1123 826 V
1132 826 V 81 w(-2.3)p 1248 826 V 49 w(-4.2)p 1389 826
V 1398 826 V 81 w(0.0)p 1514 826 V 63 w(0.4)p 1655 826
V 1664 826 V 95 w(0.8)p 1776 826 V 59 w(1.2)p 1917 826
V 144 828 1774 2 v 143 877 2 50 v 169 862 a(ILP+)p 329
877 V 338 877 V 93 w(-2.3)p 454 877 V 49 w(-0.6)p 595
877 V 604 877 V 81 w(-0.4)p 720 877 V 48 w(0.2)p 861
877 V 870 877 V 96 w(0.3)p 982 877 V 59 w(2.4)p 1123
877 V 1132 877 V 95 w(-1.9)p 1248 877 V 49 w(-4.6)p 1389
877 V 1398 877 V 81 w(-0.8)p 1514 877 V 49 w(-0.0)p 1655
877 V 1664 877 V 81 w(1.1)p 1776 877 V 59 w(1.6)p 1917
877 V 144 879 1774 2 v 143 929 2 50 v 169 914 a(ILP++)p
329 929 V 338 929 V 61 w(-6.3)p 454 929 V 49 w(-2.6)p
595 929 V 604 929 V 81 w(-2.1)p 720 929 V 48 w(-1.2)p
861 929 V 870 929 V 82 w(1.2)p 982 929 V 59 w(4.2)p 1123
929 V 1132 929 V 95 w(-0.3)p 1248 929 V 49 w(-5.8)p 1389
929 V 1398 929 V 81 w(-1.4)p 1514 929 V 49 w(-0.2)p 1655
929 V 1664 929 V 81 w(2.3)p 1776 929 V 59 w(2.8)p 1917
929 V 144 931 1774 2 v 143 980 2 50 v 169 965 a(C.)c(net)p
329 980 V 338 980 V 81 w(-0.4)p 454 980 V 49 w(-0.4)p
595 980 V 604 980 V 81 w(-0.8)p 720 980 V 48 w(0.3)p
861 980 V 870 980 V 96 w(0.8)p 982 980 V 59 w(-0.2)p
1123 980 V 1132 980 V 81 w(-3.4)p 1248 980 V 49 w(-4.1)p
1389 980 V 1398 980 V 81 w(-0.2)p 1514 980 V 49 w(0.2)p
1655 980 V 1664 980 V 95 w(1.1)p 1776 980 V 59 w(1.0)p
1917 980 V 144 982 1774 2 v 143 1032 2 50 v 169 1017
a(Avg.)p 329 1032 V 338 1032 V 108 w(2.0)p 454 1032 V
63 w(1.1)p 595 1032 V 604 1032 V 95 w(1.1)p 720 1032
V 62 w(0.5)p 861 1032 V 870 1032 V 96 w(0.9)p 982 1032
V 59 w(1.4)p 1123 1032 V 1132 1032 V 95 w(2.6)p 1248
1032 V 63 w(4.9)p 1389 1032 V 1398 1032 V 95 w(0.4)p
1514 1032 V 63 w(0.2)p 1655 1032 V 1664 1032 V 95 w(1.4)p
1776 1032 V 59 w(1.6)p 1917 1032 V 144 1033 1774 2 v
672 1094 a Fc(\(a\))g(Erro)o(r)g(of)f(DirectRSIM)i(relative)g(to)e
(RSIM)p 131 1135 1837 2 v 130 1185 2 50 v 316 1185 V
325 1185 V 324 1185 V 414 1170 a Fj(Erle.)p 589 1185
V 598 1185 V 597 1185 V 188 w(FFT)p 861 1185 V 870 1185
V 870 1185 V 184 w(LUopt)p 1158 1185 V 1167 1185 V 1167
1185 V 174 w(Mp3d)p 1431 1185 V 1440 1185 V 1440 1185
V 162 w(Radix)p 1694 1185 V 1703 1185 V 1702 1185 V 169
w(Avg.)p 1966 1185 V 131 1186 1837 2 v 130 1236 2 50
v 316 1236 V 325 1236 V 350 1221 a(T)m(ot)p 448 1236
V 59 w(Mem)p 589 1236 V 598 1236 V 58 w(T)m(ot)p 720
1236 V 59 w(Mem)p 861 1236 V 870 1236 V 57 w(T)m(ot)p
1014 1236 V 81 w(Mem)p 1158 1236 V 1167 1236 V 60 w(T)m(ot)p
1290 1236 V 60 w(Mem)p 1431 1236 V 1440 1236 V 57 w(T)m(ot)p
1553 1236 V 49 w(Mem)p 1694 1236 V 1703 1236 V 58 w(T)m(ot)p
1826 1236 V 59 w(Mem)p 1966 1236 V 131 1238 1837 2 v
131 1246 V 130 1296 2 50 v 156 1281 a(Base)p 316 1296
V 325 1296 V 110 w(25.8)p 448 1296 V 48 w(24.9)p 589
1296 V 598 1296 V 75 w(33.1)p 720 1296 V 48 w(36.4)p
861 1296 V 870 1296 V 74 w(87.1)p 1014 1296 V 70 w(79.2)p
1158 1296 V 1167 1296 V 77 w(19.7)p 1290 1296 V 49 w(18.9)p
1431 1296 V 1440 1296 V 74 w(3.3)p 1553 1296 V 59 w(2.9)p
1694 1296 V 1703 1296 V 96 w(33.8)p 1826 1296 V 48 w(32.5)p
1966 1296 V 131 1298 1837 2 v 130 1347 2 50 v 156 1332
a(Lat.)18 b(x2)p 316 1347 V 325 1347 V 58 w(27.6)p 448
1347 V 48 w(26.3)p 589 1347 V 598 1347 V 75 w(35.6)p
720 1347 V 48 w(37.0)p 861 1347 V 870 1347 V 74 w(109.0)p
1014 1347 V 49 w(98.9)p 1158 1347 V 1167 1347 V 77 w(18.0)p
1290 1347 V 49 w(17.1)p 1431 1347 V 1440 1347 V 74 w(3.6)p
1553 1347 V 59 w(2.2)p 1694 1347 V 1703 1347 V 96 w(38.8)p
1826 1347 V 48 w(36.3)p 1966 1347 V 131 1349 1837 2 v
130 1399 2 50 v 156 1384 a(Lat.)g(x3)p 316 1399 V 325
1399 V 58 w(27.6)p 448 1399 V 48 w(23.7)p 589 1399 V
598 1399 V 75 w(37.2)p 720 1399 V 48 w(39.9)p 861 1399
V 870 1399 V 74 w(90.5)p 1014 1399 V 70 w(83.0)p 1158
1399 V 1167 1399 V 77 w(9.9)p 1290 1399 V 70 w(10.3)p
1431 1399 V 1440 1399 V 74 w(2.0)p 1553 1399 V 59 w(1.2)p
1694 1399 V 1703 1399 V 96 w(33.4)p 1826 1399 V 48 w(31.6)p
1966 1399 V 131 1400 1837 2 v 130 1450 2 50 v 156 1435
a(ILP+)p 316 1450 V 325 1450 V 93 w(31.4)p 448 1450 V
48 w(32.5)p 589 1450 V 598 1450 V 75 w(50.0)p 720 1450
V 48 w(56.0)p 861 1450 V 870 1450 V 74 w(121.8)p 1014
1450 V 49 w(115.0)p 1158 1450 V 1167 1450 V 56 w(32.7)p
1290 1450 V 49 w(32.7)p 1431 1450 V 1440 1450 V 74 w(4.0)p
1553 1450 V 59 w(3.4)p 1694 1450 V 1703 1450 V 96 w(48.0)p
1826 1450 V 48 w(47.9)p 1966 1450 V 131 1452 1837 2 v
130 1502 2 50 v 156 1487 a(ILP++)p 316 1502 V 325 1502
V 61 w(69.8)p 448 1502 V 48 w(72.0)p 589 1502 V 598 1502
V 75 w(60.0)p 720 1502 V 48 w(66.1)p 861 1502 V 870 1502
V 74 w(127.8)p 1014 1502 V 49 w(121.5)p 1158 1502 V 1167
1502 V 56 w(47.5)p 1290 1502 V 49 w(51.7)p 1431 1502
V 1440 1502 V 74 w(9.4)p 1553 1502 V 59 w(15.6)p 1694
1502 V 1703 1502 V 75 w(62.9)p 1826 1502 V 48 w(65.4)p
1966 1502 V 131 1503 1837 2 v 130 1553 2 50 v 156 1538
a(C.)c(net)p 316 1553 V 325 1553 V 81 w(23.1)p 448 1553
V 48 w(23.7)p 589 1553 V 598 1553 V 75 w(29.7)p 720 1553
V 48 w(33.7)p 861 1553 V 870 1553 V 74 w(84.7)p 1014
1553 V 70 w(77.6)p 1158 1553 V 1167 1553 V 77 w(17.0)p
1290 1553 V 49 w(17.0)p 1431 1553 V 1440 1553 V 74 w(3.6)p
1553 1553 V 59 w(3.1)p 1694 1553 V 1703 1553 V 96 w(31.6)p
1826 1553 V 48 w(31.0)p 1966 1553 V 131 1555 1837 2 v
130 1605 2 50 v 156 1590 a(Avg.)p 316 1605 V 325 1605
V 108 w(34.2)p 448 1605 V 48 w(33.9)p 589 1605 V 598
1605 V 75 w(40.9)p 720 1605 V 48 w(44.9)p 861 1605 V
870 1605 V 74 w(103.5)p 1014 1605 V 49 w(95.9)p 1158
1605 V 1167 1605 V 77 w(24.1)p 1290 1605 V 49 w(24.6)p
1431 1605 V 1440 1605 V 74 w(4.3)p 1553 1605 V 59 w(4.7)p
1694 1605 V 1703 1605 V 96 w(41.4)p 1826 1605 V 48 w(40.8)p
1966 1605 V 131 1606 1837 2 v 692 1667 a Fc(\(b\))g(Erro)o(r)g(of)g
(Simple-)p Fb(i)p Fc(x)f(relative)i(to)f(RSIM)p 131 1708
1909 2 v 130 1757 2 50 v 316 1757 V 325 1757 V 324 1757
V 424 1743 a Fj(Erle.)p 609 1757 V 618 1757 V 618 1757
V 209 w(FFT)p 903 1757 V 912 1757 V 911 1757 V 195 w(LUopt)p
1200 1757 V 1209 1757 V 1208 1757 V 174 w(Mp3d)p 1473
1757 V 1482 1757 V 1481 1757 V 166 w(Radix)p 1746 1757
V 1755 1757 V 1754 1757 V 186 w(Avg.)p 2039 1757 V 131
1759 1909 2 v 130 1809 2 50 v 316 1809 V 325 1809 V 350
1794 a(T)m(ot)p 468 1809 V 80 w(Mem)p 609 1809 V 618
1809 V 57 w(T)m(ot)p 762 1809 V 81 w(Mem)p 903 1809 V
912 1809 V 57 w(T)m(ot)p 1056 1809 V 80 w(Mem)p 1200
1809 V 1209 1809 V 61 w(T)m(ot)p 1332 1809 V 60 w(Mem)p
1473 1809 V 1482 1809 V 57 w(T)m(ot)p 1605 1809 V 59
w(Mem)p 1746 1809 V 1755 1809 V 58 w(T)m(ot)p 1898 1809
V 80 w(Mem)p 2039 1809 V 131 1811 1909 2 v 131 1819 V
130 1869 2 50 v 156 1854 a(Base)p 316 1869 V 325 1869
V 110 w(116.3)p 468 1869 V 48 w(23.0)p 609 1869 V 618
1869 V 74 w(150.0)p 762 1869 V 49 w(31.3)p 903 1869 V
912 1869 V 74 w(270.8)p 1056 1869 V 48 w(79.6)p 1200
1869 V 1209 1869 V 78 w(28.5)p 1332 1869 V 49 w(15.4)p
1473 1869 V 1482 1869 V 74 w(51.3)p 1605 1869 V 48 w(-25.6)p
1746 1869 V 1755 1869 V 61 w(123.4)p 1898 1869 V 48 w(35.0)p
2039 1869 V 131 1870 1909 2 v 130 1920 2 50 v 156 1905
a(Lat.)k(x2)p 316 1920 V 325 1920 V 58 w(77.9)p 468 1920
V 69 w(24.2)p 609 1920 V 618 1920 V 74 w(100.5)p 762
1920 V 49 w(31.1)p 903 1920 V 912 1920 V 74 w(232.4)p
1056 1920 V 48 w(100.3)p 1200 1920 V 1209 1920 V 57 w(22.2)p
1332 1920 V 49 w(14.9)p 1473 1920 V 1482 1920 V 74 w(23.6)p
1605 1920 V 48 w(-18.7)p 1746 1920 V 1755 1920 V 61 w(91.3)p
1898 1920 V 69 w(37.8)p 2039 1920 V 131 1922 1909 2 v
130 1972 2 50 v 156 1957 a(Lat.)g(x3)p 316 1972 V 325
1972 V 58 w(54.5)p 468 1972 V 69 w(23.0)p 609 1972 V
618 1972 V 74 w(72.0)p 762 1972 V 70 w(35.6)p 903 1972
V 912 1972 V 74 w(147.6)p 1056 1972 V 48 w(81.7)p 1200
1972 V 1209 1972 V 78 w(10.6)p 1332 1972 V 49 w(9.1)p
1473 1972 V 1482 1972 V 95 w(8.8)p 1605 1972 V 69 w(-7.2)p
1746 1972 V 1755 1972 V 82 w(58.7)p 1898 1972 V 69 w(31.3)p
2039 1972 V 131 1973 1909 2 v 130 2023 2 50 v 156 2008
a(ILP+)p 316 2023 V 325 2023 V 93 w(156.3)p 468 2023
V 48 w(29.2)p 609 2023 V 618 2023 V 74 w(227.8)p 762
2023 V 49 w(47.1)p 903 2023 V 912 2023 V 74 w(423.5)p
1056 2023 V 48 w(115.3)p 1200 2023 V 1209 2023 V 57 w(43.2)p
1332 2023 V 49 w(27.4)p 1473 2023 V 1482 2023 V 74 w(68.0)p
1605 2023 V 48 w(-29.1)p 1746 2023 V 1755 2023 V 61 w(183.8)p
1898 2023 V 48 w(49.6)p 2039 2023 V 131 2025 1909 2 v
130 2075 2 50 v 156 2060 a(ILP++)p 316 2075 V 325 2075
V 61 w(231.2)p 468 2075 V 48 w(67.7)p 609 2075 V 618
2075 V 74 w(249.5)p 762 2075 V 49 w(56.6)p 903 2075 V
912 2075 V 74 w(437.8)p 1056 2075 V 48 w(121.8)p 1200
2075 V 1209 2075 V 57 w(59.2)p 1332 2075 V 49 w(45.7)p
1473 2075 V 1482 2075 V 74 w(76.8)p 1605 2075 V 48 w(-18.6)p
1746 2075 V 1755 2075 V 61 w(210.9)p 1898 2075 V 48 w(62.1)p
2039 2075 V 131 2076 1909 2 v 130 2126 2 50 v 156 2111
a(C.)c(net)p 316 2126 V 325 2126 V 81 w(110.6)p 468 2126
V 48 w(21.4)p 609 2126 V 618 2126 V 74 w(145.8)p 762
2126 V 49 w(27.9)p 903 2126 V 912 2126 V 74 w(264.9)p
1056 2126 V 48 w(78.4)p 1200 2126 V 1209 2126 V 78 w(21.2)p
1332 2126 V 49 w(10.6)p 1473 2126 V 1482 2126 V 74 w(55.9)p
1605 2126 V 48 w(-24.1)p 1746 2126 V 1755 2126 V 61 w(119.7)p
1898 2126 V 48 w(32.5)p 2039 2126 V 131 2128 1909 2 v
130 2178 2 50 v 156 2163 a(Avg.)p 316 2178 V 325 2178
V 108 w(124.5)p 468 2178 V 48 w(31.4)p 609 2178 V 618
2178 V 74 w(157.6)p 762 2178 V 49 w(38.3)p 903 2178 V
912 2178 V 74 w(296.2)p 1056 2178 V 48 w(96.2)p 1200
2178 V 1209 2178 V 78 w(30.8)p 1332 2178 V 49 w(20.5)p
1473 2178 V 1482 2178 V 74 w(47.4)p 1605 2178 V 48 w(20.5)p
1746 2178 V 1755 2178 V 75 w(131.3)p 1898 2178 V 48 w(41.4)p
2039 2178 V 131 2179 1909 2 v 717 2239 a Fc(\(c\))h(Erro)o(r)e(of)h
(Simple)f(relative)i(to)f(RSIM)416 2335 y Fh(Figure)k(5.2)48
b Fn(Execution)16 b(time)e(errors)i(of)h(sim)o(ulation)d(mo)q(dels.)467
2395 y(\(Av)o(erages)i(are)g(o)o(v)o(er)f(the)h(absolute)h(v)m(alues)f
(of)h(the)f(errors.\))p eop
%%Page: 35 42
35 41 bop 1882 72 a Fn(35)131 222 y(elapsed)13 b(time)e(tak)o(en)h(b)o
(y)h(RSIM.)e(The)i(n)o(um)o(b)q(ers)f(ab)q(o)o(v)o(e)h(eac)o(h)f(bar)i
(sho)o(w)f(the)g(sp)q(eedup)g(ac)o(hiev)o(ed)131 312
y(b)o(y)i(eac)o(h)g(sim)o(ulator)e(relativ)o(e)h(to)h(RSIM)g(.)f
(Figure)i(5.3)g(extends)e(the)h(data)h(of)g(Figure)f(5.1\(b\))h(for)131
403 y(all)h(the)g(applications)h(and)g(con\014gurations)h(rep)q(orted)f
(in)f(Section)g(5.1.)25 b(It)17 b(giv)o(es)g(the)g(sp)q(eedup)131
493 y(of)k(DirectRSIM)e(o)o(v)o(er)h(RSIM,)g(Simple-)p
Fg(i)p Fn(x)e(o)o(v)o(er)i(DirectRSIM,)e(and)k(Simple-)p
Fg(i)p Fn(x)c(o)o(v)o(er)h(RSIM.)131 583 y(W)l(e)d(do)h(not)f(rep)q
(ort)h(the)f(sp)q(eedups)h(for)f(Simple)e(as)j(they)f(are)g(similar)e
(to)i(those)h(for)f(Simple-)p Fg(i)p Fn(x,)131 674 y(and)h(Simple)d
(giv)o(es)h(m)o(uc)o(h)g(greater)h(errors.)204 766 y(The)k(Simple-)p
Fg(i)p Fn(x)e(sim)o(ulator)g(giv)o(es)h(the)h(b)q(est)h(sim)o(ulation)d
(time)g(in)h(eac)o(h)h(of)g(the)g(cases,)h(as)131 856
y(it)c(a)o(v)o(oids)h(the)f(o)o(v)o(erhead)g(of)h(pro)q(cessor)g(sim)o
(ulation.)23 b(Consequen)o(tly)l(,)17 b(this)g(sim)o(ulator)f(sees)i
(an)131 946 y(a)o(v)o(erage)i(sp)q(eedup)h(of)g(10)h(o)o(v)o(er)d
(RSIM.)h(DirectRSIM)f(do)q(es)i(ha)o(v)o(e)f(some)f(run)o(time)g(o)o(v)
o(erheads)131 1037 y(from)g(pro)q(cessor)h(sim)o(ulation.)28
b(Nev)o(ertheless,)18 b(DirectRSIM)g(sees)h(an)h(a)o(v)o(erage)f(sp)q
(eedup)g(of)h(4)131 1127 y(o)o(v)o(er)f(RSIM.)f(Ev)o(en)g(more)g(in)o
(terestingly)l(,)g(the)h(p)q(erformance)f(adv)m(an)o(tage)i(of)g
(Simple-)p Fg(i)p Fn(x)c(is)j(re-)131 1217 y(duced)14
b(to)g(an)g(a)o(v)o(erage)g(of)g(2.7)g(compared)f(to)h(DirectRSIM.)e
(The)h(comp)q(etitiv)o(e)e(p)q(erformance)i(of)131 1308
y(DirectRSIM)e(indicates)g(that)i(the)f(p)q(erformance)f(b)q(ene\014ts)
h(of)h(simple-pro)q(cessor)e(based)i(sim)o(ula-)131 1398
y(tor)j(mo)q(dels)e(ma)o(y)f(no)j(longer)f(b)q(e)g(enough)h(to)g
(justify)e(their)g(inaccuracies)h(in)f(mo)q(deling)g(curren)o(t)131
1488 y(and)24 b(future)f(m)o(ultipro)q(cessor)f(systems.)41
b(F)l(urther,)24 b(the)f(relativ)o(e)e(p)q(erformance)h(stabilit)o(y)g
(of)131 1578 y(DirectRSIM)16 b(sho)o(ws)i(that)f(it)g(is)g(a)g
(cost-e\013ectiv)o(e)f(w)o(a)o(y)h(to)g(accurately)f(sim)o(ulate)f(man)
o(y)h(useful)131 1669 y(con\014gurations.)131 1759 y(F)l(or)c
(reference,)e(App)q(endix)h(B)g(pro)o(vides)g(data)h(for)g(absolute)g
(p)q(erformance)e(of)i(all)f(the)h(sim)o(ulators)131
1849 y(in)k(sim)o(ulated)e(instructions)i(p)q(er)h(second.)131
2033 y Fq(5.3)66 b(Detailed)23 b(analysis)g(of)f(DirectRSIM's)g(p)r
(erformance)131 2158 y Fh(5.3.1)55 b(Comparing)18 b(DirectRSIM)g(with)g
(RSIM)131 2282 y Fn(As)i(describ)q(ed)g(in)g(Chapters)d(3)g(and)g(4,)k
(DirectRSIM)e(sees)h(p)q(erformance)f(b)q(ene\014ts)i(b)o(y)f(elimi-)
131 2373 y(nating)h(some)e(of)h(the)g(details)f(of)h(pip)q(eline)f
(managemen)o(t,)f(sp)q(eculativ)o(e)h(execution,)g(memory)131
2463 y(disam)o(biguation,)g(and)h(instruction)f(em)o(ulation,)e(as)j(w)
o(ell)e(as)i(b)o(y)f(replacing)g(the)g(cycle-driv)o(en)131
2553 y(pro)q(cessor)c(and)g(cac)o(he)e(hierarc)o(h)o(y)f(of)j(RSIM)e
(with)h(a)g(purely)f(ev)o(en)o(t-driv)o(en)e(system.)19
b(Figure)14 b(5.4)131 2643 y(summarizes)j(the)i(a)o(v)o(erage)g
(results)h(of)f Fd(gprof)f Fn(pro\014les)i(of)g(RSIM)f(executions)f
(for)i(the)f(appli-)p eop
%%Page: 36 43
36 42 bop 1882 72 a Fn(36)p 488 691 1087 2 v 487 740
2 50 v 673 740 V 682 740 V 681 740 V 707 725 a Fj(Erle.)p
817 740 V 817 740 V 50 w(FFT)p 951 740 V 951 740 V 50
w(LUopt)p 1118 740 V 1118 740 V 49 w(Mp3d)p 1272 740
V 1272 740 V 50 w(Radix)p 1430 740 V 1439 740 V 1438
740 V 57 w(Avg.)p 1573 740 V 488 742 1087 2 v 488 750
V 487 800 2 50 v 513 785 a(Base)p 673 800 V 682 800 V
110 w(3.1)p 817 800 V 82 w(3.6)p 951 800 V 80 w(3.0)p
1118 800 V 112 w(4.5)p 1272 800 V 101 w(2.6)p 1430 800
V 1439 800 V 112 w(3.4)p 1573 800 V 488 802 1087 2 v
487 852 2 50 v 513 837 a(Lat.)18 b(x2)p 673 852 V 682
852 V 58 w(3.5)p 817 852 V 82 w(5.0)p 951 852 V 80 w(3.4)p
1118 852 V 112 w(6.1)p 1272 852 V 101 w(3.1)p 1430 852
V 1439 852 V 112 w(4.2)p 1573 852 V 488 853 1087 2 v
487 903 2 50 v 513 888 a(Lat.)g(x3)p 673 903 V 682 903
V 58 w(4.0)p 817 903 V 82 w(4.5)p 951 903 V 80 w(3.8)p
1118 903 V 112 w(6.7)p 1272 903 V 101 w(4.8)p 1430 903
V 1439 903 V 112 w(4.7)p 1573 903 V 488 905 1087 2 v
487 955 2 50 v 513 940 a(ILP+)p 673 955 V 682 955 V 93
w(3.6)p 817 955 V 82 w(4.1)p 951 955 V 80 w(2.9)p 1118
955 V 112 w(3.4)p 1272 955 V 101 w(3.1)p 1430 955 V 1439
955 V 112 w(3.4)p 1573 955 V 488 956 1087 2 v 487 1006
2 50 v 513 991 a(ILP++)p 673 1006 V 682 1006 V 61 w(3.9)p
817 1006 V 82 w(5.0)p 951 1006 V 80 w(3.5)p 1118 1006
V 112 w(7.0)p 1272 1006 V 101 w(3.9)p 1430 1006 V 1439
1006 V 112 w(4.7)p 1573 1006 V 488 1008 1087 2 v 487
1058 2 50 v 513 1043 a(C.)13 b(net)p 673 1058 V 682 1058
V 82 w(3.1)p 817 1058 V 82 w(3.7)p 951 1058 V 80 w(3.0)p
1118 1058 V 112 w(5.3)p 1272 1058 V 101 w(2.8)p 1430
1058 V 1439 1058 V 112 w(3.6)p 1573 1058 V 488 1059 1087
2 v 487 1109 2 50 v 513 1094 a(Avg.)p 673 1109 V 682
1109 V 108 w(3.5)p 817 1109 V 82 w(4.3)p 951 1109 V 80
w(3.3)p 1118 1109 V 112 w(5.5)p 1272 1109 V 101 w(3.4)p
1430 1109 V 1439 1109 V 112 w(4.0)p 1573 1109 V 488 1111
1087 2 v 693 1171 a Fc(\(a\))h(Sp)q(eedup)j(of)c(DirectRSIM)i(over)f
(RSIM)p 488 1212 V 487 1262 2 50 v 673 1262 V 682 1262
V 681 1262 V 707 1247 a Fj(Erle.)p 817 1262 V 817 1262
V 50 w(FFT)p 951 1262 V 951 1262 V 50 w(LUopt)p 1118
1262 V 1118 1262 V 49 w(Mp3d)p 1272 1262 V 1272 1262
V 50 w(Radix)p 1430 1262 V 1439 1262 V 1438 1262 V 57
w(Avg.)p 1573 1262 V 488 1263 1087 2 v 488 1272 V 487
1322 2 50 v 513 1307 a(Base)p 673 1322 V 682 1322 V 110
w(3.8)p 817 1322 V 82 w(2.6)p 951 1322 V 80 w(2.8)p 1118
1322 V 112 w(1.7)p 1272 1322 V 101 w(2.3)p 1430 1322
V 1439 1322 V 112 w(2.6)p 1573 1322 V 488 1323 1087 2
v 487 1373 2 50 v 513 1358 a(Lat.)k(x2)p 673 1373 V 682
1373 V 58 w(3.7)p 817 1373 V 82 w(2.5)p 951 1373 V 80
w(2.6)p 1118 1373 V 112 w(1.8)p 1272 1373 V 101 w(2.4)p
1430 1373 V 1439 1373 V 112 w(2.6)p 1573 1373 V 488 1375
1087 2 v 487 1424 2 50 v 513 1410 a(Lat.)g(x3)p 673 1424
V 682 1424 V 58 w(3.4)p 817 1424 V 82 w(3.4)p 951 1424
V 80 w(2.6)p 1118 1424 V 112 w(2.9)p 1272 1424 V 101
w(2.6)p 1430 1424 V 1439 1424 V 112 w(3.0)p 1573 1424
V 488 1426 1087 2 v 487 1476 2 50 v 513 1461 a(ILP+)p
673 1476 V 682 1476 V 93 w(3.3)p 817 1476 V 82 w(2.4)p
951 1476 V 80 w(2.5)p 1118 1476 V 112 w(2.1)p 1272 1476
V 101 w(2.1)p 1430 1476 V 1439 1476 V 112 w(2.5)p 1573
1476 V 488 1478 1087 2 v 487 1527 2 50 v 513 1512 a(ILP++)p
673 1527 V 682 1527 V 61 w(3.3)p 817 1527 V 82 w(2.4)p
951 1527 V 80 w(2.6)p 1118 1527 V 112 w(1.9)p 1272 1527
V 101 w(2.6)p 1430 1527 V 1439 1527 V 112 w(2.6)p 1573
1527 V 488 1529 1087 2 v 487 1579 2 50 v 513 1564 a(C.)13
b(net)p 673 1579 V 682 1579 V 82 w(3.6)p 817 1579 V 82
w(2.8)p 951 1579 V 80 w(3.0)p 1118 1579 V 112 w(2.0)p
1272 1579 V 101 w(2.3)p 1430 1579 V 1439 1579 V 112 w(2.8)p
1573 1579 V 488 1581 1087 2 v 487 1630 2 50 v 513 1615
a(Avg.)p 673 1630 V 682 1630 V 108 w(3.5)p 817 1630 V
82 w(2.7)p 951 1630 V 80 w(2.7)p 1118 1630 V 112 w(2.1)p
1272 1630 V 101 w(2.4)p 1430 1630 V 1439 1630 V 112 w(2.7)p
1573 1630 V 488 1632 1087 2 v 653 1692 a Fc(\(b\))i(Sp)q(eedup)h(of)e
(Simple-)p Fb(i)p Fc(x)g(over)g(DirectRSIM)p 488 1733
V 487 1783 2 50 v 673 1783 V 682 1783 V 681 1783 V 707
1768 a Fj(Erle.)p 817 1783 V 817 1783 V 50 w(FFT)p 951
1783 V 951 1783 V 50 w(LUopt)p 1118 1783 V 1118 1783
V 49 w(Mp3d)p 1272 1783 V 1272 1783 V 50 w(Radix)p 1430
1783 V 1439 1783 V 1438 1783 V 57 w(Avg.)p 1573 1783
V 488 1785 1087 2 v 488 1793 V 487 1843 2 50 v 513 1828
a(Base)p 673 1843 V 682 1843 V 110 w(11.7)p 817 1843
V 61 w(9.5)p 951 1843 V 80 w(8.3)p 1118 1843 V 112 w(7.4)p
1272 1843 V 101 w(6.2)p 1430 1843 V 1439 1843 V 112 w(8.6)p
1573 1843 V 488 1845 1087 2 v 487 1894 2 50 v 513 1879
a(Lat.)k(x2)p 673 1894 V 682 1894 V 58 w(13.1)p 817 1894
V 61 w(12.5)p 951 1894 V 59 w(8.6)p 1118 1894 V 112 w(11.1)p
1272 1894 V 80 w(7.6)p 1430 1894 V 1439 1894 V 112 w(10.6)p
1573 1894 V 488 1896 1087 2 v 487 1946 2 50 v 513 1931
a(Lat.)g(x3)p 673 1946 V 682 1946 V 58 w(13.7)p 817 1946
V 61 w(14.9)p 951 1946 V 59 w(9.9)p 1118 1946 V 112 w(19.4)p
1272 1946 V 80 w(12.4)p 1430 1946 V 1439 1946 V 91 w(14.1)p
1573 1946 V 488 1948 1087 2 v 487 1997 2 50 v 513 1982
a(ILP+)p 673 1997 V 682 1997 V 93 w(11.9)p 817 1997 V
61 w(9.9)p 951 1997 V 80 w(7.4)p 1118 1997 V 112 w(7.0)p
1272 1997 V 101 w(6.6)p 1430 1997 V 1439 1997 V 112 w(8.6)p
1573 1997 V 488 1999 1087 2 v 487 2049 2 50 v 513 2034
a(ILP++)p 673 2049 V 682 2049 V 61 w(12.8)p 817 2049
V 61 w(12.1)p 951 2049 V 59 w(9.1)p 1118 2049 V 112 w(13.2)p
1272 2049 V 80 w(10.3)p 1430 2049 V 1439 2049 V 91 w(11.5)p
1573 2049 V 488 2050 1087 2 v 487 2100 2 50 v 513 2085
a(C.)13 b(net)p 673 2100 V 682 2100 V 82 w(11.2)p 817
2100 V 61 w(10.5)p 951 2100 V 59 w(8.9)p 1118 2100 V
112 w(10.6)p 1272 2100 V 80 w(6.6)p 1430 2100 V 1439
2100 V 112 w(9.6)p 1573 2100 V 488 2102 1087 2 v 487
2152 2 50 v 513 2137 a(Avg.)p 673 2152 V 682 2152 V 108
w(12.4)p 817 2152 V 61 w(11.6)p 951 2152 V 59 w(8.7)p
1118 2152 V 112 w(11.4)p 1272 2152 V 80 w(8.3)p 1430
2152 V 1439 2152 V 112 w(10.5)p 1573 2152 V 488 2153
1087 2 v 708 2189 a Fc(\(c\))h(Sp)q(eedup)j(of)c(Simple-)p
Fb(i)p Fc(x)h(over)g(RSIM)464 2284 y Fh(Figure)k(5.3)48
b Fn(P)o(erformance)15 b(analysis)h(of)h(the)f(sim)o(ulators.)p
eop
%%Page: 37 44
37 43 bop 1882 72 a Fn(37)131 222 y(cations)21 b(studied)e(on)i(the)f
(base)g(con\014guration,)i(with)e(the)f(function)h(calls)g(of)g(RSIM)f
(divided)131 312 y(according)j(to)g(the)f(logical)g(tasks)h(they)f(p)q
(erform.)36 b(This)21 b(\014gure)h(also)g(sho)o(ws)g(the)f(impact)f(of)
131 403 y(DirectRSIM)e(on)h(eac)o(h)g(comp)q(onen)o(t)f(of)h(RSIM's)f
(execution)g(time)f(as)i(determined)e(b)o(y)h Fd(gprof)131
493 y Fn(pro\014les)f(of)f(DirectRSIM.)131 585 y Fh(Ov)n(erhead)j
(eliminate)o(d)d(b)n(y)j(DirectRSIM)131 676 y Fn(As)d(discussed)h(in)e
(Section)h(2,)g(RSIM)g(requires)f(the)h(pro)q(cessors)i(and)f(cac)o(he)
e(hierarc)o(hies)g(of)i(the)131 766 y(system)12 b(to)i(pro)q(ceed)g(in)
f(lo)q(c)o(kstep)g(with)g(a)h(global)g(clo)q(c)o(k,)f(e\013ectiv)o(ely)
e(using)j(a)g(cycle-driv)o(en)d(sim-)131 856 y(ulation)k(con)o(troller)
f(for)h(that)g(part)h(of)f(the)g(system.)k(As)c(describ)q(ed)f(in)g
(Section)h(3,)g(DirectRSIM)131 946 y(do)q(es)21 b(not)f(tie)f(in)o
(ternal)g(pro)q(cessor)i(actions)f(\(suc)o(h)g(as)h(instruction)e(fetc)
o(h)g(and)i(retire\))d(to)j(the)131 1037 y(global)f(clo)q(c)o(k;)f(pro)
q(cessors)i(m)o(ust)d(sync)o(hronize)g(with)h(the)g(global)h(clo)q(c)o
(k)e(only)h(to)h(issue)f(mem-)131 1127 y(ory)d(instructions.)21
b(Th)o(us,)15 b(DirectRSIM)f(eliminates)f(the)j(cycle-driv)o(en)d(sim)o
(ulation)g(con)o(troller)131 1217 y(altogether,)j(using)h(ev)o(en)o
(t-driv)o(en)c(sim)o(ulation)i(for)h(the)g(en)o(tire)f(system.)204
1310 y(DirectRSIM)f(also)i(eliminates)c(the)j(o)o(v)o(erhead)f(of)i
(instruction)e(em)o(ulation,)f(address)j(gener-)131 1400
y(ation,)j(and)h(system)d(call)g(em)o(ulation,)g(as)i(these)g(tasks)g
(are)g(handled)f(in)g(the)h(course)f(of)h(direct)131
1490 y(execution.)131 1583 y Fh(Ov)n(erhead)g(reduced)f(b)n(y)g
(DirectRSIM)131 1673 y Fn(W)l(e)24 b(\014nd)g(that)h(DirectRSIM)d
(signi\014can)o(tly)h(reduces)g(the)h(top)h(\014v)o(e)e(o)o(v)o(erhead)
g(comp)q(onen)o(ts)131 1763 y(exp)q(erienced)17 b(b)o(y)h(RSIM,)f(whic)
o(h)h(collectiv)o(ely)d(accoun)o(t)k(for)f(o)o(v)o(er)g(80\045)h(of)g
(RSIM's)e(execution)131 1853 y(time.)204 1946 y(DirectRSIM's)22
b(use)h(of)g(timestamps)e(and)j(the)f(pro)o(vision)g(to)g(allo)o(w)g
(in)o(ternal)f(pro)q(cessor)131 2036 y(actions)d(to)g(pro)q(ceed)f
(ahead)i(of)e(the)h(global)g(clo)q(c)o(k,)e(as)i(describ)q(ed)f(in)h
(Section)f(3)h(enable)f(more)131 2126 y(e\016cien)o(t)11
b(managemen)o(t)e(of)k(the)f(instruction)g(windo)o(w,)h(register)f
(renaming,)f(data)i(dep)q(endences,)131 2217 y(and)h(functional)e
(units.)20 b(F)l(or)13 b(example,)e(the)h(use)h(of)g(timestamps)d(allo)
o(ws)j(DirectRSIM)e(to)i(elimi-)131 2307 y(nate)g(some)f(of)i(the)f
(queuing)f(for)i(registers)e(and)i(functional)f(units)g(seen)f(in)h
(RSIM;)f(DirectRSIM)131 2397 y(requires)g(queuing)g(only)g(for)g
(instructions)h(data)g(dep)q(enden)o(t)f(on)h(outstanding)g(loads,)h
(and)f(scans)131 2488 y(the)25 b(structural)f(hazard)h(list)f(to)h
(determine)d(functional)i(unit)g(a)o(v)m(ailabilit)o(y)l(.)44
b(Additionally)l(,)131 2578 y(DirectRSIM)18 b(signi\014can)o(tly)h
(reduces)g(the)g(cac)o(he)g(o)o(v)o(erhead)g(b)o(y)g(a)o(v)o(oiding)g
(cac)o(he)g(in)o(v)o(o)q(cations)131 2668 y(on)e(L1)g(cac)o(he)f(hits,)
f(as)i(describ)q(ed)f(in)g(Section)f(3.3.2.)p eop
%%Page: 38 45
38 44 bop 1882 72 a Fn(38)p 196 195 1671 2 v 195 251
2 57 v 550 234 a Fe(T)l(ask)p 997 251 V 997 251 V 379
w(RSIM)16 b(Ov)o(erhead)p 1369 251 V 1369 251 V 50 w(Impact)g(of)e
(DirectRSIM)p 1865 251 V 196 253 1671 2 v 195 309 2 57
v 221 292 a(Instruction)i(fetc)o(h)f(and)h(deco)q(de)p
997 309 V 234 w(21.58\045)p 1369 309 V 228 w(reduce)p
1865 309 V 196 311 1671 2 v 195 367 2 57 v 221 350 a(F)l(unctional)h
(unit)e(managemen)o(t)p 997 367 V 229 w(20.35\045)p 1369
367 V 228 w(reduce)p 1865 367 V 196 369 1671 2 v 195
425 2 57 v 221 409 a(Pro)q(cessor)g(memory)f(unit)p 997
425 V 342 w(17.40\045)p 1369 425 V 228 w(reduce)p 1865
425 V 196 427 1671 2 v 195 484 2 57 v 221 467 a(Instruction)i
(retiremen)o(t)p 997 484 V 362 w(14.38\045)p 1369 484
V 228 w(reduce)p 1865 484 V 196 485 1671 2 v 195 542
2 57 v 221 525 a(Cac)o(he)f(sim)o(ulation)p 997 542 V
462 w(7.07\045)p 1369 542 V 251 w(reduce)p 1865 542 V
196 543 1671 2 v 195 600 2 57 v 221 583 a(Cycle-driv)o(en)i(sim)o
(ulation)f(con)o(troller)p 997 600 V 129 w(5.17\045)p
1369 600 V 251 w(eliminate)p 1865 600 V 196 601 1671
2 v 195 658 2 57 v 221 641 a(Branc)o(h)f(prediction)i(and)f(sp)q
(eculation)p 997 658 V 119 w(4.53\045)p 1369 658 V 251
w(reduce)p 1865 658 V 196 660 1671 2 v 195 716 2 57 v
221 699 a(Instruction)g(em)o(ulation)p 997 716 V 373
w(3.06\045)p 1369 716 V 251 w(eliminate)p 1865 716 V
196 718 1671 2 v 195 774 2 57 v 221 757 a(Memory)l(,)e(bus,)i(and)f
(net)o(w)o(ork)f(sim)o(ulation)p 997 774 V 51 w(2.46\045)p
1369 774 V 251 w(no)h(c)o(hange)p 1865 774 V 196 776
1671 2 v 195 832 2 57 v 221 815 a(Ev)o(en)o(t-driv)o(en)h(sim)o
(ulation)g(con)o(troller)p 997 832 V 123 w(1.97\045)p
1369 832 V 251 w(increase)p 1865 832 V 196 834 1671 2
v 195 890 2 57 v 221 873 a(Statistics)p 997 890 V 620
w(0.92\045)p 1369 890 V 251 w(no)f(c)o(hange)p 1865 890
V 196 892 1671 2 v 195 949 2 57 v 221 932 a(Address)h(generation)p
997 949 V 421 w(0.83\045)p 1369 949 V 251 w(eliminate)p
1865 949 V 196 950 1671 2 v 195 1007 2 57 v 221 990 a(System)f(call)i
(em)o(ulation)p 997 1007 V 365 w(0.28\045)p 1369 1007
V 251 w(eliminate)p 1865 1007 V 196 1008 1671 2 v 635
1058 a Fh(Figure)h(5.4)48 b Fn(Comp)q(onen)o(ts)16 b(of)h(RSIM's)572
1118 y(sim)o(ulation)d(time)g(and)j(impact)e(of)h(DirectRSIM)204
1213 y(DirectRSIM)g(reduces)h(the)g(cost)g(of)h(sim)o(ulating)e(the)h
(pro)q(cessor)h(memory)c(unit)j(b)o(y)g(taking)131 1304
y(adv)m(an)o(tage)26 b(of)e(address)h(information)e(pro)o(vided)h(in)g
(direct)f(execution)g(mo)q(de.)44 b(Using)24 b(this)131
1394 y(information,)11 b(DirectRSIM)f(can)h(e\016cien)o(tly)e(c)o(hec)o
(k)g(for)j(instances)f(of)h(load)g(addresses)g(matc)o(hing)131
1484 y(those)20 b(of)f(previous)g(stores)h(and)g(can)f(issue)g(a)h
(load)f(without)h(an)o(y)f(constrain)o(ts)g(if)g(there)g(is)g(no)131
1575 y(matc)o(h;)g(in)g(con)o(trast,)h(RSIM)f(m)o(ust)f(\014rst)h(c)o
(hec)o(k)f(a)i(load)f(against)i(all)e(previous)g(stores)h(in)f(the)131
1665 y(instruction)c(windo)o(w)g(b)q(efore)h(attempting)e(to)h(issue)g
(it.)20 b(A)o(t)15 b(the)g(completion)e(of)i(the)g(load)h(\(and)131
1755 y(p)q(ossibly)g(ev)o(en)f(after\),)g(RSIM)g(ma)o(y)f(need)h(to)h
(c)o(hec)o(k)e(the)i(load)g(address)g(again)h(to)f(determine)d(if)131
1845 y(the)j(address)h(of)g(a)f(previous)g(store)h(has)g(b)q(een)f
(disco)o(v)o(ered)f(to)h(con\015ict)g(with)g(the)g(load.)204
1938 y(Additionally)l(,)j(DirectRSIM)g(a)o(v)o(oids)g(a)i(small)d(p)q
(ercen)o(tage)i(of)g(execution)f(time)e(b)o(y)j(using)131
2028 y(the)e(results)f(of)h(the)f(direct-execution)f(to)i(determine)d
(if)i(a)h(branc)o(h)f(to)h(b)q(e)g(sim)o(ulated)d(is)j(tak)o(en)131
2118 y(or)d(not;)h(if)e(DirectRSIM's)f(prediction)h(do)q(es)i(not)f
(matc)o(h)e(the)i(actual)g(direction)f(of)h(the)g(branc)o(h,)131
2209 y(no)k(instructions)f(on)h(the)f(mispredicted)d(path)k(are)f(sim)o
(ulated.)25 b(Consequen)o(tly)l(,)18 b(DirectRSIM)131
2299 y(a)o(v)o(oids)h(b)q(oth)h(the)e(cost)h(of)g(restoring)g(the)g
(register)f(renaming)g(table)h(on)g(a)g(reco)o(v)o(ery)e(and)j(the)131
2389 y(cost)g(of)f(\015ushing)h(instructions)f(from)f(the)h
(instruction)f(windo)o(w)i(and)g(memory)c(unit)j(when)g(a)131
2480 y(branc)o(h)h(is)g(mispredicted.)30 b(Among)20 b(the)f(v)m(arious)
i(tec)o(hniques)e(describ)q(ed)g(in)h(this)g(section)g(to)131
2570 y(reduce)13 b(or)h(eliminate)d(sim)o(ulation)h(o)o(v)o(erhead,)h
(this)h(is)g(the)f(only)h(one)g(that)g(in)o(v)o(olv)o(es)e(a)i(relativ)
o(ely)131 2660 y(signi\014can)o(t)i(appro)o(ximation.)p
eop
%%Page: 39 46
39 45 bop 1882 72 a Fn(39)131 222 y Fh(Ov)n(erhead)19
b(increased)e(b)n(y)i(DirectRSIM)131 312 y Fn(DirectRSIM)35
b(can)h(increase)f(o)o(v)o(erhead)g(related)h(to)g(the)g(sim)o(ulation)
e(engine.)80 b(First,)131 403 y(DirectRSIM)23 b(needs)i(to)g(enqueue)f
(and)i(dequeue)e(more)f(ev)o(en)o(ts)h(on)h(the)f(global)i(ev)o(en)o(t)
d(list)131 493 y(than)d(RSIM)e(do)q(es,)i(as)g(all)e(the)h(mo)q(dules)f
(of)h(DirectRSIM)e(are)i(ev)o(en)o(t-driv)o(en.)27 b(Additionally)l(,)
131 583 y(DirectRSIM)d(in)o(tro)q(duces)i(con)o(text-switc)o(h)e(o)o(v)
o(erhead)i(that)g(is)f(not)h(presen)o(t)g(in)f(RSIM,)g(as)131
674 y(the)19 b(sim)o(ulated)e(pro)q(cessors)k(in)e(DirectRSIM)e(are)j
(implem)o(en)n(ted)c(as)k(ligh)o(t-w)o(eigh)o(t)e(pro)q(cesses.)131
764 y(DirectRSIM)26 b(aims)g(to)i(minimi)o(ze)c(the)j(n)o(um)o(b)q(er)f
(of)i(con)o(text)e(switc)o(hes)h(b)o(y)g(dela)o(ying)g(and)131
854 y(resc)o(heduling)18 b(a)i(ligh)o(t-w)o(eigh)o(t)e(pro)q(cess)i
(only)f(when)g(the)g(pro)q(cessor)h(m)o(ust)e(in)o(teract)g(with)i(the)
131 944 y(cac)o(he)i(hierarc)o(h)o(y)f(\(to)h(issue)h(or)f(w)o(ait)g
(for)h(an)g(instruction\),)g(rather)f(than)h(for)g(an)o(y)f(in)o
(ternal)131 1035 y(pro)q(cessor)c(actions.)131 1127 y
Fh(Ov)n(erall)g(impact)131 1217 y Fn(The)23 b(net)f(impact)e(of)j
(these)f(c)o(hanges)g(in)g(o)o(v)o(erhead)g(is)g(that)g(DirectRSIM)f
(sees)h(an)h(a)o(v)o(erage)131 1308 y(sp)q(eedup)15 b(of)f(4)h(o)o(v)o
(er)e(RSIM)h(for)h(the)f(rep)q(orted)g(con\014gurations)i(and)f
(applications.)20 b(Of)14 b(particu-)131 1398 y(lar)g(in)o(terest)f
(are)i(the)f(increases)g(in)f(DirectRSIM)g(sp)q(eedup)i(for)f(the)g
(longer-latency)g(con\014gura-)131 1488 y(tions,)f(whic)o(h)f(represen)
o(t)f(future)i(con\014gurations)g(with)g(faster)f(pro)q(cessor)i(sp)q
(eeds.)20 b(DirectRSIM)131 1578 y(pro\014ts)h(b)o(y)f(switc)o(hing)f
(from)g(a)h(cycle-driv)o(en)e(sim)o(ulator)g(to)j(a)f(purely)f(ev)o(en)
o(t-driv)o(en)f(sim)o(ula-)131 1669 y(tor.)24 b(As)17
b(a)g(result,)f(the)h(sim)o(ulation)e(time)f(tak)o(en)j(b)o(y)f
(DirectRSIM)g(is)g(less)h(sensitiv)o(e)e(to)j(future)131
1759 y(increases)e(in)g(system)f(latencies)g(than)i(the)f(sim)o
(ulation)e(time)g(needed)i(for)g(RSIM.)131 1921 y Fh(5.3.2)55
b(Comparing)18 b(DirectRSIM)g(with)g(Simple)204 2046
y Fn(As)j(discussed)f(in)g(Section)f(5.2,)j(DirectRSIM)c(is)i(on)h(a)o
(v)o(erage)f(2.7x)g(slo)o(w)o(er)g(than)h(Simple)131
2136 y(\(or)14 b(Simple-)p Fg(i)p Fn(x\))d(o)o(v)o(er)i(all)h(the)f
(con\014gurations)i(and)g(applications)e(studied.)21
b(Hence,)12 b(the)i(o)o(v)o(erall)131 2226 y(o)o(v)o(erhead)d(seen)h(b)
o(y)f(DirectRSIM)g(relativ)o(e)f(to)i(Simple)d(amoun)o(ts)j(to)g
(63\045)g(of)g(its)g(execution)f(time.)131 2316 y(Figure)i(5.5)i
(summarize)o(s)c(the)j(a)o(v)o(erage)f(results)g(of)h
Fd(gprof)e Fn(pro\014les)i(of)g(DirectRSIM)e(executions)131
2407 y(for)17 b(the)f(applications)g(studied)g(with)g(the)g(base)h
(con\014guration.)204 2499 y(The)h(function)g(calls)f(of)h(DirectRSIM)f
(are)h(split)f(according)h(to)g(logical)g(task.)26 b(This)18
b(\014gure)131 2589 y(sho)o(ws)f(the)f(k)o(ey)f(tasks)h(that)h(con)o
(tribute)e(directly)f(to)i(the)g(slo)o(wdo)o(wn)g(of)h(DirectRSIM)d
(relativ)o(e)131 2680 y(to)g(Simple.)k(These)13 b(tasks)h(are)f(the)g
(pro)q(cessor)h(sim)o(ulation)e(tasks.)20 b(The)14 b(pro)q(cessor)g
(sim)o(ulator)e(in)p eop
%%Page: 40 47
40 46 bop 1882 72 a Fn(40)p 153 182 1756 2 v 152 239
2 57 v 508 222 a Fe(T)l(ask)p 954 239 V 954 239 V 378
w(DirectRSIM)16 b(Ov)o(erhead)p 1449 239 V 1449 239 V
51 w(Source)f(of)g(slo)o(wdo)o(wn?)p 1908 239 V 153 240
1756 2 v 152 297 2 57 v 178 280 a(Instruction)h(fetc)o(h)f(and)h(deco)q
(de)p 954 297 V 234 w(29.70\045)p 1449 297 V 1475 248
a Fa(p)p 1908 297 V 153 298 1756 2 v 152 355 2 57 v 178
338 a Fe(Cac)o(he)f(sim)o(ulation)p 954 355 V 462 w(11.75\045)p
1449 355 V 1908 355 V 153 357 1756 2 v 152 413 2 57 v
178 396 a(Ligh)o(t)o(w)o(eigh)o(t)g(pro)q(cesses)p 954
413 V 373 w(11.12\045)p 1449 413 V 1908 413 V 153 415
1756 2 v 152 471 2 57 v 178 454 a(Ev)o(en)o(t-driv)o(en)h(sim)o
(ulation)g(con)o(troller)p 954 471 V 123 w(10.34\045)p
1449 471 V 1908 471 V 153 473 1756 2 v 152 529 2 57 v
178 512 a(Pro)q(cessor)f(memory)g(unit)p 954 529 V 341
w(9.78\045)p 1449 529 V 1475 480 a Fa(p)p 1908 529 V
153 531 1756 2 v 152 587 2 57 v 178 570 a Fe(Memory)l(,)g(bus,)g(and)g
(net)o(w)o(ork)f(sim)o(ulation)p 954 587 V 51 w(8.86\045)p
1449 587 V 1908 587 V 153 589 1756 2 v 152 645 2 57 v
178 629 a(Instruction)i(retiremen)o(t)p 954 645 V 362
w(6.30\045)p 1449 645 V 1475 596 a Fa(p)p 1908 645 V
153 647 1756 2 v 152 704 2 57 v 178 687 a Fe(F)l(unctional)h(unit)f
(managemen)o(t)p 954 704 V 228 w(6.11\045)p 1449 704
V 1475 654 a Fa(p)p 1908 704 V 153 705 1756 2 v 152 762
2 57 v 178 745 a Fe(Direct)g(execution)p 954 762 V 476
w(4.35\045)p 1449 762 V 1908 762 V 153 763 1756 2 v 152
820 2 57 v 178 803 a(Statistics)p 954 820 V 620 w(1.24\045)p
1449 820 V 1908 820 V 153 822 1756 2 v 152 878 2 57 v
178 861 a(Branc)o(h)g(prediction)p 954 878 V 446 w(0.40\045)p
1449 878 V 1475 829 a Fa(p)p 1908 878 V 153 880 1756
2 v 485 929 a Fh(Figure)j(5.5)48 b Fn(DirectRSIM)15 b(sim)o(ulation)f
(o)o(v)o(erhead)h(and)621 989 y(sources)i(of)f(slo)o(wdo)o(wn)h
(relativ)o(e)d(to)j(Simple)131 1085 y(DirectRSIM)d(mo)q(dels)g(an)h
(instruction)g(windo)o(w)g(including)f(fetc)o(hing)g(and)i(retiring)e
(of)h(instruc-)131 1175 y(tions)e(whic)o(h)e(consumes)h(36\045)g(of)h
(the)f(execution)f(time.)18 b(The)12 b(pro)q(cessor)i(sim)o(ulator)c
(also)j(mo)q(dels)131 1265 y(a)19 b(memory)d(unit)i(consisting)g(of)h
(managemen)o(t)d(of)j(load)g(and)g(store)f(queues)g(whic)o(h)g
(consumes)131 1356 y(nearly)k(10\045)i(of)f(the)f(execution)g(time.)38
b(Other)22 b(features)h(suc)o(h)g(as)g(mo)q(deling)e(of)i(structural)
131 1446 y(hazards)17 b(and)g(branc)o(h)f(prediction)f(hardw)o(are)i
(consume)e(ab)q(out)i(6.5\045)f(of)h(the)f(execution)f(time.)131
1536 y(Th)o(us,)22 b(the)f(pro)q(cessor)g(sim)o(ulation)e(in)i
(DirectRSIM)e(con)o(tributes)h(nearly)g(53\045)h(of)g(the)g(total)131
1627 y(execution)c(time.)23 b(This)18 b(is)f(a)h(large)g(fraction)f(of)
h(the)f(o)o(v)o(erall)g(o)o(v)o(erhead)f(seen)i(b)o(y)f(DirectRSIM)131
1717 y(relativ)o(e)h(to)i(Simple.)29 b(A)o(t)19 b(the)g(same)g(time,)e
(our)k(exp)q(erience)c(sho)o(ws)k(that)f(sim)o(ulation)e(of)h(k)o(ey)
131 1807 y(pro)q(cessor)14 b(features)e(suc)o(h)g(as)h(the)f
(instruction)g(windo)o(w)h(and)g(the)f(memory)d(unit)j(is)h(necessary)f
(in)131 1897 y(capturing)18 b(the)f(read)g(miss)f(o)o(v)o(erlap)g(seen)
h(in)g(v)m(arious)h(applications.)24 b(Hence,)16 b(mo)q(deling)g(these)
131 1988 y(features)g(accurately)g(con)o(tributes)f(to)i(the)f(sup)q
(erior)h(accuracy)f(of)g(DirectRSIM)f([17].)204 2080
y(Some)k(of)h(the)f(other)h(tasks)h(mak)o(e)c(minor)i(or)h(indirect)e
(con)o(tributions)i(to)g(the)f(slo)o(wdo)o(wn.)131 2170
y(F)l(or)k(example,)e(the)h(direct)f(execution)g(p)q(ortion)i(is)f(slo)
o(w)o(er)f(with)h(DirectRSIM)f(b)q(ecause)i(the)131 2261
y(instrumen)o(tation)d(co)q(de)h(is)h(more)e(complex)f(than)i(in)g
(Simple.)34 b(Cac)o(he)22 b(sim)o(ulation)d(is)i(some-)131
2351 y(what)h(slo)o(w)o(er)f(in)g(DirectRSIM)f(since)h(more)f(MSHRs)h
(are)g(lik)o(ely)e(to)j(b)q(e)f(used)h(at)g(an)o(y)f(time,)131
2441 y(and)e(the)e(sim)o(ulation)f(of)i(the)f(memory)l(,)e(bus,)j(and)g
(net)o(w)o(ork)f(is)h(somewhat)f(slo)o(w)o(er)g(b)q(ecause)h(of)131
2531 y(an)h(increase)e(in)h(con)o(ten)o(tion)g(caused)g(b)o(y)g(the)g
(greater)g(frequency)f(of)i(misses)d(in)i(DirectRSIM.)p
eop
%%Page: 41 48
41 47 bop 1882 72 a Fn(41)131 222 y(Ov)o(erall,)16 b(DirectRSIM)f(is)i
(2.7x)g(slo)o(w)o(er)g(than)h(Simple-)p Fg(i)p Fn(x)c(on)k(a)o(v)o
(erage)f(for)g(the)g(con\014gurations)131 312 y(and)g(applications)f
(studied.)p eop
%%Page: 42 49
42 48 bop 1882 72 a Fn(42)853 361 y Fr(Chapter)28 b(6)786
564 y(Related)e(W)-7 b(ork)131 752 y Fn(Chapter)16 b(2)f(pro)o(vided)f
(a)i(brief)e(o)o(v)o(erview)f(of)j(curren)o(t)e(shared-memory)f(sim)o
(ulation)g(tec)o(hniques)131 842 y(including)18 b(a)g(discussion)h(of)f
(direct)f(execution)g(sim)o(ulators,)g(detailed)g(execution-driv)o(en)g
(sim-)131 933 y(ulators,)23 b(and)f(a)g(study)g(sho)o(wing)g(errors)g
(from)e(simple-pro)q(cessor)h(based)h(sim)o(ulators.)35
b(This)131 1023 y(c)o(hapter)20 b(fo)q(cusses)h(on)f(other)g(existing)g
(tec)o(hniques)e(for)i(fast)h(sim)o(ulation)d(of)i(shared-memory)131
1113 y(m)o(ultipro)q(cessors.)204 1206 y(DirectRSIM)14
b(has)j(sough)o(t)f(to)g(use)g(direct-execution)e(as)i(a)g(means)f(to)h
(impro)o(v)o(e)d(sim)o(ulation)131 1296 y(p)q(erformance.)19
b(Dynamic)11 b(binary)h(translation)h(is)f(another)h(tec)o(hnique)e
(that)h(is)h(commonly)c(used)131 1386 y(to)21 b(sp)q(eedup)f(sim)o
(ulation.)30 b(Em)o(bra,)20 b(MINT,)e(and)j(Shade)f(are)g(examples)e
(of)i(sim)o(ulators)f(that)131 1477 y(use)f(dynamic)e(binary)i
(translation)h([24,)e(23)q(,)h(5].)26 b(Dynamic)16 b(binary)i
(translation)g(can)h(b)q(e)f(seen)131 1567 y(as)d(a)g(form)f(of)h
(direct)e(execution)h(as)h(it)f(in)o(v)o(olv)o(es)f(executing)g(large)i
(p)q(ortions)g(of)g(the)g(application)131 1657 y(directly)f(on)i(the)f
(host.)22 b(Hence)14 b(tec)o(hniques)g(presen)o(ted)h(in)g(this)g
(study)h(can)f(also)h(b)q(e)g(applied)f(to)131 1747 y(suc)o(h)h(sim)o
(ulators.)204 1840 y(Sampling)11 b(is)g(another)h(tec)o(hnique)d(used)j
(to)g(impro)o(v)o(e)c(the)j(sp)q(eed)h(of)g(shared-memory)d(system)131
1930 y(sim)o(ulation.)35 b(SimOS)20 b(is)h(an)h(example)d(of)j(a)g(sim)
o(ulation)e(system)g(that)h(uses)h(sampling.)36 b(By)131
2020 y(v)m(arying)21 b(the)f(lev)o(el)f(of)i(detail)e(of)i(sim)o
(ulation)e(dynamically)l(,)g(SimOS)g(a)o(v)o(oids)h(sim)o(ulating)f
(the)131 2111 y(en)o(tire)j(application)i(in)f(detail.)42
b(This)24 b(metho)q(d,)g(ho)o(w)o(ev)o(er,)g(do)q(es)g(not)g(ha)o(v)o
(e)f(an)h(impact)e(on)131 2201 y(the)d(sp)q(eed)g(of)g(accurate)g(sim)o
(ulation)e(of)i(the)g(imp)q(ortan)o(t)f(phases)i(of)f(the)f
(application.)29 b(Th)o(us,)131 2291 y(sampling)21 b(is)g(orthogonal)i
(to)e(DirectRSIM)f(and)i(can)f(b)q(e)h(com)o(bined)d(with)i(DirectRSIM)
f(for)131 2381 y(further)c(impro)o(v)o(em)o(en)o(ts.)204
2474 y(A)j(sim)o(ulator)e(can)j(also)f(b)q(e)g(parallelized)f(to)h(run)
g(on)h(a)f(m)o(ultipro)q(cessor)f(host)h(for)h(further)131
2564 y(p)q(erformance)c(impro)o(v)o(em)o(en)n(ts.)k(The)d(Wisconsin)g
(Wind)f(T)l(unnel)h(\(WWT\))g(is)f(one)h(suc)o(h)g(sim)o(u-)p
eop
%%Page: 43 50
43 49 bop 1882 72 a Fn(43)131 222 y(lator.)21 b(WWT)15
b(also)g(mak)o(es)e(additional)h(appro)o(ximations)g(to)h(ac)o(hiev)o
(e)e(b)q(etter)h(parallelism)e([18].)131 312 y(P)o(arallelization)j(is)
h(also)h(orthogonal)h(to)e(DirectRSIM.)204 405 y(Other)f(researc)o(h)f
(has)i(fo)q(cused)f(on)h(dev)o(eloping)e(analytical)g(mo)q(dels)g(as)i
(a)f(w)o(a)o(y)f(of)i(pro)o(viding)131 495 y(fast)e(p)q(erformance)d
(ev)m(aluation)i(for)h(ILP-based)g(m)o(ultipro)q(cessors)d([2,)i(22].)
20 b(Sorin)13 b(et)g(al.)f(pro)o(vide)131 585 y(a)21
b(customized)d(appro)o(ximate)g(mean-v)m(alue)h(analysis)i(mo)q(del)d
(for)j(ILP)f(m)o(ultipro)q(cessors)f(that)131 676 y(explicitly)10
b(accoun)o(ts)j(for)g(read)g(miss)f(o)o(v)o(erlap)f(in)i(the)f(w)o
(orkload)i(and)f(the)g(e\013ects)f(of)h(CC-NUMA)131 766
y(m)o(ultipro)q(cessors)21 b([22].)39 b(This)23 b(study)f(seeks)g(to)g
(tie)g(the)g(parameters)f(of)i(the)e(mo)q(del)g(closely)131
856 y(to)j(the)g(c)o(haracteristics)e(of)i(giv)o(en)f(w)o(orkloads.)44
b(Sim)o(ulation)21 b(studies)j(based)g(on)g(analytical)131
946 y(mo)q(deling)11 b(can)i(b)q(e)f(used)h(to)f(quic)o(kly)e(narro)o
(w)j(the)f(arc)o(hitectural)f(design)i(space)f(and)h(accoun)o(t)f(for)
131 1037 y(k)o(ey)j(constrain)o(ts.)22 b(Ho)o(w)o(ev)o(er,)14
b(a)i(more)f(detailed)h(p)q(erformance)f(ev)m(aluation)h(generally)f
(requires)131 1127 y(sim)o(ulation.)204 1219 y(Concurren)o(t)22
b(with)g(our)g(w)o(ork,)h(a)f(fast)g(sim)o(ulation)e(tec)o(hnique)g
(has)i(b)q(een)g(dev)o(elop)q(ed)f(for)131 1310 y(unipro)q(cessor)e
(sim)o(ulators)e(whic)o(h)g(is)h(curren)o(tly)e(not)j(extendable)e(to)h
(m)o(ultipro)q(cessor)f(sim)o(ula-)131 1400 y(tors)f(in)f(an)h(ob)o
(vious)g(manner.)j(Sp)q(eci\014cally)l(,)14 b(Sc)o(hnarr)h(et)g(al.)21
b(prop)q(oses)c(t)o(w)o(o)e(ideas)g([20)q(].)20 b(First,)131
1490 y(they)i(prop)q(ose)h(using)f(direct)f(execution)f(in)i(a)g
(manner)f(similar)e(to)k(that)f(presen)o(ted)f(in)g(this)131
1581 y(thesis,)c(but)g(with)h(a)f(few)g(di\013erences.)24
b(One)16 b(di\013erence)h(is)g(that)g(they)g(sim)o(ulate)e
(mispredicted)131 1671 y(paths,)h(as)g(describ)q(ed)e(in)h(Section)g
(7.2.)21 b(Second,)15 b(they)g(prop)q(ose)h(fast)g(forw)o(arding,)f(a)h
(tec)o(hnique)131 1761 y(that)k(cac)o(hes)f(the)g(actions)h(of)g(the)f
(sim)o(ulator)f(for)i(a)g(giv)o(en)e(state)i(of)g(the)f(pro)q(cessor)h
(microar-)131 1851 y(c)o(hitecture)13 b(\(the)i(latency)f(seen)h(b)o(y)
f(eac)o(h)h(memory)d(instruction)i(in)h(the)g(instruction)f(windo)o(w)h
(is)131 1942 y(also)k(part)g(of)f(the)g(state\).)27 b(When)18
b(this)g(state)g(rep)q(eats,)h(the)f(fast)g(forw)o(arding)h(tec)o
(hnique)e(sim-)131 2032 y(ply)f(repla)o(ys)f(the)h(actions)g(from)f
(the)h(sim)o(ulator)e(cac)o(he,)h(eliminating)e(m)o(uc)o(h)h(of)i(the)g
(sim)o(ulation)131 2122 y(o)o(v)o(erhead.)25 b(They)17
b(see)h(lo)o(w)f(b)q(ene\014ts)h(from)e(direct)h(execution)g(itself,)f
(but)i(substan)o(tial)g(p)q(erfor-)131 2213 y(mance)h(impro)o(v)o(em)o
(en)o(ts)f(from)h(fast)i(forw)o(arding.)35 b(There)21
b(are)f(t)o(w)o(o)h(k)o(ey)e(di\013erences)h(b)q(et)o(w)o(een)131
2303 y(the)e(goals)i(of)e(the)h(w)o(ork)f(b)o(y)g(Sc)o(hnarr)g(et)g
(al.)28 b(and)19 b(this)f(study)l(.)28 b(First,)18 b(Sc)o(hnarr)g(et)g
(al.)28 b(target)131 2393 y(unipro)q(cessor)19 b(systems)d(and)i(th)o
(us)g(do)g(not)g(ha)o(v)o(e)e(to)i(address)h(the)e(issue)g(related)g
(to)h(the)g(v)m(alue)131 2483 y(of)h(non-blo)q(c)o(king)f(loads)h(with)
e(direct)g(execution)g(that)i(w)o(e)e(address)i(in)e(Section)h(3.1.)27
b(Second,)131 2574 y(they)19 b(fo)q(cus)g(on)h(accurate)f(unipro)q
(cessor)g(microarc)o(hitectural)d(sim)o(ulation,)h(while)h(this)h
(study)131 2664 y(fo)q(cuses)h(on)f(accurate)f(memory)e(sim)o(ulation)h
(in)i(a)g(m)o(ultipro)q(cessor)e(con\014guration)j(with)e(only)p
eop
%%Page: 44 51
44 50 bop 1882 72 a Fn(44)131 222 y(as)23 b(m)o(uc)o(h)d(emphasis)h(on)
i(microarc)o(hitectural)c(sim)o(ulation)h(as)j(needed)e(for)i(correct)e
(memory)131 312 y(sim)o(ulation.)k(This)18 b(di\013erence)f(in)h
(approac)o(h)h(allo)o(ws)f(us)g(to)h(mak)o(e)d(appro)o(ximations,)h
(and)i(is)f(a)131 403 y(reason)e(that)g(direct)d(execution)h(do)q(es)i
(not)g(pro)o(vide)e(them)f(the)i(same)f(b)q(ene\014ts)h(it)g(pro)o
(vides)f(this)131 493 y(w)o(ork.)36 b(It)20 b(is)h(curren)o(tly)f(not)h
(clear)f(that)i(their)e(fast)h(forw)o(arding)h(optimization)d(will)h(b)
q(ene\014t)131 583 y(m)o(ultipro)q(cessor)13 b(systems,)g(since)g
(memory)f(latencies)h(in)h(a)h(m)o(ultipro)q(cessor)d(are)j(more)e(v)m
(ariable)131 674 y(and)g(unpredictable)e(than)i(in)f(a)h(unipro)q
(cessor)g(system,)e(p)q(oten)o(tially)h(decreasing)g(the)g(frequency)
131 764 y(of)19 b(rep)q(eating)f(the)f(microarc)o(hitectural)e(state.)
27 b(The)18 b(sp)q(eculativ)o(e)f(execution)g(tec)o(hnique)f(they)131
854 y(describ)q(e)e(is)g(not)h(directly)e(applicable)g(for)i(m)o
(ultipro)q(cessor)e(sim)o(ulation,)f(but)j(can)g(b)q(e)f(extended)131
944 y(as)h(describ)q(ed)e(in)h(Section)f(7.2.)21 b(If)14
b(their)f(tec)o(hniques)f(are)i(extensible)e(to)j(m)o(ultipro)q
(cessors,)d(then)131 1035 y(it)18 b(should)h(b)q(e)f(p)q(ossible)g(to)h
(com)o(bine)d(them)g(with)i(DirectRSIM)f(as)i(w)o(ell)e(for)h(further)g
(b)q(ene\014ts)131 1125 y(in)e(accuracy)g(and)h(p)q(erformance.)p
eop
%%Page: 45 52
45 51 bop 1882 72 a Fn(45)853 361 y Fr(Chapter)28 b(7)822
564 y(Conclusions)131 774 y Fq(7.1)66 b(Thesis)22 b(Summary)131
898 y Fn(Curren)o(t)14 b(sim)o(ulators)e(for)j(shared-memory)c(m)o
(ultipro)q(cessor)i(arc)o(hitectures)f(in)o(v)o(olv)o(e)g(a)i
(tradeo\013)131 989 y(b)q(et)o(w)o(een)j(sim)o(ulation)e(sp)q(eed)j
(and)g(accuracy)l(.)24 b(Most)18 b(sim)o(ulators)e(assume)g(m)o(uc)o(h)
f(simpler)h(pro-)131 1079 y(cessors)d(than)h(the)e(curren)o(t)g
(generation)h(of)g(pro)q(cessors)h(that)f(aggressiv)o(ely)f(exploit)f
(instruction-)131 1169 y(lev)o(el)i(parallelism)g(\(ILP\).)i(This)h
(can)f(result)g(in)g(large)g(sim)o(ulation)e(inaccuracies.)20
b(A)15 b(few)g(new)o(er)131 1260 y(shared-memory)21 b(sim)o(ulators)g
(mo)q(del)g(curren)o(t)g(ILP)i(pro)q(cessors)h(more)d(accurately)l(,)i
(but)f(are)131 1350 y(ab)q(out)c(ten)e(times)e(slo)o(w)o(er.)204
1442 y(This)h(thesis)f(presen)o(ted)f(a)i(new)f(sim)o(ulation)f(tec)o
(hnique)f(for)j(shared-memory)d(m)o(ultipro)q(ces-)131
1533 y(sors)20 b(with)f(ILP)g(pro)q(cessors.)31 b(The)19
b(tec)o(hnique)e(com)o(bines)h(the)g(sp)q(eed)i(adv)m(an)o(tages)g(of)f
(simple-)131 1623 y(pro)q(cessor)24 b(based)g(sim)o(ulators)e(with)h
(accuracy)g(similar)e(to)i(detailed)f(ILP)i(pro)q(cessor)g(based)131
1713 y(sim)o(ulation.)c(It)d(is)f(based)h(on)g(a)g(no)o(v)o(el)e
(adaptation)j(of)f(direct)f(execution,)f(a)h(widely)g(used)h(sim-)131
1803 y(ulation)j(metho)q(dology)f(for)g(shared-memory)e(m)o(ultipro)q
(cessors)i(with)g(simple)e(pro)q(cessors.)32 b(A)131
1894 y(sim)o(ulator,)13 b(called)h(DirectRSIM,)f(is)h(dev)o(elop)q(ed)g
(based)h(on)h(the)e(new)h(tec)o(hnique.)k(DirectRSIM)131
1984 y(extends)11 b(curren)o(t)g(direct)f(execution)g(sim)o(ulators)g
(in)h(t)o(w)o(o)g(imp)q(ortan)o(t)g(w)o(a)o(ys.)19 b(First,)12
b(DirectRSIM)131 2074 y(allo)o(ws)22 b(a)h(data)f(load)h(that)f(in)o(v)
o(ok)o(es)f(the)g(sim)o(ulator)g(to)h(pro)q(ceed)g(in)g(direct)f
(execution)f(ev)o(en)131 2165 y(b)q(efore)j(its)g(sim)o(ulation)d(has)k
(completed)c(at)j(the)g(memory)d(system.)39 b(Second,)24
b(DirectRSIM)131 2255 y(pro)o(vides)18 b(an)g(e\016cien)o(t)f(timing)f
(sim)o(ulator)g(that)j(accoun)o(ts)f(for)h(the)f(features)g(of)g(mo)q
(dern)g(pro-)131 2345 y(cessors)g(to)h(aggressiv)o(ely)d(exploit)h(ILP)
h(\(suc)o(h)g(as)g(dynamic)e(sc)o(heduling,)h(m)o(ultiple)d(issue,)k
(and)131 2435 y(non-blo)q(c)o(king)e(loads\).)22 b(This)15
b(metho)q(dology)h(allo)o(ws)f(signi\014can)o(t)g(p)q(erformance)g
(impro)o(v)o(em)o(e)o(n)o(ts)131 2526 y(relativ)o(e)21
b(to)h(detailed)g(execution-driv)o(en)e(sim)o(ulators)h(b)o(y)g
(reducing)h(sim)o(ulator)f(o)o(v)o(erhead)h(in)131 2616
y(mo)q(deling)f(instruction)h(deco)q(ding,)i(register)e(renaming,)g
(memory)d(disam)o(biguation,)k(sp)q(ecu-)p eop
%%Page: 46 53
46 52 bop 1882 72 a Fn(46)131 222 y(lativ)o(e)21 b(execution,)i(and)g
(instruction)f(em)o(ulation.)38 b(Nev)o(ertheless,)22
b(the)g(pro)q(cessor)i(mo)q(del)d(of)131 312 y(DirectRSIM)c(includes)g
(enough)h(detail)f(to)i(accoun)o(t)f(for)g(m)o(ultiple-i)o(ssue,)e
(out-of-order)j(issue,)131 403 y(and)e(non-blo)q(c)o(king)g(loads.)204
495 y(An)j(analysis)g(of)h(p)q(erformance)e(and)h(accuracy)g(in)g
(Chapter)g(5)h(sho)o(ws)f(that)h(DirectRSIM)131 585 y(sees)15
b(an)h(a)o(v)o(erage)f(of)h(1.6\045)f(error)h(in)f(sim)o(ulated)e
(execution)h(time)f(relativ)o(e)h(to)i(RSIM)e(across)j(all)131
676 y(studied)d(applications)g(and)h(con\014gurations;)g(at)g(most,)e
(it)g(sees)h(an)h(error)f(of)g(6.3\045)g(in)f(sim)o(ulated)131
766 y(execution)h(time.)19 b(A)o(t)14 b(the)g(same)g(time,)f
(DirectRSIM)g(sees)h(a)i(sp)q(eedup)f(of)g(4)g(relativ)o(e)e(to)i
(RSIM.)131 856 y(In)c(con)o(trast,)h(the)f(b)q(est)g(curren)o(t)g
(simple-pro)q(cessor)f(based)h(sim)o(ulation)f(metho)q(dology)g(sees)h
(large)131 946 y(and)17 b(v)m(ariable)e(errors)h(in)g(total)g
(execution)f(time,)e(ranging)k(from)e(2\045)g(to)i(128\045,)f(and)g(a)o
(v)o(eraging)131 1037 y(40\045.)22 b(The)16 b(most)g(commonly)d(used)j
(simple-pro)q(cessor)f(based)i(sim)o(ulation)e(metho)q(dology)g(sees)
131 1127 y(errors)h(ranging)h(from)d(9\045)i(to)g(438\045,)g(a)o(v)o
(eraging)g(around)h(130\045.)k(Despite)16 b(the)f(sup)q(erior)h(accu-)
131 1217 y(racy)f(of)h(DirectRSIM,)d(DirectRSIM)h(sees)h(only)g(a)h
(factor)f(of)h(2.7)g(slo)o(wdo)o(wn)g(compared)e(to)i(the)131
1308 y(curren)o(t)g(simple)e(pro)q(cessor)k(based)f(sim)o(ulation)e
(metho)q(dology)l(.)22 b(Th)o(us,)17 b(DirectRSIM)e(ac)o(hiev)o(es)131
1398 y(far)h(greater)g(accuracy)f(than)h(simple-pro)q(cessor)f(based)h
(sim)o(ulators)f(for)h(shared-memory)d(m)o(ul-)131 1488
y(tipro)q(cessors)k(while)f(still)f(main)o(taining)f(p)q(erformance)h
(comp)q(etitiv)o(e)f(with)i(these)g(sim)o(ulators.)204
1581 y(In)j(the)g(late)g(1980's)i(and)f(early)e(1990's,)j(the)e
(shared-memory)e(arc)o(hitecture)h(comm)o(unit)o(y)131
1671 y(made)i(a)h(shift)f(from)g(trace-driv)o(en)f(sim)o(ulation)g(to)i
(execution-driv)o(en)e(sim)o(ulation)g(based)i(on)131
1761 y(studies)26 b(sho)o(wing)h(inaccuracies)f(in)g(the)g(results)g
(generated)g(b)o(y)g(trace-driv)o(en)f(sim)o(ulators.)131
1851 y(Simple-pro)q(cessor)16 b(based)i(direct-execution)e(sim)o
(ulators)g(b)q(ecame)g(p)q(opular)i(b)q(ecause)f(of)h(their)131
1942 y(sp)q(eed)j(and)g(accuracy)l(.)35 b(Ho)o(w)o(ev)o(er,)19
b(the)i(p)q(erformance)e(and)i(accuracy)g(results)f(in)h(this)f(study)
131 2032 y(indicate)d(that)i(the)f(shared)g(memory)e(arc)o(hitecture)g
(comm)o(unit)o(y)e(ma)o(y)j(again)i(need)f(to)g(recon-)131
2122 y(sider)f(the)h(appropriate)g(sim)o(ulation)d(metho)q(dology)j
(for)f(shared-memory)f(systems.)23 b(T)l(o)c(date,)131
2213 y(the)f(10x)g(sp)q(eed)g(adv)m(an)o(tage)h(of)f(direct)f
(execution)f(sim)o(ulators)h(o)o(v)o(er)g(detailed)g(sim)o(ulators)f
(lik)o(e)131 2303 y(RSIM)22 b(has)h(b)q(een)f(used)g(to)g(justify)g
(the)g(p)q(oten)o(tial)g(for)g(errors)g(in)g(using)h(simple)d(sim)o
(ulators)131 2393 y(to)g(mo)q(del)f(systems)g(built)g(with)h
(state-of-the-art)h(pro)q(cessors.)33 b(Ho)o(w)o(ev)o(er,)19
b(the)g(p)q(erformance)131 2483 y(adv)m(an)o(tage)i(of)f(simple)e(sim)o
(ulators)g(drops)j(to)f(2.7x)f(if)h(they)f(are)h(compared)e(to)i
(DirectRSIM.)131 2574 y(While)c(this)i(factor)f(is)g(still)f
(signi\014can)o(t,)h(it)g(is)g(not)h(clear)e(that)i(this)f(adv)m(an)o
(tage)h(can)g(o\013set)g(the)131 2664 y(p)q(oten)o(tial)c(inaccuracies)
g(of)g(suc)o(h)h(sim)o(ulators)e(in)h(mo)q(deling)f(application)h(p)q
(erformance.)19 b(Th)o(us,)p eop
%%Page: 47 54
47 53 bop 1882 72 a Fn(47)131 222 y(DirectRSIM)15 b(substan)o(tially)g
(impro)o(v)o(es)e(the)j(sp)q(eed)g(vs.)g(accuracy)f(tradeo\013)i(in)e
(the)h(sim)o(ulation)131 312 y(of)h(shared-memory)d(m)o(ultipro)q
(cessors)h(with)h(ILP)g(pro)q(cessors.)131 490 y Fq(7.2)66
b(F)-6 b(uture)25 b(W)-6 b(ork)131 613 y Fn(Sev)o(eral)18
b(features)i(supp)q(orted)g(in)f(other)h(sim)o(ulators)e(can)h(b)q(e)h
(added)g(to)f(DirectRSIM)f(to)i(im-)131 703 y(pro)o(v)o(e)j(p)q
(erformance)g(and/or)i(functionalit)o(y)l(.)42 b(As)23
b(discussed)h(in)f(Chapter)h(6,)i(DirectRSIM)131 794
y(p)q(erformance)18 b(can)h(b)q(e)g(directly)e(impro)o(v)o(ed)f(with)i
(sampling)g(or)h(parallelization.)28 b(T)l(ec)o(hniques)131
884 y(suc)o(h)22 b(as)g(executable)e(editing)h(or)h(optimizing)d
(binary)i(co)q(de)h(translation)g(could)g(b)q(e)f(used)h(to)131
974 y(mak)o(e)d(the)h(instrumen)o(tation)f(of)i(application)g(co)q(de)f
(b)q(oth)i(more)d(e\016cien)o(t)g(and)i(more)e(gener-)131
1064 y(ally)h(applicable)g([13)q(,)g(24)q(].)34 b(All)20
b(of)h(these)f(tec)o(hniques)f(are)i(indep)q(enden)o(t)f(of)h(the)g
(underlying)131 1155 y(DirectRSIM)15 b(metho)q(dology)l(.)204
1245 y(Additionally)l(,)h(DirectRSIM)g(do)q(es)i(not)g(need)g(to)f(w)o
(ait)h(for)f(the)h(global)g(clo)q(c)o(k)e(to)i(catc)o(h)f(up)131
1335 y(to)k(issue)f(time)e(on)i(ev)o(ery)f(L1)i(cac)o(he)e(hit)h
(access;)h(it)f(should)g(sync)o(hronize)f(only)h(if)g(there)f(is)h(a)
131 1426 y(p)q(ossibilit)o(y)15 b(that)h(the)g(data)h(could)f(b)q(e)g
(replaced)f(or)h(in)o(v)m(alidated)f(from)g(the)g(L1)i(cac)o(he)e(b)q
(et)o(w)o(een)131 1516 y(the)h(curren)o(t)g(v)m(alue)g(of)g(the)g
(global)h(clo)q(c)o(k)e(and)i(the)f(issue)g(time)e(of)j(the)f(hit.)204
1607 y(In)h(DirectRSIM,)d(eac)o(h)i(load)h(or)f(store)h(executed)e(in)h
(the)g(application)h(program)f(curren)o(tly)131 1697
y(calls)i(the)g(timing)e(sim)o(ulator.)26 b(Ho)o(w)o(ev)o(er,)17
b(for)h(data-race-free)h(programs,)f(this)g(call)g(o)o(v)o(erhead)131
1787 y(can)g(b)q(e)f(reduced)g(b)o(y)g(in)o(v)o(oking)f(the)h(timing)e
(sim)o(ulator)h(from)g(direct)h(execution)f(only)h(at)h(eac)o(h)131
1877 y(sync)o(hronization,)13 b(as)g(these)g(are)f(the)h(only)f
(logical)h(p)q(oin)o(ts)g(of)g(in)o(teraction)f(b)q(et)o(w)o(een)f(pro)
q(cessors.)131 1968 y(This)22 b(w)o(ould)g(not)g(reduce)f(the)g(total)h
(w)o(ork)g(done)f(to)h(sim)o(ulate)e(the)h(instructions;)j(but)e(ma)o
(y)131 2058 y(reduce)16 b(the)g(function)g(call)f(o)o(v)o(erhead.)204
2148 y(DirectRSIM)21 b(could)i(b)q(e)g(further)f(augmen)o(ted)f(to)i
(supp)q(ort)h(TLB)f(accesses,)h(instruction)131 2239
y(cac)o(he,)d(or)g(op)q(erating)g(system)e(calls.)34
b(W)l(e)20 b(ha)o(v)o(e)g(not)h(y)o(et)f(sough)o(t)h(to)g(supp)q(ort)h
(an)o(y)f(of)g(these)131 2329 y(b)q(ecause)c(these)g(are)g(kno)o(wn)g
(to)g(ha)o(v)o(e)f(little)g(p)q(erformance)f(impact)h(on)h(our)g
(application)g(suite.)131 2419 y(Ho)o(w)o(ev)o(er,)23
b(w)o(e)g(are)h(not)g(a)o(w)o(are)f(of)h(an)o(y)f(fundamen)o(tal)g
(problems)f(with)h(incorp)q(orating)h(this)131 2510 y(supp)q(ort)18
b(for)e(DirectRSIM.)204 2600 y(As)e(discussed)f(in)h(Chapter)g(6,)g(Sc)
o(hnarr)g(et)f(al.)20 b(discusses)14 b(ho)o(w)g(to)g(incorp)q(orate)g
(supp)q(ort)h(for)131 2690 y(sp)q(eculativ)o(e)h(execution)g(in)o(to)h
(direct)g(execution)f(sim)o(ulators)g(for)h(ILP)h(unipro)q(cessor)g
(systems.)p eop
%%Page: 48 55
48 54 bop 1882 72 a Fn(48)131 222 y(On)18 b(a)g(branc)o(h)g
(misprediction,)d(the)i(sim)o(ulator)f(sa)o(v)o(es)i(the)f(register)g
(state)h(of)g(the)f(system)g(and)131 312 y(allo)o(ws)g(direct)f
(execution)f(to)j(progress)f(on)h(the)e(wrong)i(path.)24
b(Additionally)l(,)14 b(eac)o(h)j(store)g(that)131 403
y(issues)e(in)f(direct)g(execution)g(m)o(ust)f(sa)o(v)o(e)h(aside)h(a)g
(cop)o(y)f(of)h(the)g(previous)f(v)m(alue)h(of)g(the)f(memory)131
493 y(lo)q(cation)i(so)f(as)h(to)f(restore)g(the)f(old)h(v)m(alue)g
(after)g(the)f(branc)o(h)h(is)g(resolv)o(ed.)20 b(This)15
b(allo)o(ws)g(subse-)131 583 y(quen)o(t)f(loads)h(on)g(the)f
(mispredicted)d(path)k(to)g(read)g(the)f(v)m(alue)g(of)g(the)h(sp)q
(eculativ)o(e)e(store,)h(while)131 674 y(ensuring)21
b(that)f(the)g(prop)q(er)h(v)m(alue)f(can)g(b)q(e)g(returned)g(to)g
(the)g(memory)d(after)j(the)g(branc)o(h)g(is)131 764
y(resolv)o(ed.)i(This)16 b(tec)o(hnique)f(is)h(not)i(directly)c
(applicable)i(to)h(a)g(m)o(ultipro)q(cessor)e(sim)o(ulator)g(lik)o(e)
131 854 y(DirectRSIM)20 b(b)q(ecause)h(allo)o(wing)f(a)i(sp)q(eculativ)
o(e)d(store)j(to)f(write)f(data)i(in)f(direct)e(execution)131
944 y(mo)q(de)h(ma)o(y)f(lead)i(to)g(an)g(unexp)q(ected)f(data)i(race)e
(with)h(or)g(corruption)g(of)g(data)h(at)f(another)131
1035 y(pro)q(cessor.)h(One)16 b(p)q(ossible)g(extension)g(that)g(w)o
(ould)g(allo)o(w)g(sp)q(eculation)g(in)g(a)g(direct-execution)131
1125 y(m)o(ultipro)q(cessor)g(sim)o(ulator)h(w)o(ould)g(instrumen)o(t)f
(the)i(co)q(de)f(to)i(ha)o(v)o(e)e(sp)q(eculativ)o(e)f(stores)i(send)
131 1215 y(their)d(v)m(alues)g(to)h(the)f(timing)f(sim)o(ulator)g
(rather)h(than)h(writing)f(their)g(data)h(in)o(to)f(system)f(mem-)131
1306 y(ory;)h(the)g(timing)e(sim)o(ulator)h(w)o(ould)g(then)h(k)o(eep)f
(these)h(v)m(alues)g(in)f(a)i(soft)o(w)o(are-managed)e(\\write)131
1396 y(bu\013er.")26 b(This)18 b(\\write)f(bu\013er,")h(rather)g(than)g
(the)f(system)f(memory)l(,)e(w)o(ould)k(b)q(e)g(used)f(to)h(ser-)131
1486 y(vice)13 b(later)g(sp)q(eculativ)o(e)g(reads)h(to)h(the)e(same)g
(address)i(from)e(the)h(same)f(pro)q(cessor.)21 b(Reads)14
b(from)131 1576 y(other)g(pro)q(cessors)g(w)o(ould)g(con)o(tin)o(ue)e
(to)i(read)g(non-sp)q(eculativ)o(e)f(v)m(alues)g(in)g(the)g(system)f
(memory)131 1667 y(as)17 b(b)q(efore.)p eop
%%Page: 49 56
49 55 bop 1882 72 a Fn(49)805 403 y Fr(Bibliograph)n(y)156
676 y Fn([1])24 b(V.)18 b(S.)h(Adv)o(e)f(et)g(al.)30
b(An)19 b(In)o(tegrated)g(Compilation)f(and)i(P)o(erformance)d
(Analysis)i(En)o(vi-)232 766 y(ronmen)o(t)14 b(for)j(Data)g(P)o
(arallel)e(Programs.)22 b(In)15 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)i(of)g
(Sup)n(er)n(c)n(omputing)p Fn(,)f(1995.)156 898 y([2])24
b(D.)k(H.)g(Alb)q(onesi)h(and)g(I.)g(Koren.)59 b(An)28
b(Analytical)g(Mo)q(del)h(of)g(High-Performance)232 988
y(Sup)q(erscalar-Based)17 b(Multipro)q(cessors.)k(In)16
b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)g(the)h(IFIP)f(WG)g(10.3)g(Work-)
232 1078 y(ing)h(Confer)n(enc)n(e)g(on)g(Par)n(al)r(lel)g(A)o(r)n
(chite)n(ctur)n(es)f(and)h(Compilation)g(T)l(e)n(chniques)p
Fn(,)f(1995.)156 1210 y([3])24 b(E.)15 b(A.)f(Brew)o(er)h(et)g(al.)20
b(PR)o(OTEUS:)15 b(A)g(High-Performance)f(Parallel-Arc)o(hitecture)f
(Sim-)232 1301 y(ulator.)43 b(T)l(ec)o(hnical)22 b(Rep)q(ort)i
(MIT/LCS/TR-516,)k(MIT)23 b(Lab)q(oratory)j(for)e(Computer)232
1391 y(Science,)14 b(Septem)o(b)q(er)g(1991.)156 1523
y([4])24 b(E.)f(Bugnion)h(et)f(al.)44 b(Compiler-Directed)21
b(Page)j(Coloring)h(for)f(Multipro)q(cessors.)44 b(In)232
1613 y Fm(Pr)n(o)n(c)n(e)n(e)n(dings)14 b(of)h(the)g(7th)h
(International)g(Confer)n(enc)n(e)g(on)g(A)o(r)n(chite)n(ctual)f(Supp)n
(ort)g(for)g(Pr)n(o-)232 1703 y(gr)n(amming)i(L)n(anguages)h(and)f(Op)n
(er)n(ating)h(Systems)p Fn(,)e(1996.)156 1835 y([5])24
b(R.)15 b(F.)h(Cmelik)e(and)j(D.)f(Kepp)q(el.)21 b(Shade:)h(A)16
b(Fast)h(Instruction-Set)f(Sim)o(ulator)f(for)h(Exe-)232
1925 y(cution)d(Pro\014ling.)18 b(T)l(ec)o(hnical)13
b(Rep)q(ort)h(UW)o(CSE)g(93-06-06,)i(Computer)d(Science)g(Depart-)232
2016 y(men)o(t,)g(Univ)o(ersit)o(y)h(of)j(W)l(ashington,)g(1993.)156
2147 y([6])24 b(R.)16 b(G.)h(Co)o(vington)h(et)e(al.)24
b(The)17 b(E\016cien)o(t)f(Sim)o(ulation)f(of)i(Parallel)g(Computer)f
(Systems.)232 2238 y Fm(International)i(Journal)g(in)g(Computer)f
(Simulation)p Fn(,)g(Jan)o(uary)f(1991.)156 2369 y([7])24
b(H.)13 b(Da)o(vis)h(et)f(al.)19 b(Multipro)q(cessor)14
b(Sim)o(ulation)e(and)j(T)l(racing)f(Using)g(Tango.)20
b(In)14 b Fm(Pr)n(o)n(c)n(e)n(e)n(d-)232 2460 y(ings)k(of)f(the)h
(International)h(Confer)n(enc)n(e)f(on)g(Par)n(al)r(lel)g(Pr)n(o)n(c)n
(essing)p Fn(,)e(1991.)p eop
%%Page: 50 57
50 56 bop 1882 72 a Fn(50)156 222 y([8])24 b(B.)17 b(F)l(alsa\014)i
(and)f(D.)h(A.)e(W)l(o)q(o)q(d.)29 b(Reactiv)o(e)16 b(NUMA:)g(A)i
(Design)h(for)f(Unifying)f(S-COMA)232 312 y(and)e(CC-NUMA.)j(In)d
Fm(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)g(the)i(24th)f(A)o(nnual)h
(International)h(Symp)n(osium)d(on)232 403 y(Computer)i(A)o(r)n(chite)n
(ctur)n(e)p Fn(,)e(1997.)156 534 y([9])24 b(K.)13 b(Gharac)o(horlo)q(o)
j(et)e(al.)k(Tw)o(o)d(Tec)o(hniques)d(to)j(Enhance)f(the)g(Performance)
f(of)h(Memory)232 625 y(Consistency)i(Mo)q(dels.)22 b(In)16
b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)i(the)g(International)h(Confer)n
(enc)n(e)f(on)g(Par)n(al)r(lel)232 715 y(Pr)n(o)n(c)n(essing)p
Fn(,)d(1991.)131 847 y([10])25 b(M.)12 b(Heinric)o(h)e(et)j(al.)k(The)c
(P)o(erformance)e(Impact)g(of)i(Flexibilit)o(y)d(in)i(the)h(Stanford)h
(FLASH)232 937 y(Multipro)q(cessor.)20 b(In)c Fm(Pr)n(o)n(c)n(e)n(e)n
(dings)g(of)h(the)h(6th)f(International)i(Confer)n(enc)n(e)e(on)h(A)o
(r)n(chite)n(c-)232 1027 y(tur)n(al)f(Supp)n(ort)g(for)f(Pr)n(o)n(gr)n
(amming)g(L)n(anguages)i(and)g(Op)n(er)n(ating)g(Systems)p
Fn(,)e(1994.)131 1159 y([11])25 b(C.)c(Holt)g(et)h(al.)37
b(Application)21 b(and)h(Arc)o(hitectural)e(Bottlenec)o(ks)g(in)h
(Large)i(Scale)e(Dis-)232 1249 y(tributed)16 b(Shared)h(Memory)e(Mac)o
(hines.)22 b(In)16 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)g(23r)n
(d)f(A)o(nnual)i(Interna-)232 1340 y(tional)f(Symp)n(osium)e(on)i
(Computer)f(A)o(r)n(chite)n(ctur)n(e)p Fn(,)f(1996.)131
1472 y([12])25 b(D.)17 b(Kroft.)26 b(Lo)q(c)o(kup-free)17
b(Instruction)g(Fetc)o(h/Prefetc)o(h)f(Cac)o(he)i(Organization.)25
b(In)18 b Fm(Pr)n(o-)232 1562 y(c)n(e)n(e)n(dings)f(of)h(the)g(8th)f(A)
o(nnual)i(International)g(Symp)n(osium)e(on)h(Computer)f(A)o(r)n(chite)
n(ctur)n(e)p Fn(,)232 1652 y(1981.)131 1784 y([13])25
b(J.)15 b(R.)g(Larus)i(and)f(E.)g(Sc)o(hnarr.)k(EEL:)c(Mac)o
(hine-Indep)q(enden)o(t)e(Executable)h(Editing.)21 b(In)232
1874 y Fm(Pr)n(o)n(c)n(c)n(e)n(dings)14 b(of)i(the)h(SIGPLAN)e(Confer)n
(enc)n(e)i(on)f(Pr)n(o)n(gr)n(amming)f(L)n(anguage)h(Design)h(and)232
1965 y(Implementation)p Fn(,)g(1995.)131 2096 y([14])25
b(S.)15 b(S.)h(Mukherjee)e(et)i(al.)k(Wisconsin)c(Wind)g(Tunnel)g(I)q
(I:)f(A)g(Fast)h(and)h(Portable)f(Parallel)232 2187 y(Arc)o(hitecture)f
(Sim)o(ulator.)26 b(In)18 b Fm(Workshop)g(on)i(Performanc)n(e)f(A)o
(nalysis)g(and)h(Its)f(Imp)n(act)232 2277 y(on)e(Design)i(\(P)l(AID\))p
Fn(,)c(1997.)131 2409 y([15])25 b(V.)e(S.)h(P)o(ai)g(et)g(al.)44
b(An)24 b(Ev)m(aluation)h(of)g(Memory)d(Consistency)i(Mo)q(dels)g(for)h
(Shared-)232 2499 y(Memory)17 b(Systems)g(with)i(ILP)g(Pro)q(cessors.)
30 b(In)19 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)g(7th)g
(International)232 2589 y(Confer)n(enc)n(e)d(on)g(A)o(r)n(chite)n(ctur)
n(al)f(Supp)n(ort)g(for)g(Pr)n(o)n(gr)n(amming)f(L)n(anguages)i(and)g
(Op)n(er)n(ating)232 2680 y(Systems)p Fn(,)f(1996.)p
eop
%%Page: 51 58
51 57 bop 1882 72 a Fn(51)131 222 y([16])25 b(V.)d(S.)h(P)o(ai)g(et)f
(al.)42 b(RSIM:)22 b(A)h(Sim)o(ulator)e(for)j(Shared-Memory)e(Multipro)
q(cessor)h(and)232 312 y(Unipro)q(cessor)16 b(Systems)f(that)h(Exploit)
g(ILP.)22 b(In)16 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(the)h(3r)n(d)e
(Workshop)h(on)232 403 y(Computer)g(A)o(r)n(chite)n(ctur)n(e)g(Educ)n
(ation)p Fn(,)f(1997.)131 534 y([17])25 b(V.)17 b(S.)g(P)o(ai)h(et)g
(al.)26 b(The)18 b(Impact)f(of)h(Instruction)g(Lev)o(el)f(P)o
(arallelism)e(on)j(Multipro)q(cessor)232 625 y(P)o(erformance)h(and)i
(Sim)o(ulation)e(Metho)q(dology)l(.)35 b(In)21 b Fm(Pr)n(o)n(c)n(e)n(e)
n(dings)f(of)i(the)g(3r)n(d)e(Interna-)232 715 y(tional)e(Symp)n(osium)
e(on)i(High)g(Performanc)n(e)f(Computer)h(A)o(r)n(chite)n(ctur)n(e)p
Fn(,)d(1997.)131 847 y([18])25 b(S.)c(K.)h(Reinhardt)g(et)g(al.)39
b(The)23 b(Wisconsin)f(Wind)g(T)l(unnel:)33 b(Virtual)21
b(Protot)o(yping)i(of)232 937 y(P)o(arallel)13 b(Computers.)19
b(In)14 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(A)o(CM)f(SIGMETRICS)g
(Confer)n(enc)n(e)i(on)f(Me)n(a-)232 1027 y(sur)n(ement)h(and)h(Mo)n
(deling)g(of)f(Computer)h(Systems)p Fn(,)e(1993.)131
1159 y([19])25 b(M.)19 b(Rosen)o(blum)f(et)i(al.)33 b(Using)20
b(the)g(SimOS)f(Mac)o(hine)g(Sim)o(ulator)f(to)j(Study)f(Complex)232
1249 y(Computer)h(Systems.)38 b Fm(A)o(CM)23 b(TOMA)o(CS,)g(Sp)n(e)n
(cial)h(Issue)f(on)h(Computer)f(Simulation)p Fn(,)232
1340 y(1997.)131 1472 y([20])i(E.)16 b(Sc)o(hnarr)g(and)h(J.)e(Larus.)
23 b(P)o(ersonal)16 b(comm)o(unicati)o(on.)j(Marc)o(h)d(1998.)131
1603 y([21])25 b(J.)17 b(P)l(.)g(Singh)h(et)f(al.)24
b(SPLASH:)17 b(Stanford)i(Parallel)e(Applications)f(for)i
(Shared-Memory)l(.)232 1694 y Fm(Computer)f(A)o(r)n(chite)n(ctur)n(e)g
(News)p Fn(,)g(Marc)o(h)e(1992.)131 1825 y([22])25 b(D.)12
b(J.)h(Sorin)g(et)g(al.)k(Analytical)12 b(Ev)m(aluation)i(of)f
(Shared-Memory)f(Parallel)h(Systems)e(with)232 1916 y(ILP)16
b(Pro)q(cessors.)23 b(In)16 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)g(the)
h(25th)f(A)o(nnual)i(International)g(Symp)n(osium)e(on)232
2006 y(Computer)g(A)o(r)n(chite)n(ctur)n(e)p Fn(,)e(1998.)23
b(T)l(o)17 b(app)q(ear.)131 2138 y([23])25 b(J.)18 b(E.)h(V)l(eenstra)g
(and)g(R.)g(J.)f(F)l(o)o(wler.)29 b(MINT)18 b(Tutorial)h(and)h(User)e
(Man)o(ual.)30 b(T)l(ec)o(hnical)232 2228 y(Rep)q(ort)16
b(452,)h(Computer)e(Science)g(Departmen)o(t,)f(Univ)o(ersit)o(y)g(of)j
(Ro)q(c)o(hester,)e(1994.)131 2360 y([24])25 b(E.)10
b(Witc)o(hel)g(and)h(M.)g(Rosen)o(blum.)i(Em)o(bra:)k(Fast)12
b(and)f(Flexible)e(Mac)o(hine)h(Sim)o(ulation.)j(In)232
2450 y Fm(Pr)n(o)n(c)n(e)n(e)n(dings)18 b(of)h(A)o(CM)g(SIGMETRICS)g
(Confer)n(enc)n(e)h(on)g(Me)n(asur)n(ement)f(and)h(Mo)n(deling)232
2540 y(of)d(Computer)g(Systems)p Fn(,)f(1996.)p eop
%%Page: 52 59
52 58 bop 1882 72 a Fn(52)131 222 y([25])25 b(S.)11 b(C.)h(W)l(o)q(o)h
(et)e(al.)k(The)d(SPLASH-2)h(Programs:)19 b(Characterization)12
b(and)g(Metho)q(dological)232 312 y(Considerations.)21
b(In)15 b Fm(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h(the)g(22nd)g(A)o(nnual)i
(International)f(Symp)n(osium)e(on)232 403 y(Computer)h(A)o(r)n(chite)n
(ctur)n(e)p Fn(,)e(1995.)p eop
%%Page: 53 60
53 59 bop 1882 72 a Fn(53)815 361 y Fr(App)r(endix)25
b(A)205 564 y(P)n(erformance)h(Comparison)h(of)g(Simple)f(Sim)n
(ulators)131 752 y Fn(This)c(app)q(endix)f(pro)o(vides)g(evidence)f
(that)i(the)f(p)q(erformance)f(of)i(the)f(baseline)g(Simple)e(and)131
842 y(Simple-)p Fg(i)p Fn(x)f(sim)o(ulators)h(used)h(in)g(this)g(study)
h(is)f(represen)o(tativ)o(e)e(of)j(curren)o(t)e(state-of-the-art)131
933 y(sim)o(ulators)c(that)i(use)f(simple)e(pro)q(cessor)j(mo)q(dels.)
204 1025 y(The)23 b(Simple)e(sim)o(ulator)g(is)i(compared)e(with)i(the)
g(recen)o(tly)d(released)j(Wisconsin)f(Wind)131 1115
y(T)l(unnel-I)q(I)15 b(\(WWT-2\))i([14].)j(WWT-2)d(is)e(c)o(hosen)g
(for)h(comparison)f(since)g(it)g(has)h(b)q(een)f(used)h(in)131
1206 y(man)o(y)d(arc)o(hitectural)f(studies)i(and)h(represen)o(ts)e
(the)h(state-of-the-art,)h(it)e(is)h(publicly)e(a)o(v)m(ailable,)131
1296 y(and)22 b(it)e(sim)o(ulates)f(SP)l(AR)o(C)i(executables)f
(similar)f(to)i(Simple.)33 b(WWT-2)23 b(supp)q(orts)f(parallel)131
1386 y(sim)o(ulation.)d(Simple)14 b(uses)i(sequen)o(tial)e(sim)o
(ulation,)g(ho)o(w)o(ev)o(er,)g(since)h(parallel)g(p)q(erformance)f(is)
131 1477 y(orthogonal)i(to)e(our)h(comparison;)e(parallel)g(sim)o
(ulation)f(tec)o(hnology)i(could)g(also)g(b)q(e)g(applied)g(to)131
1567 y(all)i(our)h(sim)o(ulators)e(but)h(that)h(is)f(b)q(ey)o(ond)g
(the)g(scop)q(e)h(of)f(this)g(w)o(ork.)204 1659 y(The)24
b(p)q(erformance)e(of)i(WWT-2)h(is)e(compared)g(with)g(the)h(p)q
(erformance)e(of)i(Simple)d(for)131 1749 y(LU,)c(FFT,)g(and)g(Radix)g
(with)g(the)g(input)g(sizes)g(used)g(in)g(this)g(study)g(\(these)g(are)
g(the)g(common)131 1840 y(applications)g(among)g(those)g(used)g(in)g
(this)g(study)g(and)g(in)g(the)g(application)f(suite)h(distributed)131
1930 y(with)c(WWT-2\).)21 b(The)12 b(sim)o(ulators)g(are)g(run)h(on)g
(the)f(same)g(hardw)o(are)h(as)g(the)f(other)h(sim)o(ulations)131
2020 y(rep)q(orted)g(in)g(this)f(study)l(.)20 b(Similar)11
b(parameters)h(w)o(ere)g(used)h(for)g(b)q(oth)g(sim)o(ulators)f(to)h
(the)f(exten)o(t)131 2111 y(p)q(ossible.)26 b(F)l(or)18
b(example,)d(a)j(constan)o(t)g(latency)f(net)o(w)o(ork)g
(con\014guration)h(\(100)h(cycle)d(latency\))131 2201
y(and)g(direct)f(mapp)q(ed)f(cac)o(hes)h(w)o(ere)g(used)g(in)g(b)q(oth)
i(sim)o(ulators)d(as)i(these)f(are)g(the)g(only)h(options)131
2291 y(supp)q(orted)g(b)o(y)e(the)g(released)g(v)o(ersion)g(of)h
(WWT-2.)22 b(Similarly)l(,)11 b(since)j(WWT-2)h(only)g(supp)q(orts)131
2381 y(a)f(single)e(lev)o(el)f(cac)o(he,)h(b)q(oth)i(cac)o(he)e(lev)o
(els)f(in)h(Simple)f(w)o(ere)h(set)h(to)g(b)q(e)g(the)g(same)f(size;)g
(all)h(cac)o(hes)131 2472 y(in)j(b)q(oth)h(sim)o(ulators)e(are)i(the)f
(L2)h(cac)o(he)e(size)g(used)i(in)f(the)g(rest)g(of)g(this)h(study)l(.)
204 2564 y(Nev)o(ertheless,)f(a)j(completely)c(fair)k(comparison)e
(among)h(the)g(t)o(w)o(o)h(sim)o(ulators)e(is)h(di\016cult)131
2654 y(b)q(ecause)i(of)g(di\013erences)f(in)g(mo)q(deled)g(arc)o
(hitectures.)30 b(The)20 b(most)f(imp)q(ortan)o(t)f(di\013erence)h(for)
p eop
%%Page: 54 61
54 60 bop 1882 72 a Fn(54)131 222 y(our)18 b(purp)q(oses)h(is)e(that)h
(the)f(released)g(v)o(ersion)f(of)i(WWT-2)h(do)q(es)f(not)g(supp)q(ort)
g(a)g(CC-NUMA)131 312 y(proto)q(col.)29 b(The)19 b(closest)f(proto)q
(col)i(to)f(CC-NUMA)f(in)g(WWT-2)i(is)e(S-COMA;)g(this)g(proto)q(col)
131 403 y(w)o(as)c(used)g(with)f(the)g(S-COMA)g(hardw)o(are)h(stac)o
(he)f(size)g(of)g(320K)i(based)f(on)g(a)f(previous)h(WWT-)131
493 y(2)19 b(based)f(study)g(of)h(coherence)e(proto)q(cols)i([8].)26
b(The)18 b(latter)f(study)h(sho)o(w)o(ed)g(that)h(S-COMA)e(is)131
583 y(comparable)i(to)i(CC-NUMA)e(for)h(FFT,)g(CC-NUMA)f(p)q(erforms)g
(w)o(orse)h(than)h(S-COMA)f(for)131 674 y(LU,)c(and)h(S-COMA)f(p)q
(erforms)f(w)o(orse)i(than)g(CC-NUMA)e(for)i(Radix)e([8].)204
766 y(Our)24 b(p)q(erformance)e(measuremen)o(ts,)f(summarized)g(in)i
(Figure)f(A.1,)i(closely)f(follo)o(w)g(the)131 856 y(ab)q(o)o(v)o(e)16
b(trend)g({)h(WWT-2)g(and)g(Simple)c(sho)o(w)k(similar)d(p)q
(erformance)h(for)i(FFT,)e(Simple)f(is)i(sig-)131 946
y(ni\014can)o(tly)d(slo)o(w)o(er)g(for)h(LU,)g(and)h(WWT-2)g(is)e
(signi\014can)o(tly)g(slo)o(w)o(er)h(for)g(Radix.)20
b(An)13 b(in)o(teresting)131 1037 y(observ)m(ation)18
b(is)f(that)g(the)g(total)g(sim)o(ulation)e(time)g(for)i(all)f(three)h
(applications)g(is)f(within)h(10\045)131 1127 y(for)g(b)q(oth)g(sim)o
(ulators.)p 669 1241 726 2 v 668 1301 2 61 v 693 1283
a(Application)p 965 1301 V 49 w(Simple)p 1167 1301 V
56 w(WWT-2)p 1393 1301 V 669 1303 726 2 v 668 1363 2
61 v 693 1345 a(FFT)p 965 1363 V 199 w(248)h(sec)p 1167
1363 V 49 w(263)f(sec)p 1393 1363 V 669 1364 726 2 v
668 1425 2 61 v 693 1407 a(LU)p 965 1425 V 231 w(394)h(sec)p
1167 1425 V 49 w(112)f(sec)p 1393 1425 V 669 1426 726
2 v 668 1487 2 61 v 693 1468 a(Radix)p 965 1487 V 171
w(395)h(sec)p 1167 1487 V 49 w(797)f(sec)p 1393 1487
V 669 1488 726 2 v 409 1538 a Fh(Figure)h(A.1)48 b Fn(Sim)o(ulation)15
b(time)f(for)i(SPLASH-2)h(applications)204 1662 y(Undoubtedly)l(,)e
(there)f(are)i(man)o(y)d(factors)j(at)g(pla)o(y)e(that)i(con)o(tribute)
e(to)i(the)f(ab)q(o)o(v)o(e)g(results.)131 1752 y(Ho)o(w)o(ev)o(er,)i
(our)j(goal)f(is)g(to)g(simply)e(sho)o(w)i(that)g(the)g(Simple)d(sim)o
(ulator)i(is)g(in)h(the)f(same)g(class)131 1843 y(as)i(other)g(widely)f
(used)g(sim)o(ulators.)30 b(The)20 b(results)f(in)h(this)f(section)g
(pro)o(vide)g(suc)o(h)h(evidence,)131 1933 y(and)f(increase)f
(con\014dence)g(that)h(the)f(exp)q(erimen)o(tal)d(infrastructure)j(of)h
(this)f(study)h(is)f(indeed)131 2023 y(represen)o(tativ)o(e)c(of)j(the)
f(state-of-the-art.)p eop
%%Page: 55 62
55 61 bop 1882 72 a Fn(55)817 361 y Fr(App)r(endix)25
b(B)345 564 y(Absolute)h(P)n(erformance)h(of)f(Sim)n(ulators)h(in)611
655 y(Instructions)f(p)r(er)h(Second)131 843 y Fn(Figure)19
b(B.1)g(giv)o(es)g(the)h(absolute)g(p)q(erformance)e(in)i(sim)o(ulated)
d(instructions)i(p)q(er)h(second)g(for)131 934 y(all)c(the)f(sim)o
(ulators)g(used)h(in)f(this)h(study)g(\(data)h(for)f(Simple)e(is)h(not)
i(separately)e(rep)q(orted)h(as)h(it)131 1024 y(is)i(similar)e(to)i
(Simple-)p Fg(i)p Fn(x\).)26 b(The)19 b(data)g(rep)q(orted)g(here)g(is)
f(for)h(the)g(same)f(con\014gurations)i(and)131 1114
y(runs)d(as)g(rep)q(orted)f(in)g(Figures)g(5.2)h(and)g(5.3.)p
488 1435 1087 2 v 487 1485 2 50 v 673 1485 V 682 1485
V 681 1485 V 707 1470 a Fj(Erle.)p 817 1485 V 817 1485
V 50 w(FFT)p 951 1485 V 951 1485 V 50 w(LUopt)p 1118
1485 V 1118 1485 V 49 w(Mp3d)p 1272 1485 V 1272 1485
V 50 w(Radix)p 1430 1485 V 1439 1485 V 1438 1485 V 57
w(Avg.)p 1573 1485 V 488 1487 1087 2 v 488 1495 V 487
1545 2 50 v 513 1530 a(Base)p 673 1545 V 682 1545 V 110
w(22.6)p 817 1545 V 61 w(23.4)p 951 1545 V 59 w(29.6)p
1118 1545 V 91 w(7.5)p 1272 1545 V 101 w(17.2)p 1430
1545 V 1439 1545 V 91 w(20.1)p 1573 1545 V 488 1546 1087
2 v 487 1596 2 50 v 513 1581 a(Lat.)h(x2)p 673 1596 V
682 1596 V 58 w(20.5)p 817 1596 V 61 w(18.4)p 951 1596
V 59 w(25.0)p 1118 1596 V 91 w(6.8)p 1272 1596 V 101
w(13.6)p 1430 1596 V 1439 1596 V 91 w(16.9)p 1573 1596
V 488 1598 1087 2 v 487 1648 2 50 v 513 1633 a(Lat.)g(x3)p
673 1648 V 682 1648 V 58 w(18.6)p 817 1648 V 61 w(18.3)p
951 1648 V 59 w(23.7)p 1118 1648 V 91 w(9.0)p 1272 1648
V 101 w(10.5)p 1430 1648 V 1439 1648 V 91 w(16.1)p 1573
1648 V 488 1649 1087 2 v 487 1699 2 50 v 513 1684 a(C.)13
b(net)p 673 1699 V 682 1699 V 82 w(24.9)p 817 1699 V
61 w(25.1)p 951 1699 V 59 w(30.0)p 1118 1699 V 91 w(9.0)p
1272 1699 V 101 w(18.5)p 1430 1699 V 1439 1699 V 91 w(21.5)p
1573 1699 V 488 1701 1087 2 v 487 1751 2 50 v 513 1736
a(Avg.)p 673 1751 V 682 1751 V 108 w(21.6)p 817 1751
V 61 w(21.3)p 951 1751 V 59 w(27.1)p 1118 1751 V 91 w(8.1)p
1272 1751 V 101 w(15.0)p 1430 1751 V 1439 1751 V 91 w(18.6)p
1573 1751 V 488 1752 1087 2 v 599 1812 a Fc(\(a\))h(RSIM)g(-)f
(Simulated)h(kilo-instructions)h(p)q(er)g(second)p 488
1853 V 487 1903 2 50 v 673 1903 V 682 1903 V 681 1903
V 707 1888 a Fj(Erle.)p 817 1903 V 817 1903 V 50 w(FFT)p
951 1903 V 951 1903 V 50 w(LUopt)p 1118 1903 V 1118 1903
V 49 w(Mp3d)p 1272 1903 V 1272 1903 V 50 w(Radix)p 1430
1903 V 1439 1903 V 1438 1903 V 57 w(Avg.)p 1573 1903
V 488 1905 1087 2 v 488 1913 V 487 1963 2 50 v 513 1948
a(Base)p 673 1963 V 682 1963 V 110 w(69.8)p 817 1963
V 61 w(85.4)p 951 1963 V 59 w(80.9)p 1118 1963 V 91 w(37.8)p
1272 1963 V 80 w(45.9)p 1430 1963 V 1439 1963 V 91 w(64.0)p
1573 1963 V 488 1965 1087 2 v 487 2015 2 50 v 513 2000
a(Lat.)j(x2)p 673 2015 V 682 2015 V 58 w(73.7)p 817 2015
V 61 w(88.5)p 951 2015 V 59 w(76.5)p 1118 2015 V 91 w(46.6)p
1272 2015 V 80 w(43.9)p 1430 2015 V 1439 2015 V 91 w(65.8)p
1573 2015 V 488 2016 1087 2 v 487 2066 2 50 v 513 2051
a(Lat.)g(x3)p 673 2066 V 682 2066 V 58 w(83.4)p 817 2066
V 61 w(89.8)p 951 2066 V 59 w(80.6)p 1118 2066 V 91 w(70.7)p
1272 2066 V 80 w(54.2)p 1430 2066 V 1439 2066 V 91 w(75.7)p
1573 2066 V 488 2068 1087 2 v 487 2117 2 50 v 513 2103
a(C.)13 b(net)p 673 2117 V 682 2117 V 82 w(77.3)p 817
2117 V 61 w(93.1)p 951 2117 V 59 w(81.2)p 1118 2117 V
91 w(50.0)p 1272 2117 V 80 w(53.4)p 1430 2117 V 1439
2117 V 91 w(71.0)p 1573 2117 V 488 2119 1087 2 v 487
2169 2 50 v 513 2154 a(Avg.)p 673 2169 V 682 2169 V 108
w(76.0)p 817 2169 V 61 w(89.2)p 951 2169 V 59 w(79.8)p
1118 2169 V 91 w(51.3)p 1272 2169 V 80 w(49.4)p 1430
2169 V 1439 2169 V 91 w(69.1)p 1573 2169 V 488 2171 1087
2 v 545 2231 a Fc(\(b\))i(DirectRSIM)f(-)g(Simulated)g
(kilo-instructions)h(p)q(er)g(second)p 474 2272 1115
2 v 473 2322 2 50 v 659 2322 V 668 2322 V 667 2322 V
697 2307 a Fj(Erle.)p 811 2322 V 811 2322 V 59 w(FFT)p
956 2322 V 956 2322 V 55 w(LUopt)p 1122 2322 V 1122 2322
V 50 w(Mp3d)p 1277 2322 V 1277 2322 V 50 w(Radix)p 1435
2322 V 1444 2322 V 1443 2322 V 62 w(Avg.)p 1588 2322
V 474 2323 1115 2 v 474 2332 V 473 2381 2 50 v 499 2367
a(Base)p 659 2381 V 668 2381 V 110 w(250.6)p 811 2381
V 48 w(205.4)p 956 2381 V 48 w(214.8)p 1122 2381 V 71
w(32.5)p 1277 2381 V 80 w(93.6)p 1435 2381 V 1444 2381
V 91 w(159.4)p 1588 2381 V 474 2383 1115 2 v 473 2433
2 50 v 499 2418 a(Lat.)j(x2)p 659 2433 V 668 2433 V 58
w(240.1)p 811 2433 V 48 w(199.6)p 956 2433 V 48 w(209.5)p
1122 2433 V 71 w(32.7)p 1277 2433 V 80 w(91.5)p 1435
2433 V 1444 2433 V 91 w(154.7)p 1588 2433 V 474 2435
1115 2 v 473 2484 2 50 v 499 2469 a(Lat.)g(x3)p 659 2484
V 668 2484 V 58 w(215.1)p 811 2484 V 48 w(198.4)p 956
2484 V 48 w(196.6)p 1122 2484 V 71 w(27.7)p 1277 2484
V 80 w(75.2)p 1435 2484 V 1444 2484 V 91 w(142.6)p 1588
2484 V 474 2486 1115 2 v 473 2536 2 50 v 499 2521 a(C.)13
b(net)p 659 2536 V 668 2536 V 82 w(280.7)p 811 2536 V
48 w(243.1)p 956 2536 V 48 w(228.5)p 1122 2536 V 71 w(50.3)p
1277 2536 V 80 w(126.4)p 1435 2536 V 1444 2536 V 70 w(185.8)p
1588 2536 V 474 2538 1115 2 v 473 2587 2 50 v 499 2572
a(Avg.)p 659 2587 V 668 2587 V 108 w(246.6)p 811 2587
V 48 w(211.6)p 956 2587 V 48 w(212.4)p 1122 2587 V 71
w(35.8)p 1277 2587 V 80 w(96.7)p 1435 2587 V 1444 2587
V 91 w(160.6)p 1588 2587 V 474 2589 1115 2 v 560 2624
a Fc(\(c\))i(Simple-)p Fb(i)p Fc(x)e(-)h(Simulated)g(kilo-instructions)
h(p)q(er)g(second)573 2720 y Fh(Figure)j(B.1)48 b Fn(Absolute)16
b(p)q(erformance)f(of)i(the)586 2780 y(sim)o(ulators)d(in)i
(kilo-instructions)g(p)q(er)g(second.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
