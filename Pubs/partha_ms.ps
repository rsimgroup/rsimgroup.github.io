%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: thesis.dvi
%%Pages: 62
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSCommandLine: dvips -o thesis.ps thesis.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.04.14:1401
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (thesis.dvi)
@start /Fa 23 118 df<13301378A8387FFFF0B512F8A26C13F038007800A813301516
7E991A>43 D<387FFFC0B512E0A26C13C013047D901A>45 D<EA03F8EA0FFE381FFF8038
3C07C0387801E0EA70004813707EA21260C7FCA214E0A2EB01C01303EB0780EB0F00131E
5B5B5BEA03E0485A48C7FC001E13705A387FFFF0B5FC7E141E7D9D1A>50
D<1338137CA2136C13EEA313C6A2EA01C7A3138300031380A4380701C0A213FFA24813E0
EA0E00A3001E13F0001C1370387F01FC38FF83FE387F01FC171E7F9D1A>65
D<EAFFFEEBFF8014C0381C03E0130014F01470A414E01301EB07C0381FFF80A214C0381C
01E0EB00F014701438A5147814F01301B512E014C01400151E7E9D1A>I<EB7C38EA01FF
000713F8EA0F83EA1E00001C13785A14385AA214005AA812701438A27EA26C1370001E13
F0380F83E03807FFC00001138038007C00151E7E9D1A>I<B512F8A3381C0038A41400A3
130EA3EA1FFEA3EA1C0EA390C7FCA3141CA5B512FCA3161E7E9D1A>69
D<B512F8A3381C0038A41400A31307A3EA1FFFA3EA1C07A390C7FCA8EAFFC0A3151E7E9D
1A>I<00FC137E6C13FEA2383B01B8A31383A200391338A213C7A2EA38C613EEA2136CA2
137C1338A21300A700FE13FEA3171E7F9D1A>77 D<EA0FFE383FFF804813C0EA7C07EA70
0100F013E0EAE000B1EAF001A2007013C0EA7C07EA7FFF6C1380380FFE00131E7D9D1A>
79 D<EAFFFEEBFF8014C0381C03E0EB00F0147014781438A41478147014F0EB03E0381F
FFC01480EBFE00001CC7FCA9B47EA3151E7E9D1A>I<EAFFFC13FF1480381C07C0EB01E0
EB00F01470A414F0EB01E0EB07C0381FFF8014001480381C07C01301EB00E0A514E214E7
A338FF807EA21438181E7F9D1A>82 D<3803F8E0EA0FFEEA1FFFEA3C07EA780112F0EAE0
00A3140012701278EA3F80EA1FF8EA07FF38007FC0EB07E0EB00F014701438A2126012E0
A214706C13F038FE01E0B512C000EF138038E1FE00151E7E9D1A>I<EA1FF0EA3FFC487E
EA780FEA300738000380A2137FEA07FF121FEA3F83EA7803127012E0A3EA7007EA780F38
3FFFFCEA1FFDEA07F016157D941A>97 D<EB07E0EB1FF0EB3FF8EB7878EBF030EBE000A4
387FFFF0B5FCA23800E000AF383FFF804813C06C1380151E7F9D1A>102
D<3801F87C3807FFFE5A381E078C381C0380383801C0A5381C0380EA1E07381FFF005BEA
39F80038C7FCA27E381FFF8014E04813F83878007C0070131C48130EA40070131C007813
3C003E13F8381FFFF0000713C00001130017217F941A>I<13C0487EA26C5A90C7FCA6EA
7FE0A31200AF387FFF80B512C06C1380121F7C9E1A>105 D<EA7FE012FF127F1200B3A6
387FFFC0B512E06C13C0131E7D9D1A>108 D<EA7E3E38FEFF80007F13C0EA0FC1EB80E0
1300120EAC387FC3FC38FFE7FE387FC3FC17157F941A>110 D<EA01F0EA07FCEA1FFF38
3E0F80EA3C07387803C0EA700138E000E0A6EAF001007013C0EA7803383C0780EA3E0F38
1FFF00EA07FCEA01F013157D941A>I<EA7E3E38FEFF80007F13E0380FC1F0EB8070EB00
38120E141CA7000F13381478EB80F0EBC1E0EBFFC0000E1380EB3E0090C7FCA8EA7FC048
7E6C5A16207F941A>I<387F81F838FF8FFC387F9FFE3803FE1EEBF80CEBE000A25B5BAA
EA7FFFB5FC7E17157F941A>114 D<387E07E0EAFE0FEA7E07EA0E00AD1301EA0F033807
FFFC6C13FE3800FCFC17157F941A>117 D E /Fb 34 122 df<1478137C13FC12013803
C0005B1207A838FFFC78A3EA0780B3152480A31A>12 D<137013E0EA01C01203EA078013
005A120E121E121C123CA212381278A4127012F0AE12701278A41238123CA2121C121E12
0E120F7E1380EA03C01201EA00E013700C327DA413>40 D<12E012707E123C7E120E120F
7E1380120313C0A2120113E0A4120013F0AE13E01201A413C01203A21380120713005A12
0E121E5A12385A5A0C327DA413>I<1278A412181230A21260A212E0050A7C830E>44
D<12F0A404047B830E>46 D<1340EA01C0120712FFA212FB1203B3A7B5FCA310227CA118
>49 D<EA03F0EA0FFC487EEA3C1F38300780387003C0126000E013E0EAC0011240A21200
A3EB03C0A2EB0780A2EB0F00131E5B5B5B485A5B485A48C7FC120E5A5A5AB512E0A31322
7EA118>I<EA03F0EA07FCEA1FFFEA3E0F38380780387003C01220A21200A3EB0780A2EB
0F00133EEA03FC5B13FEEA000FEB0780EB03C0A2EB01E0A5128038C003C012E038700780
EA3C0F381FFF00EA0FFCEA03F013237EA118>I<EB0F80A2497EA2131DEB3DE013391338
EB78F0A2EB7070EBF078A213E000017FA213C000037FA2138000077FA290B5FC481480A2
380E0007001EEB03C0A24814E01401A24814F01400A24814F81D237FA220>65
D<EAFFC0A3EAF000B3B3A7EAFFC0A30A317DA40E>91 D<EAFFC0A31203B3B3A712FFA30A
3180A40E>93 D<EA07F0EA3FFC487EEA781FEA400F38000780A4137FEA07FF121FEA3E07
127812F0A3130FEA7C1FEA7FFFEA3FF7EA1F8711167E9517>97 D<12F0AD13F8EAF3FEB5
FC38FE0F80EAF80738F003C0A2EB01E0A7130314C0A238F80780EAFE1F38F7FF00EAF3FC
EAF1F813237DA219>I<EA01FCEA07FF481380EA1F03EA3C0148C7FCA2127012F0A61278
A36C1340381F03C0EA0FFF6C13803801FC0012167E9516>I<EB01E0ADEA03E1EA0FF9EA
1FFFEA3F07EA3C03EA7801A212F0A812781303123CEA3E0FEA1FFDEA0FF9EA03E113237E
A219>I<EA01F8EA07FE487E381F0780383C03C0EA7801A2387000E0B5FCA300F0C7FCA3
12701278127C6C1340381F03C0EA0FFF6C13803800FC0013167F9516>I<137FEA01FF5A
EA07C013005AA8EAFFF8A3EA0F00B3102380A20F>I<3803F078380FFFF85A383E1F00EA
3C0F38780780A5383C0F00EA3E1FEA1FFE485AEA33F00070C7FCA21278EA3FFEEBFFC06C
13E04813F0EA780138F000F81478A4007813F0383E03E0381FFFC06C13803801FC001521
7F9518>I<12F0ADEAF1F8EAF3FCEAF7FEEAFE1EEAF80FA212F0B010237CA219>I<12F0A4
1200A912F0B3A404237DA20B>I<12F0B3B104237DA20B>108 D<39F0F807C039F3FE1FF0
39F7FF3FF839FE0F707800FCEBE07C39F807C03CA200F01380AF1E167C9527>I<EAF1F8
EAF3FCEAF7FEEAFE1EEAF80FA212F0B010167C9519>I<EA01FCEA07FF481380381F07C0
383C01E0387800F0A20070137000F01378A6007813F0A2EA7C01383E03E0381F07C0380F
FF806C1300EA01FC15167F9518>I<EAF0F8EAF3FEB5FC38FE1F80EAF80738F003C0A214
E01301A6130314C0130700F81380EAFE1F38F7FF00EAF3FCEAF1F800F0C7FCAA13207D95
19>I<3803E1E0EA07F9EA1FFD130FEA3C03127CEA780112F812F0A612F812781303123C
EA3F0FEA1FFDEA0FF9EA03E1EA0001AA13207E9519>I<EAF0E012F312F7EAFF005A5A5A
A25AAE0B167C9511>I<EA07F0EA1FFCEA3FFEEA3C0EEA78061300A2127C123F13F0EA1F
F8EA0FFCEA01FEEA001F130FA312C0EAF81EEAFFFEEA3FFCEA0FF010167F9513>I<121E
A6EAFFFCA3EA1E00AE1308EA1F1CEA0FFC13F8EA07C00E1C7F9B12>I<EAF00FB1131FEA
F83FEA7FFF13CFEA1F0F10167C9519>I<38F001E0A212F8387803C0A2003C13801307A2
001E13005BA2EA0E0EEA0F1EA2EA071C139C13BCEA03B8A213F86C5AA213167F9516>I<
39F007803CEB0FC0A2D8780D1378131D14E0131CD83C1813F0133814F0001C14E0001E13
7113701479000EEB39C01360000F133B00071480141BEBC01FA2000314001E167F9521>
I<007813F0387C01E0383E03C0EA1E07000F138038078F0013DEEA03FE6C5A6C5A137013
F8487EEA03DC139EEA078F380F0780121EEB03C0383C01E0387800F000F813F815168095
16>I<38F001E0A2387803C0A2127C383C0780A2121EEB0F00A2120F130E131E1207139C
1203139813B8120113F01200A25BA212015BA2485A1207007FC7FCA2127C13207F9516>
I E /Fc 57 122 df<EB7E1F3901C1B180390303E3C0000713C3000EEBC180903801C000
A6B512FC380E01C0B0387F87FC1A1D809C18>11 D<137E3801C180EA0301380703C0120E
EB018090C7FCA5B512C0EA0E01B0387F87F8151D809C17>I<000F14C0EA188039306003
803970380700386027FB38E010065CA25CA25C5CEA602000705B38304180EA1881390F03
03C03900060620EC0C1090380C1C08EB1818EC380413301360A213C0A2EA018039030018
08141C0006EB0C1048EB06200004EB03C01E217E9E23>37 D<1380EA0100120212065AA2
5AA25AA35AA412E0AC1260A47EA37EA27EA27E12027EEA0080092A7C9E10>40
D<7E12407E12307EA27EA27EA37EA41380AC1300A41206A35AA25AA25A12205A5A092A7E
9E10>I<126012F0A212701210A41220A212401280040C7C830C>44
D<EAFFE0A20B0280890E>I<126012F0A2126004047C830C>I<EA03C0EA0C30EA1818EA30
0CA2EA700EEA6006A2EAE007ADEA6006A2EA700EEA300CA2EA1818EA0C30EA07E0101D7E
9B15>48 D<5A1207123F12C71207B3A5EAFFF80D1C7C9B15>I<EA07C0EA1830EA201CEA
400C130EEAF00F12F81307A21270EA000F130EA2131CA213381370136013C0EA0180EA03
00EA0601120C1218EA1002EA3FFE127F12FF101C7E9B15>I<EA07E0EA1830EA201CA2EA
781E130E131E1238EA001CA2131813301360EA07C0EA0030131CA2130E130FA2127012F8
A3EAF00EEA401C1220EA1830EA07C0101D7E9B15>I<130CA2131C133CA2135C13DC139C
EA011C120312021204120C1208121012301220124012C0B512C038001C00A73801FFC012
1C7F9B15>I<EA300CEA3FF813F013C0EA2000A6EA23E0EA2C30EA3018131CEA200E1200
130FA3126012F0A3EA800EEA401E131CEA2038EA1870EA07C0101D7E9B15>I<13F0EA03
0CEA0404EA0C0EEA181E1230130CEA7000A21260EAE3E0EAE430EAE818EAF00C130EEAE0
061307A51260A2EA7006EA300E130CEA1818EA0C30EA03E0101D7E9B15>I<EA03E0EA0C
30EA1008EA200C13061260A21270A2EA7C0CEA3E18EA3FB0EA1FE0EA07F013F8EA18FCEA
307EEA601E130FEAC0071303A4EA60021304EA300CEA1C10EA07E0101D7E9B15>56
D<EA03C0EA0C30EA1818EA300C1270EA600EEAE006A21307A51260EA700F1230EA1817EA
0C27EA07C7EA0006A2130EEA300C127813181270EA2030EA10C0EA0F80101D7E9B15>I<
126012F0A212601200AA126012F0A212701210A41220A212401280041A7C910C>59
D<1306A3130FA3EB1780A2EB37C01323A2EB43E01341A2EB80F0A338010078A2EBFFF838
02003CA3487FA2000C131F80001E5BB4EBFFF01C1D7F9C1F>65 D<90381F8080EBE06138
01801938070007000E13035A14015A00781300A2127000F01400A8007014801278A21238
6CEB0100A26C13026C5B380180083800E030EB1FC0191E7E9C1E>67
D<B512C0380F00F0143C140E80A2EC038015C01401A215E0A815C0A21403158014071500
140E5C1470B512C01B1C7E9B20>I<B512FC380F003C140C1404A214061402A213011400
A35B13FF13037FA3140113001402A31406A2140C143CB512FC181C7E9B1C>I<B512F838
0F007814181408A2140C1404A213011400A35B13FF13037FA490C7FCA8EAFFF8161C7E9B
1B>I<EAFFF0EA0F00B3A8EAFFF00C1C7F9B0F>73 D<EAFFF8EA0F8090C7FCB01408A314
18A2141014301470EB01F0B5FC151C7E9B1A>76 D<B46CEBFF80000FECF800A2390BC001
78A33809E002A23808F004A3EB7808A3EB3C10A3EB1E20A3EB0F40A2EB0780A3EB030012
1C3AFF8307FF80211C7E9B26>I<B5FC380F01E0EB007880141C141EA4141C143C5CEB01
E001FFC7FCEB01E0EB0070147880A61510A2141CA239FFF00E20C7EA03C01C1D7E9B1F>
82 D<3807E080EA1C19EA30051303EA600112E01300A36C13007E127CEA7FC0EA3FF8EA
1FFEEA07FFC61380130FEB07C0130313011280A300C01380A238E00300EAD002EACC0CEA
83F8121E7E9C17>I<007FB512C038700F010060130000401440A200C014201280A30000
1400B1497E3803FFFC1B1C7F9B1E>I<39FFF01FF0390F000380EC0100B3A26C13021380
00035BEA01C03800E018EB7060EB0F801C1D7F9B1F>I<3AFFE1FFC0FF3A1F003E003C00
1E013C13186C6D1310A32607801F1320A33A03C0278040A33A01E043C080A33A00F081E1
00A39038F900F3017913F2A2017E137E013E137CA2013C133C011C1338A2011813180108
1310281D7F9B2B>87 D<12FEA212C0B3B312FEA207297C9E0C>91
D<12FEA21206B3B312FEA20729809E0C>93 D<EA1FC0EA3070EA78387F12301200A2EA01
FCEA0F1C12381270126000E01340A3EA603C38304E80381F870012127E9115>97
D<12FC121CAA137CEA1D87381E0180381C00C014E014601470A6146014E014C0381E0180
38190700EA10FC141D7F9C17>I<EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260
EA70021230EA1804EA0C18EA03E00F127F9112>I<EB1F801303AAEA03F3EA0E0BEA1807
EA30031270126012E0A6126012701230EA1807EA0E1B3803E3F0141D7F9C17>I<EA07E0
EA0C30EA1818EA300CEA700EEA600612E0EAFFFEEAE000A41260EA70021230EA1804EA0C
18EA03E00F127F9112>I<13F8EA018CEA071E1206EA0E0C1300A6EAFFE0EA0E00B0EA7F
E00F1D809C0D>I<EB03803807C4C0EA1C783838388038301800EA701CA4EA3018EA3838
6C5AEA27C00020C7FCA21230EA3FF86CB4FC1480EA2003386001C0EAC000A33860018038
300300EA1C0EEA07F8121C7F9215>I<12FC121CAA137C1387EA1D03001E1380121CAD38
FF9FF0141D7F9C17>I<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>I<12FC
121CAAEB0FE0EB0780EB06005B13105B5B13E0121DEA1E70EA1C781338133C131C7F130F
148038FF9FE0131D7F9C16>107 D<12FC121CB3A9EAFF80091D7F9C0C>I<39FC7E07E039
1C838838391D019018001EEBE01C001C13C0AD3AFF8FF8FF8021127F9124>I<EAFC7CEA
1C87EA1D03001E1380121CAD38FF9FF014127F9117>I<EA03F0EA0E1CEA1806487E0070
1380EA600100E013C0A600601380EA700300301300EA1806EA0E1CEA03F012127F9115>
I<EAFC7CEA1D87381E0180001C13C0EB00E0A21470A614E0A2EB01C0001E1380381D0700
EA1CFC90C7FCA7B47E141A7F9117>I<3803E080EA0E19EA1805EA3807EA7003A212E0A6
1270A2EA38071218EA0E1BEA03E3EA0003A7EB1FF0141A7F9116>I<EAFCE0EA1D38EA1E
78A2EA1C301300ACEAFFC00D127F9110>I<EA1F90EA2070EA4030EAC010A212E0EAF800
EA7F80EA3FE0EA0FF0EA00F8EA8038131812C0A2EAE010EAD060EA8FC00D127F9110>I<
1204A4120CA2121C123CEAFFE0EA1C00A91310A5120CEA0E20EA03C00C1A7F9910>I<38
FC1F80EA1C03AD1307120CEA0E1B3803E3F014127F9117>I<38FF07E0383C0380381C01
00A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA00E0A3134013127F9116>I<
39FF3FC7E0393C0703C0001CEB01801500130B000E1382A21311000713C4A213203803A0
E8A2EBC06800011370A2EB8030000013201B127F911E>I<38FF0FE0381E0700EA1C06EA
0E046C5AEA039013B0EA01E012007F12011338EA021C1204EA0C0E487E003C138038FE1F
F014127F9116>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A2
13C8EA01D0A2EA00E0A31340A25BA212F000F1C7FC12F312661238131A7F9116>I
E /Fd 6 124 df<1204A3EAC460EAF5E0EA3F80EA0E00EA3F80EAF5E0EAC460EA0400A3
0B0D7E8D11>3 D<EA4040EAC060B3AAEA40400B1E7E9511>107 D<121E1261EA408012C1
EAC000A212407E121812361263EAC180A4EA63001236120C12027E1380A212C1EA810012
43123C091A7E930F>120 D<120CA6EAFFC0A2EA0C00B20A1A7E9310>I<120CA6EAFFC0EA
0C00A6C7FC120CA5EAFFC0A2EA0C00A50A1A7E9310>I<EA07FF121FEA3F18127FA212FF
A4127FA2123F121F12071203AC101A7E9315>I E /Fe 6 124 df<1202A3EAC218EAF278
EA3AE0EA0F80A2EA3AE0EAF278EAC218EA0200A30D0E7E8E12>3
D<EA4040EAC060B3AEEA40400B227D9812>107 D<121FEA3080EA6040EAC0C0A21300A2
12607E120C1233EA6080EAC0C01360A31260EA20C0EA1980EA0600EA0180EA00C01360A2
1260A2EA40C0EA2180EA1F000B1D7E9610>120 D<1206A8EAFFF0A2EA0600B30C1D7E96
11>I<1206A6EAFFF0A2EA0600A6C7FC1206A6EAFFF0A2EA0600A60C1D7E9611>I<3803FF
C0120F381FC600123F127FA212FFA4127FA2123F121F120F12031200AD121D7E9616>I
E /Ff 1 16 df<EA03F0EA0FFC487E487E481380A2B512C0A86C1380A26C13006C5A6C5A
EA03F012147D9519>15 D E /Fg 52 123 df<90380FF83F90397FFDFFC03A01F81FE3E0
3903E03F87EA07C0D80F801307ED03C06EC7FCA6B612FCA2260F801FC7FCB2397FF0FFF0
A223237FA221>11 D<EAFFFCA40E047F8C13>45 D<1238127C12FEA3127C123807077C86
10>I<13181378EA01F812FFA21201B3A7387FFFE0A213207C9F1C>49
D<EA03FCEA0FFF383C1FC0387007E0007C13F0EAFE0314F8A21301127CEA3803120014F0
A2EB07E014C0EB0F80EB1F00133E13385BEBE018EA01C0EA0380EA0700000E1338380FFF
F05A5A5AB5FCA215207D9F1C>I<13FE3807FFC0380F07E0381E03F0123FEB81F8A3EA1F
0314F0120014E0EB07C0EB1F803801FE007F380007C0EB01F014F8EB00FCA2003C13FE12
7EB4FCA314FCEA7E01007813F8381E07F0380FFFC03801FE0017207E9F1C>I<14E01301
1303A21307130F131FA21337137713E7EA01C71387EA03071207120E120C121812381270
12E0B6FCA2380007E0A790B5FCA218207E9F1C>I<00301320383E01E0383FFFC0148014
005B13F8EA33C00030C7FCA4EA31FCEA37FF383E0FC0383807E0EA3003000013F0A214F8
A21238127C12FEA200FC13F0A2387007E0003013C0383C1F80380FFF00EA03F815207D9F
1C>I<EB1F80EBFFE03803E0703807C0F0380F01F8121F123EA2387E00F0007C1300A2EA
FC08EB7FC0EBFFE038FD80F038FF00F848137CA248137EA4127CA3003C137C123E001E13
F86C13F0380783E03803FFC0C6130017207E9F1C>I<1470A214F8A3497EA2497EA3EB06
7FA2010C7F143FA2496C7EA201307F140F01707FEB6007A201C07F90B5FC4880EB8001A2
D803007F14004880000680A23AFFE007FFF8A225227EA12A>65 D<B67E15F03907F001F8
6E7E157EA2157FA5157E15FE5DEC03F890B55AA29038F001FCEC007E811680151F16C0A6
ED3F80A2ED7F00EC01FEB612F815C022227EA128>I<D903FE138090381FFF819038FF01
E33901F8003FD803E0131F4848130F48481307121F48C71203A2481401127EA200FE91C7
FCA8127EED0180127F7E15036C6C1400120F6C6C1306D803F05B6C6C13386CB413F09038
1FFFC0D903FEC7FC21227DA128>I<B612FCA23807F000153C151C150C150EA21506140C
A31500141C143CEBFFFCA2EBF03C141C140CA21503A214001506A3150EA2151E153EEC01
FCB6FCA220227EA125>69 D<B612F8A23807F001EC007815381518151CA2150CA21418A2
1500A214381478EBFFF8A2EBF07814381418A491C7FCA8B512C0A21E227EA123>I<B538
83FFFEA23A07F0001FC0AD90B6FCA29038F0001FAFB53883FFFEA227227EA12C>72
D<B51280A23807F000B3ACB51280A211227EA115>I<B512C0A2D807F0C7FCB31518A415
38A21570A215F014011407B6FCA21D227EA122>76 D<D8FFF0EC0FFF6D5C000716E0D806
FC1437A3017E1467A26D14C7A290391F800187A290390FC00307A3903807E006A2903803
F00CA2903801F818A3903800FC30A2EC7E60A2EC3FC0A2EC1F80A3EC0F00D8FFF091B5FC
140630227EA135>I<D8FFF8EB1FFE7F0007EC00C07FEA06FF6D7E6D7E6D7E130F806D7E
6D7E6D7E130080EC7F80EC3FC0EC1FE0EC0FF0140715F8EC03FCEC01FEEC00FF157FA215
3F151F150F15071503A2D8FFF01301150027227EA12C>I<EB07FC90383FFF809038FC07
E03903F001F848486C7E4848137E48487FA248C7EA1F80A24815C0007E140FA200FE15E0
A9007E15C0007F141FA26C15806D133F001F15006C6C137E6C6C5B6C6C485A3900FC07E0
90383FFF80D907FCC7FC23227DA12A>I<B6FC15E03907F007F0EC01FC1400157EA2157F
A5157EA215FC1401EC07F090B512E0150001F0C7FCADB57EA220227EA126>I<B512FEEC
FFC03907F007F0EC01F86E7E157E157FA6157E5D4A5AEC07F090B512C05D9038F00FE06E
7E6E7E6E7EA81606EC00FEEDFF0CB538803FF8ED0FF027227EA12A>82
D<3801FE023807FF86381F01FE383C007E007C131E0078130EA200F81306A27E1400B4FC
13E06CB4FC14C06C13F06C13F86C13FC000313FEEA003F1303EB007F143FA200C0131FA3
6C131EA26C133C12FCB413F838C7FFE00080138018227DA11F>I<007FB61280A2397E03
F80F00781407007014030060140100E015C0A200C01400A400001500B3A248B512F0A222
227EA127>I<B538803FFCA23A07F0000180B3A60003EC03007F000114066C6C130E017E
5B90383F80F890380FFFE0010190C7FC26227EA12B>I<B5EB0FFEA2D807F0EB00C0A26C
6CEB0180A26D1303000115007F000014067F6D5BA2EC801C013F1318ECC038011F133014
E0010F5BA26D6C5AA214F901035B14FD6DB4C7FCA26D5AA3147CA21438A227227FA12A>
I<B53A0FFFF00FFEA2260FF00090C712E000076E14C0A26C6C90393F800180A26D14C000
01EE0300A26D496C5A0000026F1306A2017F9038C7F00CA2028113F8013F01835BA29139
C301FC38011F153016FE90260FE6005BA202FEEBFFE06D486D5AA26D486D5AA36D486DC7
FCA36D48130EA237227FA13A>I<EA0FFC383FFF80387E07C0EB03E0130114F0123C1200
A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8381FF87F3807E03F18167E951B
>97 D<B4FCA2121FABEB0FE0EB3FF8EBE07CEB803E497EEC0F80A215C0A81580141F0180
1300EBC03E381EE07C381C3FF838180FC01A237EA21F>I<EBFF80000713E0380F83F0EA
1F03123E127E387C01E090C7FC12FCA6127C127EA2003E13186C1330380FC0603807FFC0
C6130015167E9519>I<EB01FEA2EB003EABEA01FC3807FFBE380F81FE381F007E003E13
3E127E127C12FCA8127CA26C137E6C13FE380F83BE3907FF3FC0EA01FC1A237EA21F>I<
13FE3807FF80380F87C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127C
A2127E003E13186C1330380FC0703803FFC0C6130015167E951A>I<EB1FC0EB7FE0EBF1
F0EA01E31203EA07C3EBC1E0EBC000A6EAFFFEA2EA07C0B2EA3FFCA2142380A211>I<38
01FE0F3907FFBF80380F87C7381F03E7391E01E000003E7FA5001E5BEA1F03380F87C0EB
FF80D809FEC7FC0018C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48EB0F8048
1307A40078EB0F006C131E001F137C6CB45A000113C019217F951C>I<B4FCA2121FABEB
07E0EB1FF8EB307CEB403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<121C123E12
7FA3123E121CC7FCA7B4FCA2121FB2EAFFE0A20B247EA310>I<B4FCA2121FABECFF80A2
EC38001460495A495A49C7FC130E5B137E13FF13CFEB0F806D7E6D7E1301806D7E147C14
3C39FFE0FFC0A21A237EA21E>107 D<B4FCA2121FB3ADEAFFE0A20B237EA210>I<3AFF07
F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0FFE0FFE0
A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1FFC0A21A
167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137EA7007C13
7CA26C13F8381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0EB3FF838
1FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3FF8EB0FC0
90C8FCA8EAFFE0A21A207E951F>I<EBFE033807FF87380FC1C7381F006F48133F127E80
127C12FCA7127EA2003E5B6C5B380FC1DF3807FF9F3801FC1FC7FCA8ECFFE0A21B207E95
1E>I<EAFE1FEB3FC0381E67E013C71387A2381F83C090C7FCADEAFFF0A213167E9517>I<
EA0FF3EA3FFFEA781FEA6007EAE003A212F000FCC7FCEA7FE013F8EA3FFEEA0FFF120138
000F80EAC007130312E0A238F00700EAFC0EEAEFFCEAC7F011167E9516>I<487EA41203
A21207A2120F123FB5FCA2EA0F80ABEB8180A5EB8300EA07C3EA03FEEA00F811207F9F16
>I<38FF01FEA2381F003EAF147E14FE380F81BE3907FF3FC0EA01FC1A167E951F>I<39FF
E01FE0A2391F800700000F1306EBC00E0007130C13E000035BA26C6C5AA26C6C5AA2EB7C
C0A2137F6D5AA26DC7FCA2130EA21B167F951E>I<3AFFE3FF07F8A23A1F007800C09038
807C01000F1580A23A07C07E030014DE5D3903E1DF06148FD801F1138CEBF307A2D800FF
13D8EBFE0315F890387C01F0A2013C5BEB3800A225167F9528>I<39FFE07FC0A2390F80
1C006C6C5A6C6C5AEBF0606C6C5A3800F980137F6DC7FC7F80497E1337EB63E0EBC1F038
01C0F848487E3807007E000E133E39FF80FFE0A21B167F951E>I<39FFE01FE0A2391F80
0700000F1306EBC00E0007130C13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA2
6DC7FCA2130EA2130CA25B1278EAFC3813305BEA69C0EA7F80001FC8FC1B207F951E>I<
387FFFF0A2387C03E0387007C0EA600F38E01F8000C01300133E137EC65A5B485A000313
30EA07E013C0380F8070121F383F0060003E13E0EA7C03B5FCA214167E9519>I
E /Fh 61 124 df<91380FC0F8913830718E913860F31EECC0F70101EB660C9138800E00
1303A35DEB0700A490B612C090390E003800A45D5BA45D5BA44A5A1370A44A5A13E0A292
C7FC495AA238718E0638F19E0CEB1E1838620C30383C07C0272D82A21E>11
D<120C121E123FA2121D1202A31204A212081210122012401280080F75A20F>39
D<1480EB010013025B5B5B13305B5BA2485A48C7FCA21206A2120E120C121C1218A21238
1230A21270A21260A212E0A35AAD12401260A21220123012107E113278A414>I<13087F
130613021303A27F1480AD1303A31400A25BA21306A2130E130CA2131C131813381330A2
5BA25B485AA248C7FC120612045A5A5A5A5A113280A414>I<120E121EA41202A21204A2
1208A21210122012401280070F7D840F>44 D<EAFFF0A213E00C037C8B11>I<127012F8
A212F012E005057A840F>I<EB0F80EB30C0EBE0603801C070EA038013005A5A120E121E
A2001C13F0123CA3387801E0A438F003C0A31480EAE007A214005B130E5BA25BEA60706C
5A001FC7FC14227AA019>48 D<13011303A21306131E132EEA03CEEA001CA41338A41370
A413E0A4EA01C0A4EA0380A41207EAFFFC10217AA019>I<EB0FC0EB1060EB6038EB8018
141CEA01003802201E13101204A33808203CA2EB40381478EB80F0380700E0380001C0EB
030013061318132013C048C7FC1202481310481330481320481360385F80C0EA63FF0040
138038807F00131E17227CA019>I<EB0FC0EB3070EBC0183801001C120248130CEB401C
EA0820A3EB403813C038070070C71260EB01C0EB070013FC1307EB0380A2EB01C0A31303
126012F01480EAE00700801300130E5BEA4038EA20F0EA1F8016227BA019>I<14181438
A21470A314E0A314C01301148013031400A21306A25BA25B1310EB3180EB61C0EB438013
831201EA03033802070012041208EA3FC7EA403E38800FF038000E00A25BA45BA3133015
2B7EA019>I<EB4004EB7038EBFFF014E0EBBF80EB800048C7FCA41202A2133E13C33805
0180000613C01204000013E0A6387003C012F0A238E00780008013005B130EEA401C5BEA
30E0EA0F8016227BA019>I<380278023804FC041207000F1308EB0C18381E0470381803
A03830006000201340006013C000401380EA8001EA000314005B1306130EA25BA2133C13
381378A25BA3485AA312035BA26C5A172279A019>55 D<EB0FC0EB3060EB4010EB801838
01000848130CA2481318A21410EB8030EBC060EBE0C03803F100EA01FE6C5A7FEA033F38
061F80380C0FC0EA1803EA3001126013005AA214801301140013021306EA6008EA3030EA
0FC016227BA019>I<EB0FC0EB3860EB603013E03801C038EA0380120713005AA3001E13
78A314F814F0121CEA0E011302380605E0EA0309EA01F1380003C0A21480EB0700A2EA60
0EEAF00C5B485AEA8060EA41C0003FC7FC15227BA019>I<1403A25CA25CA25C142FA2EC
4F80A21487A2EB01071302A21304A21308131813101320A290387FFFC0EB40031380EA01
00A21202A25AA2120C003CEB07E0B4EB3FFC1E237DA224>65 D<027F1380903903808100
90380E00630138132749131F49130E485A485A48C7FC481404120E121E5A5D4891C7FCA3
5AA55A1520A25DA26C5C12704AC7FC6C130200185B001C5B00061330380381C0D800FEC8
FC212479A223>67 D<90B512F090380F003C150E81011EEB0380A2ED01C0A25B16E0A35B
A449EB03C0A44848EB0780A216005D4848130E5D153C153848485B5DEC03804AC7FC000F
131CB512F023227DA125>I<90B6128090380F00071501A2131EA21600A25BA2140192C7
FCEB7802A21406140EEBFFFCEBF00CA33801E008A21504EC0008485AA25DA248485B1560
5D1401380F0007B65A21227DA121>I<90B6FC90380F000F1503A2131EA21502A25BA214
011500EB7802A21406140EEBFFFCEBF00CA33801E008A391C7FC485AA4485AA4120FEAFF
F820227DA120>I<027F138090390380810090380E00630138132749131F49130E485A48
5A48C7FC481404120E121E5A5D4891C7FCA35AA4EC3FFC48EB01E0A34A5AA27E12704A5A
7E0018130F001C131300060123C7FC380381C1D800FEC8FC212479A226>I<9039FFF87F
FC90390F000780A3011EEB0F00A449131EA4495BA490B512F89038F00078A348485BA448
48485AA44848485AA4000F130739FFF07FF826227DA124>I<EBFFF8EB0F00A3131EA45B
A45BA45BA4485AA4485AA4485AA4120FEAFFF015227DA113>I<903807FFC09038003C00
A35CA45CA4495AA4495AA4495AA449C7FCA212381278EAF81EA2485AEA40385BEA21E0EA
1F801A237CA11A>I<EBFFFCEB0F8091C7FCA2131EA45BA45BA45BA4485AA21520A24848
1340A21580A23807800115005C140F000F133EB512FE1B227DA11F>76
D<D9FF80EB07FC010FEC0F801617A20117EC2F00EB13C0164F168F0123149EED011EA215
020143495AA21508EB41E00181495A1520A21540D801015C1580ECE100A23A0200F201E0
A214F414F8484A5A14F0A2000C13E0001EEBC007D8FF80EB7FF82E227DA12C>I<01FFEB
0FFC90390F8001E01680ECC0000113EB0100A2EB11E0A201211302EB20F0A39038407804
A3143C01805B143E141EA23901001F10140FA2EC0790000214A0A2EC03E0A2485C1401A2
120C001E6D5AB47E26227DA124>I<14FE903807838090380C00E0013813704913385B48
48131C485A48C7FC48141E121E121C123CA25AA348143CA31578A25A15F0A2EC01E015C0
6C1303EC0780007014000078130E00385B6C5B6C13E038070380D801FCC7FC1F2479A225
>I<90B512E090380F0038151E150E011E1307A449130FA3151E5B153C157815E09038F0
03C09038FFFE0001F0C7FCA2485AA4485AA4485AA4120FEAFFF020227DA121>I<90B512
C090380F0070153C151C011E130EA2150FA249131EA3153C4913381570EC01E0EC078090
38FFFC00EBF00E80EC0380D801E013C0A43903C00780A43907800F001501A2EC0702120F
39FFF0038CC812F020237DA124>82 D<903801F02090380E0C4090381802C0EB30011360
01E0138013C01201A200031400A291C7FCA27FEA01F813FF6C13E06D7EEB1FF8EB03FCEB
007C143C80A30020131CA3141800601338143000705B5C38C80180D8C607C7FCEA81FC1B
247DA21B>I<001FB512F8391E03C03800181418123038200780A200401410A2EB0F0012
80A200001400131EA45BA45BA45BA4485AA41203B5FC1D2277A123>I<393FFE03FF3903
C000781560152048481340A448C71280A4001EEB0100A4481302A4485BA400705B12F05C
12705C5C123038380180D81802C7FCEA0E0CEA03F0202377A124>I<39FFF001FF001FC7
127815306C146015401580A2EC0100A214025C13805C12075C5CA25CA25C0181C7FCA213
C2120313C413C8A213D0A213E05BA25B120190C8FC202376A124>I<3BFFE07FF00FF83B
1F000F8003C0001E913800018017001602A2001F5DA26C495BA2022F5BA291384F802002
475B14875EEB010701030181C7FC130201041382A201081384158C011013881590132001
A013A013C0D8078013C0A201005BA2000691C8FC140212042D2376A131>I<EBF8C0EA01
85EA0705380E0380A2121C123C383807001278A3EAF00EA31410EB1C201270133C38305C
40138C380F078014157B9419>97 D<EA03C0EA1F801203A3EA0700A4120EA45A13F8EA1D
0CEA1E0EEA3C06EA3807A2130F1270A4EAE01EA3133C1338A2EA607013E0EA31C0EA1F00
10237BA216>I<137EEA01C138030180EA0703EA0E07121C003CC7FC12381278A35AA45B
12701302EA300CEA1830EA0FC011157B9416>I<143CEB03F8EB0038A31470A414E0A4EB
01C013F9EA0185EA0705380E0380A2121C123C383807001278A3EAF00EA31410EB1C2012
70133C38305C40138C380F078016237BA219>I<13F8EA0384EA0E02121C123C1238EA78
04EAF018EAFFE0EAF000A25AA41302A2EA6004EA7018EA3060EA0F800F157A9416>I<14
3E144714CFEB018F1486EB0380A3EB0700A5130EEBFFF0EB0E00A35BA55BA55BA55BA45B
1201A2EA718012F100F3C7FC1262123C182D82A20F>I<EB1F18EB30B813E03801C070A2
EA03801207EB00E05AA3381E01C0A4EB0380120E1307EA060BEB1700EA01E7EA0007A213
0EA3EA701CEAF0185BEA60E0EA3F80151F7E9416>I<13F0EA0FE01200A3485AA4485AA4
48C7FC131FEB2180EBC0C0380F00E0A2120EA2381C01C0A438380380A3EB070400701308
130E1410130600E01320386003C016237DA219>I<13C0EA01E013C0A2C7FCA8121E1223
1243A25AA3120EA25AA35AA21340EA7080A3EA71001232121C0B217BA00F>I<13F0EA07
E01200A3485AA4485AA448C7FCEB01E0EB0210EB0470380E08F01310EB2060EB4000EA1D
80001EC7FCEA1FC0EA1C70487EA27F142038703840A3EB188012E038600F0014237DA216
>107 D<EA01E0EA0FC01201A3EA0380A4EA0700A4120EA45AA45AA45AA3127112E2A412
6412380B237CA20C>I<391C0F80F8392610C10C39476066063987807807A2EB0070A200
0EEBE00EA44848485AA3ED38202638038013401570168015303A7007003100D83003131E
23157B9428>I<38380F80384C30C0384E4060388E8070EA8F00128EA24813E0A4383801
C0A3EB03840070138814081307EB031012E0386001E016157B941B>I<137EEA01C33803
8180380701C0120E001C13E0123C12381278A338F003C0A21480130700701300130E130C
EA3018EA1870EA07C013157B9419>I<3801C1F0380262183804741C3808780CEB700EA2
141EEA00E0A43801C03CA3147838038070A2EBC0E0EBC1C038072380EB1E0090C7FCA212
0EA45AA3EAFFC0171F7F9419>I<EBF840380184C0EA0705380E0380A2121C123C383807
001278A3EAF00EA45B1270133CEA305C5BEA0F381200A25BA45BA3EA0FFC121F7B9416>
I<EA1C1F38262080384741C0EA87831303EB018090C7FC120EA45AA45AA45A123012157B
9415>I<13FCEA018338020080EA0401EA0C03140090C7FC120F13F0EA07FC6C7EEA003E
130F7F1270EAF006A2EAE004EA4008EA2030EA1FC011157D9414>I<13C01201A4EA0380
A4EA0700EAFFF8EA0700A2120EA45AA45AA31310EA7020A213401380EA3100121E0D1F7C
9E10>I<001E1360002313E0EA4380EB81C01283EA8701A238070380120EA3381C0700A3
1408EB0E101218121CEB1E20EA0C263807C3C015157B941A>I<381C0180382603C0EA47
071303EA8701EA8E00A2000E13805AA338380100A31302A25B5B1218EA0C30EA07C01215
7B9416>I<001EEB60E00023EBE0F0384380E1EB81C000831470D887011330A239070380
20120EA3391C070040A31580A2EC0100130F380C0B02380613843803E0F81C157B9420>
I<3803C1E0380462103808347038103CF0EA203814601400C65AA45BA314203861C04012
F1148038E2C100EA4462EA383C14157D9416>I<001E133000231370EA438014E01283EA
8700A2380701C0120EA3381C0380A4EB0700A35BEA0C3EEA03CEEA000EA25B1260EAF038
1330485AEA80C0EA4380003EC7FC141F7B9418>I<B512FC16017C8C19>123
D E /Fi 81 124 df<90381FC1F090387037189038C03E3C3801807C0003137839070038
00A9B612C03907003800B2143C397FE1FFC01E2380A21C>11 D<EB1FC0EB7020EBC01038
01803800031378EA0700143091C7FCA7B512F8380700781438B2397FE1FF80192380A21B
>I<EB1FD8EB7038EBC078EA0180120338070038A9B512F838070038B3397FF3FF801923
80A21B>I<90380FC07F90397031C0809039E00B00402601801E13E00003EB3E01380700
3C91381C00C01600A7B712E03907001C011500B23A7FF1FFCFFE272380A229>I<ECC018
A349485AA449485AA501065BA449485AB712C0A226001803C7FCA4EB3006A4B712C0A226
00600CC7FC495AA448485AA448485AA400065BA3222D7DA229>35
D<D80780130CEA18406D5B486C1370D8701C13B0396013FF6038E008005D4A5AA24AC7FC
1406A25C38601018127000305BEA1820495A390780C03CC7134290380180C19038030181
9138038080010613001640495A1318A213301360A213C048487E1680D803001380913801
81000006EB00C14814420004143C22287DA429>37 D<127012F812FCA212741204A41208
A21210A212201240060F7CA20E>39 D<132013401380EA01005A12061204120CA25AA25A
A312701260A312E0AE1260A312701230A37EA27EA2120412067E7EEA0080134013200B32
7CA413>I<7E12407E7E12187E12041206A27EA2EA0180A313C01200A313E0AE13C0A312
011380A3EA0300A21206A21204120C5A12105A5A5A0B327DA413>I<497EB0B612FEA239
00018000B01F227D9C26>43 D<127012F812FCA212741204A41208A21210A21220124006
0F7C840E>I<EAFFF8A20D02808B10>I<127012F8A3127005057C840E>I<14801301A2EB
0300A31306A35BA35BA35BA35BA35BA3485AA448C7FCA31206A35AA35AA35AA35AA35AA3
11317DA418>I<EA01F0EA071CEA0C06487E00381380A2387001C0A400F013E0AE007013
C0A3EA780300381380A2381C0700EA0C06EA071CEA01F013227EA018>I<13801203120F
12F31203B3A9EA07C0EAFFFE0F217CA018>I<EA03F0EA0C1CEA100700201380384003C0
A2008013E012F0EAF801A3EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7
FC000213205A5A00181360481340383FFFC05AB5FC13217EA018>I<EA03F8EA0C1EEA10
0F38200780004013C0127813031307123800001380A214005B130C1338EA03F0EA001C13
0FEB0780A2EB03C0A214E01220127012F8A200F013C01240EB0780122038100F00EA0C1C
EA03F013227EA018>I<1303A25BA25B1317A21327136713471387120113071202120612
041208A212101220A2124012C0B512F838000700A7EB0F80EB7FF015217FA018>I<0010
1380381E0700EA1FFF5B13F8EA17E00010C7FCA6EA11F8EA120CEA1C0738180380121038
0001C0A214E0A4127012F0A200E013C01280EA4003148038200700EA1006EA0C1CEA03F0
13227EA018>I<137EEA01C138030080380601C0EA0C03121C381801800038C7FCA21278
1270A2EAF0F8EAF30CEAF4067F00F81380EB01C012F014E0A51270A3003813C0A2381803
80001C1300EA0C06EA070CEA01F013227EA018>I<12401260387FFFE014C0A238400080
38C0010012801302A2485A5BA25B5BA21360134013C0A21201A25B1203A41207A76CC7FC
13237DA118>I<EA01F8EA060EEA0803381001801220386000C0A31270A238780180003E
1300EA3F02EA1FC4EA0FF812036C7EEA067EEA083F38100F80383007C0EA6003EB00E05A
1460A40060134014C06C138038180300EA0E0EEA03F013227EA018>I<EA01F0EA060C48
7EEA1807383803801270A238F001C0A314E0A5127013031238EA1805120CEA0619EA03E1
380001C0A3EB0380A21230387807001306EA700CEA20186C5AEA0FC013227EA018>I<12
7012F8A312701200AB127012F8A3127005157C940E>I<127012F8A312701200AB127012
F8A312781208A41210A312201240A2051F7C940E>I<497EA3497EA3EB05E0A2EB09F013
08A2EB1078A3497EA3497EA2EBC01F497EA248B51280EB0007A20002EB03C0A348EB01E0
A348EB00F0121C003EEB01F839FF800FFF20237EA225>65 D<B512F8380F800E0007EB07
80EC03C015E0140115F0A515E01403EC07C0EC0F80EC3E00EBFFFE9038800780EC03C0EC
01E015F0140015F8A6EC01F0A2EC03E0EC07C0000FEB0F00B512FC1D227EA123>I<9038
07E0109038381830EBE0063901C0017039038000F048C7FC000E1470121E001C1430123C
A2007C14101278A200F81400A812781510127C123CA2001C1420121E000E14407E6C6C13
803901C001003800E002EB381CEB07E01C247DA223>I<B512F0380F801E00071307EC03
80EC01C0EC00E015F01578A2157C153CA3153EA9153CA2157C1578A215F015E01401EC03
C0EC0700000F131EB512F01F227EA125>I<B612C0380F80070007130114001540A21560
1520A314201500A3146014E013FF138014601420A315081400A21510A31530A2157015E0
000F1303B6FC1D227EA121>I<B612C0380F80070007130114001540A215601520A31420
1500A3146014E013FF138014601420A491C7FCA9487EEAFFFE1B227EA120>I<903807F0
0890383C0C18EBE0023901C001B839038000F848C71278481438121E15185AA2007C1408
1278A200F81400A7EC1FFF0078EB00F81578127C123CA27EA27E7E6C6C13B86C7E3900E0
031890383C0C08903807F00020247DA226>I<39FFFC3FFF390FC003F039078001E0AE90
B5FCEB8001AF390FC003F039FFFC3FFF20227EA125>I<EAFFFCEA0FC0EA0780B3ACEA0F
C0EAFFFC0E227EA112>I<3803FFE038001F007FB3A6127012F8A2130EEAF01EEA401C6C
5AEA1870EA07C013237EA119>I<D8FFFCEBFF80D80FC0EB7C006C48133015205D5D4AC7
FC14025C5C5C5C5C5CEB81C0EB83E01385EB88F01390EBA078EBC03C13808080A26E7E81
14036E7EA26E7E81486C7F3AFFFC07FF8021227EA126>I<EAFFFCEA1F806CC7FCB3A214
01A41403A214021406A2141E48137EB512FE18227DA11E>I<D8FFC0EB03FF000F15F000
0715E0D805E01305A2D804F01309A301781311A36D1321A36D1341A26D1381A390380781
01A3EB03C2A2EB01E4A3EB00F8A31470120E001FEC03F03AFFE0203FFF28227EA12D>I<
39FF8007FF3907C000F81570D805E01320EA04F0A21378137C133C7F131F7FEB0780A2EB
03C0EB01E0A2EB00F014F81478143C143E141E140FA2EC07A0EC03E0A21401A21400000E
1460121FD8FFE0132020227EA125>I<EB0FE0EB783CEBE00E3903C0078039078003C039
0F0001E0000E1300001E14F0481478A2007C147CA20078143CA200F8143EA90078143C00
7C147CA2003C1478003E14F8001E14F06CEB01E0A239078003C03903C007803900E00E00
EB783CEB0FE01F247DA226>I<B512F0380F803C0007130FEC078015C0140315E0A615C0
14071580EC0F00143CEBFFF00180C7FCAE487EEAFFFC1B227EA121>I<EB0FE0EB783CEB
E00E3903C0078039078003C0390F0001E0000E1300001E14F0003E14F8003C1478007C14
7CA20078143CA200F8143EA90078143C007C147CA2003C1478A2391E0380F0390E0420E0
380F080139078813C03903C817803900E80E0090387C3C02EB0FECEB000CA2EC0E06EC0F
0EEC07FCA215F81403EC01E01F2D7DA226>I<B512E0380F803C0007130E6E7E81140381
A55D14075D020EC7FC143CEBFFE0EB80708080141E140E140FA481A3168015C014073A0F
C003C10039FFFC01E2C8127C21237EA124>I<3803F020380C0C60EA1802383001E0EA70
000060136012E0A21420A36C1300A21278127FEA3FF0EA1FFE6C7E0003138038003FC0EB
07E01301EB00F0A214707EA46C1360A26C13C07E38C8018038C60700EA81FC14247DA21B
>I<007FB512F839780780780060141800401408A300C0140C00801404A400001400B3A3
497E3801FFFE1E227EA123>I<39FFFC07FF390FC000F86C4813701520B3A5000314407F
A2000114806C7E9038600100EB3006EB1C08EB03F020237EA125>I<D8FFF0EB7FC0D81F
80EB1F006CC7120C7F00071408A26C6C5BA36C6C5BA26D136000001440A201785BA2137C
D93C01C7FCA2EB1E02A36D5AA2148CEB0788A2EB03D0A214F06D5AA26D5AA322237FA125
>I<3BFFF03FFC03FE3B1F8007E000F86C486C48137017206E7ED807801540A24A7E2603
C0021480A39039E004780100011600A2EC083CD800F01402A2EC101E01785CA2EC200F01
3C5CA20260138890391E400790A216D090391F8003F0010F5CA2EC00016D5CA201061300
01025C2F237FA132>I<397FF803FF390FE001F83907C000E06C6C5B00015CEBF001D800
F890C7FCEB7802EB7C04133EEB1E08EB1F10EB0FB0EB07A014C06D7E130180497EEB0278
EB047CEB0C3EEB081EEB101F496C7E140701407F496C7E1401D801007F486D7E5AD81F80
7F3AFFC003FFC022227FA125>I<D8FFF0EB7FC0D81F80EB1F00000F140C000714087F00
035C6C6C5B7F00005C6D13C0017C5BD93C01C7FC133EEB1E02EB1F06EB0F84EB078814D8
EB03D014E01301AC1303EB3FFE22227FA125>I<387FFFFE387E003E0078133C00701378
1260004013F012C0EB01E0388003C0A2EB07801200EB0F005B131E5BA25BA25B1201EBE0
01EA03C0A2EA07801403EA0F00001E1302A2481306140E48131E00F8137EB512FE18227D
A11E>I<12FEA212C0B3B3A912FEA207317BA40E>I<12FEA21206B3B3A912FEA207317FA4
0E>93 D<EA1FE0EA3038EA780C130EEA30071200A313FFEA07C7EA1E07123C1278127000
F01308A3130FEA7817383C2390380FC1E015157E9418>97 D<120E12FE121E120EAB131F
EB61C0EB8060380F0030000E1338143C141C141EA7141C143C1438000F1370380C8060EB
41C038083F0017237FA21B>I<EA01FEEA0703380C0780121C383803000078C7FC127012
F0A712700078134012386C1380380C0100EA0706EA01F812157E9416>I<14E0130F1301
1300ABEA01F8EA0704EA0C02EA1C01EA38001278127012F0A7127012781238EA1801EA0C
0238070CF03801F0FE17237EA21B>I<EA01FCEA0707380C0380381C01C01238007813E0
EA700012F0B5FC00F0C7FCA512700078132012386C13406C138038070300EA00FC13157F
9416>I<133E13E33801C780EA0387130748C7FCA9EAFFF80007C7FCB27FEA7FF0112380
A20F>I<14703803F198380E1E18EA1C0E38380700A200781380A400381300A2EA1C0EEA
1E1CEA33F00020C7FCA212301238EA3FFE381FFFC06C13E0383000F0481330481318A400
601330A2003813E0380E03803803FE0015217F9518>I<120E12FE121E120EABEB1F80EB
60C0EB80E0380F0070A2120EAF38FFE7FF18237FA21B>I<121C123EA3121CC7FCA8120E
127E121E120EB1EAFFC00A227FA10E>I<13E0EA01F0A3EA00E01300A81370EA07F01200
1370B3A51260EAF0E013C0EA6180EA3F000C2C83A10F>I<120E12FE121E120EABEB03FC
EB01F014C01480EB02005B5B5B133813F8EA0F1CEA0E1E130E7F1480EB03C0130114E0EB
00F014F838FFE3FE17237FA21A>I<120E12FE121E120EB3ADEAFFE00B237FA20E>I<390E
1FC07F3AFE60E183803A1E807201C03A0F003C00E0A2000E1338AF3AFFE3FF8FFE27157F
942A>I<380E1F8038FE60C0381E80E0380F0070A2120EAF38FFE7FF18157F941B>I<EA01
FCEA0707380C0180381800C0003813E0481370A200F01378A700701370007813F0003813
E0381C01C0380E038038070700EA01FC15157F9418>I<EA0E1F38FE61C0380E8060380F
0070000E1338143CA2141EA7143CA21438000F1370380E80E0EB41C0EB3F0090C7FCA9EA
FFE0171F7F941B>I<3801F82038070460EA0E02EA1C01003813E0EA7800A25AA71278A2
EA3801121CEA0C02EA070CEA01F0C7FCA9EB0FFE171F7E941A>I<EA0E3CEAFE46EA1E8F
EA0F0F13061300120EAD120FEAFFF010157F9413>I<EA0F88EA3078EA601812C01308A2
12E0EAF000127FEA3FE0EA0FF0EA01F8EA003CEA801C130CA212C01308EAE018EAD030EA
8FC00E157E9413>I<1202A41206A3120E121E123EEAFFFCEA0E00AB1304A6EA07081203
EA01F00E1F7F9E13>I<000E137038FE07F0EA1E00000E1370AD14F0A238060170380382
783800FC7F18157F941B>I<38FF80FE381E00781430000E1320A26C1340A2EB80C00003
1380A23801C100A2EA00E2A31374A21338A3131017157F941A>I<39FF8FF87F393E01E0
3C001CEBC01814E0000E1410EB0260147000071420EB04301438D803841340EB8818141C
D801C81380EBD00C140E3900F00F00497EA2EB6006EB400220157F9423>I<38FF83FE38
1F00F0000E13C06C1380EB8100EA0383EA01C2EA00E41378A21338133C134E138FEA0187
EB0380380201C0000413E0EA0C00383E01F038FF03FE17157F941A>I<38FF80FE381E00
781430000E1320A26C1340A2EB80C000031380A23801C100A2EA00E2A31374A21338A313
10A25BA35B12F05B12F10043C7FC123C171F7F941A>I<383FFFC038380380EA30070020
1300EA600EEA401C133C1338C65A5B12015B38038040EA07005A000E13C04813805AEA78
01EA7007B5FC12157F9416>I<B512FE1701808C18>I E /Fj 16
119 df<127012F812FCA212741204A41208A21210A212201240060F7A8410>44
D<127012F8A312701200AB127012F8A3127005157A9410>58 D<144014E0A3497EA2497E
EB0278A2497EA3497EA2497EA3496C7EA201407F1403A290B57EA239018001F090C7FCA2
00021478A34880A2001E143E3AFFC003FFE0A223237DA229>65 D<903803F80290381FFF
0690387E03863901F000CE4848133ED80780131E48C7FC48140E001E1406123E123C007C
1402A2127800F81400A81278007C1402A2123C123E001E1404121F6C14086C6C1318D803
E013306C6C136039007E03C090381FFF00EB03FC1F247CA227>67
D<007FB6FCA2397801E00F0060140381124000C01580A200801400A400001500B3A290B5
12C0A221227DA127>84 D<B57E381E01E0EB0070808080A280A21580A81500A25C140E5C
5C5C495AB51280191A7E991F>100 D<B512F8381E007814181408140C1404A3EB0200A3
1306EA1FFEEA1E061302A3EB0002A314061404A2140C143CB512FC171A7E991C>I<39FF
C1FF80391E003C00AB381FFFFC381E003CAC39FFC1FF80191A7E991F>104
D<EAFFC0EA1E00B3A6EAFFC00A1A7E990F>I<00FEEB01FE001E14F0A200171302A23813
8004A33811C008A23810E010A3EB7020A3EB3840A2EB1C80A3EB0F00A21306123800FEEB
07FE1F1A7E9925>109 D<EB7F803801C0E038070038000E7F487F003C130F00387F0078
148000701303A200F014C0A70078EB0780A200381400003C5B001C130E6C5B6C5B3801C0
E038007F801A1A7E9920>111 D<B5FC381E01E0EB007014781438143CA4143814781470
EB01E0381FFF00001EC7FCABEAFFC0161A7E991C>I<EAFFFE381E03C0EB00E0801478A5
5C5CEB03C0D81FFEC7FC381E0380EB01E0130080A615401470EC388039FFC01F001A1A7E
991E>114 D<EA07E1EA181BEA3007487EA2EAE001A36CC7FC12FCEA7F80EA3FF86C7E6C
7EC67E131FEB0780A2EA8003A300C013005BEAE006EADC0CEA83F0111A7E9917>I<007F
B5FC38701E0700601301124000C0148000801300A300001400B0133F3803FFF0191A7F99
1D>I<39FFC00FE0393F000380001E14007E1402138000075BA26C6C5AA2EBE018000113
10A26C6C5AA2EB7840A2137CEB3C80A2011FC7FCA3130EA213041B1A7F991F>118
D E /Fk 24 118 df<140CA3141EA2143FA3EC4F80A2ECCFC01487A290380103E0A39038
0201F0A201047F1400A249137CA3497FA2013FB5FCA2903820001F496D7EA201C0804913
07A248C76C7EA300026E7E1207D81F80497ED8FFF090383FFFC0A22A2A7DA931>65
D<B612C015F83907E000FE0003141FED07C06F7E6F7E6F7EA2167CA282A2163F82A21780
A91700A35E163EA25E167816F84B5A4B5A4B5AED1F80000702FEC7FCB612F815C029297C
A832>68 D<B7FCA23907E0003F00031407ED03801501A21500A416405CA21600A25CA214
0F90B5FCA2EBE00F1403A280A491C8FCAA487EB512C0A222297CA82B>70
D<B67E15F03907E001FC0003EB003E81ED0F8016C0150716E0A616C0150F1680ED1F0015
3EEC01F890B512E001E0C8FCB1487EB57EA223297CA82C>80 D<B512FEECFFC03907E003
F00003EB00FC153E8182150F82A65E4BC7FC151E5D15F8EC03E0D9FFFEC8FC9038E00780
EC01E06E7E1578157C153C153EA4153FA417401680151F486C010F1380B5388007C09238
03E100C912FE2A2A7CA830>82 D<017F13403903FFE0C0380780F0380E00194813074813
0300781301127000F01300A315407EA2007C1400127EEA7F80EA3FF06CB47E6C13F06C13
FC00017F38003FFF010313809038003FC0EC0FE0140315F014017E1400A37E15E07E1401
6C14C06CEB038000E6EB070038C3E01E38C0FFF838801FE01C2B7CA925>I<007FB612FE
A23A7C003E003E0070150E006015061602124000C01503A2481501A5C71400B3A6147F90
383FFFFEA228297DA82F>I<5B497EA3497EA2EB09E0A3EB10F0A2EB2078A3497EA2497E
A348B5FCA23902000780A348EB03C0A2000CEB01E0A2003C14F0B4EB0FFEA21F1F7E9E25
>97 D<B512F014FC380F003E140F1580EC07C0A51580140FEC1F00143EEBFFF8EB003C14
0FEC078015C0140315E0A5EC07C0A2EC0F80EC3F00B512FE14F81B1F7D9E23>I<B512E0
14F8380F007E140FEC0780EC03C0A2EC01E015F01400A215F8A915F0A2140115E0140315
C0EC0780EC0F00143EB512F814E01D1F7D9E25>100 D<B61280A2380F00071403140114
0015C01540A21440A2150014C0130113FFA21301130014401520A214001540A315C0A214
01EC0F80B6FCA21B1F7D9E21>I<B6FCA2380F000F1403A28015801400A21480A21500A2
130113FFA213011300A491C7FCA77FEAFFF8A2191F7D9E20>I<90380FE01090387FFC30
9038FC0E703803E00339078000F048C71270121E003E1430123C007C1410A2127800F814
00A6EC3FFE1278007CEB01F01400123C123E121E7E6C7E3803E0013900FC077090387FFE
3090380FF0101F1F7D9E26>I<39FFF07FF8A2390F000780AC90B5FCA2EB0007AD39FFF0
7FF8A21D1F7D9E25>I<EAFFF0A2EA0F00B3A9EAFFF0A20C1F7E9E12>I<EAFFF8A2EA0F80
90C7FCB01401A41403A214021406140E143EB512FEA2181F7D9E1F>108
D<B4EC0FF8A2000F1580D80B801317A2D809C01327A3D808E01347A201701387A3903838
0107A2EB1C02A3EB0E04A3EB0708A2EB0390A3EB01E0120C383E00C0D8FF80EB7FF8A225
1F7D9E2D>I<B4EB0FF81380000FEB03E0390BC00080EA09E0A2EA08F01378A27F7FA27F
EB0780A2EB03C0EB01E0A2EB00F01478A2143C141EA2140F1407A21403003E1301EAFF80
14001D1F7D9E25>I<EB1FE0EB70383801C00E48487E390F0003C0000E1301001E14E048
EB00F0A2007C14F800781478A200F8147CA8007C14F8A2003C14F0A26CEB01E0001F1303
6C14C039078007803901C00E0038007038EB1FE01E1F7D9E26>I<EB1FE0EB70383801C0
0E48487E390F0003C0000E1301001E14E048EB00F0A2007C14F800781478A200F8147CA8
00781478007C14F8003C14F0A2391E0781E0EB0841390F1023C039079027803901D01E00
3800783890381FF804EB0018141CEC0C0CEC0E1CEC0FF8A2140715F0EC01E01E287D9E26
>113 D<B57E14F0380F00FC143E80801580A51500141E5C14F0EBFFC01301EB0070A280
143CA3143EA31502143F141F39FFF00F8CEC03F01F1F7D9E24>I<3803F040380FFCC0EA
1C0FEA3003EA7001EA600000E01340A36C1300A21278EA7F80EA3FF8EA1FFE380FFF8000
0113C038001FE01303EB00F0A214707EA36C136014E038F001C038FC078038CFFF00EA81
FC141F7D9E1B>I<007FB512F0A2387807800060143000401410A200C0141800801408A4
00001400B1497E3801FFFEA21D1F7E9E23>I<39FFF00FF8A2390F0003E0EC0080B3A339
07800100A2000313026C6C5A3800F038EB3FF0EB0FC01D1F7D9E25>I
E /Fl 46 123 df<121C127FA2EAFF80A3EA7F00A2121C09097B8813>46
D<130E131E137EEA07FE12FFA212F81200B3ABB512FEA317277BA622>49
D<EBFF80000713F04813FC381E03FE393800FF80007C133F00FE14C06C131F15E0140FA2
127E003C131FC7FC15C0A2EC3F801500147E5C5C495A495AEB078049C7FC131E4913E013
705B3901C001C0EA0380EA0600000FB5FC5A5A5AB61280A31B277DA622>I<EB7F803803
FFF04813FC380F81FE381F007FEA3F80EC3F80A3121F1300C7EA7F00A2147E5C495AEB07
F0EBFFC0A2EB01F8EB007E801580EC1FC0A215E0A2123C127EB4FCA215C0143F48148000
7CEB7F00383F01FE6CB45A000713F0C613801B277DA622>I<140FA25C5C5C5C5BA2EB03
BFEB073F130E131C133C1338137013E0EA01C0EA038012071300120E5A5A5A12F0B612F8
A3C7EA7F00A890381FFFF8A31D277EA622>I<00181303381F801FEBFFFE5C5C5C14C091
C7FC001CC8FCA7EB7FC0381DFFF8381F80FC381E003F1208C7EA1F8015C0A215E0A21218
127C12FEA315C05A0078EB3F80A26CEB7F00381F01FE6CB45A000313F0C613801B277DA6
22>I<EB07F8EB3FFE90B5FC3901FC07803903F00FC03807C01FEA0F80121F130048EB0F
8091C7FC127EA3EAFE02EB1FF0EB3FFCEB603EEB801F00FF14809038000FC0A24814E0A4
127EA4123E003F14C07EEC1F80D80F8013003807E07E6CB45A6C5B38003FC01B277DA622
>I<EB3FC03801FFF04813FC3807C07E48C67E001E7FEC0F80123EA2123F138001C01300
EBF01F381FFC1E6D5A380FFFF86C13E06C7F6C13FC8000077FD80F0F1380D81E0713C0EA
3E01397C007FE0141F48130F14071403A315C0127C007EEB07806CEB0F00381FC03F380F
FFFC00035B38007FC01B277DA622>56 D<EC0780A24A7EA34A7EA24A7EA3EC77F8A2ECF7
FC14E3A2903801C1FEA201037F1480A249486C7EA24980010E133FA2496D7EA2013FB57E
A39039700007F8A201F080491303000181491301A2000381D8FFFE013F13FCA32E297EA8
33>65 D<B612F815FF16C03A03F8001FE0ED0FF0ED07F8150316FCA21501A3150316F8A2
ED07F0150FED1FC0EDFF8090B5EAFE00EDFFC09039F8000FF0ED03F8ED01FC16FE1500A2
16FFA616FE1501ED03FC1507ED1FF8B712E016C0EDFE0028297DA830>I<91387FE00390
3907FFFC07011FEBFF0F90397FF00F9F9039FF0001FFD801FC7F4848147F4848143F4848
141F485A160F485A1607127FA290C9FC5AA97E7F1607123FA26C7E160E6C7E6C6C141C6C
6C143C6C6C14786CB4EB01F090397FF007C0011FB512800107EBFE009038007FF028297C
A831>I<B712E0A33903FC001FED07F01501A215001670A3913801C0781638A302031300
A2140F90B5FCA3EBFC0F1403A20201130EA3161C91C7FCA3163C1638167816F815011503
151FB712F0A327297EA82C>69 D<B712C0A33903FC003FED0FE015031501A21500A316F0
913801C070A316001403A2140F90B5FCA3EBFC0F1403A21401A491C8FCA9B512FCA32429
7EA82A>I<B5D8F00FB5FCA3D803FCC7EA3FC0AF90B7FCA301FCC7123FB1B5D8F00FB5FC
A330297EA835>72 D<B512F0A33803FC00B3B1B512F0A314297EA819>I<D8FFFE92383F
FF80A26D5D0003EFE000A2D9BF8014EFA2D99FC0EB01CFA2D98FE0EB038FA3D987F0EB07
0FA2D983F8130EA2D981FC131CA3D980FE1338A2027F1370A291383F80E0A391381FC1C0
A291380FE380A2913807F700A3EC03FEA26E5AA26E5AD8FFFE0203B51280A2157039297D
A840>77 D<ECFFC0010F13FC90383F807F9039FE001FC0D801F8EB07E048486D7E48486D
7E000F8148486D7EA24848147FA2007F168090C8123FA34816C0AA6C16806D147FA2003F
1600A26C6C14FEA26C6C495A6C6C495A6C6C495A6C6C495A6C6C495A90263FC0FFC7FC90
380FFFFC010013C02A297CA833>79 D<B612F815FF16C03A03FC003FE0ED07F0ED03F816
FC150116FEA716FC150316F8ED07F0ED3FE090B61280EDFE0001FCC8FCB0B512F0A32729
7EA82E>I<B612E015FE6F7E3A03FC003FE0ED0FF06F7E6F7E150182A65E4B5A1507ED0F
E0ED3FC090B500FEC7FCA29039FC00FF80ED3FC06F7E6F7E6F7EA9170EA21503923801FC
1CB538F000FEEE7FF8EE0FE02F297EA832>82 D<9038FF80600003EBF0E0000F13F8381F
80FD383F001F003E1307481303A200FC1301A214007EA26C140013C0EA7FFCEBFFE06C13
F86C13FE80000714806C14C0C6FC010F13E0EB007FEC1FF0140F140700E01303A46C14E0
A26C13076C14C0B4EB0F80EBE03F39E3FFFE0000E15B38C01FF01C297CA825>I<007FB7
1280A39039807F807FD87C00140F00781507A20070150300F016C0A2481501A5C791C7FC
B3A490B612C0A32A287EA72F>I<B53CE07FFFE01FFFC0A32803FC0003FCC7EA7000A26D
6D7E000160A26D6E13016C604B138002801503017F5F4B13C0D93FC0013F49C7FCA2913A
E00E1FE00F011F160E17F09126F01C0F131E010F161C033C13F8902707F838075BA20378
13FC902703FC70035BA2913AFEE001FEF001015E02FF14FF4B7E6D5EA26E486D5AA36EC7
6CC8FCA2023E80021E141EA242297FA845>87 D<3803FF80000F13F0381F01FC383F80FE
147F801580EA1F00C7FCA4EB3FFF3801FC3FEA0FE0EA1F80EA3F00127E5AA4145F007E13
DF393F839FFC381FFE0F3803FC031E1B7E9A21>97 D<EAFFE0A3120FACEBE1FE9038EFFF
809038FE07E09038F803F09038F001F89038E000FCA2157EA2157FA8157EA315FCA29038
F001F89038F803F090389C0FE090380FFF80390E01FC00202A7EA925>I<EB3FF03801FF
FC3803F03E380FC07FEA1F80EA3F00A248133E007E90C7FCA212FEA7127EA2127F6CEB03
801380001FEB0700380FE00E3803F83C3801FFF838003FC0191B7E9A1E>I<EC7FF0A314
07ACEB3F873801FFF73807F03F380FC00F381F8007EA3F00A2127EA312FEA8127EA27EA2
381F800F380FC01F3907E07FFF3801FFE738007F87202A7EA925>I<EB3FC03801FFF038
03E07C380F803E001F7F130048EB0F80127E15C0A200FE1307A2B6FCA248C8FCA3127EA2
127F6CEB01C07E390F8003803907C007003803F01E3800FFFCEB3FE01A1B7E9A1F>I<EB
07F8EB3FFCEB7E3E3801FC7FEA03F813F01207143E1400A7B512C0A33807F000B3A3387F
FF80A3182A7EA915>I<9038FF80F00003EBE3F8390FC1FE1C391F007C7C48137E003EEB
3E10007EEB3F00A6003E133E003F137E6C137C380FC1F8380BFFE00018138090C8FC1238
A2123C383FFFF814FF6C14C06C14E06C14F0121F383C0007007CEB01F8481300A4007CEB
01F0A2003FEB07E0390FC01F806CB5120038007FF01E287E9A22>I<EAFFE0A3120FAC14
7E9038E1FF809038E30FC001E413E0EBE80701F813F013F0A213E0B039FFFE3FFFA3202A
7DA925>I<1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFFE0A3120FB3
A3EAFFFEA30F2B7EAA12>I<EAFFE0A3120FACEC1FFCA3EC0780EC0F00141E5C5C14E0EB
E3C013E7EBEFE0EBFFF08013F3EBE1FCEBC0FE147FA2EC3F80EC1FC0EC0FE0A2EC07F039
FFFC1FFFA3202A7FA923>107 D<EAFFE0A3120FB3B2EAFFFEA30F2A7EA912>I<26FFC07F
EB1FC0903AC1FFC07FF0903AC307E0C1F8D80FC49038F101FC9039C803F20001D801FE7F
01D05BA201E05BB03CFFFE3FFF8FFFE0A3331B7D9A38>I<38FFC07E9038C1FF809038C3
0FC0D80FC413E0EBC80701D813F013D0A213E0B039FFFE3FFFA3201B7D9A25>I<EB3FE0
3801FFFC3803F07E390FC01F80391F800FC0393F0007E0A2007EEB03F0A300FE14F8A800
7E14F0A26CEB07E0A2391F800FC0390FC01F803907F07F003801FFFC38003FE01D1B7E9A
22>I<38FFE1FE9038EFFF809038FE0FE0390FF803F09038F001F801E013FC140015FEA2
157FA8157E15FEA215FC140101F013F89038F807F09038FC0FE09038EFFF809038E1FC00
01E0C7FCA9EAFFFEA320277E9A25>I<90383F80703901FFE0F03803F079380FE01D381F
800F123FEB00075AA2127E12FEA8127FA27E1380001F130F380FC01F3807F0773801FFE7
38007F87EB0007A9EC7FFFA320277E9A23>I<38FFC1F0EBC7FCEBC63E380FCC7F13D813
D0A2EBF03EEBE000B0B5FCA3181B7F9A1B>I<3803FE30380FFFF0EA3E03EA7800127000
F01370A27E00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6FCEB07FC130000E0
137C143C7E14387E6C137038FF01E038E7FFC000C11300161B7E9A1B>I<13E0A41201A3
1203A21207120F381FFFE0B5FCA2380FE000AD1470A73807F0E0000313C03801FF803800
7F0014267FA51A>I<39FFE07FF0A3000F1307B2140FA2000713173903F067FF3801FFC7
38007F87201B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2EBFC03
00011480EBFE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA2
201B7F9A23>I<3BFFFC7FFC1FFCA33B0FE00FE001C02607F007EB0380A201F8EBF00700
031600EC0FF801FC5C0001150EEC1FFC2600FE1C5B15FE9039FF387E3C017F1438EC787F
6D486C5A16F0ECE01F011F5CA26D486C5AA2EC800701075CA22E1B7F9A31>I<39FFFC03
FFA3390FF000F0000714E07F0003EB01C0A2EBFC0300011480EBFE070000140013FFEB7F
0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA25CA21307003890C7FCEA7C0FEAFE0E
131E131C5BEA74F0EA3FE0EA0F8020277F9A23>121 D<003FB5FCA2EB00FEEA3C013838
03FC007813F8EB07F0EA700F14E0EB1FC0EA003F1480EB7F005B5B3801FC07120313F8EA
07F0000F130F13E0381FC00E003F131E387F803EEB00FEB5FCA2181B7E9A1E>I
E /Fm 41 122 df<B512F8A715077F921B>45 D<EB01C01303130F137FEA1FFFB5FC13BF
EAE03F1200B3B1007FB512F0A31C2E7AAD28>49 D<EB3FE03801FFFE0007EBFF80D80F80
13C0391E003FE00038EB1FF0007CEB0FF8007EEB07FCB4FC018013FEA21403A2EA7F0000
3E1307C7FC15FCA2EC0FF8A215F0EC1FE015C0EC3F80EC7F00147E14F8495A495A495A49
C7FC011E130E5B133849131E49131C485A48C7123C48B512FC5A5A5A4814F8B6FCA31F2E
7CAD28>I<EB1FF890B5FC000314C03907E01FF0390F0007F8D81F807FEA3FC06E7EA4EA
1F80380F0007C75BA25D4A5A4A5AEC3F8002FFC7FCEB3FF8ECFF809038001FE06E7E6E7E
6E7E816E7EA21680A3121C123E127FEAFF801600A24A5AEA7F00007E495A003C5C391FC0
1FF06CB512C0000391C7FC38003FF8212E7DAD28>I<157015F0140114031407140FA214
1F143F147714F714E7EB01C7EB0387EB0707130F130E131C1338137013F013E0EA01C0EA
0380EA07005A120E5A5A5A5AB712E0A3C7380FF000A9010FB512E0A3232E7EAD28>I<00
0C1430390FC007F090B512E015C0158015005C14F85C1480000EC8FCA8EB1FF0EBFFFE39
0FE03F809038000FC0000EEB07E0000C14F0C713F8140315FCA215FEA21218123E127F5A
A215FCA25A0078EB07F815F06CEB0FE06CEB1FC0390FC07F806CB51200000113FC38003F
E01F2E7CAD28>I<14FF010713E0011F7F90387F80F89038FE003CD801F8137C484813FE
00071301EA0FE0A2EA1FC0003F6D5A157892C7FC485AA338FF83FC90388FFF8090389C0F
C09038B003F06E7E01E07F01C07F140081A2491480A4127FA4003F15007F121F5D000F49
5AEA07E06C6C485A3901FC0FE06CB55A013F90C7FCEB0FFC212E7DAD28>I<1578A215FC
A34A7EA24A7EA24A7FA34A7FEC0E7F021E7FEC1C3FA202387F151F02787FEC700FA202E0
7F1507010180ECC003A249486C7EA201078191C7FC498191B6FCA24981011CC7123F013C
810138141FA24981160F01F081491407A2484881486C1403B549B512FCA336317DB03D>
65 D<B712C016FC16FFD801FEC77FEE7FE0707E161F707EA2831607A4160FA25FA24C5A
4C5A4C5A4B485ADB1FFEC7FC90B65AEEFF8049C7EA3FE0EE0FF0EE07FCA2707E83821880
A718005E5F16074C5A4C5AEEFFF0B812C094C7FC16F831317DB039>I<913A03FF800180
023FEBF00349B5EAFC0701079038003F0FD91FF8EB079FD93FC0EB01FFD9FF807F4848C8
127F4848153F0007161F49150F485A001F1607A2485A1703127FA24992C7FCA212FFA912
7FA27FEF0380123FA26C7E1707000F17006C7E6D150E0003161E6C6C151C6C6C6C1478D9
3FC05CD91FF8EB03E0D907FFEB3F800101D9FFFEC7FCD9003F13F80203138031317CB03A
>I<B812F0A3C6903880003FEE07F816031600A21778A21738A3171C1507A31700A25D5D
5D91B5FCA3EC803F818181A21707A392C7120EA4171EA2173CA2177C17FC16011607163F
B812F8A330317EB035>69 D<B6D8807FB512C0A3C60180C7387FC000B391B7FCA30280C7
127FB3A3B6D8807FB512C0A33A317EB03F>72 D<B61280A3C6EB8000B3B3A7B61280A319
317EB01E>I<B67EA3000190C9FCB3A9EE0380A416071700A25EA35E5E5E5E4B5A150FB7
FCA329317DB030>76 D<B500C00303B5FCA26E5DC61900D9EFF0150EA3D9E7F85DA2D9E3
FC5DA2D9E1FE5DA2D9E0FF5DA26E6C495AA26E6C495AA36E6C495AA26E6C130EA26E6C5B
A26E6C5BA26E6C5BA26E6C5BA392387F81C0A292383FC380A2DB1FE7C7FCA2ED0FFEA26F
5AA36F5A487EB526E001F090B6FCA26F5A48317EB04D>I<B712E016FEEEFF80C6D98000
13E0EE3FF0EE0FF8EE07FCA2EE03FEA217FFA717FEA2EE07FC17F8160FEE3FE0EEFFC091
B6120016F80280C8FCB3A2B67EA330317EB037>80 D<B77E16F816FEC690398003FF8092
38007FE0EE1FF0707EA283160783A65F160F5F4C5A4C5A4C5ADB03FFC8FC91B512F816E0
91388007F8ED01FC6F7E167F83707EA283A583A4F0038017F8161F1900706C5AB6398003
FE0E933801FFFC9338001FF039317EB03C>82 D<90391FF8018090B51203000314C73907
F007EF390F8000FF48C7127F003E141F150F5A150712FCA215037EA26C91C7FC13C0EA7F
F0EBFF806C13F8ECFF806C14F06C806C806C14FFC6FC013F1480010114C0D9001F13E014
01EC003FED1FF0150F1507126000E01403A316E07EA26CEC07C07EB4EC0F8001C0EB1F00
D8FBFC13FE00F1B512F8D8E03F5BD8C003138024317CB02D>I<B5D8FC03B539F003FFFC
A3D803FEC7D80FF8C7EA0F80F207006D6F5C6C0307150EA26C6D6E5CA26E80017F4A5DA2
6E496D1378013F021C1570A26E013C6D13F0011FDA387F5CA26D6C496C6C485AA26EEDF0
030107DAE01F5CA2DAFE01ECF8070103DAC00F91C7FCA2902601FF03ECFC0EEE80071583
6D903A870003FE1CA203CFECFF3CDA7FCE6D1338A203FE15F86E486D5BA26E486E5AA36E
486E5AA36E486E5AA36E486EC8FCA24E317EB053>87 D<EBFFF0000313FF390F803F8090
38C00FE0486C6C7EA26E7ED80FC07FEA0780C7FCA414FF131FEBFFE33803FC03EA0FF0EA
1FC0123FEA7F80A2EAFF00A31407A2387F800D393FC01DFE3A1FE078FFF03907FFE07FC6
EB803F24207E9F27>97 D<EA01F812FFA3120F1207ADEC3FE0ECFFFC9038FBE07F9039FF
001F8049EB0FC04914E049EB07F016F8A2ED03FCA316FEA816FCA3ED07F8A216F06DEB0F
E06D14C001E7EB3F809039C3C0FE00903880FFF89038003FC027327EB12D>I<EB0FFF01
7F13C03901FC01F03803F0033907E007F8120FEA1FC0003FEB03F0EC01E04848C7FCA312
FFA8127FA36C6C131CA2001F14386C7E000714703903F001E03901FC07C039007FFF00EB
0FF81E207D9F24>I<ED0FC0EC07FFA3EC007F153FADEB07F8EB3FFF9038FE07BF3903F8
01FF3907E0007F120F4848133F123FA2485AA312FFA8127FA36C7EA2121F6C6C137F0007
14FF2603F00313E03A01FC0F3FFE38007FFEEB0FF027327DB12D>I<EB0FFC90387FFF80
3901FC0FC03903F003E03907E001F0000F14F8391FC000FC003F14FEA24848137E157FA2
12FFA290B6FCA20180C7FCA4127FA36C6C1307121F150E6C7E6C6C131C6C6C13783900FE
03E090383FFFC0903807FE0020207E9F25>I<EB01FE90380FFF8090381FC3C090387F07
E09038FE0FF0120113FC1203EC07E0EC018091C7FCA8B512FCA3D803FCC7FCB3A8387FFF
F0A31C327EB119>I<90391FF007C09039FFFE3FE03A01F83F79F03907E00FC3000F14E1
9039C007E0E0001FECF000A2003F80A5001F5CA2000F5CEBE00F00075C2603F83FC7FC38
06FFFE380E1FF090C9FC121EA2121F7F90B57E6C14F015FC6C806C801680000F15C0003F
C7127F007EEC1FE0007C140F00FC1407A4007EEC0FC0003E1580003F141FD80FC0EB7E00
3907F803FC0001B512F0D8001F90C7FC242F7E9F28>I<EA01F812FFA3120F1207ADEC07
F8EC3FFEEC783F02C013809039F9801FC0EBFB0001FE14E05BA35BB3B500C3B5FCA32832
7DB12D>I<EA03C0487E487E487EA46C5A6C5A6C5AC8FCA9EA01F8127FA31207B3A7B512
80A311337DB217>I<EA01F812FFA3120F1207ADEDFFF8A3ED3F00153C5D5DEC03C04A5A
4AC7FC141E147814FCEBF9FE13FB90B5FC496C7E01FC7FEBF83F496C7E6E7E816E7E1403
6E7E6E7E1680157F16C0B53881FFFEA327327EB12B>107 D<EA01F812FFA3120F1207B3
B3A6B512C0A312327DB117>I<2703F007F8EB1FE000FFD93FFEEBFFF8913A783F01E0FC
02C090388300FE280FF1801FC6137F2607F30013CC01F602F8148001FC5CA3495CB3B500
C3B5380FFFFCA33E207D9F43>I<3903F007F800FFEB3FFEEC783F02C013803A0FF1801F
C03807F30001F614E013FCA35BB3B500C3B5FCA328207D9F2D>I<EB07FC90387FFFC039
01FC07F03903F001F848486C7E4848137E001F147F003F158049133F007F15C0A300FF15
E0A8007F15C0A36C6CEB7F80A2001F15006C6C13FE00075C3903F803F83901FE0FF03900
7FFFC0D907FCC7FC23207E9F28>I<3901F83FE000FFEBFFFC9038FBE07F9039FF003F80
D807FEEB1FC049EB0FE04914F0ED07F8A216FC1503A216FEA816FC1507A216F8A2ED0FF0
6D14E06DEB1FC06DEB3F809039FBC0FE009038F8FFF8EC3FC091C8FCABB512C0A3272E7E
9F2D>I<3803F03F00FFEB7FC09038F1C3E01487390FF30FF0EA07F6A29038FC07E0EC03
C091C7FCA25BB2B512E0A31C207E9F21>114 D<3801FF86000713FEEA1F00003C133E48
131E140E12F8A36C90C7FCB47E13FC387FFFC06C13F0806C7F00077F00017FEA003F0100
1380143F0060131F00E0130FA27E15007E6C131E6C131C38FF807838F3FFF038C07F8019
207D9F20>I<131CA5133CA3137CA213FC120112031207381FFFFEB5FCA2D803FCC7FCB0
EC0380A71201EC0700EA00FEEB7F0EEB3FFCEB07F0192E7FAD1F>I<D801F8EB07E000FF
EB03FFA3000FEB003F0007141FB3153FA20003147FA26C6CEBDFF03A00FE039FFF90387F
FF1FEB0FFC28207D9F2D>I<B5EB1FFCA3D80FF8EB03C0000715806D1307000315007F00
01140E7F6C5CA2EC803C017F1338ECC078013F1370ECE0F0011F5B14F1010F5B14F99038
07FB80A214FF6D90C7FCA26D5AA26D5AA21478A226207E9F2B>I<B53A1FFFE03FF8A33C
0FF000FE0007806D150300076EEB0700816D5D00039138FF800EA26C6C486D5A15DF01FF
153C6C9039038FE038A2D97F876D5A150702C714F0D93FCF6D5AECCE03D91FFEEBF9C091
38FC01FD16FF010F5D4A7EA26D486DC7FCA20103147E4A133EA26D48131C35207E9F3A>
I<B5EB1FFCA3D80FF8EB03C0000715806D1307000315007F0001140E7F6C5CA2EC803C01
7F1338ECC078013F1370ECE0F0011F5B14F1010F5B14F9903807FB80A214FF6D90C7FCA2
6D5AA26D5AA21478A21470A214F05C1301007C5BEAFE035C49C8FC5BEAFC1EEA787CEA3F
F0EA0FC0262E7E9F2B>121 D E /Fn 33 122 df<127812FCA212FEA2127A1202A41204
A31208A212101220124007127B8510>44 D<132013E01201120F12FF12F11201B3AD487E
B512C0A212287BA71D>49 D<12201238003FB5FCA214FE5A3860000400401308A2141048
1320A2C712401480A2EB01001302A25BA2130C5BA31338A213781370A213F0A51201A76C
5A182A7DA81D>55 D<137E3801FF80380781C0380F00E0001E1370481338A248133CA200
F8131EA4141FA41278143FA27E001C135F7E6C139F3803831FEA00FCEB001EA3143E143C
A21438001C1378003E137014E0383C01C038180380381C0F00EA0FFEEA03F818297EA71D
>57 D<14101438A3147CA314BEA3EB011FA39038020F80A201047F1407A201087F1403A2
496C7EA3496C7EA390387FFFFCA29038C0007E49133EA248C7123F81A20002EC0F80A212
06ED07C0001FEC0FE0D8FFE0EBFFFEA2272A7EA92C>65 D<02FF13200107EBC06090381F
807090397E0018E001F813054848130348481301485A48481300A248C812605A123E007E
1520A2127C160012FCA9127CA2007E1520A2123E123F6C15406C7EA26C6C14806C6CEB01
006C6C5B6C6C1306017E131C90381F8070903807FFE0010090C7FC232B7DA92A>67
D<B7FCA23907E0003F00031407ED03801501A21500A416405CA21600A25CA2140F90B5FC
A2EBE00F1403A2801620A391C7FC1640A416C0A215011503ED07800007143FB7FCA22329
7EA828>69 D<B53883FFFEA23A07F0001FC06C48EB0F80B090B6FCA29038E0000FB1486C
EB1FC0B53883FFFEA227297EA82C>72 D<EAFFFEA2EA0FE0EA07C0B3B1EA0FE0EAFFFEA2
0F297DA815>I<D8FFE0EB3FFE7FD803F8EB03E00002EC01C0017CEB0080137E133E7FA2
6D7E8013076D7E8013016D7E80147C80143F80EC0F8015C01407EC03E015F01401EC00F8
A2157C157E153E151FA2150F1507A200071403486C1301EAFFF8150027297EA82C>78
D<B6FC15E03907E001F80003EB007C81811680150F16C0A61680151F1600153E5DEC01F0
90B512C001E0C8FCB1487EB57EA222297EA828>80 D<B512FCECFFC03907E007F00003EB
00F8157C81153F811680A61600153EA215784A5AEC07C0D9FFFEC7FCEBE007EC03C06E7E
6E7E811578157CA4157EA41601157F153F486CEB1F02B538800F82ED0784C8EA01F8282A
7EA82B>82 D<EBFE013803FF83380F81E3381E003748131F00387F00787F127000F07FA3
807EA26C90C7FC127E127FEA3FE0EA1FFE380FFFE06C13F86C7FC66C7EEB07FFEB007FEC
1F80140FEC07C0A26C1303A47E1580A26C13076C14006C130E00EE5B38C3C07838C1FFF0
38803FC01A2B7DA921>I<007FB612F0A2397C00F8010070EC00700060153000401510A2
00C01518A2481508A5C71400B3A6497E90B512F8A225297EA82A>I<B538803FFEA23A07
F00003E06C48EB01C0ED0080B3A90001EC01007FA2000014020178130615046D5B6D1330
90380780E06DB45AD9007FC7FC272A7EA82C>I<D8FFFE903803FF80A2D80FE09038007C
006C4814306C6C1420A27F00015DA26C6C5CA27F017C49C7FCA2017E5B013E1302A26D5B
A21480010F5BA26D6C5AA36D6C5AA214F001015BA26D6C5AA214FC027DC8FCA2147F143E
A2141CA31408292A7FA82C>I<D8FFFE903801FF80A2D80FE09038007C00000715306C6C
142000015D7F00005D6D1301017E91C7FC013E1302133F6D5BEC800C90380FC00801075B
14E001035BECF060903801F84001005B14FC027DC8FC147F143EAE147E90380FFFF0A229
297FA82C>89 D<EA03FCEA0C0738100380383C01C0003E7F6D7E121C1208C7FCA3137FEA
03E0EA0F80EA1E005A127C0078144012F8A31301127C393C027880381E0C7F3907F01E00
1A1A7E991D>97 D<120FB4FCA2121F7EACEB07E0EB1838EB600EEB8007158090380003C0
A2EC01E0A215F0A715E0A2140315C01580EB8007000EEB0F00EB401C380C303838080FC0
1C2A7EA921>I<13FC38038780380701C0000E13E0EA1C00003C13F0A2481378A212F8A2
B512F800F8C7FCA51278A26C1308A26C1310000E13206C13403801C18038007E00151A7E
991A>101 D<140F3901FC308038070743380E03C3001EEBC100486C7EA2007C7FA5003C
5BA26C485A000E5BD81707C7FCEA11FC0030C8FCA47E381FFF806C13F06C7F3818007C48
131E0070130E00607F12E0A40070130EA26C5B6C5B380781E0C6B4C7FC19287E9A1D>
103 D<120FB4FCA2121F7EACEB07F0EB1838EB201C497E140F1380A21300B139FFF0FFF0
A21C2A7EA921>I<121E123FA4121EC7FCA9120FB4FCA2121F7EB3A2EAFFF0A20C297EA8
11>I<120FB4FCA2121F7EB3B2EAFFF0A20C2A7EA911>108 D<380F07F038FF1838EB201C
381F400E000F130F1380A21300B139FFF0FFF0A21C1A7E9921>110
D<137E3803C3C0380700E0000E1370481338003C133CA248131EA200F8131FA80078131E
A26C133CA2001C13386C13706C13E03803C3C038007E00181A7E991D>I<380F07E038FF
1838EB601E380F800FEC0780010013C0140315E0A2EC01F0A715E01403A215C0EC078013
80EC0F00EB401CEB3078EB0FC090C8FCAAEAFFF0A21C267E9921>I<380F0F8038FF11C0
EB23E0EA1F43EA0F83EB81C0EB800090C7FCB07FEAFFFCA2131A7E9917>114
D<3807F080EA1C0DEA3003EA600112E01300A27E6C1300127EEA7FE0EA3FFC6C7EEA07FF
38003F801307388003C0A2130112C0A200E01380130300F01300EACC0EEA83F8121A7E99
17>I<7FA41201A31203A21207120F381FFF80B5FC38078000AD1440A73803C080120138
00E100133E12257FA417>I<000F130FB413FFA2001F131F6C7FB05CA26C132F3903804F
803901C08FF038007F0F1C1A7E9921>I<39FFF03FF0A2390FC01F003807801C3803C018
3801E0106D5A00005BEB78C06D5A013DC7FC7F7F80A2EB13C0EB21E0EB61F01340EB8078
3801007C48133C487F001F133F39FF807FF8A21D1A7F991F>120
D<39FFF01FF0A2390F8007800007EB03001402A26C6C5AA2EBE00C00011308A26C6C5AA2
EBF830EB7820A26D5AA2EB3EC0EB1E80A26DC7FCA31306A21304A2130C1308A2EA701012
F85BA2485AEA6180001FC8FC1C267F991F>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: Letter
%%BeginPaperSize: Letter
/setpagedevice where {
pop 1 dict dup /PageSize [ 612 792 ] put setpagedevice
} {
statusdict /lettertray known {
statusdict begin lettertray end
/letter where { pop letter } if
} {
/letter where {
pop letter
} {
statusdict /setpage known {
statusdict begin
612 792 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 761 104 a Fn(RICE)19 b(UNIVERSITY)204 339 y Fm(An)27
b(Ev)l(aluation)f(of)h(Memory)f(Consistency)g(Mo)r(dels)157
431 y(for)h(Shared-Memory)f(Systems)g(with)h(ILP)g(Pro)r(cessors)1000
568 y Fn(b)n(y)617 690 y Fl(P)n(arthasarath)n(y)c(Ranganathan)734
909 y Fk(A)f(Thesis)h(Submitted)571 983 y(in)f(P)-5 b(ar)l(tial)23
b(Fulfillment)d(of)j(the)570 1058 y(Requirements)g(f)o(or)g(the)f
(Degree)771 1186 y Fl(Master)g(of)f(Science)1031 1461
y Fj(Appr)o(o)o(ved,)c(Thesis)h(Committee:)p 1031 1644
900 2 v 1031 1704 a Fi(Sarita)f(V.)e(Adv)o(e,)g(Chair)1031
1764 y(Assistan)o(t)h(Professor)i(in)e(Electrical)e(and)1031
1824 y(Computer)i(Engineering)p 1031 1994 V 1031 2054
a(Keith)g(Co)q(op)q(er)1031 2114 y(Asso)q(ciate)h(Professor)g(of)f
(Computer)g(Science)p 1031 2284 V 1031 2345 a(Willy)f(Zw)o(aenep)q(o)q
(el)1031 2405 y(Professor)i(of)g(Computer)e(Science)833
2575 y Fn(Houston,)k(T)-5 b(exas)889 2688 y(April,)17
b(1997)p eop
%%Page: 2 2
2 1 bop 204 343 a Fm(An)27 b(Ev)l(aluation)f(of)h(Memory)f(Consistency)
g(Mo)r(dels)157 435 y(for)h(Shared-Memory)f(Systems)g(with)h(ILP)g(Pro)
r(cessors)669 599 y Fn(P)n(arthasarath)n(y)19 b(Ranganathan)903
841 y Fl(Abstract)131 948 y Fi(The)h(memory)d(consistency)i(mo)q(del)f
(of)i(a)g(shared-memory)d(m)o(ultipro)q(cessor)h(determines)g(the)131
1020 y(exten)o(t)13 b(to)h(whic)o(h)e(memory)f(op)q(erations)k(ma)o(y)d
(b)q(e)i(o)o(v)o(erlapp)q(ed)e(or)i(reordered)f(for)h(b)q(etter)g(p)q
(erfor-)131 1092 y(mance.)29 b(Studies)18 b(on)i(previous-generation)f
(shared-memory)e(m)o(ultipro)q(cessors)h(ha)o(v)o(e)h(sho)o(wn)131
1164 y(that)24 b(relaxed)e(memory)f(consistency)h(mo)q(dels)g(lik)o(e)g
(release)g(consistency)h(\(R)o(C\))g(can)g(signif-)131
1237 y(ican)o(tly)e(outp)q(erform)g(the)g(conceptually)g(simpler)e(mo)q
(del)h(of)i(sequen)o(tial)e(consistency)h(\(SC\).)131
1309 y(Curren)o(t)12 b(and)h(next-generation)g(m)o(ultipro)q(cessors)e
(use)h(commo)q(dit)o(y)e(micropro)q(cessors)h(that)i(ag-)131
1381 y(gressiv)o(ely)j(exploit)h(instruction-lev)o(el)e(parallelism)g
(\(ILP\))i(using)h(metho)q(ds)f(suc)o(h)g(as)h(m)o(ultiple)131
1453 y(issue,)g(dynamic)d(sc)o(heduling,)i(and)h(non-blo)q(c)o(king)g
(reads.)26 b(F)l(or)18 b(suc)o(h)f(pro)q(cessors,)i(researc)o(hers)131
1526 y(ha)o(v)o(e)h(conjectured)g(that)g(t)o(w)o(o)h(tec)o(hniques,)e
(hardw)o(are-con)o(trolled)h(non-binding)i(prefetc)o(hing)131
1598 y(and)g(sp)q(eculativ)o(e)d(reads,)j(ha)o(v)o(e)e(the)g(p)q(oten)o
(tial)h(to)g(equalize)e(the)h(hardw)o(are)h(p)q(erformance)f(of)131
1670 y(memory)h(consistency)i(mo)q(dels.)42 b(These)24
b(tec)o(hniques)e(ha)o(v)o(e)h(recen)o(tly)f(b)q(egun)i(to)g(app)q(ear)
h(in)131 1742 y(commerci)o(al)18 b(micropro)q(cessors,)j(and)g(re-op)q
(en)g(the)f(question)h(of)g(whether)f(the)g(p)q(erformance)131
1814 y(b)q(ene\014ts)d(of)f(release)g(consistency)f(justify)h(its)g
(added)h(programming)d(complexit)o(y)l(.)204 1889 y(This)20
b(thesis)e(p)q(erforms)h(the)f(\014rst)h(detailed)f(quan)o(titativ)o(e)
g(comparison)g(of)i(sev)o(eral)d(imple-)131 1961 y(men)o(tations)d(of)h
(sequen)o(tial)f(consistency)g(and)i(release)e(consistency)g(optimized)
f(for)i(aggressiv)o(e)131 2033 y(ILP)20 b(pro)q(cessors.)31
b(Our)19 b(results)g(indicate)g(that)g(although)h(hardw)o(are)g
(prefetc)o(hing)e(and)i(sp)q(ec-)131 2105 y(ulativ)o(e)i(reads)h
(dramatically)e(impro)o(v)o(e)g(the)i(p)q(erformance)f(of)h(sequen)o
(tial)f(consistency)l(,)i(the)131 2178 y(simplest)d(R)o(C)i(v)o(ersion)
f(con)o(tin)o(ues)g(to)i(signi\014can)o(tly)e(outp)q(erform)g(the)h
(most)f(optimized)f(SC)131 2250 y(v)o(ersion.)32 b(Additionally)l(,)18
b(the)i(p)q(erformance)f(of)h(SC)g(is)g(highly)f(sensitiv)o(e)f(to)i
(the)g(cac)o(he)f(write)131 2322 y(p)q(olicy)c(and)h(the)f(aggressiv)o
(eness)g(of)h(the)f(cac)o(he-coherence)e(proto)q(col,)j(while)e(the)h
(p)q(erformance)131 2394 y(of)20 b(R)o(C)f(is)f(generally)h(stable)g
(across)h(all)e(implem)o(en)o(tations.)27 b(Ov)o(erall)18
b(our)h(results)g(sho)o(w)h(that)131 2467 y(R)o(C)14
b(hardw)o(are)g(has)g(signi\014can)o(t)f(p)q(erformance)g(b)q
(ene\014ts)h(o)o(v)o(er)f(SC)h(hardw)o(are,)g(and)g(at)g(the)f(same)131
2539 y(time,)k(requires)h(less)h(system)e(complexit)o(y)f(with)j(ILP)g
(pro)q(cessors.)31 b(Memory)17 b(write)h(latencies)131
2611 y(that)j(hardw)o(are)g(prefetc)o(hing)e(and)j(sp)q(eculativ)o(e)d
(loads)i(are)f(unsuccessful)h(in)f(hiding)g(are)h(the)131
2683 y(main)15 b(reason)i(for)g(the)f(p)q(erformance)f(di\013erence)g
(b)q(et)o(w)o(een)g(SC)i(and)g(R)o(C.)p eop
%%Page: 3 3
3 2 bop 715 403 a Fm(Ac)n(kno)n(wledgmen)n(ts)131 658
y Fi(I)16 b(w)o(ould)g(lik)o(e)e(to)i(thank)g(m)o(y)e(advisor,)i
(Sarita)g(Adv)o(e,)e(for)j(her)e(in)o(v)m(aluable)g(guidance)h(and)h
(men-)131 730 y(toring)24 b(throughout)i(this)e(w)o(ork.)44
b(Her)23 b(encouragemen)o(t)f(and)j(en)o(th)o(usiasm)d(w)o(ere)h
(primarily)131 802 y(resp)q(onsible)18 b(in)g(making)f(this)h(w)o(ork)g
(p)q(ossible.)27 b(I)17 b(w)o(ould)h(also)h(lik)o(e)d(to)j(thank)f(m)o
(y)e(other)i(com-)131 874 y(mittee)d(mem)o(b)q(ers,)f(Willy)i(Zw)o
(aenep)q(o)q(el)i(and)g(Keith)f(Co)q(op)q(er,)h(for)g(their)f
(encouragemen)o(t)f(and)131 947 y(suggestions.)27 b(A)17
b(signi\014can)o(t)g(part)h(of)g(this)g(thesis)f(ev)o(olv)o(ed)f(from)h
(m)o(y)e(join)o(t)i(w)o(ork)h(with)f(Vija)o(y)131 1019
y(P)o(ai.)28 b(Man)o(y)19 b(thanks)g(are)f(due)h(to)g(him)e(for)i(the)f
(man)o(y)f(enric)o(hing)h(and)h(in)o(teresting)f(con)o(v)o(ersa-)131
1091 y(tions)k(during)g(the)f(course)g(of)h(our)g(researc)o(h.)36
b(I)21 b(w)o(ould)h(also)g(lik)o(e)e(to)h(thank)h(all)f(m)o(y)f
(friends)131 1163 y(at)g(Rice)e(who)i(made)d(w)o(orking)j(at)f(sc)o(ho)
q(ol)h(an)f(enjo)o(y)o(able)f(exp)q(erience.)28 b(Finally)l(,)18
b(I)h(w)o(ould)g(lik)o(e)131 1236 y(to)g(thank)f(m)o(y)f(paren)o(ts)h
(and)h(m)o(y)d(elder)h(brother)i(for)f(all)g(their)g(supp)q(ort)h(and)g
(encouragemen)o(t)131 1308 y(whic)o(h)d(enables)g(me)e(to)j(b)q(e)f
(what)h(I)f(am)f(to)q(da)o(y)l(.)p eop
%%Page: 4 4
4 3 bop 874 403 a Fm(Con)n(ten)n(ts)204 657 y Fi(Abstract)1514
b(ii)204 730 y(Ac)o(kno)o(wledgmen)o(ts)1303 b(iii)204
803 y(List)17 b(of)f(Illustrations)1277 b(vi)131 941
y Fl(1)39 b(In)n(tro)r(duction)1326 b(1)204 1014 y Fi(1.1)51
b(Motiv)m(ation)17 b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)96 b(1)204 1087 y(1.2)51 b(Con)o(tributions)16
b(of)h(this)f(Thesis)37 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96 b(3)204
1161 y(1.3)51 b(Organization)g(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)96 b(4)131 1299 y Fl(2)39 b(Bac)n(kground)1344
b(5)204 1372 y Fi(2.1)51 b(Consistency)16 b(Mo)q(dels)k(.)k(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)g(.)h(.)f(.)h(.)f(.)96 b(5)317 1445 y(2.1.1)56 b(Sequen)o(tial)14
b(Consistency)28 b(.)c(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96 b(6)317 1518 y(2.1.2)56
b(Release)15 b(Consistency)50 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)96
b(8)204 1592 y(2.2)51 b(Hardw)o(are)16 b(T)l(ec)o(hniques)f(to)h
(Enhance)h(the)f(P)o(erformance)e(of)j(Consistency)317
1664 y(Mo)q(dels)k(.)j(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)71 b(10)317 1737 y(2.2.1)56 b(Hardw)o(are)16
b(prefetc)o(hing)j(.)25 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(11)317
1810 y(2.2.2)56 b(Sp)q(eculativ)o(e)14 b(reads)32 b(.)25
b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(13)131 1948 y Fl(3)39
b(Ev)l(aluation)25 b(Metho)r(dology)938 b(15)204 2022
y Fi(3.1)51 b(Sim)o(ulated)14 b(Arc)o(hitectures)41 b(.)25
b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(15)317 2095 y(3.1.1)56
b(Memory)14 b(System)h(and)i(Net)o(w)o(ork)34 b(.)24
b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(15)317 2168 y(3.1.2)56 b(Base)16 b(Pro)q(cessor)45
b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(19)317 2241
y(3.1.3)56 b(V)l(ariations)16 b(on)h(the)f(Base)g(Pro)q(cessor)44
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(20)204 2314 y(3.2)51 b(Sim)o(ulation)14 b(Metho)q(dology)j(and)g(En)o
(vironmen)o(t)30 b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)71 b(22)204 2387 y(3.3)51 b(P)o(erformance)14
b(Metrics)38 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(23)204 2460 y(3.4)51 b(Applications)20 b(.)25 b(.)f(.)h(.)f(.)g(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(24)131 2599 y Fl(4)39
b(Impact)25 b(of)e(Hardw)n(are)h(Prefetc)n(hing)h(and)g(Sp)r(eculativ)n
(e)h(Reads)204 2688 y(on)d(the)f(P)n(erformance)g(of)g(Consistency)g
(Mo)r(dels)394 b(26)p eop
%%Page: 5 5
5 4 bop 1906 72 a Fi(v)204 222 y(4.1)51 b(Sequen)o(tial)14
b(Consistency)i(Impleme)o(n)o(tations)40 b(.)25 b(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(27)317 296
y(4.1.1)56 b(Prefetc)o(hing)15 b(with)h(W)l(rite-Through)h(L1)g(Cac)o
(hes)f(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(27)317 371 y(4.1.2)56 b(Sp)q(eculativ)o(e)14 b(Reads)j(with)f(W)l
(rite-Through)h(L1)g(Cac)o(hes)25 b(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(33)317 445 y(4.1.3)56 b(Impact)14 b(of)j(W)l(rite-Bac)o(k)e(L1)i(Cac)
o(hes)49 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(35)317 519 y(4.1.4)56 b(Summary)14 b(for)i(SC)44
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(36)204 594 y(4.2)51
b(Release)15 b(Consistency)h(Implem)o(en)o(tations)25
b(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f
(.)71 b(37)317 668 y(4.2.1)56 b(P)o(erformance)14 b(with)i(W)l
(rite-Through)h(L1)g(Cac)o(hes)30 b(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)71 b(37)317 742 y(4.2.2)56 b(Impact)14 b(of)j(W)l(rite-Bac)o(k)e
(L1)i(Cac)o(hes)49 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h
(.)f(.)h(.)f(.)71 b(38)317 817 y(4.2.3)56 b(Summary)14
b(for)i(R)o(C)36 b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(39)204 891 y(4.3)51 b(Comparing)16 b(SC)g(and)h(R)o(C)24
b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(39)204 965 y(4.4)51
b(Impact)14 b(of)j(a)f(More)g(Aggressiv)o(e)g(Proto)q(col)i(.)24
b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(40)204 1039 y(4.5)51 b(Summary)43 b(.)24 b(.)h(.)f(.)h(.)f(.)g(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(43)131 1178 y Fl(5)39
b(Related)23 b(W)-6 b(ork)1252 b(45)204 1252 y Fi(5.1)51
b(Consistency)16 b(Mo)q(dels)k(.)k(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)
71 b(45)204 1326 y(5.2)51 b(Ev)m(aluation)16 b(of)h(Consistency)f(Mo)q
(dels)27 b(.)d(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g
(.)h(.)f(.)h(.)f(.)71 b(45)204 1401 y(5.3)51 b(Aggressiv)o(e)15
b(Implem)o(en)o(tati)o(ons)f(of)j(Sequen)o(tial)e(Consistency)h(.)24
b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(46)204 1475 y(5.4)51
b(Prefetc)o(hing)45 b(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)71 b(46)131 1614 y Fl(6)39 b(Conclusions)1312
b(48)204 1688 y Fi(6.1)51 b(Thesis)16 b(Summary)45 b(.)24
b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(48)204
1762 y(6.2)51 b(F)l(uture)15 b(W)l(ork)h(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(49)204 1901 y Fl(Bibliograph)n(y)1286
b(51)p eop
%%Page: 6 6
6 5 bop 818 403 a Fm(Illustrations)204 730 y Fi(2.1)51
b(Conceptual)16 b(represen)o(tation)g(of)g(sequen)o(tial)f(consistency)
h(\(SC\))34 b(.)24 b(.)g(.)h(.)f(.)h(.)f(.)96 b(7)204
804 y(2.2)51 b(Comparison)16 b(of)g(straigh)o(tforw)o(ard)h(impleme)o
(n)o(tations)d(of)i(consistency)g(mo)q(dels)67 b(10)204
879 y(2.3)51 b(E\013ect)16 b(of)g(hardw)o(are)h(prefetc)o(hing)e(and)i
(sp)q(eculativ)o(e)e(reads)h(with)h(SC)i(.)25 b(.)f(.)h(.)f(.)71
b(11)204 1025 y(3.1)51 b(Ov)o(erview)14 b(of)j(the)f(sim)o(ulated)e
(system.)f(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)g(.)h(.)f(.)h(.)f(.)71 b(16)204 1099 y(3.2)51 b(Default)16
b(sim)o(ulation)e(parameters.)49 b(.)25 b(.)f(.)h(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(17)204 1174 y(3.3)51 b(Pro)q(cessor)17 b(micro-arc)o(hitecture.)9
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)g(.)h(.)f(.)h(.)f(.)71 b(19)204 1248 y(3.4)51 b(Applications)15
b(used)h(and)h(input)f(sizes)35 b(.)24 b(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71 b(25)204
1395 y(4.1)51 b(Ev)m(aluation)16 b(of)h(consistency)f(mo)q(dels)f({)i
(Erle,)e(FFT,)g(and)i(LU)41 b(.)25 b(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(28)204 1469 y(4.2)51 b(Ev)m(aluation)16 b(of)h(consistency)f(mo)q
(dels)f({)i(Mp3d,)f(Radix,)f(and)i(W)l(ater)29 b(.)c(.)f(.)h(.)f(.)71
b(29)204 1543 y(4.3)51 b(MSHR)15 b(o)q(ccupancy)i({)f(Erle,)f(FFT,)h
(and)h(LU)h(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)71 b(30)204 1617 y(4.4)51 b(MSHR)15 b(o)q(ccupancy)i({)f
(Mp3d,)g(Radix,)g(and)h(W)l(ater)45 b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)
g(.)h(.)f(.)h(.)f(.)71 b(31)204 1692 y(4.5)51 b(Num)o(b)q(er)14
b(of)i(rollbac)o(ks)g(\(with)g(write-through)h(cac)o(he\))36
b(.)25 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)71
b(35)204 1766 y(4.6)51 b(E\013ect)16 b(of)g(aggressiv)o(e)h(coherence)e
(proto)q(col)45 b(.)24 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)f(.)h(.)f(.)71 b(41)p eop
%%Page: 1 7
1 6 bop 1907 72 a Fi(1)853 361 y Fm(Chapter)28 b(1)809
564 y(In)n(tro)r(duction)131 774 y Fl(1.1)66 b(Motiv)l(ation)131
898 y Fi(Multipro)q(cessor)19 b(systems)g(built)f(from)g(commo)q(dit)o
(y)f(high-p)q(erformance)h(unipro)q(cessors)j(o\013er)131
989 y(a)g(cost-e\013ectiv)o(e)d(solution)i(to)h(ac)o(hiev)o(e)d(high)i
(p)q(erformance.)31 b(Shared-memory)17 b(m)o(ultipro)q(ces-)131
1079 y(sor)22 b(systems,)f(in)g(con)o(trast)h(to)g(the)f(alternativ)o
(e)f(of)i(message-passing)g(systems,)f(pro)o(vide)g(an)131
1169 y(abstraction)d(of)f(a)g(single)f(address)h(space)g(that)g
(greatly)g(enhances)g(the)f(ease)h(of)g(programming)131
1260 y(and)g(compiler)d(design)j(on)f(suc)o(h)h(systems.)j(Ho)o(w)o(ev)
o(er,)14 b(long)j(memory)c(latencies)i(remain)g(a)i(sig-)131
1350 y(ni\014can)o(t)k(imp)q(edime)o(n)o(t)e(to)i(ac)o(hieving)g(the)g
(full)f(p)q(erformance)h(p)q(oten)o(tial)g(of)g(shared-memory)131
1440 y(m)o(ultipro)q(cessors.)31 b(Curren)o(t)20 b(tec)o(hnology)g
(trends)g(indicate)f(further)g(increases)h(in)g(the)f(di\013er-)131
1530 y(ence)12 b(b)q(et)o(w)o(een)g(pro)q(cessor)h(and)g(memory)d(sp)q
(eeds)j([43].)20 b(A)12 b(n)o(um)o(b)q(er)e(of)j(optimizations)e(\(cac)
o(hing,)131 1621 y(bu\013ering,)17 b(and)h(pip)q(elining\))d(ha)o(v)o
(e)h(b)q(een)h(prop)q(osed)h(in)f(the)f(literature)g(to)h(reduce)f(the)
h(impact)131 1711 y(of)k(long)g(memory)c(latencies)j(in)g(m)o(ultipro)q
(cessor)f(systems.)32 b(Ho)o(w)o(ev)o(er,)20 b(these)g(optimizations)
131 1801 y(can)g(p)q(oten)o(tially)e(cause)i(memory)c(op)q(erations)21
b(to)f(b)q(e)f(executed)f(in)h(an)h(order)g(di\013eren)o(t)e(from)131
1892 y(that)f(sp)q(eci\014ed)f(b)o(y)f(the)h(programmer,)e(sometimes)g
(resulting)h(in)h(incorrect)g(executions.)204 1984 y(The)g
Fh(memory)g(c)n(onsistency)i(mo)n(del)e Fi(\(also)g(called)f(the)h
Fh(memory)g(mo)n(del)g Fi(or)g(the)f Fh(c)n(onsistency)131
2074 y(mo)n(del)p Fi(\))22 b(of)h(a)f(shared-memory)e(m)o(ultipro)q
(cessor)g(system)h(is)g(an)i(arc)o(hitectural)d(sp)q(eci\014cation)131
2165 y(of)e(the)f(order)g(in)g(whic)o(h)g(memory)d(op)q(erations)k
(will)f Fh(app)n(e)n(ar)e Fi(to)j(execute)e(to)i(the)f(programmer.)131
2255 y(The)12 b(most)f(in)o(tuitiv)o(e)e(memory)f(mo)q(del)j(considers)
g(the)g(m)o(ultipro)q(cessor)f(as)j(a)f(m)o(ultiprogramm)n(ed)131
2345 y(unipro)q(cessor.)33 b(This)20 b(in)o(tuitiv)o(e)e(memory)f(mo)q
(del)i(is)g(called)g Fh(se)n(quential)k(c)n(onsistency)e
Fi(\(abbre-)131 2435 y(viated)c(as)h(SC\)[23)q(])f(and)h(guaran)o(tees)
f(that)h(all)f(memory)e(op)q(erations)j(app)q(ear)g(to)g(execute)e(one)
131 2526 y(at)k(a)f(time,)f(and)h(that)h(op)q(erations)g(of)g(a)f
(single)g(pro)q(cessor)h(app)q(ear)g(to)g(execute)d(in)i(the)g(order)
131 2616 y(sp)q(eci\014ed)d(b)o(y)g(that)g(pro)q(cessor's)h(program.)22
b(in)o(tuitiv)o(e)p eop
%%Page: 2 8
2 7 bop 1907 72 a Fi(2)204 222 y Fh(R)n(elaxe)n(d)21
b(c)n(onsistency)g Fi(mo)q(dels)e(relax)h(some)f(of)h(the)g(requiremen)
o(t)o(s)e(of)i(memory)d(ordering)131 312 y(enforced)e(b)o(y)g(sequen)o
(tial)g(consistency)l(.)20 b(One)15 b(of)h(the)f(most)g(relaxed)g(mo)q
(dels)f(is)i Fh(r)n(ele)n(ase)h(c)n(onsis-)131 403 y(tency)e
Fi(\(abbreviated)e(as)h(R)o(C\))f([14)q(].)19 b(Release)13
b(consistency)g(requires)f(sync)o(hronization)h(accesses)131
493 y(in)h(the)g(program)h(to)f(b)q(e)h(iden)o(ti\014ed)e(and)i
(classi\014ed)f(as)h(acquires)f(\(e.g.,)f(lo)q(c)o(ks\))h(or)h
(releases)f(\(e.g.,)131 583 y(unlo)q(c)o(ks\))k(and)g(allo)o(ws)g
(signi\014can)o(t)f(o)o(v)o(erlap)g(of)h(memory)d(accesses)j(b)q(et)o
(w)o(een)f(sync)o(hronization)131 674 y(p)q(oin)o(ts.)28
b(Release)18 b(consistency)f(can)i(th)o(us)f(get)h(increased)e(p)q
(erformance)g(at)i(the)f(exp)q(ense)g(of)h(a)131 764
y(more)c(complex)f(programming)h(mo)q(del.)204 856 y(Previous)h
(studies)g(ha)o(v)o(e)f(sho)o(wn)i(that)f(the)g(release)f(consistency)g
(mo)q(del)g(signi\014can)o(tly)g(out-)131 946 y(p)q(erforms)20
b(the)h(conceptually)e(simpler)f(mo)q(del)i(of)h(sequen)o(tial)e
(consistency)h([11,)g(16)q(,)g(13)q(,)g(44)q(],)131 1037
y(alb)q(eit)14 b(with)g(increased)f(programming)g(complexit)o(y)e([2)o
(,)j(14)q(].)20 b(Ho)o(w)o(ev)o(er,)12 b(the)i(\014rst)g(t)o(w)o(o)g
(of)h(these)131 1127 y(studies)f([11,)f(16)q(])g(assumed)g(single)g
(issue,)g(statically)f(sc)o(heduled,)h(previous-generation)h(pro)q
(ces-)131 1217 y(sors)k(with)e(blo)q(c)o(king)g(reads.)22
b(In)17 b(con)o(trast,)f(curren)o(t)g(and)h(next)f(generation)h(high)f
(p)q(erformance)131 1308 y(micropro)q(cessors)j(exploit)f(increased)h
(lev)o(els)e(of)j(instruction-lev)o(el)d(parallelism)g(\(ILP\),)i
(using)131 1398 y(aggressiv)o(e)e(tec)o(hniques)f(suc)o(h)h(as)h(m)o
(ultiple)c(issue,)j(dynamic)e(sc)o(heduling,)h(sp)q(eculativ)o(e)g
(execu-)131 1488 y(tion,)k(and)h(non-blo)q(c)o(king)f(reads.)32
b(The)20 b(third)f(study)h([13])g(assumed)f(an)h(aggressiv)o(e)g
(curren)o(t-)131 1578 y(generation)15 b(pro)q(cessor,)g(but)f(examined)
e(only)i(straigh)o(tforw)o(ard)g(impleme)o(n)o(tations)e(of)i(the)g
(con-)131 1669 y(sistency)22 b(mo)q(dels.)39 b(F)l(urther,)24
b(the)e(study)h(used)f(trace-driv)o(en)g(sim)o(ulations)f(whic)o(h)g
(required)131 1759 y(making)14 b(signi\014can)o(t)h(appro)o(ximations)g
(that)g(w)o(ere)g(not)h(v)m(alidated)f(\(e.g.,)f(constan)o(t)i(latency)
e(for)131 1849 y(remote)k(miss\).)30 b(The)20 b(fourth)g(study)g([44])f
(examined)f(one)i(optimization)d(with)j(non-blo)q(c)o(king)131
1940 y(reads,)c(but)h(assumed)e(single)h(issue,)g(statically)f(sc)o
(heduled)g(pro)q(cessors.)204 2032 y(Curren)o(t)20 b(and)h
(next-generation)f(pro)q(cessors)h(that)g(aggressiv)o(ely)e(exploit)g
(ILP)i(allo)o(w)e(t)o(w)o(o)131 2122 y(hardw)o(are)13
b(optimizations,)f(hardw)o(are-con)o(trolled)g(non-binding)h(prefetc)o
(hing)e(and)j(sp)q(eculativ)o(e)131 2213 y(reads)21 b([12],)g(that)f
(can)h(enhance)f(the)g(p)q(erformance)f(of)i(sequen)o(tial)e
(consistency)g(and)i(release)131 2303 y(consistency)l(.)g(These)c
(optimizations)e(ha)o(v)o(e)g(b)q(een)i(conjectured)f(to)g(equalize)f
(the)h(p)q(erformance)131 2393 y(of)f(consistency)f(mo)q(dels.)20
b(Hardw)o(are)14 b(prefetc)o(hing)g(and)h(sp)q(eculativ)o(e)e(reads)i
([12])f(ha)o(v)o(e)g(recen)o(tly)131 2483 y(b)q(egun)h(to)f(app)q(ear)g
(in)g(commerc)o(ial)c(micropro)q(cessors)j(\(e.g.)20
b(HP)14 b(P)l(A-8000)h([17],)f(In)o(tel)e(P)o(en)o(tium)131
2574 y(Pro)23 b([18],)f(and)h(MIPS)e(R10000)j([25]\),)e(and)h(re-op)q
(en)f(the)g(issue)g(of)g(whether)f(the)h(hardw)o(are)p
eop
%%Page: 3 9
3 8 bop 1907 72 a Fi(3)131 222 y(p)q(erformance)22 b(adv)m(an)o(tages)i
(of)g(relaxed)e(consistency)g(mo)q(dels)g(justify)g(the)h(tradeo\013)h
(in)f(pro-)131 312 y(gramming)15 b(complexit)o(y)-5 b(.)204
403 y(F)l(urthermore,)14 b(for)i(earlier)f(pro)q(cessors)i(with)f(blo)q
(c)o(king)f(reads,)h(the)f(decision)h(to)g(supp)q(ort)h(a)131
493 y(relaxed)i(consistency)g(mo)q(del)f(did)i(not)g(necessarily)e(ha)o
(v)o(e)h(to)h(b)q(e)g(made)f(at)h(pro)q(cessor)g(design)131
583 y(time,)c(since)i(writes)f(can)i(b)q(e)f(made)f(non-blo)q(c)o(king)
h(b)o(y)g(simply)e(pro)o(viding)i(an)g(early)g(ac)o(kno)o(wl-)131
674 y(edgmen)o(t)11 b(from)g(an)h(external)f(memory)e(con)o(troller.)19
b(Non-blo)q(c)o(king)12 b(reads,)h(ho)o(w)o(ev)o(er,)e(bring)h(in)g(a)
131 764 y(v)m(alue)k(needed)f(b)o(y)g(other)h(instructions)f(and)i(m)o
(ust)d(b)q(e)i(in)o(tegrated)f(in)o(to)g(the)h(pro)q(cessor)h(design,)
131 854 y(Th)o(us,)22 b(the)e(consistency)g(mo)q(del)g(no)o(w)h(has)g
(a)h(larger)e(impact)f(on)i(pro)q(cessor)h(design,)g(further)131
945 y(increasing)g(the)g(imp)q(ortance)f(of)h(understanding)h(the)f(b)q
(ene\014ts)h(of)f(relaxed)f(consistency)h(on)131 1035
y(curren)o(t)16 b(pro)q(cessors.)131 1213 y Fl(1.2)66
b(Con)n(tributions)25 b(of)c(this)j(Thesis)131 1335 y
Fi(This)18 b(thesis)f(p)q(erforms)f(the)i(\014rst)f(detailed)g(quan)o
(titativ)o(e)e(comparison)i(of)h(sev)o(eral)e(implem)o(en-)131
1426 y(tations)h(of)g(sequen)o(tial)e(consistency)g(\()p
Fg(SC)p Fi(\))i(and)g(release)e(consistency)h(\()p Fg(R)n(C)p
Fi(\))h(with)f(pro)q(cessors)131 1516 y(supp)q(orting)i(dynamic)c(sc)o
(heduling)i(and)g(non-blo)q(c)o(king)h(reads.)204 1606
y(W)l(e)k(use)g(detailed)f(execution-driv)o(en)e(sim)o(ulation)h(of)i
(six)g(applications)g(to)g(compare)f(the)131 1697 y(hardw)o(are)c(p)q
(erformance)f(of)h(SC)g(and)g(R)o(C)f(with)h(ILP)f(pro)q(cessors,)i(in)
e(b)q(oth)i(simple)c(implem)o(en-)131 1787 y(tations)f(as)g(w)o(ell)d
(as)j(with)f(the)g(enhancemen)o(ts)e(pro)o(vided)h(in)h(curren)o(t)f
(ILP)i(pro)q(cessors)g(\(hardw)o(are)131 1877 y(prefetc)o(hing)j(and)i
(sp)q(eculativ)o(e)e(reads\).)21 b(Our)c(sim)o(ulator)d(accurately)i
(mo)q(dels)f(the)h(in)o(ternals)f(of)131 1968 y(an)22
b(aggressiv)o(e)e(ILP)i(pro)q(cessor)g(similar)c(to)k(the)e(MIPS)h
(R10000)h(along)g(with)f(an)g(aggressiv)o(e)131 2058
y(memory)14 b(system.)19 b(The)e(k)o(ey)e(results)h(of)g(this)g(study)h
(are)f(as)h(follo)o(ws.)204 2171 y Ff(\017)24 b Fi(F)l(or)16
b(SC,)f(the)g(t)o(w)o(o)g(tec)o(hniques)f(dramatically)g(impro)o(v)o(e)
e(p)q(erformance,)i(pro)o(viding)h(up)h(to)253 2262 y(a)h(factor)f(of)h
(2)g(sp)q(eedup.)204 2386 y Ff(\017)24 b Fi(F)l(or)17
b(R)o(C,)f(o)o(v)o(erall,)f(the)i(t)o(w)o(o)g(tec)o(hniques)e(are)i
(not)g(v)o(ery)f(e\013ectiv)o(e,)f(b)q(ecause)i(R)o(C)f(already)253
2476 y(manages)g(to)h(hide)f(all)f(write)h(latency)f(and)i(a)g(large)f
(part)h(of)f(read)h(latency)l(.)204 2600 y Ff(\017)24
b Fi(Comparing)d(SC)g(and)g(R)o(C,)f(w)o(e)h(\014nd)g(that)g(R)o(C)g
(consisten)o(tly)e(outp)q(erforms)i(SC.)g(With)253 2690
y(write-through)h(primary)e(cac)o(hes,)h(R)o(C)g(ac)o(hiev)o(es)f(a)i
(sp)q(eedup)f(of)h(o)o(v)o(er)e(1.5)i(for)f(four)h(of)p
eop
%%Page: 4 10
4 9 bop 1907 72 a Fi(4)253 222 y(the)22 b(six)f(applications.)38
b(With)21 b(write-bac)o(k)g(primary)g(cac)o(hes,)h(the)f(sp)q(eedups)i
(are)f(less)253 312 y(dramatic,)g(but)h(still)e(fairly)h(large)g
(\(1.25)h(or)g(more)e(for)i(four)g(applications\).)40
b(With)22 b(a)253 403 y(more)f(aggressiv)o(e,)i(but)g(more)e(complex,)g
(cac)o(he-coherence)g(proto)q(col,)j(optimized)c(SC)253
493 y(ac)o(hiev)o(es)c(p)q(erformance)h(comparable)f(to)i(R)o(C)g(on)g
(t)o(w)o(o)f(applications,)h(but)g(a)g(signi\014can)o(t)253
583 y(gap)f(remains)e(for)i(others.)204 730 y(Ov)o(erall)h(our)h
(results)g(sho)o(w)g(that)h(R)o(C)f(hardw)o(are)g(has)h(signi\014can)o
(t)e(p)q(erformance)g(b)q(ene\014ts)131 820 y(o)o(v)o(er)h(SC)h(hardw)o
(are,)g(and)g(at)g(the)g(same)e(time)f(requires)i(less)g(system)f
(complexit)o(y)f(with)i(ILP)131 910 y(pro)q(cessors.)29
b(W)l(rite)18 b(latencies)f(that)i(are)f(not)h(o)o(v)o(erlapp)q(ed)f
(with)g(SC)h(are)f(mainly)e(resp)q(onsible)131 1000 y(for)h(the)f(p)q
(erformance)f(di\013erence)g(b)q(et)o(w)o(een)g(SC)i(and)g(R)o(C.)131
1184 y Fl(1.3)66 b(Organization)131 1309 y Fi(The)19
b(rest)g(of)g(this)g(thesis)608 1291 y Fe(\003)647 1309
y Fi(is)f(organized)i(as)f(follo)o(ws.)30 b(Chapter)19
b(2)g(presen)o(ts)g(the)g(bac)o(kground)131 1399 y(material)12
b(for)i(this)f(thesis.)20 b(Chapter)14 b(3)g(discusses)f(our)h(sim)o
(ulated)d(arc)o(hitecture,)h(metho)q(dology)l(,)131 1489
y(and)h(our)g(applications.)20 b(Chapter)13 b(4)f(describ)q(es)g(the)g
(results)g(of)h(our)g(comparison)e(of)i(consistency)131
1580 y(mo)q(dels.)30 b(Chapter)20 b(5)g(discusses)g(related)f(w)o(ork.)
31 b(Chapter)20 b(6)g(summarizes)d(the)i(results)g(from)131
1670 y(this)d(dissertation)h(and)g(discusses)f(future)g(w)o(ork.)p
131 2627 450 2 v 131 2670 a Fd(\003)150 2685 y Fc(Large)c(p)q(ortions)g
(of)f(this)h(thesis)g(are)g(based)g(on)g(an)f(earlier)h(w)o(ork)f([30)o
(])h(whic)o(h)f(is)h(cop)o(yrigh)o(t)f(b)o(y)g(the)i(A)o(CM,)e(1996.)p
eop
%%Page: 5 11
5 10 bop 1907 72 a Fi(5)853 361 y Fm(Chapter)28 b(2)821
564 y(Bac)n(kground)131 752 y Fi(This)33 b(c)o(hapter)g(pro)o(vides)f
(the)h(bac)o(kground)g(information)f(for)h(the)g(rest)g(of)g(the)g
(thesis.)131 842 y(Section)12 b(2.1)h(de\014nes)f(the)h(concept)f(of)h
(a)g(consistency)e(mo)q(del)h(and)h(brie\015y)e(describ)q(es)i(the)f
(consis-)131 933 y(tency)i(mo)q(dels)f(that)i(w)o(e)f(study)h(in)f
(this)g(thesis.)21 b(Section)14 b(2.2)h(describ)q(es)f(hardw)o(are)h
(prefetc)o(hing)131 1023 y(and)g(sp)q(eculativ)o(e)e(reads,)i(curren)o
(tly)d(implem)o(en)o(ted)f(hardw)o(are)k(optimizations)d(for)j
(consistency)131 1113 y(mo)q(dels)g(that)i(w)o(e)f(study)g(in)g(this)g
(w)o(ork.)131 1297 y Fl(2.1)66 b(Consistency)23 b(Mo)r(dels)131
1422 y Fi(The)g Fh(memory)f(c)n(onsistency)j(mo)n(del)d
Fi(\(also)h(called)f(the)g Fh(memory)g(mo)n(del)h Fi(or)g(the)f
Fh(c)n(onsistency)131 1512 y(mo)n(del)p Fi(\))f(of)g(a)g(shared-memory)
e(system)g(is)h(an)i(arc)o(hitectural)d(sp)q(eci\014cation)h(of)h(the)g
(order)g(in)131 1602 y(whic)o(h)f(memory)d(op)q(erations)k
Fh(app)n(e)n(ar)e Fi(to)i(execute)d(to)j(the)f(programmer.)31
b(The)20 b(programmer)131 1693 y(of)g(an)g(explicitly)d(parallel)i
(program)h(has)g(to)g(understand)g(the)g(memory)d(consistency)i(mo)q
(del)131 1783 y(to)i(reason)g(ab)q(out)g(the)f(results)g(that)g(the)g
(program)g(can)g(pro)q(duce.)33 b(The)20 b(system)f(\(hardw)o(are)131
1873 y(or)d(compiler\))d(designer,)i(on)h(the)f(other)h(hand,)g(has)g
(to)g(understand)g(the)f(memory)e(consistency)131 1963
y(mo)q(del)19 b(in)g(order)h(to)g(implem)o(en)n(t)d(only)i(those)h(p)q
(erformance)f(impro)o(ving)f(optimizations)g(that)131
2054 y(do)e(not)g(violate)e(the)h(constrain)o(ts)h(of)f(the)g(memory)e
(mo)q(del.)19 b(The)d(memory)c(consistency)j(mo)q(del)131
2144 y(th)o(us)21 b(forms)f(an)h(in)o(tegral)f(part)h(of)g(b)q(oth)g
(the)g(system)e(design)i(pro)q(cess)g(and)g(the)g(application)131
2234 y(co)q(de)c(writing)f(pro)q(cess.)204 2327 y(On)d(unipro)q(cessor)
g(systems,)f(the)g(memory)e(mo)q(del)h(presen)o(ted)h(to)h(the)f
(programmer)f(usually)131 2417 y(guaran)o(tees)20 b(that)g(all)f(mem)o
(ory)e(op)q(erations)j(app)q(ear)g(to)g(execute)e(one)h(at)h(a)g(time)d
(and)j(in)f(the)131 2507 y(order)c(sp)q(eci\014ed)f(in)h(the)f
(program.)21 b(The)14 b(unipro)q(cessor)i(system)d(includes)h(b)q(oth)h
(hardw)o(are)h(and)131 2597 y(compiler)f(optimizations)h(that)i(impro)o
(v)o(e)d(p)q(erformance)h(b)o(y)h(p)q(ossibly)h(reordering)f(or)h(o)o
(v)o(erlap-)131 2688 y(ping)h(m)o(ultiple)d(memory)g(op)q(erations.)30
b(Ho)o(w)o(ev)o(er,)17 b(care)i(is)g(tak)o(en)f(to)h(main)o(tain)f
(unipro)q(cessor)p eop
%%Page: 6 12
6 11 bop 1907 72 a Fi(6)131 222 y(con)o(trol)12 b(and)h(data)g(dep)q
(endences)e(whic)o(h)h(ensure)g(that)g(memory)d(op)q(erations)14
b Fh(app)n(e)n(ar)c Fi(to)j(execute)131 312 y(in)j(program)g(order.)204
405 y(The)h(memory)d(mo)q(del)i(in)g(a)i(m)o(ultipro)q(cessor)d(system)
g(is)i(more)f(complicated)e(than)k(that)f(of)131 495
y(the)g(unipro)q(cessor)h(system)e(b)q(ecause)i(of)g(the)f(p)q
(ossibilit)o(y)f(of)i(concurren)o(t)e(reads)i(and)g(writes)f(to)131
585 y(the)h(same)e(lo)q(cation)i(b)o(y)f(di\013eren)o(t)g(pro)q
(cessors.)27 b(A)17 b(n)o(um)o(b)q(er)f(of)i(memory)c(consistency)j(mo)
q(dels)131 676 y(for)f(m)o(ultipro)q(cessors)f(ha)o(v)o(e)g(b)q(een)h
(prop)q(osed)h(in)f(the)f(literature.)20 b(W)l(e)c(next)f(brie\015y)g
(discuss)i(the)131 766 y(t)o(w)o(o)f(consistency)g(mo)q(dels)f(that)i
(w)o(e)f(use)g(in)g(this)g(thesis.)131 928 y Fg(2.1.1)55
b(Sequen)n(tial)18 b(Consistency)131 1052 y Fi(The)i(most)g(in)o
(tuitiv)o(e)d(memory)g(mo)q(del)i(on)i(m)o(ultipro)q(cessors)d(retains)
i(the)g(c)o(haracteristics)f(of)131 1143 y(the)i(memory)e(mo)q(del)h
(on)i(unipro)q(cessors)g(and)g(extends)f(it)g(for)g(m)o(ultipro)q
(cessors.)36 b(A)20 b(simple)131 1233 y(de\014nition)f(of)g(this)h(mo)q
(del)d(w)o(ould)j(require)e(the)h(ordering)g(of)g(memory)e(op)q
(erations)j(to)g(mo)q(del)131 1323 y(that)i(pro)q(duced)g(b)o(y)f(a)g
(m)o(ultiprogramm)o(ed)d(unipro)q(cessor.)37 b(This)22
b(memory)c(mo)q(del)i(is)h(called)131 1414 y Fh(se)n(quential)d(c)n
(onsistency)e Fi(\(abbreviated)e(as)h(SC\))g(and)g(w)o(as)g(formally)e
(de\014ned)h(b)o(y)g(Lamp)q(ort)h([23)q(])131 1504 y(as)i(follo)o(ws:)
151 1687 y Fb([A)j(multip)o(ro)q(cesso)o(r)f(is)h(sequentially)h
(consistent)e(if)s(])i(the)e(result)g(of)h(any)h(execution)f(is)g(the)f
(same)131 1777 y(as)e(if)g(the)g(op)q(erations)g(of)g(all)h(the)e(p)o
(ro)q(cesso)o(rs)f(w)o(ere)h(executed)g(in)h(some)f(sequential)h(o)o
(rder)f(and)h(the)131 1867 y(op)q(erations)j(of)f(each)f(individual)j
(p)o(ro)q(cesso)o(r)d(app)q(ea)o(r)g(in)i(this)e(sequence)f(in)j(the)e
(o)o(rder)f(sp)q(eci\014ed)i(in)131 1957 y(the)d(p)o(rogram.)204
2050 y Fi(The)e(t)o(w)o(o)g(requiremen)o(ts)d(of)j(sequen)o(tial)f
(consistency)g(therefore)g(are)h(\(1\))g(all)g(memory)d(op)q(er-)131
2140 y(ations)k(app)q(ear)g(to)g(execute)e Fh(atomic)n(al)r(ly)h
Fi(\(one)h(at)f(a)h(time\))d(in)i(some)f(order)h(and)h(\(2\))f(all)g
(memory)131 2230 y(op)q(erations)19 b(of)g(a)f(pro)q(cessor)h(app)q
(ear)g(to)g(execute)d(in)i Fh(pr)n(o)n(gr)n(am)e(or)n(der)p
Fi(.)26 b(Figure)17 b(2.1)i(sho)o(ws)g(the)131 2321 y(conceptual)c
(represen)o(tation)f(of)h(a)h(sequen)o(tially)d(consisten)o(t)h(system)
g([1].)20 b(The)15 b(m)o(ultipro)q(cessor)131 2411 y(system)g(is)i
(conceptually)e(equal)h(to)h(m)o(ultiple)c(pro)q(cessors)18
b(sharing)f(a)g(single)f(memory)d(mo)q(dule)131 2501
y(through)18 b(a)e(cen)o(tral)f(switc)o(h.)204 2594 y(A)c(naiv)o(e)g
(implem)o(en)o(tation)e(of)i(sequen)o(tial)g(consistency)f(w)o(ould)i
(require)e(a)i(pro)q(cessor)h(to)e(w)o(ait)131 2684 y(for)k(a)g(memory)
d(op)q(eration)j(to)g(complete)d(b)q(efore)j(issuing)g(its)f(next)g
(memory)e(op)q(eration)j(in)g(pro-)p eop
%%Page: 7 13
7 12 bop 1907 72 a Fi(7)604 181 y
 13485261 11906499 10261954 22826270 23747215 34732769 startTexFig
 604 181 a
%%BeginDocument: Figures/sc_concept.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
77 469 24 24 Elli
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 282 296 ] concat
%I
77 469 24 24 Elli
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 437 296 ] concat
%I
77 469 24 24 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *times-bold-r*18*
/Times-Bold 18 SetF
%I t
[ 1 0 0 1 251 777 ] concat
%I
[
(P1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *times-bold-r*18*
/Times-Bold 18 SetF
%I t
[ 1 0 0 1 347 777 ] concat
%I
[
(P2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *times-bold-r*18*
/Times-Bold 18 SetF
%I t
[ 1 0 0 1 502 777 ] concat
%I
[
(Pn)
] Text
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I 3
53 373
197 421
340 373
3 BSpl
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
89 445 113 397 Line
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
328 445 292 385 Line
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
173 445 173 409 Line
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
185 338 185 278 Line
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
185 338 220 397 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *times-bold-r*18*
/Times-Bold 18 SetF
%I t
[ 1 0 0 1 335 562 ] concat
%I
[
(Memory)
] Text
End

Begin %I Elli
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -136 326 ] concat
%I
436 363 4 4 Elli
End

Begin %I Elli
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -77 336 ] concat
%I
436 363 4 4 Elli
End

Begin %I Elli
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 43 320 ] concat
%I
436 363 4 4 Elli
End

Begin %I Elli
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 9.5 347.5 ] concat
%I
424 422 2 3 Elli
End

Begin %I Elli
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 21.5 347.5 ] concat
%I
424 422 2 3 Elli
End

Begin %I Elli
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -2.5 347.5 ] concat
%I
424 422 2 3 Elli
End

Begin %I Rect
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 186 296 ] concat
%I
137 230 232 278 Rect
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 274 1068 a Fg(Figure)18 b(2.1)49 b Fi(Conceptual)16
b(represen)o(tation)g(of)g(sequen)o(tial)f(consistency)h(\(SC\))131
1271 y(gram)f(order.)21 b(This)16 b(requiremen)o(t,)c(ho)o(w)o(ev)o
(er,)i(can)i(seriously)f(impact)f(the)i(use)f(of)h(p)q(erformance)131
1362 y(impro)o(ving)e(optimizations)g(to)i(reduce)f(the)g(impact)f(of)i
(memory)c(latency)j(in)g(m)o(ultipro)q(cessors.)131 1452
y(These)e(optimizations)f(\(b)q(oth)i(at)f(the)g(hardw)o(are)g(and)h
(soft)o(w)o(are)f(lev)o(els\))e(use)i(bu\013ering,)h(pip)q(elin-)131
1542 y(ing)i(and)g(reordering)g(to)g(reduce)f(the)h(impact)e(of)i
(memory)d(latency)h(in)i(m)o(ultipro)q(cessors.)k(Note)131
1633 y(that)f(the)e(imp)q(ortance)g(of)h(suc)o(h)g(optimizations)e(is)i
(increased)f(in)h(m)o(ultipro)q(cessors)e(compared)131
1723 y(to)22 b(unipro)q(cessors)h(b)q(ecause)e(of)h(the)f(presence)g
(of)h(longer)f(\(remote\))f(memory)e(latencies)j(and)131
1813 y(coherence)15 b(misses.)204 1906 y(F)l(or)28 b(example,)h(hardw)o
(are)f(optimizations)f(lik)o(e)f(a)i(dynamically)d(sc)o(heduled)i(pro)q
(cessor)131 1996 y(\(whic)o(h)15 b(allo)o(ws)h(out-of-order)h
(execution\))d(or)i(a)g(write-bu\013er)f(\(whic)o(h)g(allo)o(ws)h
(reads)g(to)g(b)o(ypass)131 2086 y(writes\),)f(or)i(an)f(aggressiv)o(e)
g(cac)o(he)f(impleme)o(n)o(tation)e(\(lo)q(c)o(kup-free)i(cac)o(hes\),)
g(or)i(an)f(aggressiv)o(e)131 2176 y(net)o(w)o(ork)e(that)h(do)q(es)g
(not)h(main)o(tain)c(ordering)j(of)g(requests)f(can)h(all)f(result)g
(in)g(violations)h(of)g(the)131 2267 y(ordering)23 b(requiremen)o(ts)d
(of)j(sequen)o(tial)e(consistency)l(.)40 b(Similarly)l(,)21
b(compiler)g(optimizations)131 2357 y(lik)o(e)d(register)i(allo)q
(cation,)g(co)q(de)g(motion,)f(common)f(sub-expression)i(elimination,)e
(and)i(lo)q(op)131 2447 y(in)o(terc)o(hange)14 b(can)g(p)q(oten)o
(tially)f(reorder)i(\(or)f(eliminate\))e(memory)f(op)q(erations)16
b(and)f(violate)f(the)131 2538 y(requiremen)o(ts)i(of)j(sequen)o(tial)e
(consistency)h([1].)28 b(A)18 b(straigh)o(tforw)o(ard)i(implem)o(e)o(n)
o(tation)c(of)j(se-)p eop
%%Page: 8 14
8 13 bop 1907 72 a Fi(8)131 222 y(quen)o(tial)16 b(consistency)h(w)o
(ould)h(prev)o(en)o(t)d(the)j(use)f(of)h(these)f(optimizations)f(and)i
(constrain)g(the)131 312 y(pro)q(cessor)g(to)e(execute)f(memory)e(op)q
(erations)18 b(one)e(at)h(a)f(time)e(in)i(program)g(order.)204
405 y(Ho)o(w)o(ev)o(er,)j(sequen)o(tial)f(consistency)h(do)q(es)h(not)g
(require)f(memory)d(op)q(erations)21 b(to)f(b)q(e)g(exe-)131
495 y(cuted)d(in)g(this)h(w)o(a)o(y)l(,)f(it)g(only)g(requires)g(that)h
(the)f(execution)f Fh(app)n(e)n(ar)g Fi(as)j(if)e(the)g(memory)e(op)q
(er-)131 585 y(ations)j(w)o(ere)f(executed)f(one)i(at)g(a)g(time)d(in)j
(program)f(order)h([23].)25 b(Man)o(y)17 b(sc)o(hemes)e(using)j(this)
131 676 y(observ)m(ation)d(to)e(enhance)h(the)f(p)q(erformance)f(of)i
(sequen)o(tial)e(consistency)h(ha)o(v)o(e)g(b)q(een)g(prop)q(osed)131
766 y(in)20 b(the)f(literature.)30 b(In)19 b(this)h(thesis,)g(w)o(e)f
(ev)m(aluate)g(t)o(w)o(o)h(hardw)o(are)g(tec)o(hniques)e([12])h(that)h
(are)131 856 y(curren)o(tly)14 b(implem)o(en)o(te)o(d)f(in)i(commo)q
(dit)o(y)e(micropro)q(cessors)i(to)h(impro)o(v)o(e)c(the)k(p)q
(erformance)e(of)131 946 y(sequen)o(tial)19 b(consistency)g(\(describ)q
(ed)g(in)h(Section)f(2.2\).)32 b(Other)20 b(tec)o(hniques)e(ha)o(v)o(e)
h(b)q(een)h(pro-)131 1037 y(p)q(osed)13 b(to)f(impro)o(v)o(e)e(the)h(p)
q(erformance)g(of)h(sequen)o(tial)f(consistency)g([3,)h(24,)g(11)q(].)
19 b(Ho)o(w)o(ev)o(er,)11 b(these)131 1127 y(tec)o(hniques)17
b(either)g(require)f(v)o(ery)h(aggressiv)o(e)h(net)o(w)o(orks,)g
(complex)e(hardw)o(are,)i(or)g(aggressiv)o(e)131 1217
y(compiler)c(tec)o(hnology)l(.)131 1379 y Fg(2.1.2)55
b(Release)18 b(Consistency)131 1504 y Fi(Relaxed)c(memory)e
(consistency)i(mo)q(dels)g(allo)o(w)g(certain)h(memory)c(op)q(erations)
16 b(to)f(execute)f(out)131 1594 y(of)21 b(program)f(order)g(or)g
(non-atomically)l(,)g(th)o(us)g(enabling)g(more)e(optimizations)h(that)
i(require)131 1684 y(o)o(v)o(erlap)g(and)i(reordering)f(of)g(memory)e
(op)q(erations.)40 b(Ho)o(w)o(ev)o(er,)21 b(these)h(mo)q(dels)f
(require)g(the)131 1775 y(programmer)f(to)j(b)q(e)f(explicitly)d(a)o(w)
o(are)j(of)g(the)g(e\013ect)f(of)i(suc)o(h)f(reorderings)g(and)g(write)
g(the)131 1865 y(program)g(suitably)f(to)h(ensure)g(correctness.)37
b(A)21 b(n)o(um)o(b)q(er)f(of)i(relaxed)f(consistency)g(mo)q(dels,)131
1955 y(di\013ering)d(in)f(the)g(w)o(a)o(y)h(in)f(whic)o(h)g(they)g
(relax)g(the)h(requiremen)n(ts)d(b)q(et)o(w)o(een)i(v)m(arious)h
(classes)g(of)131 2046 y(memory)13 b(op)q(erations,)k(ha)o(v)o(e)e(b)q
(een)h(prop)q(osed)i([23,)d(8)q(,)g(15)q(,)h(9,)g(14,)g(19)q(,)f(41)q
(,)h(7].)21 b(W)l(e)16 b(next)f(discuss)131 2136 y(one)i(of)f(the)g
(most)g(relaxed)f(mo)q(dels)g({)i Fh(r)n(ele)n(ase)g(c)n(onsistency)h
Fi(\(abbreviated)e(as)h(R)o(C\).)204 2228 y(Release)23
b(consistency)g(exploits)f(the)i(k)o(ey)e(observ)m(ation)i(that)g(most)
f(programs)g(use)h(syn-)131 2319 y(c)o(hronizing)15 b(memory)d(op)q
(erations)17 b(to)f(ensure)f(ordering)h(b)q(et)o(w)o(een)f(concurren)o
(t)f(accesses)i(to)g(the)131 2409 y(same)e(memory)d(lo)q(cation)k(b)o
(y)f(di\013eren)o(t)g(pro)q(cessors.)22 b(Release)14
b(consistency)f(requires)h(that)h(syn-)131 2499 y(c)o(hronization)h
(accesses)g(in)f(the)h(program)g(b)q(e)g(iden)o(ti\014ed)e(and)j
(classi\014ed)f(as)g(either)f Fh(ac)n(quir)n(es)h Fi(or)131
2589 y Fh(r)n(ele)n(ases)p Fi(.)21 b(Informally)l(,)11
b(acquires)i(are)h(read)g(sync)o(hronization)g(op)q(erations)g(that)h
(are)f(used)f(to)i(or-)131 2680 y(der)i(data)h(op)q(erations,)f(and)h
(releases)e(are)h(write)f(sync)o(hronization)h(op)q(erations)h(that)f
(are)g(used)p eop
%%Page: 9 15
9 14 bop 1907 72 a Fi(9)131 222 y(to)21 b(order)g(data)h(op)q
(erations.)35 b(Release)20 b(consistency)g(uses)h(this)g(information)e
(to)i(allo)o(w)g(great)131 312 y(\015exibilit)o(y)14
b(in)i(reordering)h(\(and)g(bu\013ering/pip)q(elining\))f(of)h(data)h
(accesses)e(b)q(et)o(w)o(een)g(sync)o(hro-)131 403 y(nization)g(p)q
(oin)o(ts.)22 b(Release)15 b(consistency)h(is)g(formally)e(de\014ned)i
(as)h(follo)o(ws)f([14)q(]:)149 495 y Fb([A)h(system)f(is)i(release)e
(consistent)g(if)s(])j(\(1\))e(b)q(efo)o(re)g(an)h(o)o(rdina)o(ry)f
(read)g(o)o(r)g(write)g(access)f(is)h(allo)o(w)o(ed)131
585 y(to)22 b(p)q(erfo)o(rm)e(with)i(resp)q(ect)e(to)h(any)i(other)e(p)
o(ro)q(cesso)o(r,)f(all)j(p)o(revious)f(acquire)f(accesses)f(must)g(b)q
(e)131 676 y(p)q(erfo)o(rmed,)13 b(and)h(\(2\))g(b)q(efo)o(re)g(a)g
(release)f(access)g(is)h(allo)o(w)o(ed)h(to)f(p)q(erfo)o(rm)f(with)h
(resp)q(ect)e(to)i(any)h(other)131 766 y(p)o(ro)q(cesso)o(r,)j(all)j(p)
o(revious)e(o)o(rdina)o(ry)h(read)f(and)g(write)g(accesses)f(must)g(b)q
(e)h(p)q(erfo)o(rmed,)f(and)i(\(3\))g(all)131 856 y(sp)q(ecial)d
(accesses)e(a)o(re)g(p)o(ro)q(cesso)o(r)g(consistent)947
838 y Fe(y)980 856 y Fb(with)h(resp)q(ect)f(to)h(one)g(another.)204
949 y Fi(Figure)e(2.2)f(graphically)h(demonstrates)e(the)i
(di\013erence)e(b)q(et)o(w)o(een)h(straigh)o(tforw)o(ard)h(imple-)131
1039 y(men)o(tations)h(of)i(SC)f(and)h(R)o(C.)f(Figure)f(2.2\(a\))i
(sho)o(ws)g(the)f(execution)f(pro\014le)h(of)h(a)g(straigh)o(tfor-)131
1129 y(w)o(ard)d(implem)o(en)o(tation)d(of)j(sequen)o(tial)e
(consistency)h(where)g(memory)e(op)q(erations)k(execute)d(one)131
1219 y(after)i(the)g(other)h(in)e(order)i(and)f(Figure)g(2.2\(b\))h
(sho)o(ws)g(the)f(execution)f(pro\014le)g(of)i(a)g(straigh)o(tfor-)131
1310 y(w)o(ard)j(implem)o(en)o(tation)d(of)i(R)o(C.)g(As)h(seen)f(from)
f(the)i(\014gure,)f(the)g(main)g(adv)m(an)o(tage)h(of)g(release)131
1400 y(consistency)k(is)g(the)g(p)q(oten)o(tial)g(for)h(increased)f(p)q
(erformance)f(due)h(to)h(increased)e(o)o(v)o(erlap)h(of)131
1490 y(memory)14 b(op)q(erations.)22 b(The)16 b(disadv)m(an)o(tage)h
(is)f(the)g(more)f(complex)f(programming)h(mo)q(del.)204
1583 y(Note)d(that)g(the)g(previous)g(de\014nitions)f(of)h(sequen)o
(tial)f(consistency)g(and)i(release)e(consistency)131
1673 y(only)21 b(require)e(memory)e(op)q(erations)22
b(to)f Fh(app)n(e)n(ar)e Fi(to)i(execute)e(in)h(the)g(order)h(sp)q
(eci\014ed)f(b)o(y)g(the)131 1763 y(memory)e(mo)q(del.)34
b(A)20 b(n)o(um)o(b)q(er)g(of)h(tec)o(hniques)e(that)i(use)g(this)g
(observ)m(ation)h(to)f(enhance)g(the)131 1853 y(p)q(erformance)12
b(of)h(consistency)f(mo)q(dels)f(ha)o(v)o(e)h(b)q(een)h(prop)q(osed)h
(in)e(the)h(literature)e([12)q(,)h(3,)g(24)q(,)g(11)q(].)131
1944 y(W)l(e)18 b(next)g(discuss)h(t)o(w)o(o)f(suc)o(h)g(hardw)o(are)h
(tec)o(hniques)e(for)i(ILP)f(pro)q(cessors)i(that)f(can)g(b)q(e)f(used)
131 2034 y(to)h(impro)o(v)o(e)d(the)i(p)q(erformance)f(of)h
(consistency)g(mo)q(dels.)26 b(The)19 b(other)f(tec)o(hniques)f(are)h
(either)131 2124 y(to)q(o)h(restrictiv)o(e,)c(require)h(more)g
(aggressiv)o(e,)i(complex)d(system)h(implem)o(en)o(tations,)f(or)j(do)g
(not)131 2215 y(app)q(ear)f(to)g(giv)o(e)e(signi\014can)o(t)h(p)q
(erformance)f(b)q(ene\014ts.)p 131 2288 450 2 v 131 2331
a Fd(y)149 2346 y Fc(Informally)l(,)8 b(pro)q(cessor)k(consistency)g
(di\013ers)f(from)e(sequen)o(tial)h(consistency)i(in)e(that)g(it)g
(allo)o(ws)f(reads)j(to)e(b)o(ypass)131 2396 y(writes.)19
b(A)14 b(more)f(formal)e(de\014nition)j(can)g(b)q(e)g(found)g(in)27
b([15)o(,)13 b(14].)p eop
%%Page: 10 16
10 15 bop 1882 72 a Fi(10)156 181 y
 27957248 5525668 4670504 29141319 32627752 34666987 startTexFig
 156 181 a
%%BeginDocument: Figures/sc_eg2.eps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 4 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Red
1 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 83.9025 325.732 ] concat
%I
60 365 119 377 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 65.9147 325.732 ] concat
%I
131 365 203 377 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0.74902 0 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 115.114 349.732 ] concat
%I
155 341 191 353 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 152.313 372.732 ] concat
%I
155 318 227 330 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Orange
1 0.647059 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.0625 SetP
%I t
[ 1 0 0 1 141.512 325.732 ] concat
%I
239 365 287 377 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Red
1 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 202.711 408.732 ] concat
%I
227 282 299 294 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 179.911 420.732 ] concat
%I
323 270 382 282 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0.74902 0 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 240.11 456.732 ] concat
%I
323 234 430 246 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0.74902 0 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 348.545 492.732 ] concat
%I
323 198 382 210 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.0625 SetP
%I t
[ 1 0 0 1 229.309 420.732 ] concat
%I
442 270 514 282 Rect
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 126.215 722.122 ] concat
%I
[
(Acquire)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 369.512 722.122 ] concat
%I
[
(Release)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 431.711 683.748 ] concat
%I
[
(Acquire)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 672.309 683.748 ] concat
%I
[
(Release)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Red
1 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 76.7155 325.732 ] concat
%I
48 365 119 377 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 72 328 ] concat
%I
36 425 645 461 Rect
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 268.614 722.122 ] concat
%I
[
(Data)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 567.01 683.748 ] concat
%I
[
(Data)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 764 591 a Fi(\(a\))17 b(Sequen)o(tial)e(consistency)192
609 y
 26838959 8551629 4670504 26115358 31509463 34666987 startTexFig
 192 609 a
%%BeginDocument: Figures/rc_eg2.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Red
1 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 84 328 ] concat
%I
60 365 119 377 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 72 328 ] concat
%I
131 365 203 377 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0 0.996109 0.996109 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 84 340 ] concat
%I
155 341 191 353 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 72 351 ] concat
%I
155 318 227 330 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Orange
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.0625 SetP
%I t
[ 1 0 0 1 60 304 ] concat
%I
239 365 287 377 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Red
1 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 12 363 ] concat
%I
227 282 299 294 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 -11 376 ] concat
%I
323 270 382 282 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0 0.996109 0.996109 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 -12 399 ] concat
%I
323 234 430 246 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0 0.996109 0.996109 SetCBg
%I p
0.625 SetP
%I t
[ 1 0 0 1 13 424 ] concat
%I
323 198 382 210 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.0625 SetP
%I t
[ 1 0 0 1 -24 364 ] concat
%I
442 270 514 282 Rect
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 120 722 ] concat
%I
[
(Acquire)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 299 722 ] concat
%I
[
(Release)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 239 615 ] concat
%I
[
(Acquire)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 418 615 ] concat
%I
[
(Release)
] Text
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg Red
1 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 72 328 ] concat
%I
48 365 119 377 Rect
End

Begin %I Rect
%I b 65535
1 1 1 [] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 72 328 ] concat
%I
36 425 645 461 Rect
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 227 722 ] concat
%I
[
(Data)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-bold-r*18*
/Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 335 615 ] concat
%I
[
(Data)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 794 1211 a Fi(\(b\))h(Release)f(consistency)556 1341
y Fg(Figure)j(2.2)48 b Fi(Comparison)16 b(of)h(straigh)o(tforw)o(ard)
617 1401 y(impleme)o(n)o(tations)d(of)i(consistency)g(mo)q(dels)131
1601 y Fl(2.2)66 b(Hardw)n(are)35 b(T)-6 b(ec)n(hniques)36
b(to)e(Enhance)h(the)g(P)n(erformance)f(of)284 1714 y(Consistency)23
b(Mo)r(dels)131 1838 y Fi(Curren)o(t)h(and)h(next-generation)f(pro)q
(cessors)i(exploit)d(instruction-lev)o(el)f(parallelism)g(\(ILP\))131
1928 y(using)f(tec)o(hniques)f(lik)o(e)e(m)o(ultiple)g(instruction)i
(issue,)i(dynamic)d(\(out-of-order\))j(sc)o(heduling,)131
2019 y(register)i(renaming,)i(sp)q(eculativ)o(e)d(execution,)i(and)h
(non-blo)q(c)o(king)f(reads.)47 b(The)24 b(pro)q(cessor)131
2109 y(exploits)g(ILP)g(b)o(y)g(examining)f(a)h(large)h(windo)o(w)f(of)
h(instructions)f(\(called)f(the)h Fh(instruction)131
2199 y(window)h Fi(or)g Fh(active)h(list)f Fi([25]\))f(at)h(a)g(time,)e
(and)i(executes)e(the)i(instructions)f(that)g(are)h(not)131
2290 y(dep)q(enden)o(t)16 b(on)i(the)e(completion)f(of)i(an)o(y)f
(previous)h(incomplete)d(instructions.)22 b(F)l(or)17
b(suc)o(h)g(pro-)131 2380 y(cessors,)i(Gharac)o(horlo)q(o)g(et)f(al.)g
(ha)o(v)o(e)f(prop)q(osed)i(t)o(w)o(o)f(hardw)o(are)h(tec)o(hniques)e
(to)h(impro)o(v)o(e)e(the)131 2470 y(p)q(erformance)f(of)h(consistency)
f(mo)q(dels.)20 b(These)c(t)o(w)o(o)g(tec)o(hniques,)e(hardw)o(are)i
(prefetc)o(hing)f(and)131 2560 y(sp)q(eculativ)o(e)f(reads)h([12],)f
(exploit)g(the)h(instruction)f(lo)q(ok)m(ahead)i(windo)o(w)f(in)g(an)g
(aggressiv)o(e)g(ILP)p eop
%%Page: 11 17
11 16 bop 1882 72 a Fi(11)156 181 y
 28417720 9946201 4012687 24602378 35785277 35785277 startTexFig
 156 181 a
%%BeginDocument: Figures/prefetching_eg.eps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 43690
3 0 0 [1 3] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 72 328 ] concat
%I
24 449 741 485 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -0.255924 ] concat

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 669.106 ] concat
%I
[
(Write)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 669.309 ] concat
%I
[
(reg2, B)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -5.03638 ] concat

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 635.715 ] concat
%I
[
(Read)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 635.512 ] concat
%I
[
(C, reg3)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 5.23598 ] concat

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 703.089 ] concat
%I
[
(reg1, A)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 701.089 ] concat
%I
[
(Write)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -9.2234 ] concat

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 602.309 ] concat
%I
[
(E[reg3], reg4)
] Text
End

Begin %I Text
%I cfg Blue
0 0 1 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 600.545 ] concat
%I
[
(Read)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 134.581 259.024 ] concat

Begin %I Text
%I cfg Red
1 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 292 506 ] concat
%I
[
(Instruction)
] Text
End

Begin %I Text
%I cfg Red
1 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 302 486.797 ] concat
%I
[
(Window)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
91 339 131 371 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
131 307 203 339 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
203 275 251 307 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
251 243 291 275 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 243 475 275 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 275 475 307 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 307 475 339 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 339 475 371 Rect
End

Begin %I Text
%I cfg Red
1 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 105.561 765.553 ] concat
%I
[
(Simple SC implementation)
] Text
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 514.451 274.614 ] concat
%I
91 339 131 371 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 466.484 274.614 ] concat
%I
131 307 203 339 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0.74902 0 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 380.142 274.614 ] concat
%I
203 275 251 307 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 418.516 274.614 ] concat
%I
251 243 291 275 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg Indigo
0.74902 0 1 SetCBg
%I p
0.9375 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
523 307 563 339 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.9375 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
595 275 603 307 Rect
End

Begin %I Text
%I cfg Red
1 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 623.179 765.398 ] concat
%I
[
(SC with prefetching)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 695 871 a Fi(\(a\))16 b(E\013ect)h(of)f(hardw)o(are)h(prefetc)o(hing)
156 889 y
 28417720 9946201 4012687 24602378 35785277 35785277 startTexFig
 156 889 a
%%BeginDocument: Figures/specload_eg.eps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 11 def
/arrowWidth 6 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 43690
3 0 0 [1 3] 0 SetB
%I cfg White
1 1 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 1 0 0 1 72 328 ] concat
%I
24 449 741 485 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -0.255924 ] concat

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 669.106 ] concat
%I
[
(Write)
] Text
End

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 669.309 ] concat
%I
[
(reg2, B)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -5.03638 ] concat

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 635.715 ] concat
%I
[
(Read)
] Text
End

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 635.512 ] concat
%I
[
(C, reg3)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 5.23598 ] concat

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 703.089 ] concat
%I
[
(reg1, A)
] Text
End

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 701.089 ] concat
%I
[
(Write)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -9.2234 ] concat

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 445.191 602.309 ] concat
%I
[
(E[reg3], reg4)
] Text
End

Begin %I Text
%I cfg Blue
0 0 0.996109 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 390.972 600.545 ] concat
%I
[
(Read)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 134.581 259.024 ] concat

Begin %I Text
%I cfg Red
0.996109 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 292 506 ] concat
%I
[
(Instruction)
] Text
End

Begin %I Text
%I cfg Red
0.996109 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 302 486.797 ] concat
%I
[
(Window)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
91 339 131 371 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
131 307 203 339 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
203 275 251 307 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
251 243 291 275 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 243 475 275 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 275 475 307 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 307 475 339 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
315 339 475 371 Rect
End

Begin %I Text
%I cfg Red
0.996109 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 105.561 765.553 ] concat
%I
[
(Simple SC implementation)
] Text
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 514.451 274.614 ] concat
%I
91 339 131 371 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 466.484 274.614 ] concat
%I
131 307 203 339 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 380.142 274.614 ] concat
%I
203 275 251 307 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.875 SetP
%I t
[ 1.19919 -0 -0 1.19919 380.142 274.614 ] concat
%I
251 243 291 275 Rect
End

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 0.996109 SetCFg
%I cbg Indigo
0.74902 0 1 SetCBg
%I p
0.9375 SetP
%I t
[ 1.19919 -0 -0 1.19919 -3.59756 274.614 ] concat
%I
523 307 563 339 Rect
End

Begin %I Text
%I cfg Red
0.996109 0 0 SetCFg
%I f *helvetica-medium-r*18*
Helvetica 18 SetF
%I t
[ 1 0 0 1 620.018 765.741 ] concat
%I
[
(SC with speculative)
(   read  execution)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 736 1579 a Fi(\(b\))g(E\013ect)f(of)h(sp)q(eculativ)o(e)d(reads)229
1709 y Fg(Figure)k(2.3)48 b Fi(E\013ect)17 b(of)f(hardw)o(are)h
(prefetc)o(hing)e(and)i(sp)q(eculativ)o(e)e(reads)h(with)g(SC)131
1910 y(pro)q(cessor)h(and)g(tak)o(e)e(e\013ect)h(whenev)o(er)f(the)h
(constrain)o(ts)g(of)g(the)g(memory)d(consistency)j(mo)q(del)131
2000 y(could)g(restrict)g(the)g(issue)g(of)g(a)h(memory)c(op)q
(eration.)204 2092 y(Section)18 b(2.2.1)g(describ)q(es)g(hardw)o
(are-con)o(trolled)f(non-binding)i(prefetc)o(hing)e(from)g(the)g(in-)
131 2183 y(struction)f(windo)o(w,)g(and)h(Section)f(2.2.2)h(describ)q
(es)e(sp)q(eculativ)o(e)g(read)i(execution.)131 2345
y Fg(2.2.1)55 b(Hardw)n(are)20 b(prefetc)n(hing)131 2469
y Fi(Prefetc)o(hing)13 b(seeks)h(to)h(bring)f(the)g(con)o(ten)o(ts)f
(of)i(a)f(memory)e(lo)q(cation)i(in)o(to)g(the)g(pro)q(cessor)h(cac)o
(he)131 2559 y(b)q(efore)k(the)f(demand)g(access)h(to)g(that)g(lo)q
(cation.)29 b(The)19 b(hardw)o(are)g(prefetc)o(h)e(tec)o(hnique)g
(issues)131 2650 y(a)i(hardw)o(are-con)o(trolled)f(non-binding)h
(prefetc)o(h)e([16])h(for)g(a)h(deco)q(ded)f(memory)e(op)q(eration)j
(in)p eop
%%Page: 12 18
12 17 bop 1882 72 a Fi(12)131 222 y(the)14 b(instruction)g(windo)o(w)g
(as)g(so)q(on)i(as)f(its)e(address)i(is)f(a)o(v)m(ailable,)f(and)i(if)e
(the)h(op)q(eration)h(cannot)131 312 y(b)q(e)20 b(issued)g(otherwise)f
(due)h(to)g(consistency)f(constrain)o(ts.)31 b(This)20
b(tec)o(hnique)e(seeks)h(to)h(reduce)131 403 y(memory)14
b(latency)i(b)o(y)g(partially)g(servicing)f(large)i(latency)f(accesses)
g(that)h(are)g(dela)o(y)o(ed)e(due)i(to)131 493 y(consistency)i
(constrain)o(ts.)31 b(In)19 b(addition)g(to)h(the)f(data)h(of)g(the)f
(sp)q(eci\014c)g(prefetc)o(hed)e(lo)q(cation,)131 583
y(prefetc)o(hes)i(usually)h(bring)g(in)g(extra)g(data,)i(t)o(ypically)c
(other)i(data)h(that)g(is)f(included)f(in)h(one)131 674
y(transfer)d(unit)f(of)g(the)g(cac)o(he)g(\(the)g(cac)o(he)f(line)g
(size\).)204 766 y(A)20 b(read)g(prefetc)o(h)f(can)h(b)q(e)g(used)g(to)
h(bring)f(the)g(data)h(in)o(to)e(read-shared)i(state)f(while)g(the)131
856 y(op)q(eration)h(is)e(dela)o(y)o(ed)f(due)i(to)g(consistency)f
(requiremen)o(ts.)28 b(On)20 b(a)g(sequen)o(tially)e(consisten)o(t)131
946 y(system,)e(read)i(prefetc)o(hes)e(can)h(b)q(e)h(used)f(to)h
(obtain)g(remote)e(data)i(for)g(reads)g(while)e(a)i(regular)131
1037 y(memory)f(op)q(eration)k(is)f(p)q(ending.)33 b(On)20
b(a)g(release)f(consisten)o(t)g(system,)g(read)i(prefetc)o(hes)d(can)
131 1127 y(b)q(e)h(used)f(to)g(prefetc)o(h)f(reads)i(past)g(acquire)e
(op)q(erations.)28 b(Since)17 b(non-binding)i(prefetc)o(hes)e(are)131
1217 y(still)h(visible)e(to)j(coherence)e(actions)i(whic)o(h)f(mak)o(e)
e(sure)j(that)g(the)f(v)m(alue)g(is)g(up)q(dated,)h(w)o(e)f(are)131
1308 y(guaran)o(teed)f(that)g(the)f(actual)g(demand)f(read)i(will)e
(return)h(the)g(correct)f(v)m(alue.)204 1400 y(A)20 b(write)e(prefetc)o
(h)h(\(also)h(referred)e(to)i(as)g(a)g(read-exclusiv)o(e)e(prefetc)o
(h\))g(can)i(b)q(e)f(issued)h(to)131 1490 y(acquire)12
b(exclusiv)o(e)e(o)o(wnership)i(of)h(the)f(data)h(in)f(addition)h(to)g
(fetc)o(hing)e(the)h(data)h(in)o(to)f(the)h(cac)o(he.)131
1581 y(A)f(write)g(prefetc)o(h)g(can)g(b)q(e)h(issued)f(in)g(SC)h(when)
g(the)f(actual)h(write)f(op)q(eration)h(is)f(dela)o(y)o(ed)f(due)i(to)
131 1671 y(consistency)i(requiremen)n(ts.)j(Additionally)l(,)c(with)h
(ILP)g(pro)q(cessors,)h(writes)f(cannot)g(b)q(e)g(issued)131
1761 y(till)i(they)h(reac)o(h)g(the)g(head)h(of)f(the)h(instruction)f
(windo)o(w,)g(to)h(ensure)f(precise)g(exception)f([38].)131
1851 y(Store)e(prefetc)o(hes)e(can)i(b)q(e)f(used)h(in)f(b)q(oth)i(SC)f
(and)g(R)o(C)f(to)h(initiate)e(o)o(wnership)i(requests)f(for)h(all)131
1942 y(suc)o(h)h(store)h(op)q(erations)g(in)f(the)g(instruction)g
(windo)o(w.)204 2034 y(Figure)k(2.3\(a\))h(demonstrates)e(the)h(b)q
(ene\014ts)g(with)g(hardw)o(are)g(prefetc)o(hing)f(from)g(the)g(in-)131
2124 y(struction)i(windo)o(w)g(on)h(SC.)f(As)f(the)h(\014gure)g(sho)o
(ws,)i(hardw)o(are)e(prefetc)o(hing)f(is)h(an)g(e\013ectiv)o(e)131
2215 y(tec)o(hnique)16 b(for)i(pip)q(elining)f(large)h(latency)f
(references)g(ev)o(en)f(when)i(the)g(memory)d(consistency)131
2305 y(mo)q(del)e(disallo)o(ws)i(it.)20 b(A)14 b(signi\014can)o(t)g
(amoun)o(t)g(of)g(the)h(latency)e(seen)h(in)g(the)h(access)f(of)h(lo)q
(cations)131 2395 y(B)h(and)h(C)f(is)g(hidden)g(b)o(y)g(hardw)o(are)h
(prefetc)o(hing.)204 2488 y(Hardw)o(are)23 b(prefetc)o(hing,)g(ho)o(w)o
(ev)o(er,)g(fails)g(to)h(b)q(o)q(ost)g(p)q(erformance)e(in)h(cases)g
(when)h(out-)131 2578 y(of-order)30 b(consumption)e(of)h(prefetc)o(hed)
f(v)m(alues)h(is)g(imp)q(ortan)o(t,)h(e.g.,)h(the)e(read)g(of)g(E)h(in)
131 2668 y(Figure)16 b(2.3\(a\).)22 b(W)l(e)16 b(next)g(describ)q(e)f
(a)i(tec)o(hnique)d(that)j(attempts)e(to)i(address)g(this)f(problem.)p
eop
%%Page: 13 19
13 18 bop 1882 72 a Fi(13)131 222 y Fg(2.2.2)55 b(Sp)r(eculativ)n(e)17
b(reads)131 345 y Fi(Sp)q(eculativ)o(e)i(reads)h([12])g(extend)f(the)h
(b)q(ene\014ts)g(of)g(hardw)o(are)g(prefetc)o(hing)f(b)o(y)g(sp)q
(eculativ)o(ely)131 435 y(using)j(the)f(v)m(alues)h(of)g(reads)g
(brough)o(t)g(in)o(to)f(the)g(cac)o(he,)h(ev)o(en)e(while)h(previous)g
(demand)g(ac-)131 525 y(cesses)d(are)g(incomplete.)23
b(If)17 b(a)h(p)q(ossible)h(violation)e(of)h(memory)d(ordering)j(is)g
(detected)e(due)i(to)131 615 y(early)e(use)g(of)h(suc)o(h)f(data,)g
(the)g(system)f(rolls)h(bac)o(k)g(the)g(sp)q(eculativ)o(e)f(read)h(and)
h(all)f(subsequen)o(t)131 706 y(instructions.)204 796
y(Sp)q(eculativ)o(e)g(read)h(execution)f(preserv)o(es)h(correctness)f
(b)o(y)h(requiring)f(that)i(an)o(y)f(data)h(that)131
886 y(is)e(sp)q(eculativ)o(ely)e(read)i(remain)e(visible)g(to)i(the)g
(coherence)e(mec)o(hanism.)k(This)e(is)g(ac)o(hiev)o(ed)e(b)o(y)131
977 y(using)19 b(additional)f(on-c)o(hip)f(hardw)o(are)i(in)e(the)h
(form)f(of)h(a)h Fh(sp)n(e)n(culative)h(r)n(e)n(ad)e(bu\013er)g
Fi([12].)26 b(The)131 1067 y(sp)q(eculativ)o(e)15 b(read)h(bu\013er)h
(m)o(ust)d(comm)o(unicate)f(with)j(the)g(cac)o(he,)f(trac)o(king)g(an)o
(y)h(in)o(v)m(alidation,)131 1157 y(up)q(date,)21 b(or)f(cac)o(he)f
(replacemen)o(t)e(op)q(erations)k(on)f(cac)o(he)f(lines)g(that)h(ha)o
(v)o(e)f(had)h(reads)g(issued)131 1247 y(sp)q(eculativ)o(ely)13
b(to)i(them.)k(If)c(suc)o(h)f(a)i(message)e(reac)o(hes)g(the)g(sp)q
(eculativ)o(e)g(read)h(bu\013er,)g(the)g(unit)131 1338
y(m)o(ust)h(then)i(in)o(terface)e(with)i(the)f(pro)q(cessor's)i(windo)o
(w)e(of)h(activ)o(e)f(instructions)g(and)h(not)g(only)131
1428 y(reissue)i(the)g(sp)q(eculated)g(read,)g(but)g(also)h(roll)f(bac)
o(k)f(all)h(subsequen)o(t)g(pro)q(cessor)h(op)q(erations.)131
1518 y(The)15 b(mec)o(hanism)c(used)j(to)h(rollbac)o(k)e(pro)q(cessor)i
(op)q(erations)h(after)e(a)h(branc)o(h)f(misprediction)e(or)131
1609 y(an)17 b(exception)e(reco)o(v)o(ery)g(can)h(b)q(e)g(used)h(to)f
(implem)o(en)o(t)d(this.)204 1699 y(As)i(with)h(hardw)o(are)f(prefetc)o
(hing)f(from)g(the)h(instruction)g(windo)o(w,)h(sp)q(eculativ)o(e)d
(reads)j(can)131 1789 y(b)q(e)f(used)f(with)h(b)q(oth)g(SC)g(and)g(R)o
(C)f(whenev)o(er)g(a)g(read)h(op)q(eration)g(is)g(not)g(issued)f(b)q
(ecause)h(of)g(the)131 1879 y(constrain)o(ts)d(of)f(the)g(consistency)g
(mo)q(del.)18 b(In)11 b(SC,)g(sp)q(eculativ)o(e)f(read)h(execution)f
(is)h(used)h(with)f(all)131 1970 y(reads;)k(in)e(R)o(C,)g(sp)q
(eculativ)o(e)f(read)i(execution)f(is)g(used)h(with)f(reads)i(past)f
(an)g(acquire)f(op)q(eration.)131 2060 y(Figure)h(2.3\(b\))h
(demonstrates)e(the)h(b)q(ene\014ts)h(of)f(sp)q(eculativ)o(e)f(reads)i
(used)f(in)g(conjunction)g(with)131 2150 y(hardw)o(are)22
b(prefetc)o(hing)e(on)h(an)h(SC)f(system.)34 b(As)21
b(seen)g(from)f(the)h(\014gure,)h(a)f(p)q(ortion)h(of)g(the)131
2241 y(latency)14 b(to)h(access)g(lo)q(cation)g(E)h(can)f(no)o(w)g(b)q
(e)g(hidden)f(with)h(sp)q(eculativ)o(e)f(read)h(execution.)k(The)131
2331 y(abilit)o(y)13 b(to)i(consume)f(v)m(alues)g(sp)q(eculativ)o(ely)f
(can)i(th)o(us)g(lead)f(to)h(impro)o(v)o(ed)d(p)q(erformance)i(of)h
(the)131 2421 y(system)204 2511 y(Note)21 b(that)h(b)q(oth)g(these)e
(tec)o(hniques)g(imp)q(ose)g(certain)g(basic)h(requiremen)o(ts)d(on)k
(the)f(sys-)131 2602 y(tem)c(lik)o(e)h(the)g(need)h(for)g(a)g(hardw)o
(are-coherence)g(proto)q(col)g(and)h(non-blo)q(c)o(king)f(cac)o(hes.)29
b(One)131 2692 y(imp)q(ortan)o(t)19 b(distinction)h(b)q(et)o(w)o(een)f
(the)g(prefetc)o(h)g(and)i(sp)q(eculativ)o(e)d(read)j(tec)o(hniques)d
(is)i(that)p eop
%%Page: 14 20
14 19 bop 1882 72 a Fi(14)131 222 y(the)19 b(prefetc)o(hing)f(mec)o
(hanism)e(is)j(useful)f(ev)o(en)g(for)i(unipro)q(cessors)g(\(to)f
(prefetc)o(h)f(writes\))h(and)131 312 y(can)i(therefore)f(b)q(e)h(exp)q
(ected)e(to)i(b)q(e)g(emplo)o(y)o(ed)d(for)j(purp)q(oses)h(other)e
(than)i(the)e(consistency)131 403 y(mo)q(del)d(implem)o(en)o(tation.)24
b(The)19 b(sp)q(eculativ)o(e)d(read)j(bu\013er)f(and)h(its)f(data)h
(and)g(con)o(trol)f(paths,)131 493 y(ho)o(w)o(ev)o(er,)c(are)i
(required)f(only)g(for)h(aggressiv)o(e)g(implem)o(en)n(tations)e(of)i
(consistency)f(mo)q(dels)g(and)131 583 y(ha)o(v)o(e)20
b(no)i(application)e(to)h(unipro)q(cessors.)36 b(F)l(urthermore,)20
b(these)g(need)h(to)g(b)q(e)g(implem)o(en)o(t)o(ed)131
674 y(on)c(the)g(pro)q(cessor)g(c)o(hip.)k(Both)c(these)f(tec)o
(hniques)f(ha)o(v)o(e)h(recen)o(tly)e(b)q(egun)k(to)f(app)q(ear)g(in)f
(com-)131 764 y(mercial)i(micropro)q(cessors)h(\(e.g.)32
b(HP)20 b(P)l(A-8000)i([17],)e(In)o(tel)f(P)o(en)o(tium)e(Pro)k([18],)f
(and)h(MIPS)131 854 y(R10000)d([25)q(]\).)204 946 y(The)e(remaining)e
(c)o(hapters)h(in)g(the)h(thesis)f(describ)q(e)g(our)h(exp)q(erimen)o
(tal)c(metho)q(dology)k(and)131 1037 y(presen)o(t)h(our)g(results)g(ev)
m(aluating)g(the)g(p)q(erformance)e(of)j(consistency)e(mo)q(dels)g
(with)h(hardw)o(are)131 1127 y(prefetc)o(hing)e(and)i(sp)q(eculativ)o
(e)e(reads.)p eop
%%Page: 15 21
15 20 bop 1882 72 a Fi(15)853 361 y Fm(Chapter)28 b(3)598
564 y(Ev)l(aluation)e(Metho)r(dology)131 751 y Fi(This)20
b(c)o(hapter)g(describ)q(es)f(the)g(ev)m(aluation)h(metho)q(dology)g
(used)g(in)f(this)h(thesis.)32 b(Section)19 b(3.1)131
841 y(describ)q(es)13 b(the)g(sim)o(ulated)e(arc)o(hitecture)g(and)j
(Section)e(3.2)i(describ)q(es)e(our)i(sim)o(ulation)d(en)o(viron-)131
931 y(men)o(t.)19 b(Section)13 b(3.3)h(describ)q(es)f(the)h(p)q
(erformance)e(metrics)g(w)o(e)h(use)h(in)f(this)h(thesis.)20
b(Section)13 b(3.4)131 1022 y(describ)q(es)j(the)g(applications)g(w)o
(e)g(use.)131 1202 y Fl(3.1)66 b(Sim)n(ulated)25 b(Arc)n(hitectures)131
1325 y Fi(This)c(section)g(describ)q(es)f(our)i(sim)o(ulated)c(arc)o
(hitecture.)34 b(Section)20 b(3.1.1)h(\014rst)g(describ)q(es)g(our)131
1415 y(m)o(ultipro)q(cessor)h(system)g(including)g(the)h(memory)e
(system)g(and)j(net)o(w)o(ork.)42 b(Sections)23 b(3.1.2)131
1505 y(and)d(3.1.3)f(describ)q(e)f(our)h(base)h(pro)q(cessor)f(and)h
(the)e(v)m(ariations)i(to)f(the)g(base)g(pro)q(cessor)h(that)131
1596 y(w)o(e)c(sim)o(ulate.)131 1754 y Fg(3.1.1)55 b(Memory)17
b(System)g(and)i(Net)n(w)n(ork)131 1877 y Fi(W)l(e)k(sim)o(ulate)d(a)j
(hardw)o(are)g(CC-NUMA)f(\(cac)o(he-coheren)o(t)f(non-uniform)i(memory)
c(access\))131 1967 y(m)o(ultipro)q(cessor,)e(where)h(pro)q(cessing)h
(no)q(des)g(are)f(connected)f(with)h(a)h(t)o(w)o(o-dimensional)e(mesh)
131 2058 y(net)o(w)o(ork.)45 b(W)l(e)24 b(sim)o(ulate)e(an)j(8-pro)q
(cessor)h(system.)44 b(The)24 b(base)h(system)e(is)h(illustrated)g(in)
131 2148 y(Figure)18 b(3.1.)27 b(Eac)o(h)18 b(pro)q(cessing)h(no)q(de)f
(consists)h(of)f(a)h(pro)q(cessor,)g(t)o(w)o(o)f(lev)o(els)e(of)i(cac)o
(he,)f(and)i(a)131 2238 y(part)d(of)g(the)g(main)e(memory)f(and)j
(directory)l(.)k(A)c(split-transaction)g(system)e(bus)i(connects)g(the)
131 2328 y(memory)l(,)g(the)i(net)o(w)o(ork)f(in)o(terface)g(and)i(the)
f(rest)g(of)h(the)f(system)e(no)q(de.)28 b(The)19 b(system)d(uses)j(a)
131 2419 y(fully-mapp)q(ed,)c(in)o(v)m(alidation-based,)g(three-state)i
(directory)e(coherence)g(proto)q(col.)204 2510 y(In)22
b(our)h(cac)o(he)e(hierarc)o(h)o(y)l(,)h(the)g(\014rst)g(lev)o(el)e(is)
i(alw)o(a)o(ys)g(dual-p)q(orted,)i(but)f(can)f(b)q(e)g(either)131
2600 y(write-through)i(with)e(no-write-allo)q(cate)h(or)g(write-bac)o
(k)f(with)h(write-allo)q(cate.)40 b(W)l(e)22 b(ev)m(alu-)131
2690 y(ate)c(b)q(oth)g(\014rst-lev)o(el)e(cac)o(he)g(con\014gurations)j
(since)d(curren)o(t)h(systems)f(supp)q(ort)j(b)q(oth)f(kinds)f(of)p
eop
%%Page: 16 22
16 21 bop 1882 72 a Fi(16)206 181 y
 26049576 12243293 2697052 21181726 37758730 37758730 startTexFig
 206 181 a
%%BeginDocument: rppt.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.666667 0 0 0.666667 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 402.126 258.416 ] concat
%I
545 450 545 523 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -75.5508 286.793 ] concat
%I
294 775 402 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -71.8503 287.793 ] concat
%I
426 775 474 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -66.5389 275.293 ] concat
%I
294 691 474 739 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -70.5389 305.623 ] concat
%I
294 846 474 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -74.0329 261.904 ] concat
%I
402 523 569 571 Rect
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -70.1916 259.416 ] concat
%I
426 523 426 476 Line
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -80.8742 257.416 ] concat
%I
545 461 545 523 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -75.8383 268.251 ] concat
%I
486 571 486 607 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -69.8503 289.97 ] concat
%I
450 763 450 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -73.8862 288.97 ] concat
%I
342 763 342 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -68.2036 278.94 ] concat
%I
390 679 390 631 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -70.8503 300.276 ] concat
%I
450 846 450 810 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -73.8862 300.276 ] concat
%I
342 846 342 810 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -70.8562 298.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 142.596 841.081 ] concat
%I
[
(Processor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 115.401 780.081 ] concat
%I
[
(L1 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 193.838 779.081 ] concat
%I
[
(WB)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 143.401 716.081 ] concat
%I
[
(L2 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 179.024 601.081 ] concat
%I
[
(Network Interface)
] Text
End

Begin %I Rect
%I b 4369
1 0 0 [1 3 1 3 1 3 1 3] 14 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -71.3443 299.665 ] concat
%I
272 746 497 912 Rect
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -172.5 198.5 ] concat
%I
578 527 6 6 Elli
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -136.5 198.5 ] concat
%I
578 527 6 6 Elli
End

Begin %I Elli
%I b 65535
3 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -100.5 198.5 ] concat
%I
578 527 6 6 Elli
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 105.659 855.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 101.659 851.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 96.6589 847.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 92.6589 843.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -75.8562 294.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -81.8562 289.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 -87.8562 284.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -76.1916 286.97 ] concat
%I
593 727 593 763 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 -77.1915 273.94 ] concat
%I
593 679 593 631 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 257.039 797.081 ] concat
%I
[
(Memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 249.791 715.081 ] concat
%I
[
(Directory)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 407.449 287.793 ] concat
%I
294 775 402 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 411.149 288.793 ] concat
%I
426 775 474 822 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 416.461 276.293 ] concat
%I
294 691 474 739 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 412.461 306.623 ] concat
%I
294 846 474 894 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.610778 0 0 0.610778 -76.8383 271.928 ] concat
%I
259 607 713 631 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.610778 0 0 0.610778 406.161 272.928 ] concat
%I
259 607 713 631 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 408.967 262.904 ] concat
%I
402 523 569 571 Rect
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 412.808 260.416 ] concat
%I
426 523 426 476 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 407.161 269.251 ] concat
%I
486 571 486 607 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 413.149 290.97 ] concat
%I
450 763 450 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 409.114 289.97 ] concat
%I
342 763 342 727 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 414.796 279.94 ] concat
%I
390 679 390 631 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 412.149 301.276 ] concat
%I
450 846 450 810 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 409.114 301.276 ] concat
%I
342 846 342 810 Line
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 412.144 299.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 625.596 842.081 ] concat
%I
[
(Processor)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 598.401 781.081 ] concat
%I
[
(L1 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 676.838 780.081 ] concat
%I
[
(WB)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 626.401 717.081 ] concat
%I
[
(L2 Cache)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 662.024 602.081 ] concat
%I
[
(Network Interface)
] Text
End

Begin %I Rect
%I b 4369
1 0 0 [1 3 1 3 1 3 1 3] 14 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 411.655 300.665 ] concat
%I
272 746 497 912 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 588.658 856.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 584.658 852.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 579.659 848.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.560747 0 0 -0.560747 575.659 844.897 ] concat
%I
269 207 376 267 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 407.144 295.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 401.144 290.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.610778 0 0 0.610778 395.144 285.805 ] concat
%I
557 775 641 894 Rect
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 406.808 287.97 ] concat
%I
593 727 593 763 Line
End

Begin %I Line
%I b 65535
3 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.610778 0 0 0.610778 405.808 274.94 ] concat
%I
593 679 593 631 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 740.039 798.081 ] concat
%I
[
(Memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 0.610778 0 0 0.610778 732.791 716.081 ] concat
%I
[
(Directory)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -5.30022 2.40002 ] concat

Begin %I Rect
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.9375 SetP
%I t
[ 4.8 0 0 4.8 -1004.4 -849.3 ] concat
%I
224 278 389 290 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-bold-o*18*
/Helvetica-BoldOblique 18 SetF
%I t
[ 1 0 0 1 430.8 520.4 ] concat
%I
[
(Network)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 515 1089 a Fg(Figure)18 b(3.1)48 b Fi(Ov)o(erview)15
b(of)h(the)g(sim)o(ulated)e(system.)131 1290 y(cac)o(hes)j([10)q(,)g
(17,)g(25)q(,)g(18)q(].)25 b(Additionally)l(,)16 b(write-hits)h(in)g
(SC)h(exp)q(ose)f(the)h(second-lev)o(el)d(access)131
1380 y(latency)20 b(in)h(a)g(write-through)h(con\014guration,)g(but)f
(only)g(the)g(\014rst-lev)o(el)e(access)i(in)f(a)i(write-)131
1471 y(bac)o(k)17 b(con\014guration.)27 b(In)17 b(the)g(absence)h(of)g
(resource)f(constrain)o(ts,)h(R)o(C)f(will)g(hide)g(the)g(latency)131
1561 y(of)23 b(writes)g(in)f(either)g(con\014guration.)43
b(Th)o(us,)24 b(w)o(e)e(exp)q(ect)g(the)h(comparativ)o(e)e(results)i
(of)g(SC)131 1651 y(and)f(R)o(C)f(to)g(di\013er)g(with)g(these)f
(di\013eren)o(t)g(\014rst-lev)o(el)g(cac)o(he)g(con\014gurations.)37
b(If)20 b(w)o(e)h(ha)o(v)o(e)f(a)131 1741 y(write-through)d
(\014rst-lev)o(el)e(cac)o(he,)g(w)o(e)h(also)g(include)f(a)i
(coalescing)f(line)f(write-bu\013er)h(b)q(et)o(w)o(een)131
1832 y(the)g(t)o(w)o(o)h(lev)o(els)d(of)j(cac)o(he.)j(Regardless)d(of)g
(\014rst-lev)o(el)d(cac)o(he)i(con\014guration,)h(the)f(second-lev)o
(el)131 1922 y(cac)o(he)g(is)h(alw)o(a)o(ys)g(a)g(pip)q(elined)f
(write-bac)o(k,)g(write-allo)q(cate)h(cac)o(he.)22 b(Both)c(the)e
(\014rst-lev)o(el)g(and)131 2012 y(second-lev)o(el)i(cac)o(hes)h(allo)q
(cate)h(a)g(line)e(for)i(a)g(miss)e(\(and)j(p)q(ossibly)f(evict)e
(another)i(line\))e(only)131 2103 y(up)q(on)g(reply)d(for)h(that)h
(line.)204 2195 y(Both)28 b(lev)o(els)e(of)i(cac)o(he)e(are)i(non-blo)q
(c)o(king)g(with)g(8)g(Miss)f(Status)h(Holding)g(Registers)131
2285 y(\(MSHRs\))16 b([22])g(eac)o(h.)21 b(The)16 b(MSHRs)g(store)g
(information)g(ab)q(out)h(misses)e(and)i(coalesce)f(m)o(ulti-)131
2376 y(ple)h(requests)h(to)g(the)f(same)g(cac)o(he)g(line.)25
b(A)17 b(maxim)o(um)c(of)19 b(16)f(requests)g(can)g(b)q(e)f(coalesced)h
(in)131 2466 y(one)i(MSHR.)e(When)h(there)g(is)g(a)h(write)f(request)g
(to)g(a)h(line)e(whic)o(h)h(has)h(a)g(read)f(p)q(ending,)i(the)131
2556 y(MSHR)e(bu\013ers)h(the)f(write)g(and)h(issues)f(an)h(o)o
(wnership)f(request)g(only)g(when)h(the)f(read)g(reply)131
2646 y(returns,)j(as)f(in)g(man)o(y)e(curren)o(t)h(pro)q(cessor)i
(implem)o(e)o(n)o(tations.)33 b(W)l(e)20 b(refer)g(to)h(suc)o(h)g
(stalls)g(as)p eop
%%Page: 17 23
17 22 bop 1882 72 a Fi(17)p 427 441 1209 2 v 426 501
2 61 v 702 483 a Fh(Memory)17 b(Hier)n(ar)n(chy)f(Par)n(ameters)p
1635 501 V 427 502 1209 2 v 426 563 2 61 v 452 545 a
Fi(Cac)o(he)g(line)f(size)p 1116 563 V 376 w(64)i(b)o(ytes)p
1635 563 V 426 623 V 452 605 a(L1)g(cac)o(he)e(\(on-c)o(hip\))p
1116 623 V 294 w(Direct)g(mapp)q(ed)g(16K)p 1635 623
V 426 683 V 452 665 a(L1)i(cac)o(he)e(p)q(orts)p 1116
683 V 379 w(2)p 1635 683 V 426 743 V 452 725 a(L1)i(MSHRs)p
1116 743 V 455 w(8)p 1635 743 V 426 803 V 452 785 a(L2)g(cac)o(he)e
(\(o\013-c)o(hip\))p 1116 803 V 293 w(4-w)o(a)o(y)h(asso)q(ciativ)o(e)g
(64K)p 1635 803 V 426 864 V 452 846 a(L2)h(MSHRs)p 1116
864 V 455 w(8)p 1635 864 V 426 924 V 452 906 a(W)l(rite)e(bu\013er)i
(\(coalescing\))p 1116 924 V 165 w(8)f(line)f(en)o(tries)p
1635 924 V 426 984 V 452 966 a(Maxim)o(um)d(coalescions)k(p)q(er)h
(line)p 1116 984 V 49 w(16)p 1635 984 V 426 1044 V 452
1026 a(Memory)d(in)o(terlea)o(ving)p 1116 1044 V 248
w(4-w)o(a)o(y)p 1635 1044 V 427 1046 1209 2 v 426 1106
2 61 v 714 1088 a Fh(Memory)i(L)n(atency)i(Comp)n(onents)p
1635 1106 V 427 1108 1209 2 v 426 1168 2 61 v 452 1150
a Fi(L1)f(cac)o(he)e(access)p 1116 1168 V 360 w(1)h(cycle)p
1635 1168 V 426 1228 V 452 1210 a(L2)h(cac)o(he)e(access)p
1116 1228 V 360 w(8)h(cycles)p 1635 1228 V 426 1288 V
452 1270 a(Memory)e(bus)j(arbitration)f(dela)o(y)p 1116
1288 V 50 w(3)g(cycles)p 1635 1288 V 426 1348 V 452 1330
a(Directory)f(and)i(memory)c(access)p 1116 1348 V 62
w(18)k(cycles)p 1635 1348 V 426 1409 V 452 1391 a(Memory)d(transfer)j
(bandwidth)p 1116 1409 V 90 w(16)g(b)o(ytes/cycle)p 1635
1409 V 427 1410 1209 2 v 426 1471 2 61 v 814 1452 a Fh(Network)h(Par)n
(ameters)p 1635 1471 V 427 1472 1209 2 v 426 1532 2 61
v 452 1514 a Fi(Net)o(w)o(ork)d(sp)q(eed)p 1116 1532
V 377 w(150MHz)p 1635 1532 V 426 1593 V 452 1574 a(Net)o(w)o(ork)g
(width)p 1116 1593 V 373 w(64)i(bits)p 1635 1593 V 426
1653 V 452 1635 a(Flit)e(dela)o(y)g(\(p)q(er)i(hop\))p
1116 1653 V 267 w(2)f(net)o(w)o(ork)g(cycles)p 1635 1653
V 426 1713 V 452 1695 a(Bus)g(t)o(yp)q(e)p 1116 1713
V 499 w(Split-transaction)p 1635 1713 V 426 1773 V 452
1755 a(Bus)g(sp)q(eed)p 1116 1773 V 475 w(100)h(MHz)p
1635 1773 V 426 1833 V 452 1815 a(Bus)f(width)p 1116
1833 V 471 w(128)h(bits)p 1635 1833 V 427 1835 1209 2
v 426 1895 2 61 v 801 1877 a Fh(Pr)n(o)n(c)n(essor)e(Par)n(ameters)p
1635 1895 V 427 1897 1209 2 v 426 1957 2 61 v 452 1939
a Fi(Pro)q(cessor)i(Sp)q(eed)p 1116 1957 V 345 w(300MHz)p
1635 1957 V 426 2017 V 452 1999 a(P)o(eak)f(issue,)f(retire)g(rate)p
1116 2017 V 226 w(4)h(instructions/cycle)p 1635 2017
V 426 2077 V 452 2059 a(Instruction)g(windo)o(w)g(size)p
1116 2077 V 185 w(64)p 1635 2077 V 426 2138 V 452 2120
a(Memory)e(queue)i(size)p 1116 2138 V 281 w(32)p 1635
2138 V 426 2198 V 452 2180 a(F)l(unctional)g(units)p
1116 2198 V 342 w(2)g(in)o(teger)f(arithmetic)p 1635
2198 V 426 2258 V 1116 2258 V 1142 2240 a(2)h(\015oating)h(p)q(oin)o(t)
p 1635 2258 V 426 2318 V 1116 2318 V 1142 2300 a(2)f(address)h
(generation)p 1635 2318 V 426 2378 V 452 2360 a(Branc)o(h)e(sp)q
(eculation)i(depth)p 1116 2378 V 143 w(8)p 1635 2378
V 427 2380 1209 2 v 552 2504 a Fg(Figure)h(3.2)48 b Fi(Default)17
b(sim)o(ulation)d(parameters.)p eop
%%Page: 18 24
18 23 bop 1882 72 a Fi(18)131 222 y(write-after-read)20
b(stalls.)30 b(In)19 b(addition)h(to)f(prev)o(en)o(ting)f(o)o(v)o
(erlap)h(of)g(the)g(store)h(o)o(wnership)f(re-)131 312
y(quest)h(with)g(load)g(latency)l(,)f(our)i(implem)o(en)n(tation)d(of)i
(write-after-read)g(stalls)g(also)g(blo)q(c)o(ks)g(a)131
403 y(cac)o(he)f(p)q(ort,)j(p)q(ossibly)e(prev)o(en)o(ting)e(later)i
(requests)f(from)g(issuing)i(to)f(the)g(cac)o(he.)31
b(Although)131 493 y(our)21 b(system)d(is)i(represen)o(tativ)o(e)d(of)j
(curren)o(t)f(systems,)g(this)h(decision)f(can)h(p)q(oten)o(tially)f
(a\013ect)131 583 y(the)13 b(p)q(erformance)f(of)h(write)f(prefetc)o
(hing.)19 b(Allo)o(wing)12 b(this)g(o)o(wnership)h(request)f(to)h(o)o
(v)o(erlap)f(with)131 674 y(a)21 b(previous)e(read)h(request)g
(increases)f(the)h(complexit)o(y)d(at)j(the)g(directory)f(con)o
(troller)f(and)j(at)131 764 y(the)15 b(MSHRs,)e(since)h(p)q(oten)o
(tial)g(reordering)h(of)f(requests)h(in)f(the)g(net)o(w)o(ork)g(will)f
(no)o(w)i(need)f(to)h(b)q(e)131 854 y(handled)k(b)o(y)f(the)h(system.)
28 b(Section)18 b(4.4)h(assesses)h(the)e(impact)g(of)h(the)f(more)g
(aggressiv)o(e)h(and)131 944 y(more)c(complex)f(proto)q(col)j(where)f
(the)g(read)h(and)f(o)o(wnership)h(requests)f(are)g(o)o(v)o(erlapp)q
(ed.)204 1037 y(Figure)e(3.2)h(giv)o(es)f(our)h(default)f(primary)f
(memory)e(system)i(parameters.)20 b(W)l(e)14 b(ha)o(v)o(e)f(c)o(hosen)
131 1127 y(smaller)22 b(cac)o(he)g(sizes)h(than)h(commerci)o(al)d
(systems,)i(commensurate)e(with)j(our)g(application)131
1217 y(input)e(sizes)f(\(describ)q(ed)g(in)g(Section)h(3.4\))g(and)g
(follo)o(wing)f(the)h(w)o(orking-set)g(ev)m(aluations)g(of)131
1308 y(W)l(o)q(o)e(et)e(al.)e([42)q(])o(.)29 b(Our)18
b(secondary)h(cac)o(he)f(sizes)g(are)h(c)o(hosen)g(suc)o(h)f(that)h
(secondary)g(w)o(orking)131 1398 y(sets)h(of)h(most)e(of)h(our)h
(applications)f(do)g(not)h(\014t)f(in)g(cac)o(he;)g(w)o(e)g(c)o(ho)q
(ose)g(primary)f(cac)o(he)g(sizes)131 1488 y(suc)o(h)d(that)h(an)o(y)f
(applications)g(with)g(\014xed-size)g(primary)e(w)o(orking)j(sets)f
(\014t)g(in)g(cac)o(he.)204 1581 y(Main)25 b(memory)d(is)i(4-w)o(a)o(y)
i(in)o(terlea)o(v)o(ed)c(\(b)o(y)i(cac)o(he)g(line\))g(and)h(is)g
(accessed)f(through)i(a)131 1671 y(pip)q(elined)15 b(split-transaction)
h(bus.)22 b(The)16 b(in)o(terconnect)e(net)o(w)o(ork)h(is)h(a)g(w)o
(ormhole-routed)f(t)o(w)o(o-)131 1761 y(dimensional)f(mesh)g(net)o(w)o
(ork.)21 b(The)15 b(system)f(uses)i(separate)g(reply)f(and)h(request)f
(net)o(w)o(orks)g(for)131 1851 y(deadlo)q(c)o(k)i(prev)o(en)o(tion.)24
b(P)o(arameters)16 b(common)g(to)i(all)f(the)g(systems)f(are)i(giv)o
(en)e(in)i(\014gure)f(3.2.)131 1942 y(These)g(v)m(alues)f(assume)g(a)h
(300MHz)g(pro)q(cessor)h(with)e(a)h(3ns)h(on-c)o(hip)e(L1)i(SRAM)e(cac)
o(he)g(and)h(a)131 2032 y(30ns)f(L2)f(SRAM)e(cac)o(he.)20
b(The)14 b(net)o(w)o(ork)g(is)g(assumed)f(to)i(b)q(e)f(a)h(150MHz,)f(8)
h(b)o(yte)e(wide)h(net)o(w)o(ork)131 2122 y(with)f(70ns)i(DRAM)d
(memory)f(and)j(4-w)o(a)o(y)f(in)o(terlea)o(v)o(ed)e(directories.)19
b(The)13 b(pro)q(cessor,)h(net)o(w)o(ork,)131 2213 y(and)f(base)f
(memory)d(system)h(parameters)h(are)h(fairly)f(aggressiv)o(e,)h(and)g
(mean)o(t)e(to)i(represen)o(t)f(cur-)131 2303 y(ren)o(t)k(aggressiv)o
(e)h(implem)o(en)n(tations.)j(The)d(parameters)f(w)o(ere)f(c)o(hosen)i
(b)o(y)f(extrap)q(olating)h(from)131 2393 y(n)o(um)o(b)q(ers)f(giv)o
(en)g(b)o(y)h(v)m(arious)h(system)e(v)o(endors.)p eop
%%Page: 19 25
19 24 bop 1882 72 a Fi(19)206 181 y
 26049576 16150732 3486433 15853404 44468469 41574072 startTexFig
 206 181 a
%%BeginDocument: Figures/rpipes-blocks.eps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 4 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 52 190 ] concat
%I 3
700 159
700 134
247 134
3 MLine
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 64 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 100 411.5 ] concat
%I
615 170 685 219 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 95 406.5 ] concat
%I
615 170 685 219 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 727 608 ] concat
%I
[
(FPU)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0.5 -3 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 80 558 ] concat
%I
[
(Instruction)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 100.5 538 ] concat
%I
[
(Fetch)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 101 518 ] concat
%I
[
(Logic)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -4 229 ] concat
%I
74 259 183 339 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -30 -74 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 175.5 405.5 ] concat
%I
[
(Branch Prediction)
] Text
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -4 229 ] concat
%I
173 150 333 189 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 70 50 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -34 42 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 399 438 ] concat
%I
[
(Memory)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 405 418 ] concat
%I
[
(Queue)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -4 229 ] concat
%I
363 209 442 259 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 40 -30 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 85.5 81.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 428 598 ] concat
%I
[
(Floating-point)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 436.5 578 ] concat
%I
[
(Register File)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 46 229 ] concat
%I
462 369 592 498 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 135 -57.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 448 518 ] concat
%I
[
(Integer)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 426.5 498 ] concat
%I
[
(Register File)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 29 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 12.5 2 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 249 687 ] concat
%I
[
(Completion)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 251.5 667 ] concat
%I
[
(Graduation)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 216.5 648 ] concat
%I
[
(Exception Handling)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -4 229 ] concat
%I
223 399 403 468 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -20 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -42 -28 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 279 608 ] concat
%I
[
(Register mapping)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 307.5 588 ] concat
%I
[
(\(renaming\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 307.5 548 ] concat
%I
[
(Active List)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -4 229 ] concat
%I
223 219 403 399 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -54 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 100 231.5 ] concat
%I
615 170 685 219 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 95 226.5 ] concat
%I
615 170 685 219 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 8 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 717 438 ] concat
%I
[
(ALU/)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 708 418 ] concat
%I
[
(Branch)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 -64 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 100 321.5 ] concat
%I
615 170 685 219 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 95 316.5 ] concat
%I
615 170 685 219 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 5.5 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 717 528 ] concat
%I
[
(Addr.)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 720 508 ] concat
%I
[
(Gen.)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -85 -35 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 833.5 607.5 ] concat
%I
[
(Data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *helvetica-medium-r*18*
/Helvetica 18 SetF
%I t
[ 1 0 0 1 825.5 582.5 ] concat
%I
[
(Cache)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 380 229 ] concat
%I
417 309 527 409 Rect
End

End %I eop

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 380 229 ] concat
%I
168 120 297 309 Rect
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
128 289 168 289 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
297 219 327 219 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
297 140 327 140 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
297 438 327 438 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
297 294 332 294 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
297 359 332 359 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 380 229 ] concat
%I
372 244 372 274 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -166 201 ] concat
%I
345 332 385 332 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -166 201 ] concat
%I
565 312 594 312 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -166 201 ] concat
%I
565 242 709 242 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -166 201 ] concat
%I
565 397 714 397 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -166 201 ] concat
%I
325 287 325 143 Line
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -161 201 ] concat
%I
470 457 470 407 Line
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 317 ] concat
%I 5
634 52
694 52
694 470
131 470
131 410
5 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 148 317 ] concat
%I 5
634 350
669 350
669 445
191 445
191 410
5 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 210 259 ] concat
%I 3
502 299
283 299
283 279
3 MLine
End

Begin %I MLine
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg Black
0 0 0 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 210 259 ] concat
%I 3
233 279
233 453
189 453
3 MLine
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 572 1337 a Fg(Figure)18 b(3.3)48 b Fi(Pro)q(cessor)17
b(micro-arc)o(hitecture.)131 1538 y Fg(3.1.2)55 b(Base)19
b(Pro)r(cessor)131 1662 y Fi(Figure)14 b(3.3)g(sho)o(ws)h(the)f(pro)q
(cessor)h(micro-arc)o(hitecture)c(that)k(w)o(e)e(mo)q(del.)20
b(Our)14 b(base)g(pro)q(cessor)131 1752 y(mo)q(del)19
b(emplo)o(ys)e(widely)i(used)h(tec)o(hniques)e(to)i(exploit)e
(instruction-lev)o(el)g(parallelism,)f(suc)o(h)131 1843
y(as)k(m)o(ultiple)c(instruction)i(issue,)h(dynamic)f(\(out-of-order\))
i(sc)o(heduling,)e(register)h(renaming,)131 1933 y(sp)q(eculativ)o(e)15
b(execution,)g(and)i(non-blo)q(c)o(king)f(reads.)22 b(The)16
b(pro)q(cessor)h(exploits)e(ILP)i(b)o(y)f(exam-)131 2023
y(ining)h(a)g(large)f(windo)o(w)h(of)g(instructions)g(\(called)e
Fh(instruction)k(window)f Fi(or)f Fh(active)i(list)e
Fi([25)q(]\))f(at)131 2114 y(a)22 b(time,)d(and)j(executes)d(the)i
(instructions)g(that)g(are)g(are)g(ready)g(to)h(b)q(e)f(issued,)g(ev)o
(en)f(b)q(efore)131 2204 y(the)f(completion)d(of)j(an)o(y)f(previous)h
(incomplete)c(instructions.)28 b(This)19 b(allo)o(ws)g(instructions)f
(to)131 2294 y(issue)j(and)g(complete)e(out)i(of)h(program)e(order.)36
b(In)20 b(particular,)h(the)g(pip)q(eline)f(stages)h(corre-)131
2384 y(sp)q(onding)f(to)f(F)l(etc)o(h,)f(Deco)q(de,)h(and)g(Graduation)
h(o)q(ccur)f(in)f(order,)h(while)f(Issue,)g(Execution,)131
2475 y(and)d(Completion)d(pro)q(ceed)h(out)i(of)f(order.)20
b(Except)13 b(for)h(writes)f(in)h(release)f(consisten)o(t)g(systems,)
131 2565 y(an)22 b(instruction)f(retires)f(\(graduates)i([25)q(]\))e
(when)i(it)e(is)h(complete)e(and)j(when)f(all)g(preceding)131
2655 y(instructions)c(\(b)o(y)g(program)g(order\))g(ha)o(v)o(e)f
(retired.)23 b(A)17 b(write)f(in)h(a)h(release)e(consisten)o(t)h
(system)p eop
%%Page: 20 26
20 25 bop 1882 72 a Fi(20)131 222 y(retires)19 b(when)h(its)g(address)g
(and)h(v)m(alue)f(are)g(resolv)o(ed,)f(and)h(when)g(all)g(previous)f
(instructions)131 312 y(ha)o(v)o(e)13 b(retired.)19 b(T)l(o)14
b(guaran)o(tee)g(precise)e(in)o(terrupts)h([38],)g(writes)g(are)h(not)f
(issued)h(in)o(to)f(the)g(mem-)131 403 y(ory)k(system)e(un)o(til)g
(they)h(reac)o(h)f(the)h(head)h(of)g(the)f(instruction)g(windo)o(w.)21
b(W)l(e)16 b(use)h(the)f(SP)l(AR)o(C)131 493 y(V9)g Fa(MEMBAR)e
Fi([39])i(instructions)f(\(memory)e(barriers)j(or)g(memory)d(fences\))j
(to)g(enforce)f(ordering)131 583 y(of)i(memory)c(op)q(erations)k(as)g
(required)e(b)o(y)h(the)g(consistency)g(mo)q(del.)204
676 y(The)k(pro)q(cessor)h(also)f(uses)g(a)g(t)o(w)o(o-bit)f(hardw)o
(are)h(branc)o(h)g(prediction)e(sc)o(heme)g(to)i(enable)131
766 y(sp)q(eculativ)o(e)13 b(execution)g(past)i(branc)o(hes.)20
b(A)14 b(maxim)o(um)c(of)k(8)h(sp)q(eculation)f(lev)o(els)e(is)i(supp)q
(orted)131 856 y(in)h(the)h(pro)q(cessor.)21 b(Our)16
b(base)g(pro)q(cessor)g(uses)g(the)f(notion)h(of)g Fh(shadow)g(mapping)
g Fi([25])f(\(similar)131 946 y(to)24 b(the)f(MIPS)g(R10000)i(and)f
(the)f(HP-P)l(A8000\))i(to)f(restore)f(the)g(state)h(of)f(a)h(system)e
(on)i(a)131 1037 y(branc)o(h)19 b(misprediction.)27 b(Additionally)l(,)
17 b(the)i(pro)q(cessor)h(also)f(supp)q(orts)h Fh(soft)g(exc)n(eptions)
g Fi([25)q(])131 1127 y(to)d(rollbac)o(k)e(execution)g(on)i(an)g(in)o
(ternally-generated)d(exception)i(condition.)204 1219
y(The)i(pro)q(cessor)h(micro-arc)o(hitecture)c(is)j(most)f(closely)g
(based)h(on)g(the)g(MIPS)f(R10000)j(de-)131 1310 y(sign)j([25)q(])f
(though)i(it)e(incorp)q(orates)i(features)f(from)f(sev)o(eral)f(other)i
(commercial)c(micropro-)131 1400 y(cessors)f(lik)o(e)e(the)h(HP-P)l
(A800)i([17])e(and)h(the)g(In)o(tel)e(P)o(en)o(tium)f(Pro)j([18].)25
b(Figure)17 b(3.2)h(giv)o(es)f(the)131 1490 y(pro)q(cessor)c
(parameters)e(used)h(in)f(our)h(sim)o(ulations.)18 b(These)12
b(parameters)f(w)o(ere)g(c)o(hosen)g(to)i(mo)q(del)131
1581 y(next-generation)h(aggressiv)o(e)g(pro)q(cessors.)22
b(The)14 b(default)g(latencies)f(for)i(the)f(v)m(arious)g(execution)131
1671 y(units)i(appro)o(ximate)f(those)i(for)f(the)g(UltraSP)l(AR)o(C)g
([40].)131 1833 y Fg(3.1.3)55 b(V)-5 b(ariations)19 b(on)g(the)f(Base)h
(Pro)r(cessor)131 1957 y Fi(The)24 b(base)g(pro)q(cessor)h(mo)q(del)d
(directly)g(supp)q(orts)j(the)f(simple)d(impleme)o(n)o(tation)g(of)j
(release)131 2048 y(consistency)15 b(\(R)o(C\).)g(V)l(ariations)h(on)g
(our)g(pro)q(cessor)g(and)g(memory)d(system)h(include)g(a)i(sequen-)131
2138 y(tially)g(consisten)o(t)i(\(SC\))f(pro)q(cessor)i(mo)q(del,)d
(supp)q(ort)j(for)e(hardw)o(are-con)o(trolled)h(non-binding)131
2228 y(prefetc)o(hing,)d(and)i(supp)q(ort)g(for)g(sp)q(eculativ)o(e)e
(read)h(execution.)204 2321 y(F)l(or)25 b(a)f(simple)e(implem)o(en)o
(tation)f(of)k(SC,)f(w)o(e)g(mo)q(dify)f(R)o(C's)g(aggressiv)o(e)i
(base)f(memory)131 2411 y(system)10 b(to)h(issue)g(a)g(memory)d(op)q
(eration)k(only)f(when)g(the)g(previous)f(memory)e(op)q(erations)13
b(of)e(that)131 2501 y(pro)q(cessor)16 b(ha)o(v)o(e)e(completed.)k
(This)d(metho)q(d)f(main)o(tains)f(ordering)i(of)f(all)g(memory)e(op)q
(erations)131 2591 y(as)20 b(required)d(b)o(y)h(SC.)h(F)l(urthermore,)e
(a)i(write)g(in)f(SC)h(do)q(es)h(not)f(retire)e(from)h(the)h
(instruction)p eop
%%Page: 21 27
21 26 bop 1882 72 a Fi(21)131 222 y(windo)o(w)17 b(un)o(til)e(it)h(is)g
(globally)g(p)q(erformed)f([35].)21 b(Unlik)o(e)15 b(the)h(R)o(C)g(mo)q
(del)f(whic)o(h)g(can)i(retire)e(up)131 312 y(to)i(4)g(writes)e(a)i
(cycle,)d(the)i(SC)h(mo)q(del)e(can)h(retire)f(only)h(at)h(most)e(1)i
(write)f(p)q(er)g(cycle.)204 405 y(T)l(o)22 b(implem)o(en)o(t)c(hardw)o
(are)j(prefetc)o(hing,)g(w)o(e)f(issue)h(prefetc)o(h)f(requests)g(to)i
(the)e(cac)o(he)h(as)131 495 y(describ)q(ed)12 b(in)h(Section)f(2.2.)20
b(W)l(e)13 b(prefetc)o(h)e(requests)h(to)h(the)g(lev)o(el)d(of)j(cac)o
(he)f(appropriate)i(for)f(the)131 585 y(corresp)q(onding)j(demand)e
(fetc)o(h;)g(th)o(us)h(write)f(prefetc)o(hes)f(with)i(the)g(write-bac)o
(k)f(write-allo)q(cate)131 676 y(primary)i(cac)o(he)h(and)h(all)f(read)
g(prefetc)o(hes)f(go)j(to)e(the)g(primary)f(cac)o(he.)24
b(W)l(rite)17 b(prefetc)o(hes)f(for)131 766 y(lines)c(not)g(presen)o(t)
g(in)g(the)g(write-through)h(non-write-allo)q(cate)g(primary)e(cac)o
(he)g(only)h(fetc)o(h)g(in)o(to)131 856 y(the)19 b(secondary)f(cac)o
(he;)h(bringing)f(these)h(to)f(the)h(primary)e(cac)o(he)g(w)o(ould)i
(defeat)f(the)g(purp)q(ose)131 946 y(of)g(a)g(no-write-allo)q(cate)g
(cac)o(he.)734 928 y Fe(z)777 946 y Fi(Read)f(prefetc)o(hes)f(alw)o(a)o
(ys)i(fetc)o(h)f(the)g(line)f(to)i(the)g(\014rst-lev)o(el)131
1037 y(cac)o(he.)h(Prefetc)o(h)12 b(instructions)g(are)h(remo)o(v)o(ed)
d(from)h(the)i(memory)c(queue)j(once)h(they)f(are)g(issued)131
1127 y(to)18 b(the)f(memory)d(system.)23 b(Prefetc)o(hes)16
b(that)h(cannot)h(b)q(e)f(issued)g(due)h(to)f(resource)g(con)o(ten)o
(tion)131 1217 y(are)g(dropp)q(ed.)23 b(This)17 b(mo)q(del)f(assumes)g
(that)h(the)f(increase)g(in)h(the)f(stall)g(time)f(due)i(to)g(resource)
131 1308 y(con)o(ten)o(tion)d(out)o(w)o(eighs)g(the)g(reduction)g(in)g
(the)h(mem)o(ory)d(latency)i(due)g(to)h(prefetc)o(hes,)e(and)i(has)131
1398 y(b)q(een)h(used)h(in)f(previous)g(studies)g(with)g
(indiscriminate)d(prefetc)o(hes)i([26].)1518 1380 y Fe(x)204
1490 y Fi(W)l(e)i(implem)o(en)o(t)d(the)i(sp)q(eculativ)o(e)g(read)h
(bu\013er)h(at)f(the)g(pro)q(cessor)h(and)f(use)g(a)h(mec)o(hanism)131
1581 y(similar)f(to)i(but)g(more)e(optimistic)g(than)i(the)f(soft)h
(exception)f(mec)o(hanism)d(emplo)o(y)o(ed)h(b)o(y)j(the)131
1671 y(MIPS)d(R10000)i(to)e(rollbac)o(k)f(execution)g(as)h(describ)q
(ed)g(in)g(Section)f(2.2.2.)21 b(In)16 b(SC)g(systems,)f(w)o(e)131
1761 y(use)h(the)g(sp)q(eculativ)o(e)e(read)i(bu\013er)g(whenev)o(er)e
(w)o(e)i(w)o(an)o(t)g(to)g(issue)f(a)h(read)g(out)g(of)h(order;)e(in)g
(R)o(C)131 1851 y(systems,)20 b(this)g(bu\013er)h(is)f(only)g(used)g
(past)h(acquires.)33 b(W)l(e)20 b(do)h(not)g(imp)q(ose)e(a)h(constrain)
o(t)h(on)131 1942 y(the)16 b(size)f(of)i(the)f(sp)q(eculativ)o(e)e
(read)i(bu\013er,)g(limiting)e(it)h(only)h(b)o(y)g(the)g(n)o(um)o(b)q
(er)e(of)i(reads)h(in)f(the)131 2032 y(memory)d(queue)i(\(32)i(in)e
(our)i(base)f(con\014guration\).)22 b(W)l(e)16 b(force)f(a)h(rollbac)o
(k)f(when)h(the)g(primary)131 2122 y(cac)o(he)21 b(gets)i(a)f
(coherence)f(request)g(from)g(an)i(external)e(source)h(or)g(an)h(in)o
(v)m(alidation)e(request)p 131 2196 450 2 v 131 2239
a Fd(z)149 2254 y Fc(W)m(e)14 b(p)q(erformed)g(exp)q(erimen)o(ts)g
(with)g(an)g(alternativ)o(e)g(strategy)i(that)e(brough)o(t)g(write)h
(prefetc)o(hes)h(to)f(the)g(\014rst-)131 2304 y(lev)o(el)d
(write-through)h(cac)o(he.)19 b(F)m(or)12 b(all)f(our)i(applications,)e
(the)i(p)q(erformance)g(w)o(as)f(comparable)f(to,)h(or)h(less)g(than)
131 2354 y(that)h(with)g(the)g(default)g(strategy)g(of)g(prefetc)o
(hing)g(writes)h(only)e(to)h(the)g(second-lev)o(el)h(cac)o(he.)131
2401 y Fd(x)149 2416 y Fc(W)m(e)f(p)q(erformed)g(exp)q(erimen)o(ts)i(v)
n(arying)d(the)j(prefetc)o(h)g(drop)f(strategy)g(for)g(our)g
(applications.)k(The)d(alternate)131 2466 y(prefetc)o(h)i(strategy)e(k)
o(eeps)h(prefetc)o(hes)i(in)c(the)i(memory)c(queue)k(and)f(issues)h
(them)e(only)h(when)g(resources)i(free)131 2515 y(up.)i(With)14
b(three)i(of)d(our)i(applications)e(\(LU,)h(Mp3d,)g(and)h(W)m(ater\),)f
(SC)g(gets)h(a)f(reduction)h(in)f(execution)i(time)131
2565 y(b)q(et)o(w)o(een)f(8\045)e(and)g(12\045.)k(Mp3d)c(exp)q
(eriences)j(a)d(slo)o(wdo)o(wn)g(of)g(8\045)f(on)i(R)o(C)e(with)h(the)h
(alternate)g(prefetc)o(h)h(drop)131 2615 y(strategy)m(.)j(All)10
b(other)i(applications)e(exhibit)h(marginal)d(c)o(hanges)k(to)g(p)q
(erformance)f(with)g(c)o(hange)g(in)g(the)h(prefetc)o(h)131
2665 y(strategy)m(.)p eop
%%Page: 22 28
22 27 bop 1882 72 a Fi(22)131 222 y(from)14 b(the)h(secondary)g(cac)o
(he)g(for)g(inclusion;)f(there)h(is)f(no)i(need)f(to)g(rollbac)o(k)f
(on)i(primary)d(cac)o(he)131 312 y(replacemen)o(ts)21
b(since)i(those)g(lines)g(will)f(still)g(remain)g(visible)g(to)i
(external)e(coherence.)42 b(W)l(e)131 403 y(assume)19
b(a)h(zero)f(cycle)f(reco)o(v)o(ery)f(p)q(enalt)o(y)i(\(the)g(n)o(um)o
(b)q(er)f(of)i(cycles)e(that)i(are)f(tak)o(en)g(to)h(\015ush)131
493 y(subsequen)o(t)15 b(instructions)g(from)f(the)h(instruction)g
(windo)o(w\).)21 b(Our)15 b(results)g(sho)o(w)h(that,)f(on)h(our)131
583 y(base)e(system,)e(the)h(n)o(um)o(b)q(er)e(of)j(rollbac)o(ks)e(is)h
(v)o(ery)f(small,)g(and)i(th)o(us)f(the)g(rollbac)o(k)g(p)q(enalt)o(y)f
(do)q(es)131 674 y(not)17 b(signi\014can)o(tly)e(impact)g(the)h(p)q
(erformance)f(of)h(the)g(optimized)e(mo)q(dels.)131 857
y Fl(3.2)66 b(Sim)n(ulation)26 b(Metho)r(dology)c(and)h(En)n(vironmen)n
(t)131 982 y Fi(W)l(e)h(ha)o(v)o(e)g(dev)o(elop)q(ed)f(the)h(Rice)f
(Sim)o(ulator)f(for)j(ILP-based)g(Multipro)q(cessors)f(\(RSIM\))g(to)
131 1072 y(mo)q(del)c(the)i(arc)o(hitecture)e(describ)q(ed)g(in)i
(Section)f(3.1)g([28)q(].)36 b(In)21 b(con)o(trast)h(to)g(man)o(y)e
(curren)o(t)131 1162 y(direct-execution)12 b(sim)o(ulators,)h(RSIM)g
(mo)q(dels)g(b)q(oth)i(the)e(pro)q(cessor)i(pip)q(elines)e(and)h(the)g
(mem-)131 1253 y(ory)24 b(subsystem)f(in)g(detail,)h(including)f(con)o
(ten)o(tion)g(at)h(v)m(arious)g(resources.)43 b(The)24
b(co)q(de)g(for)131 1343 y(the)f(memory)d(system)h(and)j(net)o(w)o(ork)
e(is)g(hea)o(vily)g(dra)o(wn)h(from)f(RPPT)h(\(the)g(Rice)e(P)o
(arallel)131 1433 y(Pro)q(cessing)15 b(T)l(estb)q(ed\))f([5,)g(31)q(].)
20 b(RSIM)13 b(is)h(execution-driv)o(en;)e(i.e.,)h(it)g(is)h(driv)o(en)
f(b)o(y)h(application)131 1524 y(executables)g(rather)g(than)i(traces)e
(so)i(that)f(in)o(teractions)f(b)q(et)o(w)o(een)f(the)i(pro)q(cessors)h
(during)f(the)131 1614 y(sim)o(ulation)h(can)j(a\013ect)f(the)g(course)
g(of)g(the)g(sim)o(ulation.)24 b(The)18 b(detail)g(in)f(our)i(sim)o
(ulator)d(th)o(us)131 1704 y(leads)f(to)h(increased)f(sim)o(ulation)e
(times)g(compared)h(to)i(those)f(seen)g(in)g(either)f(direct-execution)
131 1794 y(or)24 b(trace-driv)o(en)d(sim)o(ulations;)k(ho)o(w)o(ev)o
(er,)d(the)h(detail)f(is)h(necessary)g(for)g(the)g(problems)f(ad-)131
1885 y(dressed)17 b(in)e(this)i(thesis.)204 1977 y(The)26
b(applications)g(are)f(compiled)f(with)h(a)h(v)o(ersion)f(of)h(SP)l(AR)
o(C)f(V9)h(gcc)f(mo)q(di\014ed)g(to)131 2067 y(eliminate)e(branc)o(h)i
(dela)o(y)g(slots)754 2049 y Fe({)804 2067 y Fi(and)h(restricted)e(to)i
(32)g(bit)f(co)q(de,)j(optimized)23 b(with)i Fa(-O2)131
2158 y(-funrollloo)o(p)p Fi(.)39 b(The)23 b(resulting)g(binary)g(is)g
(fed)g(in)o(to)g(a)g(predeco)q(der)g(whic)o(h)g(expands)h(the)131
2248 y(instructions)16 b(in)o(to)g(a)h(format)e(that)i(can)g(b)q(e)f
(in)o(terpreted)f(b)o(y)g(our)i(sim)o(ulator.)204 2340
y(T)l(o)23 b(sp)q(eed)g(up)f(the)g(sim)o(ulations,)g(w)o(e)g(assume)g
(all)f(instructions)i(hit)f(in)g(the)g(instruction)131
2431 y(cac)o(he)c(\(with)g(1)h(cycle)e(hit)h(time\))f(and)i(priv)m(ate)
f(\(i.e.,)f(non-shared\))j(v)m(ariables)e(also)h(hit)f(in)h(the)131
2521 y(data)g(cac)o(he.)24 b(Both)17 b(of)h(these)f(appro)o(ximations)g
(ha)o(v)o(e)g(b)q(een)g(widely)g(used)g(in)g(shared-memory)p
131 2595 450 2 v 131 2638 a Fd({)154 2653 y Fc(RSIM)c(do)q(es)i(not)f
(curren)o(tly)h(supp)q(ort)f(arc)o(hitected)i(dela)o(y)d(slots.)p
eop
%%Page: 23 29
23 28 bop 1882 72 a Fi(23)131 222 y(m)o(ultipro)q(cessor)13
b(p)q(erformance)g(studies.)20 b(Ho)o(w)o(ev)o(er,)13
b(w)o(e)g(do)i(mo)q(del)e(con)o(ten)o(tion)g(due)h(to)h(priv)m(ate)131
312 y(data)i(accesses)f(at)h(v)m(arious)g(pro)q(cessor)g(and)g(cac)o
(he)e(resources.)131 496 y Fl(3.3)66 b(P)n(erformance)22
b(Metrics)131 621 y Fi(W)l(e)c(use)g(the)f(execution)g(time)e(as)k(the)
e(primary)g(metric)e(to)j(ev)m(aluate)g(p)q(erformance.)24
b(W)l(e)18 b(also)131 711 y(divide)c(execution)h(times)e(in)o(to)j(its)
f(v)m(arious)h(comp)q(onen)o(ts,)f(namely)e(CPU)j(time,)d(data)j
(memory)131 801 y(time,)f(and)i(sync)o(hronization)f(time.)21
b(Ho)o(w)o(ev)o(er,)14 b(with)j(ILP)g(pro)q(cessors,)h(eac)o(h)e
(instruction)g(can)131 892 y(p)q(oten)o(tially)10 b(o)o(v)o(erlap)g
(its)h(execution)f(with)h(b)q(oth)h(previous)e(and)i(follo)o(wing)f
(instructions.)19 b(Hence,)131 982 y(it)j(is)g(di\016cult)f(to)i
(assign)g(stall)g(time)d(to)j(sp)q(eci\014c)e(instructions.)40
b(W)l(e)22 b(adopt)h(the)g(follo)o(wing)131 1072 y(con)o(v)o(en)o(tion)
c(also)i(used)g(in)f(other)h(w)o(ork)f([34)q(].)33 b(W)l(e)21
b(coun)o(t)f(a)h(cycle)e(as)i(part)g(of)g(busy)f(time)f(if)131
1162 y(w)o(e)j(retire)e(the)i(maxim)o(um)17 b(n)o(um)o(b)q(er)j(of)i
(instructions)g(p)q(ossible)g(in)g(that)g(cycle)e(\(four)i(in)g(our)131
1253 y(system\).)e(Otherwise,)15 b(w)o(e)g(c)o(harge)h(that)h(cycle)d
(to)j(the)f(stall)f(time)f(comp)q(onen)o(t)h(corresp)q(onding)131
1343 y(to)i(the)g(\014rst)g(instruction)f(that)h(could)f(not)h(retire)f
(in)g(that)h(cycle.)k(Th)o(us,)c(e\013ectiv)o(ely)l(,)c(the)k(stall)131
1433 y(comp)q(onen)o(t)e(for)g(a)h(class)g(of)f(instruction)g(represen)
o(ts)g(the)g(cum)o(ulativ)o(e)d(time)i(that)h(instructions)131
1524 y(in)e(the)g(class)h(stall)f(at)h(the)f(top)h(of)f(the)g
(instruction)g(windo)o(w)h(b)q(efore)f(retiring.)20 b(If)13
b(an)h(instruction)131 1614 y(retires)g(without)i(ha)o(ving)f(sp)q(en)o
(t)g(an)o(y)g(stall)g(time)e(at)i(the)g(top)h(of)f(the)g(instruction)g
(windo)o(w,)g(it)f(is)131 1704 y(considered)g(to)h(ha)o(v)o(e)e(fully)g
(o)o(v)o(erlapp)q(ed)h(with)g(previous)g(instructions.)21
b(W)l(e)14 b(use)g(these)g(detailed)131 1794 y(statistics)e(only)f(to)h
(gain)g(insigh)o(t)f(in)o(to)g(the)g(nature)h(of)g(the)f(v)m(arious)h
(applications)g(and)g(to)g(iden)o(tify)131 1885 y(the)h(p)q(ortions)h
(of)g(the)f(computation)f(o)o(v)o(erlapp)q(ed)g(b)o(y)h(v)m(arious)h
(optimizations.)k(F)l(or)c(purp)q(oses)g(of)131 1975
y(comparing)i(v)m(arious)h(implem)o(e)o(n)o(tations,)d(ho)o(w)o(ev)o
(er,)g(w)o(e)i(use)g(the)g(total)g(execution)g(time)e(as)j(the)131
2065 y(primary)e(p)q(erformance)h(metric.)21 b(W)l(e)16
b(additionally)g(sub)q(divide)h(the)f(data)i(memory)c(stall)i(time)131
2156 y(in)o(to)h(the)g(time)f(sp)q(en)o(t)h(on)h(L1)g(hits,)f(L2)i
(hits,)e(lo)q(cal)g(memory)d(accesses,)j(and)h(remote)e(memory)131
2246 y(accesses,)h(for)h(b)q(oth)h(reads)e(and)i(writes.)24
b(Henceforth,)16 b(w)o(e)i(use)f(the)g(term)f Fh(memory)i(stal)r(l)i
(time)131 2336 y Fi(to)d(denote)f(the)g(data)h(memory)c(stall)j(comp)q
(onen)o(t)g(of)g(execution)f(time.)204 2429 y(W)l(e)20
b(also)h(use)f(statistics)g(on)g(MSHR)f(o)q(ccupancies)h(to)h(giv)o(e)e
(us)h(an)g(idea)g(of)g(the)g(usage)h(of)131 2519 y(MSHRs)g(in)g(the)h
(L1)g(and)g(L2)h(cac)o(hes)e(and)h(the)f(exten)o(t)f(to)i(whic)o(h)f
(memory)e(op)q(erations)j(are)131 2609 y(o)o(v)o(erlapp)q(ed)16
b(in)g(our)g(systems.)p eop
%%Page: 24 30
24 29 bop 1882 72 a Fi(24)131 222 y Fl(3.4)66 b(Applications)131
345 y Fi(W)l(e)22 b(use)f(six)h(applications)f(in)h(this)f(study)h({)g
(Radix,)h(FFT)e(and)i(LU)e(from)g(the)h(SPLASH-2)131
435 y(suite)17 b([42)q(];)g(W)l(ater)g(and)h(MP3D)g(from)f(the)g
(SPLASH)g(suite)g([37)q(];)g(and)h(Erlebac)o(her,)e(obtained)131
525 y(from)c(the)g(Rice)f(parallel)h(F)l(ortran)h(compiler)d(group)j
([4].)20 b(W)l(e)12 b(describ)q(e)f(the)i(applications)f(brie\015y)131
615 y(b)q(elo)o(w.)204 706 y Fg(LU)17 b Fi(is)g(a)h(non-con)o(tiguous)g
(v)o(ersion)f(of)g(the)g(k)o(ernel)f(from)g(the)h(SPLASH-2)h(suite)e
(mo)q(di\014ed)131 796 y(to)d(use)g(\015ags)h(instead)e(of)h(barriers)g
(to)g(impro)o(v)o(e)d(p)q(erformance.)19 b(The)12 b(v)o(ersion)g(of)h
(LU)g(that)g(w)o(e)f(use)131 886 y(also)k(includes)e(lo)q(op)i
(transformations)f(and)g(pro)q(cedure)g(inlining)f(optimizations)g(to)h
(b)q(etter)g(ex-)131 977 y(ploit)f(the)h(ILP)g(features)f(in)g(the)h
(pro)q(cessor)g([29)q(].)20 b Fg(FFT)15 b Fi(from)e(the)i(SPLASH-2)g
(suite)f(p)q(erforms)131 1067 y(a)i(1D)g(F)l(ast)f(F)l(ourier)g(T)l
(ransform)f(using)i(a)f(six-step)g(algorithm.)20 b(The)15
b(v)o(ersion)g(of)g(FFT)g(that)h(w)o(e)131 1157 y(use)e(also)h
(includes)e(ILP-sp)q(eci\014c)h(co)q(de)h(transformations)f(to)g(impro)
o(v)o(e)e(p)q(erformance)h([29].)20 b(The)131 1247 y(ma)s(jorit)o(y)14
b(of)h(comm)o(unication)d(in)j(this)h(application)f(o)q(ccurs)h(in)f
(the)g(transp)q(ose)i(phase.)k Fg(Radix)131 1338 y Fi(is)c(an)g(in)o
(teger)e(sorting)j(k)o(ernel)d(from)g(the)h(SPLASH-2)i(suite.)j
Fg(Mp3d)c Fi(is)g(an)g(application)f(from)131 1428 y(the)e(SPLASH)g
(suite)f(p)q(erforming)g(a)h(Mon)o(te)g(Carlo)g(sim)o(ulation)e(of)i(a)
h(rare\014ed)e(\015o)o(w)i(sim)o(ulation.)131 1518 y
Fg(W)-5 b(ater)24 b Fi(is)f(an)h(N-b)q(o)q(dy)h(molecular)c(dynamics)i
(sim)o(ulation)e(from)i(SPLASH.)g Fg(Erlebac)n(her)131
1609 y Fi(solv)o(es)c(partial)h(di\013eren)o(tial)e(equations)i(b)o(y)g
(p)q(erforming)e(3-D)j(v)o(ectorized)d(tridiagonal)i(solv)o(es)131
1699 y(using)e(the)f(Alternating-Direction-Impl)o(ici)o(t)d(\(ADI\))j
(metho)q(d)f([4].)23 b(The)17 b(k)o(ey)f(data)i(structures)131
1789 y(are)j(3-dimensional)f(arra)o(ys)h(whic)o(h)f(are)h(distributed)f
(b)o(y)g(assigning)h(a)h(consecutiv)o(e)d(blo)q(c)o(k)h(of)131
1879 y(X-Y)14 b(planes)g(to)g(eac)o(h)f(pro)q(cessor.)22
b(One)14 b(phase)g(dominates)f(the)h(execution)f(time,)f(and)i(con)o
(tains)131 1970 y(all)j(the)h(comm)o(uni)o(cation)d(and)j(sync)o
(hronization)g(of)g(this)f(application.)25 b(The)18 b(computation)f(in)
131 2060 y(this)22 b(phase)g(consists)h(of)f(a)g(forw)o
(ard-substitution)h(pip)q(eline)e(and)i(a)f(bac)o(kw)o
(ard-substitution)131 2150 y(pip)q(eline,)c(with)g(\015ags)i(to)f(sync)
o(hronize)f(pro)q(cessors)i(sharing)f(a)h(b)q(oundary)g(plane.)28
b(The)19 b(blo)q(c)o(k)131 2241 y(size)d(determines)e(the)i(size)f(of)h
(eac)o(h)g(pip)q(eline)f(stage.)204 2331 y(The)g(input)f(sizes)f(for)i
(our)f(applications)h(run)f(on)h(an)f(8-pro)q(cessor)i(system)d(are)h
(summarized)131 2421 y(in)j(Figure)f(3.4.)23 b(These)16
b(are)h(greater)g(than)g(or)g(equal)g(to)g(the)f(sizes)g(used)h(in)f
(the)h(SPLASH)g(and)131 2511 y(SPLASH-2)i(distributions)e(for)h(all)g
(applications)f(except)g(LU.)g(In)h(the)g(case)f(of)h(LU,)g(o)o(wing)g
(to)131 2602 y(higher)g(sim)o(ulation)d(times)h(with)h(our)h(detailed)f
(sim)o(ulator,)e(w)o(e)j(use)f(a)h(problem)e(size)h(one)g(step)131
2692 y(smaller)d(than)i(recomme)o(nded,)c(but)k(do)g(not)f(exp)q(ect)g
(the)g(results)g(to)h(b)q(e)f(a\013ected)h(since)e(w)o(e)h(run)p
eop
%%Page: 25 31
25 30 bop 1882 72 a Fi(25)p 427 75 1192 2 v 426 135 2
61 v 452 117 a Fg(Application)p 761 135 V 761 135 V 327
w(Input)19 b(Size)p 1618 135 V 427 137 1192 2 v 426 197
2 61 v 452 179 a Fi(LU)p 761 197 V 267 w(256)f(b)o(y)e(256)h(matrix,)d
(blo)q(c)o(k)i(8)p 1618 197 V 426 257 V 452 239 a(FFT)p
761 257 V 235 w(65536)j(p)q(oin)o(ts)p 1618 257 V 426
317 V 452 299 a(MP3D)p 761 317 V 195 w(50000)g(particles)p
1618 317 V 426 377 V 452 359 a(W)l(ater)p 761 377 V 204
w(512)f(molecules)p 1618 377 V 426 437 V 452 419 a(Radix)p
761 437 V 207 w(1024)g(radix,)e(512K)h(k)o(eys,)e(512K)i(max)e(k)o(ey)p
1618 437 V 426 498 V 452 480 a(Erlebac)o(her)p 761 498
V 106 w(64)i(b)o(y)f(64)h(b)o(y)f(64)h(cub)q(e,)f(blo)q(c)o(k)f(8)p
1618 498 V 427 499 1192 2 v 525 581 a Fg(Figure)j(3.4)48
b Fi(Applications)16 b(used)g(and)h(input)f(sizes)131
794 y(the)h(smaller)e(problem)g(size)h(only)g(on)h(our)h(8-pro)q
(cessor)g(system)d(\(the)i(default)f(problem)g(size)f(is)131
885 y(recommended)e(for)k(up)g(to)g(64)g(pro)q(cessors\).)23
b(W)l(e)16 b(use)g(a)h(\014rst-lev)o(el)e(16K)i(cac)o(he)f(and)h(a)g
(second-)131 975 y(lev)o(el)c(64K)j(cac)o(he.)k(These)15
b(cac)o(he)f(sizes)g(w)o(ere)g(c)o(hosen)h(commensurate)d(with)j(the)g
(input)g(sizes)f(of)131 1065 y(our)e(applications,)h(based)f(on)g(the)g
(metho)q(dology)f(describ)q(ed)g(b)o(y)g(W)l(o)q(o)i(et)f(al.)k([42])o
(.)k(The)12 b(primary)131 1155 y(w)o(orking)j(set)f(\014ts)h(in)f(the)g
(L1)h(cac)o(he,)e(as)i(these)f(are)h(either)e(input-indep)q(enden)o(t)h
(or)g(user-de\014ned)131 1246 y(in)j(eac)o(h)f(of)h(our)g
(applications.)22 b(The)17 b(secondary)g(w)o(orking)g(sets)f(of)h(most)
f(applications)h(\(whic)o(h)131 1336 y(scale)f(with)g(problem)f(size\))
g(do)i(not)g(\014t)f(in)g(the)g(L2)h(cac)o(he.)p eop
%%Page: 26 32
26 31 bop 1882 72 a Fi(26)853 361 y Fm(Chapter)28 b(4)167
564 y(Impact)g(of)f(Hardw)n(are)g(Prefetc)n(hing)e(and)i(Sp)r(eculativ)
n(e)152 655 y(Reads)g(on)g(the)g(P)n(erformance)f(of)h(Consistency)f
(Mo)r(dels)131 843 y Fi(This)31 b(c)o(hapter)f(presen)o(ts)g(our)h(exp)
q(erimen)o(tal)c(results)j(ev)m(aluating)h(the)f(impact)f(of)h(hard-)
131 934 y(w)o(are)22 b(prefetc)o(hing)e(and)j(sp)q(eculativ)o(e)d
(reads)i(on)h(the)e(p)q(erformance)g(of)h(consistency)f(mo)q(dels.)131
1024 y(Section)f(4.1)g(and)g(4.2)g(discuss)g(the)g(e\013ect)f(of)h
(hardw)o(are)h(prefetc)o(hing)d(and)j(sp)q(eculativ)o(e)d(read)131
1114 y(execution)e(on)h(SC)g(and)g(R)o(C)f(resp)q(ectiv)o(ely)l(.)k
(Section)c(4.3)g(compares)g(SC)h(and)g(R)o(C.)f(Section)g(4.4)131
1205 y(examines)j(the)h(impact)f(of)i(a)f(more)g(aggressiv)o(e)g
(coherence)g(proto)q(col.)34 b(Finally)l(,)20 b(Section)g(4.5)131
1295 y(summarizes)14 b(the)i(results)g(of)g(this)g(c)o(hapter.)204
1387 y(Figures)21 b(4.1)h(and)g(4.2)g(summarize)c(our)k(results.)36
b(As)21 b(motiv)m(ated)f(b)o(y)h(Section)f(3.1.1,)j(w)o(e)131
1478 y(in)o(v)o(estigate)11 b(systems)g(with)h(write-through)g(and)h
(write-bac)o(k)e(\014rst-lev)o(el)g(cac)o(hes)g(\(sho)o(wn)i(on)g(the)
131 1568 y(left)j(and)i(righ)o(t)e(side)h(resp)q(ectiv)o(ely)d(of)j
(eac)o(h)g(\014gure\).)23 b(F)l(or)17 b(eac)o(h)f(of)h(SC)h(and)f(R)o
(C,)f(and)i(for)f(eac)o(h)131 1658 y(\014rst-lev)o(el)e(cac)o(he)h
(con\014guration,)i(w)o(e)e(examine)e(three)i(systems:)21
b Fa(plain)15 b Fi(refers)h(to)h(the)f(simple)131 1748
y(implem)o(en)o(tation,)9 b Fa(+PF)h Fi(adds)i(read)g(and)g(write)f
(prefetc)o(hing)f(as)i(discussed)f(in)g(Section)g(3.1.2,)h(and)131
1839 y Fa(+SR)f Fi(further)h(adds)h(sp)q(eculativ)o(e)e(reads)h(to)g
(the)g Fa(+PF)f Fi(con\014guration.)21 b(F)l(or)12 b(eac)o(h)g(implem)o
(en)n(tation,)131 1929 y(Figures)j(4.1\(a\))h(and)f(4.2\(a\))h(sho)o(w)
g(the)e(total)i(execution)e(time,)e(normalized)h(to)j(the)f(time)e(for)
i(a)131 2019 y(simple)e(impleme)o(n)o(tation)g(of)i(SC)h(using)g(the)f
(write-through)h(L1)g(cac)o(he.)k(The)c(execution)e(times)131
2110 y(are)21 b(divided)e(in)o(to)h(three)g(comp)q(onen)o(ts)f({)i
(CPU,)f(data)h(memory)d(stall)i(and)h(sync)o(hronization)131
2200 y(stall.)f(Recall)13 b(that,)i(as)g(describ)q(ed)f(in)f(Section)h
(3.3,)h(the)f(v)m(alue)g(of)g(eac)o(h)g(comp)q(onen)o(t)f(represen)o
(ts)131 2290 y(time)22 b(stalled)h(at)h(the)f(top)h(of)g(the)f
(instruction)h(windo)o(w.)43 b(Th)o(us,)26 b(the)d(lo)o(w)g(CPU)h
(times)e(in)131 2380 y(Figures)c(4.1\(a\))h(and)f(4.2\(a\))h(do)f(not)h
(generally)e(imply)e(p)q(o)q(or)20 b(sp)q(eedup;)f(rather,)f(these)f(v)
m(alues)131 2471 y(indicate)i(that)h(a)g(large)f(part)h(of)g(the)f(CPU)
h(time)d(is)j(completely)c(o)o(v)o(erlapp)q(ed)j(with)g(previous)131
2561 y(longer)h(latency)f(op)q(erations.)34 b(Figures)39
b(4.1\(b\))21 b(and)f(4.2\(b\))h(magnify)d(the)i(memory)d(regions)131
2651 y(of)k(Figures)f(4.1\(a\))i(and)f(4.2\(a\))g(pro)o(viding)f(a)h
(more)e(detailed)h(c)o(haracterization)f(of)i(memory)p
eop
%%Page: 27 33
27 32 bop 1882 72 a Fi(27)131 222 y(stall)22 b(time.)36
b(Eac)o(h)22 b(bar)g(sho)o(wing)h(memory)c(stall)j(time)d(is)j
(separated)h(in)o(to)e(write)h(and)g(read)131 312 y(comp)q(onen)o(ts)g
(b)o(y)g(a)g(horizon)o(tal)g(dividing)g(line.)38 b(Read)22
b(and)h(write)f(stall)g(times)e(are)j(further)131 403
y(divided)11 b(in)o(to)h(time)d(sp)q(en)o(t)j(stalled)g(on)g(L1)h(cac)o
(he)e(hits,)h(L2)h(cac)o(he)e(hits,)h(misses)f(to)h(lo)q(cal)g(memory)l
(,)131 493 y(and)17 b(misses)e(to)i(remote)d(memory)l(.)204
585 y(Figures)i(4.3)h(and)g(4.4)23 b(pro)o(vide)g(additional)g(data)h
(to)f(indicate)g(the)f(o)o(v)o(erlap)h(of)g(memory)131
676 y(op)q(erations)16 b(in)e(the)g(v)m(arious)h(implem)o(e)o(n)o
(tations.)j(These)d(\014gures)f(illustrate)g(MSHR)f(o)q(ccupancy)131
766 y(distributions)g(at)g(the)f(L1)i(and)f(L2)h(cac)o(hes)e(resp)q
(ectiv)o(ely)e(for)j(the)f(system)g(with)g(\014rst)h(lev)o(el)e(write-)
131 856 y(through)18 b(cac)o(hes.)23 b(They)17 b(giv)o(e)f(the)h
(fraction)g(of)g(total)g(time)e(\(on)j(the)f(v)o(ertical)e(axis\))i
(for)g(whic)o(h)131 946 y(at)h(least)e(N)h(MSHRs)f(are)h(o)q(ccupied)g
(b)o(y)f(misses,)g(where)g(N)h(is)f(the)h(n)o(um)o(b)q(er)e(on)j(the)f
(horizon)o(tal)131 1037 y(axis.)k(Recall)15 b(that)i(only)e(read)i
(misses)d(reserv)o(e)h(L1)i(MSHRs,)e(as)i(the)e(L1)i(write-through)g
(cac)o(he)131 1127 y(is)g(no-write-allo)q(cate.)24 b(Both)17
b(read)g(and)g(write)g(misses)e(reserv)o(e)h(L2)h(MSHRS.)f(The)h(L1)h
(MSHR)131 1217 y(o)q(ccupancy)12 b(graph)h(th)o(us)e(giv)o(es)g(an)h
(idea)g(of)f(the)h(o)o(v)o(erlap)e(of)i(read)g(op)q(erations)h(and)f
(the)f(di\013erence)131 1308 y(b)q(et)o(w)o(een)16 b(the)g(L2)i(and)f
(L1)h(MSHR)d(o)q(ccupancy)i(graphs)h(indicates)e(the)g(amoun)o(t)g(of)h
(o)o(v)o(erlap)f(of)131 1398 y(write)g(op)q(erations.)131
1582 y Fl(4.1)66 b(Sequen)n(tial)25 b(Consistency)d(Implemen)n(tations)
131 1706 y Fi(Sections)i(4.1.1)g(and)h(4.1.2)f(analyze)g(the)f(p)q
(erformance)g(impact)g(of)h(hardw)o(are)h(prefetc)o(hing)131
1797 y(and)19 b(sp)q(eculativ)o(e)e(reads)i(in)f(an)h(SC)g(system)e
(with)h(write-through)h(L1)g(cac)o(hes.)27 b(Section)18
b(4.1.2)131 1887 y(summarizes)i(the)j(results)f(with)h(write-through)g
(L1)h(cac)o(hes.)40 b(Section)22 b(4.1.3)h(discusses)g(the)131
1977 y(impact)15 b(of)h(a)h(write-bac)o(k)e(L1)j(cac)o(he.)131
2139 y Fg(4.1.1)55 b(Prefetc)n(hing)19 b(with)f(W)-5
b(rite-Through)18 b(L1)g(Cac)n(hes)131 2264 y Fi(With)h(a)g
(write-through)h(cac)o(he,)e(hardw)o(are-con)o(trolled)h(prefetc)o
(hing)f(helps)g(SC)h(p)q(erformance)131 2354 y(for)12
b(all)e(applications,)i(but)f(to)g(a)h(v)m(ariable)e(exten)o(t.)19
b(All)9 b(applications)i(exp)q(erience)f(impro)o(v)o(em)o(e)o(n)o(ts)
131 2444 y(in)i(execution)e(time)g(ranging)j(from)e(7\045)g(to)i
(23\045.)20 b(Ov)o(erall,)11 b(most)g(of)h(the)f(b)q(ene\014ts)h(of)h
(prefetc)o(hing)131 2535 y(app)q(ear)h(from)e(reducing)g(read)h(stall)g
(time;)e(prefetc)o(hing)h(is)h(generally)f(unsuccessful)g(in)h
(reducing)131 2625 y(write)j(stall)g(time.)p eop
%%Page: 28 34
28 33 bop 1882 72 a Fi(28)156 422 y
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 156 422 a
%%BeginDocument: Figures/Base/ERLEBase_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
489.103 72 S9
[] 16.800000 SL
489.103 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 239.353 M9
gsave 1.000000 G9
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 251.937 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 125.53 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 212.87 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 206.296 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 124.967 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 167.791 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 163.659 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 90.9704 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 136.237 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 131.165 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 102.803 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 137.551 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 132.292 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 102.803 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 135.485 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 130.602 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 102.616 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 219.443 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 211.555 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 125.53 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 175.868 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 169.482 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 125.343 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 149.009 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 143.937 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 95.2904 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 140.932 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 135.861 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 103.179 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 141.871 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 136.612 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 103.179 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 139.617 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 134.734 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 102.991 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(ERLE) 0 288 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 483.145 264.146 TXR
(Memory) 0 483.145 253.816 TXR
(CPU) 0 483.145 241.419 TXR
13 /Helvetica SetTxt
(Simp) 0 94.3448 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 94.3448 261.704 TXC
13 /Helvetica SetTxt
(PF) 0 124.138 59.6035 TXC
10 /Helvetica SetTxt
(75.0) 0 124.138 214.748 TXC
13 /Helvetica SetTxt
(+SR) 0 153.931 59.6035 TXC
10 /Helvetica SetTxt
(51.0) 0 153.931 169.67 TXC
13 /Helvetica SetTxt
(Simp) 0 198.621 59.6035 TXC
10 /Helvetica SetTxt
(34.2) 0 198.621 138.115 TXC
13 /Helvetica SetTxt
(PF) 0 228.414 59.6035 TXC
10 /Helvetica SetTxt
(34.9) 0 228.414 139.43 TXC
13 /Helvetica SetTxt
(+SR) 0 258.207 59.6035 TXC
10 /Helvetica SetTxt
(33.8) 0 258.207 137.363 TXC
13 /Helvetica SetTxt
(Simp) 0 310.345 59.6035 TXC
10 /Helvetica SetTxt
(78.5) 0 310.345 221.322 TXC
13 /Helvetica SetTxt
(+PF) 0 340.138 59.6035 TXC
10 /Helvetica SetTxt
(55.3) 0 340.138 177.746 TXC
13 /Helvetica SetTxt
(+SR) 0 369.931 59.6035 TXC
10 /Helvetica SetTxt
(41.0) 0 369.931 150.887 TXC
13 /Helvetica SetTxt
(Simp) 0 414.621 59.6035 TXC
10 /Helvetica SetTxt
(36.7) 0 414.621 142.81 TXC
13 /Helvetica SetTxt
(+PF) 0 444.414 59.6035 TXC
10 /Helvetica SetTxt
(37.2) 0 444.414 143.75 TXC
13 /Helvetica SetTxt
(+SR) 0 474.207 59.6035 TXC
10 /Helvetica SetTxt
(36.0) 0 474.207 141.496 TXC
16 /Helvetica SetTxt
() 0 288 12 TXC
12 /Helvetica SetTxt
() 0 483.145 251.546 TXR
() 0 483.145 241.216 TXR
() 0 483.145 228.819 TXR
13 /Helvetica SetTxt
() 0 94.3448 45.9535 TXC
10 /Helvetica SetTxt
() 0 94.3448 251.204 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 124.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 124.138 204.248 TXC
13 /Helvetica SetTxt
() 0 153.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 153.931 159.17 TXC
13 /Helvetica SetTxt
() 0 198.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 198.621 127.615 TXC
13 /Helvetica SetTxt
(RC, WT) 0 228.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 228.414 128.93 TXC
13 /Helvetica SetTxt
() 0 258.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 258.207 126.863 TXC
13 /Helvetica SetTxt
() 0 310.345 45.9535 TXC
10 /Helvetica SetTxt
() 0 310.345 210.822 TXC
13 /Helvetica SetTxt
(SC, WB) 0 340.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 340.138 167.246 TXC
13 /Helvetica SetTxt
() 0 369.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 369.931 140.387 TXC
13 /Helvetica SetTxt
() 0 414.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 414.621 132.31 TXC
13 /Helvetica SetTxt
(RC, WB) 0 444.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 444.414 133.25 TXC
13 /Helvetica SetTxt
() 0 474.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 474.207 130.996 TXC
13 /Helvetica SetTxt
() 0 124.138 32.3035 TXC
() 0 228.414 32.3035 TXC
() 0 340.138 32.3035 TXC
() 0 444.414 32.3035 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 422 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 956 422 a
%%BeginDocument: Figures/Base/ERLEBase_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 273.083 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 268.906 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 231.613 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 162.099 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
82.08 161.204 S9
[] 0.600000 SL
105.12 161.204 M9
D9
93.6 72 S9
[] 16.800000 SL
93.6 161.204 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 143.602 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 87.8122 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 87.2155 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 201.182 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 194.917 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 192.829 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 102.133 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
110.88 101.238 S9
[] 0.600000 SL
133.92 101.238 M9
D9
122.4 72 S9
[] 16.800000 SL
122.4 101.238 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 91.3923 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 87.5138 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 87.2155 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 187.459 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 184.177 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 180.895 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 86.0221 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
139.68 85.1271 S9
[] 0.600000 SL
162.72 85.1271 M9
D9
151.2 72 S9
[] 16.800000 SL
151.2 85.1271 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 78.5635 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 117.05 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 117.05 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 117.05 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 117.05 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
182.88 117.05 S9
[] 0.600000 SL
205.92 117.05 M9
D9
194.4 72 S9
[] 16.800000 SL
194.4 117.05 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 105.713 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.895 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.895 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 118.84 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 118.84 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 118.84 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 118.84 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
211.68 118.84 S9
[] 0.600000 SL
234.72 118.84 M9
D9
223.2 72 S9
[] 16.800000 SL
223.2 118.84 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 105.713 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 72.895 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 72.895 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.453 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.453 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.453 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.453 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
240.48 116.453 S9
[] 0.600000 SL
263.52 116.453 M9
D9
252 72 S9
[] 16.800000 SL
252 116.453 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 106.906 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 73.1934 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 73.1934 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 208.641 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 204.464 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 168.663 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 168.365 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
290.88 160.608 S9
[] 0.600000 SL
313.92 160.608 M9
D9
302.4 72 S9
[] 16.800000 SL
302.4 160.608 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 143.006 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 87.8122 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 87.2155 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 142.11 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 136.74 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 124.508 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 124.508 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
319.68 116.453 S9
[] 0.600000 SL
342.72 116.453 M9
D9
331.2 72 S9
[] 16.800000 SL
331.2 116.453 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 105.713 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 87.2155 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 87.2155 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 149.569 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 143.602 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 117.945 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 117.945 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
348.48 110.188 S9
[] 0.600000 SL
371.52 110.188 M9
D9
360 72 S9
[] 16.800000 SL
360 110.188 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 100.939 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 123.912 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 123.912 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 123.912 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 123.912 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.68 123.912 S9
[] 0.600000 SL
414.72 123.912 M9
D9
403.2 72 S9
[] 16.800000 SL
403.2 123.912 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 111.978 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72.5967 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72.5967 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 125.105 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 125.105 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 125.105 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 125.105 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
420.48 125.105 S9
[] 0.600000 SL
443.52 125.105 M9
D9
432 72 S9
[] 16.800000 SL
432 125.105 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 111.68 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72.5967 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72.5967 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 122.42 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 122.42 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 122.42 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 122.42 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
449.28 122.42 S9
[] 0.600000 SL
472.32 122.42 M9
D9
460.8 72 S9
[] 16.800000 SL
460.8 122.42 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 111.978 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72.5967 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72.5967 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 279.348 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 268.309 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 257.569 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 246.829 M9
gsave 0.950000 G9
D9
grestore
489.6 236.088 S9
D9
489.6 72 S9
[] 16.800000 SL
489.6 236.088 M9
gsave 1.000000 G9
D9
grestore
472.32 201.481 S9
[] 0.600000 SL
489.6 201.481 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 86.9171 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 82.7171 TXR
12 /Helvetica SetTxt
(|) -90 72 101.834 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 97.6343 TXR
12 /Helvetica SetTxt
(|) -90 72 116.751 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 112.551 TXR
12 /Helvetica SetTxt
(|) -90 72 131.669 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 127.469 TXR
12 /Helvetica SetTxt
(|) -90 72 146.586 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 142.386 TXR
12 /Helvetica SetTxt
(|) -90 72 161.503 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 157.303 TXR
12 /Helvetica SetTxt
(|) -90 72 176.42 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 172.22 TXR
12 /Helvetica SetTxt
(|) -90 72 191.337 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 187.137 TXR
12 /Helvetica SetTxt
(|) -90 72 206.254 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 202.054 TXR
12 /Helvetica SetTxt
(|) -90 72 221.171 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 216.971 TXR
12 /Helvetica SetTxt
(|) -90 72 236.088 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 231.888 TXR
12 /Helvetica SetTxt
(|) -90 72 251.006 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 246.806 TXR
12 /Helvetica SetTxt
(|) -90 72 265.923 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 261.723 TXR
12 /Helvetica SetTxt
(|) -90 72 280.84 TXC
10 /Helvetica-Bold SetTxt
(70) 0 67 276.64 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(ERLE) 0 288 28.7403 TXC
13 /Helvetica SetTxt
(Simp) 0 93.6 55.8895 TXC
10 /Helvetica SetTxt
(67.4) 0 93.6 277.26 TXC
13 /Helvetica SetTxt
(+PF) 0 122.4 55.8895 TXC
10 /Helvetica SetTxt
(43.3) 0 122.4 205.657 TXC
13 /Helvetica SetTxt
(+SR) 0 151.2 55.8895 TXC
10 /Helvetica SetTxt
(38.7) 0 151.2 191.635 TXC
13 /Helvetica SetTxt
(Simp) 0 194.4 55.8895 TXC
10 /Helvetica SetTxt
(15.1) 0 194.4 121.227 TXC
13 /Helvetica SetTxt
(+PF) 0 223.2 55.8895 TXC
10 /Helvetica SetTxt
(15.7) 0 223.2 123.017 TXC
13 /Helvetica SetTxt
(+SR) 0 252 55.8895 TXC
10 /Helvetica SetTxt
(14.9) 0 252 120.63 TXC
13 /Helvetica SetTxt
(Simp) 0 302.4 55.8895 TXC
10 /Helvetica SetTxt
(45.8) 0 302.4 212.818 TXC
13 /Helvetica SetTxt
(+PF) 0 331.2 55.8895 TXC
10 /Helvetica SetTxt
(23.5) 0 331.2 146.287 TXC
13 /Helvetica SetTxt
(+SR) 0 360 55.8895 TXC
10 /Helvetica SetTxt
(26.0) 0 360 153.746 TXC
13 /Helvetica SetTxt
(Simp) 0 403.2 55.8895 TXC
10 /Helvetica SetTxt
(17.4) 0 403.2 128.387 TXC
13 /Helvetica SetTxt
(+PF) 0 432 55.8895 TXC
10 /Helvetica SetTxt
(17.8) 0 432 129.282 TXC
13 /Helvetica SetTxt
(+SR) 0 460.8 55.8895 TXC
10 /Helvetica SetTxt
(16.9) 0 460.8 126.597 TXC
12 /Helvetica SetTxt
(remote) 0 482.4 272.785 TXR
(local) 0 482.4 262.044 TXR
(L2) 0 482.4 251.304 TXR
(L1) 0 482.4 240.265 TXR
(Writes) 0 489.6 205.956 TXR
(Reads) 0 489.6 190.74 TXR
16 /Helvetica SetTxt
() 0 288 11.9403 TXC
13 /Helvetica SetTxt
() 0 93.6 42.2395 TXC
10 /Helvetica SetTxt
() 0 93.6 266.76 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 122.4 42.2395 TXC
10 /Helvetica SetTxt
() 0 122.4 195.157 TXC
13 /Helvetica SetTxt
() 0 151.2 42.2395 TXC
10 /Helvetica SetTxt
() 0 151.2 181.135 TXC
13 /Helvetica SetTxt
() 0 194.4 42.2395 TXC
10 /Helvetica SetTxt
() 0 194.4 110.727 TXC
13 /Helvetica SetTxt
(RC, WT) 0 223.2 42.2395 TXC
10 /Helvetica SetTxt
() 0 223.2 112.517 TXC
13 /Helvetica SetTxt
() 0 252 42.2395 TXC
10 /Helvetica SetTxt
() 0 252 110.13 TXC
13 /Helvetica SetTxt
() 0 302.4 42.2395 TXC
10 /Helvetica SetTxt
() 0 302.4 202.318 TXC
13 /Helvetica SetTxt
(SC, WB) 0 331.2 42.2395 TXC
10 /Helvetica SetTxt
() 0 331.2 135.787 TXC
13 /Helvetica SetTxt
() 0 360 42.2395 TXC
10 /Helvetica SetTxt
() 0 360 143.246 TXC
13 /Helvetica SetTxt
() 0 403.2 42.2395 TXC
10 /Helvetica SetTxt
() 0 403.2 117.887 TXC
13 /Helvetica SetTxt
(RC, WB) 0 432 42.2395 TXC
10 /Helvetica SetTxt
() 0 432 118.782 TXC
13 /Helvetica SetTxt
() 0 460.8 42.2395 TXC
10 /Helvetica SetTxt
() 0 460.8 116.097 TXC
12 /Helvetica SetTxt
() 0 482.4 260.185 TXR
() 0 482.4 249.444 TXR
() 0 482.4 238.704 TXR
() 0 482.4 227.665 TXR
() 0 489.6 193.356 TXR
() 0 489.6 178.14 TXR
13 /Helvetica SetTxt
() 0 122.4 28.5895 TXC
() 0 223.2 28.5895 TXC
() 0 331.2 28.5895 TXC
() 0 432 28.5895 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1040 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 156 1040 a
%%BeginDocument: Figures/Base/FFTBase_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
489.103 72 S9
[] 16.800000 SL
489.103 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 239.353 M9
gsave 1.000000 G9
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 258.699 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 106.372 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 218.317 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 217.565 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 106.372 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 198.407 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 197.656 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 89.8435 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 115.951 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 115.576 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 97.7322 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 124.028 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 123.277 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 97.3565 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 124.028 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 123.277 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 97.3565 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 179.249 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 177.934 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 107.499 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 150.323 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 149.572 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 107.499 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 131.353 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 130.602 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 91.9096 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 115.388 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 115.012 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 97.7322 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 116.139 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 115.763 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 97.5443 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 116.139 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 115.763 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 97.7322 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(FFT) 0 288 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 483.145 264.146 TXR
(Memory) 0 483.145 253.816 TXR
(CPU) 0 483.145 241.419 TXR
13 /Helvetica SetTxt
(Simp) 0 94.3448 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 94.3448 261.704 TXC
13 /Helvetica SetTxt
(PF) 0 124.138 59.6035 TXC
10 /Helvetica SetTxt
(77.9) 0 124.138 220.195 TXC
13 /Helvetica SetTxt
(+SR) 0 153.931 59.6035 TXC
10 /Helvetica SetTxt
(67.3) 0 153.931 200.285 TXC
13 /Helvetica SetTxt
(Simp) 0 198.621 59.6035 TXC
10 /Helvetica SetTxt
(23.4) 0 198.621 117.83 TXC
13 /Helvetica SetTxt
(PF) 0 228.414 59.6035 TXC
10 /Helvetica SetTxt
(27.7) 0 228.414 125.906 TXC
13 /Helvetica SetTxt
(+SR) 0 258.207 59.6035 TXC
10 /Helvetica SetTxt
(27.7) 0 258.207 125.906 TXC
13 /Helvetica SetTxt
(Simp) 0 310.345 59.6035 TXC
10 /Helvetica SetTxt
(57.1) 0 310.345 181.127 TXC
13 /Helvetica SetTxt
(+PF) 0 340.138 59.6035 TXC
10 /Helvetica SetTxt
(41.7) 0 340.138 152.202 TXC
13 /Helvetica SetTxt
(+SR) 0 369.931 59.6035 TXC
10 /Helvetica SetTxt
(31.6) 0 369.931 133.231 TXC
13 /Helvetica SetTxt
(Simp) 0 414.621 59.6035 TXC
10 /Helvetica SetTxt
(23.1) 0 414.621 117.266 TXC
13 /Helvetica SetTxt
(+PF) 0 444.414 59.6035 TXC
10 /Helvetica SetTxt
(23.5) 0 444.414 118.017 TXC
13 /Helvetica SetTxt
(+SR) 0 474.207 59.6035 TXC
10 /Helvetica SetTxt
(23.5) 0 474.207 118.017 TXC
16 /Helvetica SetTxt
() 0 288 12 TXC
12 /Helvetica SetTxt
() 0 483.145 251.546 TXR
() 0 483.145 241.216 TXR
() 0 483.145 228.819 TXR
13 /Helvetica SetTxt
() 0 94.3448 45.9535 TXC
10 /Helvetica SetTxt
() 0 94.3448 251.204 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 124.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 124.138 209.695 TXC
13 /Helvetica SetTxt
() 0 153.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 153.931 189.785 TXC
13 /Helvetica SetTxt
() 0 198.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 198.621 107.33 TXC
13 /Helvetica SetTxt
(RC, WT) 0 228.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 228.414 115.406 TXC
13 /Helvetica SetTxt
() 0 258.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 258.207 115.406 TXC
13 /Helvetica SetTxt
() 0 310.345 45.9535 TXC
10 /Helvetica SetTxt
() 0 310.345 170.627 TXC
13 /Helvetica SetTxt
(SC, WB) 0 340.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 340.138 141.702 TXC
13 /Helvetica SetTxt
() 0 369.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 369.931 122.731 TXC
13 /Helvetica SetTxt
() 0 414.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 414.621 106.766 TXC
13 /Helvetica SetTxt
(RC, WB) 0 444.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 444.414 107.517 TXC
13 /Helvetica SetTxt
() 0 474.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 474.207 107.517 TXC
13 /Helvetica SetTxt
() 0 124.138 32.3035 TXC
() 0 228.414 32.3035 TXC
() 0 340.138 32.3035 TXC
() 0 444.414 32.3035 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1040 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 956 1040 a
%%BeginDocument: Figures/Base/FFTBase_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 275.442 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 253.088 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 244.8 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 115.953 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
82.08 115.953 S9
[] 0.600000 SL
105.12 115.953 M9
D9
93.6 72 S9
[] 16.800000 SL
93.6 115.953 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 88.3256 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 75.7674 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 75.7674 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 220.437 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 216.167 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 215.414 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 83.0512 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
110.88 83.0512 S9
[] 0.600000 SL
133.92 83.0512 M9
D9
122.4 72 S9
[] 16.800000 SL
122.4 83.0512 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 78.7814 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 75.7674 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 75.7674 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 216.167 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 212.902 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 212.4 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 79.0326 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
139.68 79.0326 S9
[] 0.600000 SL
162.72 79.0326 M9
D9
151.2 72 S9
[] 16.800000 SL
151.2 79.0326 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 75.014 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 95.8605 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 95.8605 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 95.8605 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 95.8605 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
182.88 95.8605 S9
[] 0.600000 SL
205.92 95.8605 M9
D9
194.4 72 S9
[] 16.800000 SL
194.4 95.8605 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 82.8 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.5023 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.2512 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.66 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.66 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.66 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.66 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
211.68 106.66 S9
[] 0.600000 SL
234.72 106.66 M9
D9
223.2 72 S9
[] 16.800000 SL
223.2 106.66 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 92.3442 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 78.5302 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 77.7767 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 106.66 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 106.66 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 106.66 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 106.66 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
240.48 106.66 S9
[] 0.600000 SL
263.52 106.66 M9
D9
252 72 S9
[] 16.800000 SL
252 106.66 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 92.5953 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 78.5302 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 77.7767 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 166.186 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 143.833 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 136.047 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 131.526 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
290.88 119.219 S9
[] 0.600000 SL
313.92 119.219 M9
D9
302.4 72 S9
[] 16.800000 SL
302.4 119.219 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 91.5907 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 79.0326 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 75.5163 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 128.26 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 116.707 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 110.93 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 106.409 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
319.68 93.8512 S9
[] 0.600000 SL
342.72 93.8512 M9
D9
331.2 72 S9
[] 16.800000 SL
331.2 93.8512 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 84.5581 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 79.2837 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 75.5163 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 123.488 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 108.167 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 102.391 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 101.637 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
348.48 88.8279 S9
[] 0.600000 SL
371.52 88.8279 M9
D9
360 72 S9
[] 16.800000 SL
360 88.8279 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 79.2837 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 95.107 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 95.107 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 95.107 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 95.107 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.68 95.107 S9
[] 0.600000 SL
414.72 95.107 M9
D9
403.2 72 S9
[] 16.800000 SL
403.2 95.107 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 82.2977 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72.5023 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72.2512 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 96.3628 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 96.3628 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 96.3628 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 96.3628 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
420.48 96.1116 S9
[] 0.600000 SL
443.52 96.1116 M9
D9
432 72 S9
[] 16.800000 SL
432 96.1116 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 83.3023 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72.5023 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72.2512 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 96.1116 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 96.1116 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 96.1116 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 96.1116 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
449.28 96.1116 S9
[] 0.600000 SL
472.32 96.1116 M9
D9
460.8 72 S9
[] 16.800000 SL
460.8 96.1116 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 83.0512 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72.2512 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72.2512 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 279.46 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 268.66 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 257.86 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 247.06 M9
gsave 0.950000 G9
D9
grestore
489.6 236.26 S9
D9
489.6 72 S9
[] 16.800000 SL
489.6 236.26 M9
gsave 1.000000 G9
D9
grestore
472.32 201.6 S9
[] 0.600000 SL
489.6 201.6 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 84.5581 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 80.3581 TXR
12 /Helvetica SetTxt
(|) -90 72 97.1163 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 92.9163 TXR
12 /Helvetica SetTxt
(|) -90 72 109.674 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 105.474 TXR
12 /Helvetica SetTxt
(|) -90 72 122.233 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 118.033 TXR
12 /Helvetica SetTxt
(|) -90 72 134.791 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 130.591 TXR
12 /Helvetica SetTxt
(|) -90 72 147.349 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 143.149 TXR
12 /Helvetica SetTxt
(|) -90 72 159.907 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 155.707 TXR
12 /Helvetica SetTxt
(|) -90 72 172.465 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 168.265 TXR
12 /Helvetica SetTxt
(|) -90 72 185.023 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 180.823 TXR
12 /Helvetica SetTxt
(|) -90 72 197.581 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 193.381 TXR
12 /Helvetica SetTxt
(|) -90 72 210.14 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 205.94 TXR
12 /Helvetica SetTxt
(|) -90 72 222.698 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 218.498 TXR
12 /Helvetica SetTxt
(|) -90 72 235.256 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 231.056 TXR
12 /Helvetica SetTxt
(|) -90 72 247.814 TXC
10 /Helvetica-Bold SetTxt
(70) 0 67 243.614 TXR
12 /Helvetica SetTxt
(|) -90 72 260.372 TXC
10 /Helvetica-Bold SetTxt
(75) 0 67 256.172 TXR
12 /Helvetica SetTxt
(|) -90 72 272.93 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 268.73 TXR
12 /Helvetica SetTxt
(|) -90 72 285.488 TXC
10 /Helvetica-Bold SetTxt
(85) 0 67 281.288 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(FFT) 0 288 28.8 TXC
13 /Helvetica SetTxt
(Simp) 0 93.6 55.6744 TXC
10 /Helvetica SetTxt
(81.0) 0 93.6 279.712 TXC
13 /Helvetica SetTxt
(+PF) 0 122.4 55.6744 TXC
10 /Helvetica SetTxt
(59.1) 0 122.4 224.707 TXC
13 /Helvetica SetTxt
(+SR) 0 151.2 55.6744 TXC
10 /Helvetica SetTxt
(57.4) 0 151.2 220.437 TXC
13 /Helvetica SetTxt
(Simp) 0 194.4 55.6744 TXC
10 /Helvetica SetTxt
(9.5) 0 194.4 100.13 TXC
13 /Helvetica SetTxt
(+PF) 0 223.2 55.6744 TXC
10 /Helvetica SetTxt
(13.8) 0 223.2 110.93 TXC
13 /Helvetica SetTxt
(+SR) 0 252 55.6744 TXC
10 /Helvetica SetTxt
(13.8) 0 252 110.93 TXC
13 /Helvetica SetTxt
(Simp) 0 302.4 55.6744 TXC
10 /Helvetica SetTxt
(37.5) 0 302.4 170.707 TXC
13 /Helvetica SetTxt
(+PF) 0 331.2 55.6744 TXC
10 /Helvetica SetTxt
(22.4) 0 331.2 132.781 TXC
13 /Helvetica SetTxt
(+SR) 0 360 55.6744 TXC
10 /Helvetica SetTxt
(20.5) 0 360 127.758 TXC
13 /Helvetica SetTxt
(Simp) 0 403.2 55.6744 TXC
10 /Helvetica SetTxt
(9.2) 0 403.2 99.3767 TXC
13 /Helvetica SetTxt
(+PF) 0 432 55.6744 TXC
10 /Helvetica SetTxt
(9.7) 0 432 100.633 TXC
13 /Helvetica SetTxt
(+SR) 0 460.8 55.6744 TXC
10 /Helvetica SetTxt
(9.6) 0 460.8 100.381 TXC
12 /Helvetica SetTxt
(remote) 0 482.4 272.93 TXR
(local) 0 482.4 262.13 TXR
(L2) 0 482.4 251.33 TXR
(L1) 0 482.4 240.53 TXR
(Writes) 0 489.6 205.87 TXR
(Reads) 0 489.6 190.8 TXR
16 /Helvetica SetTxt
() 0 288 12 TXC
13 /Helvetica SetTxt
() 0 93.6 42.0244 TXC
10 /Helvetica SetTxt
() 0 93.6 269.212 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 122.4 42.0244 TXC
10 /Helvetica SetTxt
() 0 122.4 214.207 TXC
13 /Helvetica SetTxt
() 0 151.2 42.0244 TXC
10 /Helvetica SetTxt
() 0 151.2 209.937 TXC
13 /Helvetica SetTxt
() 0 194.4 42.0244 TXC
10 /Helvetica SetTxt
() 0 194.4 89.6302 TXC
13 /Helvetica SetTxt
(RC, WT) 0 223.2 42.0244 TXC
10 /Helvetica SetTxt
() 0 223.2 100.43 TXC
13 /Helvetica SetTxt
() 0 252 42.0244 TXC
10 /Helvetica SetTxt
() 0 252 100.43 TXC
13 /Helvetica SetTxt
() 0 302.4 42.0244 TXC
10 /Helvetica SetTxt
() 0 302.4 160.207 TXC
13 /Helvetica SetTxt
(SC, WB) 0 331.2 42.0244 TXC
10 /Helvetica SetTxt
() 0 331.2 122.281 TXC
13 /Helvetica SetTxt
() 0 360 42.0244 TXC
10 /Helvetica SetTxt
() 0 360 117.258 TXC
13 /Helvetica SetTxt
() 0 403.2 42.0244 TXC
10 /Helvetica SetTxt
() 0 403.2 88.8767 TXC
13 /Helvetica SetTxt
(RC, WB) 0 432 42.0244 TXC
10 /Helvetica SetTxt
() 0 432 90.1326 TXC
13 /Helvetica SetTxt
() 0 460.8 42.0244 TXC
10 /Helvetica SetTxt
() 0 460.8 89.8814 TXC
12 /Helvetica SetTxt
() 0 482.4 260.33 TXR
() 0 482.4 249.53 TXR
() 0 482.4 238.73 TXR
() 0 482.4 227.93 TXR
() 0 489.6 193.27 TXR
() 0 489.6 178.2 TXR
13 /Helvetica SetTxt
() 0 122.4 28.3744 TXC
() 0 223.2 28.3744 TXC
() 0 331.2 28.3744 TXC
() 0 432 28.3744 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1658 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 156 1658 a
%%BeginDocument: Figures/Base/LUBase_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
489.103 72 S9
[] 16.800000 SL
489.103 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 239.353 M9
gsave 1.000000 G9
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 240.668 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 116.327 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 230.337 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 212.118 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 115.012 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 179.437 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 167.416 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 89.4678 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 126.282 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 117.83 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 95.6661 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 126.094 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 117.078 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 95.8539 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 127.597 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 118.205 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 95.8539 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 219.256 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 203.29 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 116.327 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 198.595 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 184.132 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 115.388 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 141.12 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 131.541 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 89.6557 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 127.597 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 119.332 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 95.8539 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 127.221 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 118.017 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 95.8539 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 128.911 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 119.708 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 95.8539 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(LU) 0 288 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 483.145 264.146 TXR
(Memory) 0 483.145 253.816 TXR
(CPU) 0 483.145 241.419 TXR
13 /Helvetica SetTxt
(Simp) 0 94.3448 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 94.3448 261.704 TXC
13 /Helvetica SetTxt
(PF) 0 124.138 59.6035 TXC
10 /Helvetica SetTxt
(84.3) 0 124.138 232.216 TXC
13 /Helvetica SetTxt
(+SR) 0 153.931 59.6035 TXC
10 /Helvetica SetTxt
(57.2) 0 153.931 181.315 TXC
13 /Helvetica SetTxt
(Simp) 0 198.621 59.6035 TXC
10 /Helvetica SetTxt
(28.9) 0 198.621 128.16 TXC
13 /Helvetica SetTxt
(PF) 0 228.414 59.6035 TXC
10 /Helvetica SetTxt
(28.8) 0 228.414 127.972 TXC
13 /Helvetica SetTxt
(+SR) 0 258.207 59.6035 TXC
10 /Helvetica SetTxt
(29.6) 0 258.207 129.475 TXC
13 /Helvetica SetTxt
(Simp) 0 310.345 59.6035 TXC
10 /Helvetica SetTxt
(78.4) 0 310.345 221.134 TXC
13 /Helvetica SetTxt
(+PF) 0 340.138 59.6035 TXC
10 /Helvetica SetTxt
(67.4) 0 340.138 200.473 TXC
13 /Helvetica SetTxt
(+SR) 0 369.931 59.6035 TXC
10 /Helvetica SetTxt
(36.8) 0 369.931 142.998 TXC
13 /Helvetica SetTxt
(Simp) 0 414.621 59.6035 TXC
10 /Helvetica SetTxt
(29.6) 0 414.621 129.475 TXC
13 /Helvetica SetTxt
(+PF) 0 444.414 59.6035 TXC
10 /Helvetica SetTxt
(29.4) 0 444.414 129.099 TXC
13 /Helvetica SetTxt
(+SR) 0 474.207 59.6035 TXC
10 /Helvetica SetTxt
(30.3) 0 474.207 130.79 TXC
16 /Helvetica SetTxt
() 0 288 12 TXC
12 /Helvetica SetTxt
() 0 483.145 251.546 TXR
() 0 483.145 241.216 TXR
() 0 483.145 228.819 TXR
13 /Helvetica SetTxt
() 0 94.3448 45.9535 TXC
10 /Helvetica SetTxt
() 0 94.3448 251.204 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 124.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 124.138 221.716 TXC
13 /Helvetica SetTxt
() 0 153.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 153.931 170.815 TXC
13 /Helvetica SetTxt
() 0 198.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 198.621 117.66 TXC
13 /Helvetica SetTxt
(RC, WT) 0 228.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 228.414 117.472 TXC
13 /Helvetica SetTxt
() 0 258.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 258.207 118.975 TXC
13 /Helvetica SetTxt
() 0 310.345 45.9535 TXC
10 /Helvetica SetTxt
() 0 310.345 210.634 TXC
13 /Helvetica SetTxt
(SC, WB) 0 340.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 340.138 189.973 TXC
13 /Helvetica SetTxt
() 0 369.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 369.931 132.498 TXC
13 /Helvetica SetTxt
() 0 414.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 414.621 118.975 TXC
13 /Helvetica SetTxt
(RC, WB) 0 444.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 444.414 118.599 TXC
13 /Helvetica SetTxt
() 0 474.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 474.207 120.29 TXC
13 /Helvetica SetTxt
() 0 124.138 32.3035 TXC
() 0 228.414 32.3035 TXC
() 0 340.138 32.3035 TXC
() 0 444.414 32.3035 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1658 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 956 1658 a
%%BeginDocument: Figures/Base/LUBase_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 272.853 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 258.614 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 257.403 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 168.64 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
82.08 168.64 S9
[] 0.600000 SL
105.12 168.64 M9
D9
93.6 72 S9
[] 16.800000 SL
93.6 168.64 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 113.201 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 108.959 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 79.5736 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 228.623 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 227.108 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 227.108 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 129.257 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
110.88 129.257 S9
[] 0.600000 SL
133.92 129.257 M9
D9
122.4 72 S9
[] 16.800000 SL
122.4 129.257 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 110.171 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 108.959 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 79.8766 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 197.722 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 195.299 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 195.299 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 95.6297 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
139.68 95.6297 S9
[] 0.600000 SL
162.72 95.6297 M9
D9
151.2 72 S9
[] 16.800000 SL
151.2 95.6297 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72.9088 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 108.05 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 108.05 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 108.05 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 108.05 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
182.88 108.05 S9
[] 0.600000 SL
205.92 108.05 M9
D9
194.4 72 S9
[] 16.800000 SL
194.4 108.05 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 73.5147 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.6059 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.233 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.233 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.233 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 106.233 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
211.68 106.233 S9
[] 0.600000 SL
234.72 106.233 M9
D9
223.2 72 S9
[] 16.800000 SL
223.2 106.233 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 73.2118 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 72.3029 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 108.05 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 108.05 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 108.05 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 108.05 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
240.48 108.05 S9
[] 0.600000 SL
263.52 108.05 M9
D9
252 72 S9
[] 16.800000 SL
252 108.05 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 73.8177 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 72.6059 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 212.264 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 198.328 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 195.602 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 176.213 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
290.88 168.64 S9
[] 0.600000 SL
313.92 168.64 M9
D9
302.4 72 S9
[] 16.800000 SL
302.4 168.64 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 113.201 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 109.262 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 79.5736 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 183.181 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 167.731 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 166.519 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 141.98 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
319.68 135.619 S9
[] 0.600000 SL
342.72 135.619 M9
D9
331.2 72 S9
[] 16.800000 SL
331.2 135.619 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 108.656 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 107.445 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 79.8766 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 139.557 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 126.833 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 125.924 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 108.959 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
348.48 101.689 S9
[] 0.600000 SL
371.52 101.689 M9
D9
360 72 S9
[] 16.800000 SL
360 101.689 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 74.4236 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 73.5147 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 109.868 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 109.868 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 109.868 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 109.868 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.68 109.868 S9
[] 0.600000 SL
414.72 109.868 M9
D9
403.2 72 S9
[] 16.800000 SL
403.2 109.868 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 74.7265 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 73.8177 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 107.748 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 107.748 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 107.748 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 107.748 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
420.48 107.748 S9
[] 0.600000 SL
443.52 107.748 M9
D9
432 72 S9
[] 16.800000 SL
432 107.748 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 74.4236 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 73.5147 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 110.474 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 110.474 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 110.474 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 110.474 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
449.28 110.474 S9
[] 0.600000 SL
472.32 110.474 M9
D9
460.8 72 S9
[] 16.800000 SL
460.8 110.474 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 75.9383 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 74.4236 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 279.215 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 268.612 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 257.705 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 246.799 M9
gsave 0.950000 G9
D9
grestore
489.6 236.196 S9
D9
489.6 72 S9
[] 16.800000 SL
489.6 236.196 M9
gsave 1.000000 G9
D9
grestore
472.32 201.661 S9
[] 0.600000 SL
489.6 201.661 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 87.1473 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 82.9473 TXR
12 /Helvetica SetTxt
(|) -90 72 102.295 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 98.0945 TXR
12 /Helvetica SetTxt
(|) -90 72 117.442 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 113.242 TXR
12 /Helvetica SetTxt
(|) -90 72 132.589 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 128.389 TXR
12 /Helvetica SetTxt
(|) -90 72 147.736 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 143.536 TXR
12 /Helvetica SetTxt
(|) -90 72 162.884 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 158.684 TXR
12 /Helvetica SetTxt
(|) -90 72 178.031 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 173.831 TXR
12 /Helvetica SetTxt
(|) -90 72 193.178 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 188.978 TXR
12 /Helvetica SetTxt
(|) -90 72 208.325 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 204.125 TXR
12 /Helvetica SetTxt
(|) -90 72 223.473 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 219.273 TXR
12 /Helvetica SetTxt
(|) -90 72 238.62 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 234.42 TXR
12 /Helvetica SetTxt
(|) -90 72 253.767 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 249.567 TXR
12 /Helvetica SetTxt
(|) -90 72 268.914 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 264.714 TXR
12 /Helvetica SetTxt
(|) -90 72 284.062 TXC
10 /Helvetica-Bold SetTxt
(70) 0 67 279.862 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(LU) 0 288 28.6788 TXC
13 /Helvetica SetTxt
(Simp) 0 93.6 55.9439 TXC
10 /Helvetica SetTxt
(66.3) 0 93.6 277.094 TXC
13 /Helvetica SetTxt
(+PF) 0 122.4 55.9439 TXC
10 /Helvetica SetTxt
(51.7) 0 122.4 232.864 TXC
13 /Helvetica SetTxt
(+SR) 0 151.2 55.9439 TXC
10 /Helvetica SetTxt
(41.5) 0 151.2 202.266 TXC
13 /Helvetica SetTxt
(Simp) 0 194.4 55.9439 TXC
10 /Helvetica SetTxt
(11.9) 0 194.4 112.292 TXC
13 /Helvetica SetTxt
(+PF) 0 223.2 55.9439 TXC
10 /Helvetica SetTxt
(11.3) 0 223.2 110.474 TXC
13 /Helvetica SetTxt
(+SR) 0 252 55.9439 TXC
10 /Helvetica SetTxt
(11.9) 0 252 112.292 TXC
13 /Helvetica SetTxt
(Simp) 0 302.4 55.9439 TXC
10 /Helvetica SetTxt
(46.3) 0 302.4 216.505 TXC
13 /Helvetica SetTxt
(+PF) 0 331.2 55.9439 TXC
10 /Helvetica SetTxt
(36.7) 0 331.2 187.422 TXC
13 /Helvetica SetTxt
(+SR) 0 360 55.9439 TXC
10 /Helvetica SetTxt
(22.3) 0 360 143.798 TXC
13 /Helvetica SetTxt
(Simp) 0 403.2 55.9439 TXC
10 /Helvetica SetTxt
(12.5) 0 403.2 114.109 TXC
13 /Helvetica SetTxt
(+PF) 0 432 55.9439 TXC
10 /Helvetica SetTxt
(11.8) 0 432 111.989 TXC
13 /Helvetica SetTxt
(+SR) 0 460.8 55.9439 TXC
10 /Helvetica SetTxt
(12.7) 0 460.8 114.715 TXC
12 /Helvetica SetTxt
(remote) 0 482.4 272.853 TXR
(local) 0 482.4 261.947 TXR
(L2) 0 482.4 251.344 TXR
(L1) 0 482.4 240.438 TXR
(Writes) 0 489.6 205.902 TXR
(Reads) 0 489.6 190.755 TXR
16 /Helvetica SetTxt
() 0 288 11.8788 TXC
13 /Helvetica SetTxt
() 0 93.6 42.2939 TXC
10 /Helvetica SetTxt
() 0 93.6 266.594 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 122.4 42.2939 TXC
10 /Helvetica SetTxt
() 0 122.4 222.364 TXC
13 /Helvetica SetTxt
() 0 151.2 42.2939 TXC
10 /Helvetica SetTxt
() 0 151.2 191.766 TXC
13 /Helvetica SetTxt
() 0 194.4 42.2939 TXC
10 /Helvetica SetTxt
() 0 194.4 101.792 TXC
13 /Helvetica SetTxt
(RC, WT) 0 223.2 42.2939 TXC
10 /Helvetica SetTxt
() 0 223.2 99.9741 TXC
13 /Helvetica SetTxt
() 0 252 42.2939 TXC
10 /Helvetica SetTxt
() 0 252 101.792 TXC
13 /Helvetica SetTxt
() 0 302.4 42.2939 TXC
10 /Helvetica SetTxt
() 0 302.4 206.005 TXC
13 /Helvetica SetTxt
(SC, WB) 0 331.2 42.2939 TXC
10 /Helvetica SetTxt
() 0 331.2 176.922 TXC
13 /Helvetica SetTxt
() 0 360 42.2939 TXC
10 /Helvetica SetTxt
() 0 360 133.298 TXC
13 /Helvetica SetTxt
() 0 403.2 42.2939 TXC
10 /Helvetica SetTxt
() 0 403.2 103.609 TXC
13 /Helvetica SetTxt
(RC, WB) 0 432 42.2939 TXC
10 /Helvetica SetTxt
() 0 432 101.489 TXC
13 /Helvetica SetTxt
() 0 460.8 42.2939 TXC
10 /Helvetica SetTxt
() 0 460.8 104.215 TXC
12 /Helvetica SetTxt
() 0 482.4 260.253 TXR
() 0 482.4 249.347 TXR
() 0 482.4 238.744 TXR
() 0 482.4 227.838 TXR
() 0 489.6 193.302 TXR
() 0 489.6 178.155 TXR
13 /Helvetica SetTxt
() 0 122.4 28.6439 TXC
() 0 223.2 28.6439 TXC
() 0 331.2 28.6439 TXC
() 0 432 28.6439 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 195 2319 a Fi(\(a\))17 b(Execution)f(time)e(comp)q(onen)o(ts)144
b(\(b\))17 b(Memory)d(time)g(comp)q(onen)o(ts)297 2449
y Fg(Figure)k(4.1)49 b Fi(Ev)m(aluation)17 b(of)f(consistency)g(mo)q
(dels)f({)i(Erle,)e(FFT,)g(and)i(LU)p eop
%%Page: 29 35
29 34 bop 1882 72 a Fi(29)156 422 y
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 156 422 a
%%BeginDocument: Figures/Base/MP3DBase_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
489.103 72 S9
[] 16.800000 SL
489.103 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 239.353 M9
gsave 1.000000 G9
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 251.186 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 78.7617 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 216.814 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 210.052 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 79.3252 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 189.955 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 185.071 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 75.5687 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 147.13 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 142.998 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 77.2591 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 149.948 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 146.191 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 77.447 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 150.511 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 146.191 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 77.6348 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 244.049 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 236.16 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 78.7617 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 229.962 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 223.576 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 78.7617 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 199.91 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 194.838 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 75.5687 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 151.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 149.384 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 77.0713 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 157.649 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 155.019 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 77.0713 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 151.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 149.384 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 77.0713 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(MP3D) 0 288 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 483.145 264.146 TXR
(Memory) 0 483.145 253.816 TXR
(CPU) 0 483.145 241.419 TXR
13 /Helvetica SetTxt
(Simp) 0 94.3448 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 94.3448 261.704 TXC
13 /Helvetica SetTxt
(PF) 0 124.138 59.6035 TXC
10 /Helvetica SetTxt
(77.1) 0 124.138 218.692 TXC
13 /Helvetica SetTxt
(+SR) 0 153.931 59.6035 TXC
10 /Helvetica SetTxt
(62.8) 0 153.931 191.833 TXC
13 /Helvetica SetTxt
(Simp) 0 198.621 59.6035 TXC
10 /Helvetica SetTxt
(40.0) 0 198.621 149.009 TXC
13 /Helvetica SetTxt
(PF) 0 228.414 59.6035 TXC
10 /Helvetica SetTxt
(41.5) 0 228.414 151.826 TXC
13 /Helvetica SetTxt
(+SR) 0 258.207 59.6035 TXC
10 /Helvetica SetTxt
(41.8) 0 258.207 152.39 TXC
13 /Helvetica SetTxt
(Simp) 0 310.345 59.6035 TXC
10 /Helvetica SetTxt
(91.6) 0 310.345 245.927 TXC
13 /Helvetica SetTxt
(+PF) 0 340.138 59.6035 TXC
10 /Helvetica SetTxt
(84.1) 0 340.138 231.84 TXC
13 /Helvetica SetTxt
(+SR) 0 369.931 59.6035 TXC
10 /Helvetica SetTxt
(68.1) 0 369.931 201.788 TXC
13 /Helvetica SetTxt
(Simp) 0 414.621 59.6035 TXC
10 /Helvetica SetTxt
(42.5) 0 414.621 153.704 TXC
13 /Helvetica SetTxt
(+PF) 0 444.414 59.6035 TXC
10 /Helvetica SetTxt
(45.6) 0 444.414 159.527 TXC
13 /Helvetica SetTxt
(+SR) 0 474.207 59.6035 TXC
10 /Helvetica SetTxt
(42.5) 0 474.207 153.704 TXC
16 /Helvetica SetTxt
() 0 288 12 TXC
12 /Helvetica SetTxt
() 0 483.145 251.546 TXR
() 0 483.145 241.216 TXR
() 0 483.145 228.819 TXR
13 /Helvetica SetTxt
() 0 94.3448 45.9535 TXC
10 /Helvetica SetTxt
() 0 94.3448 251.204 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 124.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 124.138 208.192 TXC
13 /Helvetica SetTxt
() 0 153.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 153.931 181.333 TXC
13 /Helvetica SetTxt
() 0 198.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 198.621 138.509 TXC
13 /Helvetica SetTxt
(RC, WT) 0 228.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 228.414 141.326 TXC
13 /Helvetica SetTxt
() 0 258.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 258.207 141.89 TXC
13 /Helvetica SetTxt
() 0 310.345 45.9535 TXC
10 /Helvetica SetTxt
() 0 310.345 235.427 TXC
13 /Helvetica SetTxt
(SC, WB) 0 340.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 340.138 221.34 TXC
13 /Helvetica SetTxt
() 0 369.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 369.931 191.288 TXC
13 /Helvetica SetTxt
() 0 414.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 414.621 143.204 TXC
13 /Helvetica SetTxt
(RC, WB) 0 444.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 444.414 149.027 TXC
13 /Helvetica SetTxt
() 0 474.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 474.207 143.204 TXC
13 /Helvetica SetTxt
() 0 124.138 32.3035 TXC
() 0 228.414 32.3035 TXC
() 0 340.138 32.3035 TXC
() 0 444.414 32.3035 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 422 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 956 422 a
%%BeginDocument: Figures/Base/MP3DBase_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 276.843 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 186.471 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 178.661 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 162.149 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
82.08 161.256 S9
[] 0.600000 SL
105.12 161.256 M9
D9
93.6 72 S9
[] 16.800000 SL
93.6 161.256 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 84.4959 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 74.0083 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 74.0083 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 227.083 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 169.066 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 169.066 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 148.314 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
110.88 147.868 S9
[] 0.600000 SL
133.92 147.868 M9
D9
122.4 72 S9
[] 16.800000 SL
122.4 147.868 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 84.719 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 74.6777 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 74.4545 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 202.091 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 148.091 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 148.091 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 109.264 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
139.68 108.372 S9
[] 0.600000 SL
162.72 108.372 M9
D9
151.2 72 S9
[] 16.800000 SL
151.2 108.372 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 73.1157 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72.2231 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 150.099 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 150.099 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 150.099 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 150.099 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
182.88 150.099 S9
[] 0.600000 SL
205.92 150.099 M9
D9
194.4 72 S9
[] 16.800000 SL
194.4 150.099 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 79.1405 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.2231 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 72.2231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 153.669 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 153.669 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 153.669 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 153.669 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
211.68 153.669 S9
[] 0.600000 SL
234.72 153.669 M9
D9
223.2 72 S9
[] 16.800000 SL
223.2 153.669 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 79.5868 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 72.2231 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 72.2231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 153.446 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 153.446 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 153.446 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 153.446 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
240.48 153.446 S9
[] 0.600000 SL
263.52 153.446 M9
D9
252 72 S9
[] 16.800000 SL
252 153.446 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 79.8099 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 72.2231 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 72.2231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 258.992 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 171.521 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 164.157 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 164.157 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
290.88 161.702 S9
[] 0.600000 SL
313.92 161.702 M9
D9
302.4 72 S9
[] 16.800000 SL
302.4 161.702 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 84.4959 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 74.0083 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 74.0083 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 244.041 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 152.777 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 149.207 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 148.983 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
319.68 146.752 S9
[] 0.600000 SL
342.72 146.752 M9
D9
331.2 72 S9
[] 16.800000 SL
331.2 146.752 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 83.157 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 74.0083 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 74.0083 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 213.694 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 122.876 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 120.645 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 120.645 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
348.48 118.413 S9
[] 0.600000 SL
371.52 118.413 M9
D9
360 72 S9
[] 16.800000 SL
360 118.413 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 75.3471 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72.4463 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 157.909 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 157.909 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 157.909 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 157.909 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.68 157.909 S9
[] 0.600000 SL
414.72 157.909 M9
D9
403.2 72 S9
[] 16.800000 SL
403.2 157.909 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 76.4628 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72.4463 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 72.2231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 164.603 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 164.603 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 164.603 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 164.603 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
420.48 164.603 S9
[] 0.600000 SL
443.52 164.603 M9
D9
432 72 S9
[] 16.800000 SL
432 164.603 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 74.9008 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72.4463 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 72.2231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 157.909 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 157.909 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 157.909 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 157.909 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
449.28 157.909 S9
[] 0.600000 SL
472.32 157.909 M9
D9
460.8 72 S9
[] 16.800000 SL
460.8 157.909 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 76.2397 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72.4463 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 72.2231 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 279.298 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 268.587 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 257.653 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 246.942 M9
gsave 0.950000 G9
D9
grestore
489.6 236.231 S9
D9
489.6 72 S9
[] 16.800000 SL
489.6 236.231 M9
gsave 1.000000 G9
D9
grestore
472.32 201.645 S9
[] 0.600000 SL
489.6 201.645 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 83.157 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 78.957 TXR
12 /Helvetica SetTxt
(|) -90 72 94.314 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 90.114 TXR
12 /Helvetica SetTxt
(|) -90 72 105.471 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 101.271 TXR
12 /Helvetica SetTxt
(|) -90 72 116.628 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 112.428 TXR
12 /Helvetica SetTxt
(|) -90 72 127.785 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 123.585 TXR
12 /Helvetica SetTxt
(|) -90 72 138.942 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 134.742 TXR
12 /Helvetica SetTxt
(|) -90 72 150.099 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 145.899 TXR
12 /Helvetica SetTxt
(|) -90 72 161.256 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 157.056 TXR
12 /Helvetica SetTxt
(|) -90 72 172.413 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 168.213 TXR
12 /Helvetica SetTxt
(|) -90 72 183.57 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 179.37 TXR
12 /Helvetica SetTxt
(|) -90 72 194.727 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 190.527 TXR
12 /Helvetica SetTxt
(|) -90 72 205.884 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 201.684 TXR
12 /Helvetica SetTxt
(|) -90 72 217.041 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 212.841 TXR
12 /Helvetica SetTxt
(|) -90 72 228.198 TXC
10 /Helvetica-Bold SetTxt
(70) 0 67 223.998 TXR
12 /Helvetica SetTxt
(|) -90 72 239.355 TXC
10 /Helvetica-Bold SetTxt
(75) 0 67 235.155 TXR
12 /Helvetica SetTxt
(|) -90 72 250.512 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 246.312 TXR
12 /Helvetica SetTxt
(|) -90 72 261.669 TXC
10 /Helvetica-Bold SetTxt
(85) 0 67 257.469 TXR
12 /Helvetica SetTxt
(|) -90 72 272.826 TXC
10 /Helvetica-Bold SetTxt
(90) 0 67 268.626 TXR
12 /Helvetica SetTxt
(|) -90 72 283.983 TXC
10 /Helvetica-Bold SetTxt
(95) 0 67 279.783 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(MP3D) 0 288 28.7107 TXC
13 /Helvetica SetTxt
(Simp) 0 93.6 55.7107 TXC
10 /Helvetica SetTxt
(91.8) 0 93.6 281.083 TXC
13 /Helvetica SetTxt
(+PF) 0 122.4 55.7107 TXC
10 /Helvetica SetTxt
(69.5) 0 122.4 231.545 TXC
13 /Helvetica SetTxt
(+SR) 0 151.2 55.7107 TXC
10 /Helvetica SetTxt
(58.3) 0 151.2 206.331 TXC
13 /Helvetica SetTxt
(Simp) 0 194.4 55.7107 TXC
10 /Helvetica SetTxt
(35.0) 0 194.4 154.339 TXC
13 /Helvetica SetTxt
(+PF) 0 223.2 55.7107 TXC
10 /Helvetica SetTxt
(36.6) 0 223.2 157.909 TXC
13 /Helvetica SetTxt
(+SR) 0 252 55.7107 TXC
10 /Helvetica SetTxt
(36.5) 0 252 157.686 TXC
13 /Helvetica SetTxt
(Simp) 0 302.4 55.7107 TXC
10 /Helvetica SetTxt
(83.8) 0 302.4 263.231 TXC
13 /Helvetica SetTxt
(+PF) 0 331.2 55.7107 TXC
10 /Helvetica SetTxt
(77.1) 0 331.2 248.281 TXC
13 /Helvetica SetTxt
(+SR) 0 360 55.7107 TXC
10 /Helvetica SetTxt
(63.5) 0 360 218.157 TXC
13 /Helvetica SetTxt
(Simp) 0 403.2 55.7107 TXC
10 /Helvetica SetTxt
(38.5) 0 403.2 162.372 TXC
13 /Helvetica SetTxt
(+PF) 0 432 55.7107 TXC
10 /Helvetica SetTxt
(41.5) 0 432 168.843 TXC
13 /Helvetica SetTxt
(+SR) 0 460.8 55.7107 TXC
10 /Helvetica SetTxt
(38.5) 0 460.8 162.372 TXC
12 /Helvetica SetTxt
(remote) 0 482.4 272.826 TXR
(local) 0 482.4 262.116 TXR
(L2) 0 482.4 251.182 TXR
(L1) 0 482.4 240.471 TXR
(Writes) 0 489.6 205.884 TXR
(Reads) 0 489.6 190.711 TXR
16 /Helvetica SetTxt
() 0 288 11.9107 TXC
13 /Helvetica SetTxt
() 0 93.6 42.0607 TXC
10 /Helvetica SetTxt
() 0 93.6 270.583 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 122.4 42.0607 TXC
10 /Helvetica SetTxt
() 0 122.4 221.045 TXC
13 /Helvetica SetTxt
() 0 151.2 42.0607 TXC
10 /Helvetica SetTxt
() 0 151.2 195.831 TXC
13 /Helvetica SetTxt
() 0 194.4 42.0607 TXC
10 /Helvetica SetTxt
() 0 194.4 143.839 TXC
13 /Helvetica SetTxt
(RC, WT) 0 223.2 42.0607 TXC
10 /Helvetica SetTxt
() 0 223.2 147.409 TXC
13 /Helvetica SetTxt
() 0 252 42.0607 TXC
10 /Helvetica SetTxt
() 0 252 147.186 TXC
13 /Helvetica SetTxt
() 0 302.4 42.0607 TXC
10 /Helvetica SetTxt
() 0 302.4 252.731 TXC
13 /Helvetica SetTxt
(SC, WB) 0 331.2 42.0607 TXC
10 /Helvetica SetTxt
() 0 331.2 237.781 TXC
13 /Helvetica SetTxt
() 0 360 42.0607 TXC
10 /Helvetica SetTxt
() 0 360 207.657 TXC
13 /Helvetica SetTxt
() 0 403.2 42.0607 TXC
10 /Helvetica SetTxt
() 0 403.2 151.872 TXC
13 /Helvetica SetTxt
(RC, WB) 0 432 42.0607 TXC
10 /Helvetica SetTxt
() 0 432 158.343 TXC
13 /Helvetica SetTxt
() 0 460.8 42.0607 TXC
10 /Helvetica SetTxt
() 0 460.8 151.872 TXC
12 /Helvetica SetTxt
() 0 482.4 260.226 TXR
() 0 482.4 249.516 TXR
() 0 482.4 238.582 TXR
() 0 482.4 227.871 TXR
() 0 489.6 193.284 TXR
() 0 489.6 178.111 TXR
13 /Helvetica SetTxt
() 0 122.4 28.4107 TXC
() 0 223.2 28.4107 TXC
() 0 331.2 28.4107 TXC
() 0 432 28.4107 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1040 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 156 1040 a
%%BeginDocument: Figures/Base/RADIXBase_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
489.103 72 S9
[] 16.800000 SL
489.103 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 239.353 M9
gsave 1.000000 G9
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 246.115 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 81.9548 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 246.115 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 235.033 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 81.9548 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 184.883 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 175.68 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 80.4522 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 142.059 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 136.612 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 83.2696 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 141.871 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 136.8 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 83.2696 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 142.059 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 137.363 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 83.2696 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 227.52 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 213.809 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 81.9548 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 213.809 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 202.539 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 81.9548 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 158.024 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 147.694 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 81.5791 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 124.779 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 120.835 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 83.2696 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 124.779 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 120.835 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 83.2696 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 124.779 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 120.835 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 83.2696 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(RADIX) 0 288 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 483.145 264.146 TXR
(Memory) 0 483.145 253.816 TXR
(CPU) 0 483.145 241.419 TXR
13 /Helvetica SetTxt
(Simp) 0 94.3448 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 94.3448 261.704 TXC
13 /Helvetica SetTxt
(PF) 0 124.138 59.6035 TXC
10 /Helvetica SetTxt
(92.7) 0 124.138 247.993 TXC
13 /Helvetica SetTxt
(+SR) 0 153.931 59.6035 TXC
10 /Helvetica SetTxt
(60.1) 0 153.931 186.762 TXC
13 /Helvetica SetTxt
(Simp) 0 198.621 59.6035 TXC
10 /Helvetica SetTxt
(37.3) 0 198.621 143.937 TXC
13 /Helvetica SetTxt
(PF) 0 228.414 59.6035 TXC
10 /Helvetica SetTxt
(37.2) 0 228.414 143.75 TXC
13 /Helvetica SetTxt
(+SR) 0 258.207 59.6035 TXC
10 /Helvetica SetTxt
(37.3) 0 258.207 143.937 TXC
13 /Helvetica SetTxt
(Simp) 0 310.345 59.6035 TXC
10 /Helvetica SetTxt
(82.8) 0 310.345 229.398 TXC
13 /Helvetica SetTxt
(+PF) 0 340.138 59.6035 TXC
10 /Helvetica SetTxt
(75.5) 0 340.138 215.687 TXC
13 /Helvetica SetTxt
(+SR) 0 369.931 59.6035 TXC
10 /Helvetica SetTxt
(45.8) 0 369.931 159.903 TXC
13 /Helvetica SetTxt
(Simp) 0 414.621 59.6035 TXC
10 /Helvetica SetTxt
(28.1) 0 414.621 126.657 TXC
13 /Helvetica SetTxt
(+PF) 0 444.414 59.6035 TXC
10 /Helvetica SetTxt
(28.1) 0 444.414 126.657 TXC
13 /Helvetica SetTxt
(+SR) 0 474.207 59.6035 TXC
10 /Helvetica SetTxt
(28.1) 0 474.207 126.657 TXC
16 /Helvetica SetTxt
() 0 288 12 TXC
12 /Helvetica SetTxt
() 0 483.145 251.546 TXR
() 0 483.145 241.216 TXR
() 0 483.145 228.819 TXR
13 /Helvetica SetTxt
() 0 94.3448 45.9535 TXC
10 /Helvetica SetTxt
() 0 94.3448 251.204 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 124.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 124.138 237.493 TXC
13 /Helvetica SetTxt
() 0 153.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 153.931 176.262 TXC
13 /Helvetica SetTxt
() 0 198.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 198.621 133.437 TXC
13 /Helvetica SetTxt
(RC, WT) 0 228.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 228.414 133.25 TXC
13 /Helvetica SetTxt
() 0 258.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 258.207 133.437 TXC
13 /Helvetica SetTxt
() 0 310.345 45.9535 TXC
10 /Helvetica SetTxt
() 0 310.345 218.898 TXC
13 /Helvetica SetTxt
(SC, WB) 0 340.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 340.138 205.187 TXC
13 /Helvetica SetTxt
() 0 369.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 369.931 149.403 TXC
13 /Helvetica SetTxt
() 0 414.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 414.621 116.157 TXC
13 /Helvetica SetTxt
(RC, WB) 0 444.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 444.414 116.157 TXC
13 /Helvetica SetTxt
() 0 474.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 474.207 116.157 TXC
13 /Helvetica SetTxt
() 0 124.138 32.3035 TXC
() 0 228.414 32.3035 TXC
() 0 340.138 32.3035 TXC
() 0 444.414 32.3035 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1040 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 956 1040 a
%%BeginDocument: Figures/Base/RADIXBase_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 276.312 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 176.026 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 171.818 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 112.675 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
82.08 112.675 S9
[] 0.600000 SL
105.12 112.675 M9
D9
93.6 72 S9
[] 16.800000 SL
93.6 112.675 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 107.766 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 95.1429 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 93.7403 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 262.519 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 161.766 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 157.792 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 98.6494 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
110.88 98.6494 S9
[] 0.600000 SL
133.92 98.6494 M9
D9
122.4 72 S9
[] 16.800000 SL
122.4 98.6494 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 95.6104 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 95.1429 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 93.7403 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 190.519 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 135.818 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 135.818 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 75.039 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
139.68 75.039 S9
[] 0.600000 SL
162.72 75.039 M9
D9
151.2 72 S9
[] 16.800000 SL
151.2 75.039 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72.2338 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 138.39 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 138.39 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 138.39 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 138.39 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
182.88 137.688 S9
[] 0.600000 SL
205.92 137.688 M9
D9
194.4 72 S9
[] 16.800000 SL
194.4 137.688 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 133.714 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 94.6753 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 91.1688 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 138.623 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 138.623 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 138.623 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 138.623 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
211.68 137.922 S9
[] 0.600000 SL
234.72 137.922 M9
D9
223.2 72 S9
[] 16.800000 SL
223.2 137.922 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 133.714 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 95.1429 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 91.6364 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 139.325 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 139.325 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 139.325 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 139.325 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
240.48 138.39 S9
[] 0.600000 SL
263.52 138.39 M9
D9
252 72 S9
[] 16.800000 SL
252 138.39 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 134.649 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 95.6104 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 92.1039 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 236.104 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 140.026 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 135.818 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 120.39 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
290.88 115.714 S9
[] 0.600000 SL
313.92 115.714 M9
D9
302.4 72 S9
[] 16.800000 SL
302.4 115.714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 110.338 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 97.7143 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 93.2727 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 222.312 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 126.468 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 122.26 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 106.831 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
319.68 102.156 S9
[] 0.600000 SL
342.72 102.156 M9
D9
331.2 72 S9
[] 16.800000 SL
331.2 102.156 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 98.1818 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 97.9481 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 93.2727 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 154.286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 92.3377 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 90.9351 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 86.7273 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
348.48 81.1169 S9
[] 0.600000 SL
371.52 81.1169 M9
D9
360 72 S9
[] 16.800000 SL
360 81.1169 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 77.6104 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72.9351 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 72.9351 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 118.753 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 118.753 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 118.753 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 118.753 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.68 117.584 S9
[] 0.600000 SL
414.72 117.584 M9
D9
403.2 72 S9
[] 16.800000 SL
403.2 117.584 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 113.61 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 101.455 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 90 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 118.753 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 118.753 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 118.753 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 118.753 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
420.48 117.818 S9
[] 0.600000 SL
443.52 117.818 M9
D9
432 72 S9
[] 16.800000 SL
432 117.818 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 113.844 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 101.455 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 90 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 118.753 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 118.753 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 118.753 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 118.753 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
449.28 117.818 S9
[] 0.600000 SL
472.32 117.818 M9
D9
460.8 72 S9
[] 16.800000 SL
460.8 117.818 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 113.61 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 101.455 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 90 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 279.351 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 268.597 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 257.844 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 247.091 M9
gsave 0.950000 G9
D9
grestore
489.6 236.338 S9
D9
489.6 72 S9
[] 16.800000 SL
489.6 236.338 M9
gsave 1.000000 G9
D9
grestore
472.32 201.74 S9
[] 0.600000 SL
489.6 201.74 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 83.6883 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 79.4883 TXR
12 /Helvetica SetTxt
(|) -90 72 95.3766 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 91.1766 TXR
12 /Helvetica SetTxt
(|) -90 72 107.065 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 102.865 TXR
12 /Helvetica SetTxt
(|) -90 72 118.753 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 114.553 TXR
12 /Helvetica SetTxt
(|) -90 72 130.442 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 126.242 TXR
12 /Helvetica SetTxt
(|) -90 72 142.13 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 137.93 TXR
12 /Helvetica SetTxt
(|) -90 72 153.818 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 149.618 TXR
12 /Helvetica SetTxt
(|) -90 72 165.506 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 161.306 TXR
12 /Helvetica SetTxt
(|) -90 72 177.195 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 172.995 TXR
12 /Helvetica SetTxt
(|) -90 72 188.883 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 184.683 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 212.26 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 208.06 TXR
12 /Helvetica SetTxt
(|) -90 72 223.948 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 219.748 TXR
12 /Helvetica SetTxt
(|) -90 72 235.636 TXC
10 /Helvetica-Bold SetTxt
(70) 0 67 231.436 TXR
12 /Helvetica SetTxt
(|) -90 72 247.325 TXC
10 /Helvetica-Bold SetTxt
(75) 0 67 243.125 TXR
12 /Helvetica SetTxt
(|) -90 72 259.013 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 254.813 TXR
12 /Helvetica SetTxt
(|) -90 72 270.701 TXC
10 /Helvetica-Bold SetTxt
(85) 0 67 266.501 TXR
12 /Helvetica SetTxt
(|) -90 72 282.39 TXC
10 /Helvetica-Bold SetTxt
(90) 0 67 278.19 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(RADIX) 0 288 28.7532 TXC
13 /Helvetica SetTxt
(Simp) 0 93.6 55.6364 TXC
10 /Helvetica SetTxt
(87.4) 0 93.6 280.753 TXC
13 /Helvetica SetTxt
(+PF) 0 122.4 55.6364 TXC
10 /Helvetica SetTxt
(81.5) 0 122.4 266.727 TXC
13 /Helvetica SetTxt
(+SR) 0 151.2 55.6364 TXC
10 /Helvetica SetTxt
(50.7) 0 151.2 194.727 TXC
13 /Helvetica SetTxt
(Simp) 0 194.4 55.6364 TXC
10 /Helvetica SetTxt
(28.4) 0 194.4 142.597 TXC
13 /Helvetica SetTxt
(+PF) 0 223.2 55.6364 TXC
10 /Helvetica SetTxt
(28.5) 0 223.2 142.831 TXC
13 /Helvetica SetTxt
(+SR) 0 252 55.6364 TXC
10 /Helvetica SetTxt
(28.8) 0 252 143.532 TXC
13 /Helvetica SetTxt
(Simp) 0 302.4 55.6364 TXC
10 /Helvetica SetTxt
(70.2) 0 302.4 240.312 TXC
13 /Helvetica SetTxt
(+PF) 0 331.2 55.6364 TXC
10 /Helvetica SetTxt
(64.3) 0 331.2 226.519 TXC
13 /Helvetica SetTxt
(+SR) 0 360 55.6364 TXC
10 /Helvetica SetTxt
(35.2) 0 360 158.494 TXC
13 /Helvetica SetTxt
(Simp) 0 403.2 55.6364 TXC
10 /Helvetica SetTxt
(20.0) 0 403.2 122.961 TXC
13 /Helvetica SetTxt
(+PF) 0 432 55.6364 TXC
10 /Helvetica SetTxt
(20.0) 0 432 122.961 TXC
13 /Helvetica SetTxt
(+SR) 0 460.8 55.6364 TXC
10 /Helvetica SetTxt
(20.0) 0 460.8 122.961 TXC
12 /Helvetica SetTxt
(remote) 0 482.4 273.039 TXR
(local) 0 482.4 262.052 TXR
(L2) 0 482.4 251.299 TXR
(L1) 0 482.4 240.545 TXR
(Writes) 0 489.6 205.948 TXR
(Reads) 0 489.6 190.753 TXR
16 /Helvetica SetTxt
() 0 288 11.9532 TXC
13 /Helvetica SetTxt
() 0 93.6 41.9864 TXC
10 /Helvetica SetTxt
() 0 93.6 270.253 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 122.4 41.9864 TXC
10 /Helvetica SetTxt
() 0 122.4 256.227 TXC
13 /Helvetica SetTxt
() 0 151.2 41.9864 TXC
10 /Helvetica SetTxt
() 0 151.2 184.227 TXC
13 /Helvetica SetTxt
() 0 194.4 41.9864 TXC
10 /Helvetica SetTxt
() 0 194.4 132.097 TXC
13 /Helvetica SetTxt
(RC, WT) 0 223.2 41.9864 TXC
10 /Helvetica SetTxt
() 0 223.2 132.331 TXC
13 /Helvetica SetTxt
() 0 252 41.9864 TXC
10 /Helvetica SetTxt
() 0 252 133.032 TXC
13 /Helvetica SetTxt
() 0 302.4 41.9864 TXC
10 /Helvetica SetTxt
() 0 302.4 229.812 TXC
13 /Helvetica SetTxt
(SC, WB) 0 331.2 41.9864 TXC
10 /Helvetica SetTxt
() 0 331.2 216.019 TXC
13 /Helvetica SetTxt
() 0 360 41.9864 TXC
10 /Helvetica SetTxt
() 0 360 147.994 TXC
13 /Helvetica SetTxt
() 0 403.2 41.9864 TXC
10 /Helvetica SetTxt
() 0 403.2 112.461 TXC
13 /Helvetica SetTxt
(RC, WB) 0 432 41.9864 TXC
10 /Helvetica SetTxt
() 0 432 112.461 TXC
13 /Helvetica SetTxt
() 0 460.8 41.9864 TXC
10 /Helvetica SetTxt
() 0 460.8 112.461 TXC
12 /Helvetica SetTxt
() 0 482.4 260.439 TXR
() 0 482.4 249.452 TXR
() 0 482.4 238.699 TXR
() 0 482.4 227.945 TXR
() 0 489.6 193.348 TXR
() 0 489.6 178.153 TXR
13 /Helvetica SetTxt
() 0 122.4 28.3364 TXC
() 0 223.2 28.3364 TXC
() 0 331.2 28.3364 TXC
() 0 432 28.3364 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 156 1658 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 156 1658 a
%%BeginDocument: Figures/Base/WATERBase_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
489.103 72 S9
[] 16.800000 SL
489.103 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.103 72 S9
[] 16.800000 SL
489.103 239.353 M9
gsave 1.000000 G9
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 243.861 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
94.3448 72 S9
[] 16.800000 SL
94.3448 162.908 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 235.972 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 208.174 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
124.138 72 S9
[] 16.800000 SL
124.138 162.532 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 180.188 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 160.842 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
153.931 72 S9
[] 16.800000 SL
153.931 121.962 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 176.056 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 162.157 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
198.621 72 S9
[] 16.800000 SL
198.621 131.165 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 170.609 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 149.948 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
228.414 72 S9
[] 16.800000 SL
228.414 131.541 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 169.67 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 149.572 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
258.207 72 S9
[] 16.800000 SL
258.207 130.602 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 253.628 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 237.663 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
310.345 72 S9
[] 16.800000 SL
310.345 162.908 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 241.795 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 219.631 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
340.138 72 S9
[] 16.800000 SL
340.138 162.908 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 183.569 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 170.984 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
369.931 72 S9
[] 16.800000 SL
369.931 122.337 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 176.056 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 162.532 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
414.621 72 S9
[] 16.800000 SL
414.621 131.541 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 171.36 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 151.263 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
444.414 72 S9
[] 16.800000 SL
444.414 131.541 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 171.36 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 150.887 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
474.207 72 S9
[] 16.800000 SL
474.207 131.165 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(WATER) 0 288 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 483.145 264.146 TXR
(Memory) 0 483.145 253.816 TXR
(CPU) 0 483.145 241.419 TXR
13 /Helvetica SetTxt
(Simp) 0 94.3448 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 94.3448 261.704 TXC
13 /Helvetica SetTxt
(PF) 0 124.138 59.6035 TXC
10 /Helvetica SetTxt
(87.3) 0 124.138 237.85 TXC
13 /Helvetica SetTxt
(+SR) 0 153.931 59.6035 TXC
10 /Helvetica SetTxt
(57.6) 0 153.931 182.066 TXC
13 /Helvetica SetTxt
(Simp) 0 198.621 59.6035 TXC
10 /Helvetica SetTxt
(55.4) 0 198.621 177.934 TXC
13 /Helvetica SetTxt
(PF) 0 228.414 59.6035 TXC
10 /Helvetica SetTxt
(52.5) 0 228.414 172.487 TXC
13 /Helvetica SetTxt
(+SR) 0 258.207 59.6035 TXC
10 /Helvetica SetTxt
(52.0) 0 258.207 171.548 TXC
13 /Helvetica SetTxt
(Simp) 0 310.345 59.6035 TXC
10 /Helvetica SetTxt
(96.7) 0 310.345 255.506 TXC
13 /Helvetica SetTxt
(+PF) 0 340.138 59.6035 TXC
10 /Helvetica SetTxt
(90.4) 0 340.138 243.673 TXC
13 /Helvetica SetTxt
(+SR) 0 369.931 59.6035 TXC
10 /Helvetica SetTxt
(59.4) 0 369.931 185.447 TXC
13 /Helvetica SetTxt
(Simp) 0 414.621 59.6035 TXC
10 /Helvetica SetTxt
(55.4) 0 414.621 177.934 TXC
13 /Helvetica SetTxt
(+PF) 0 444.414 59.6035 TXC
10 /Helvetica SetTxt
(52.9) 0 444.414 173.238 TXC
13 /Helvetica SetTxt
(+SR) 0 474.207 59.6035 TXC
10 /Helvetica SetTxt
(52.9) 0 474.207 173.238 TXC
16 /Helvetica SetTxt
() 0 288 12 TXC
12 /Helvetica SetTxt
() 0 483.145 251.546 TXR
() 0 483.145 241.216 TXR
() 0 483.145 228.819 TXR
13 /Helvetica SetTxt
() 0 94.3448 45.9535 TXC
10 /Helvetica SetTxt
() 0 94.3448 251.204 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 124.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 124.138 227.35 TXC
13 /Helvetica SetTxt
() 0 153.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 153.931 171.566 TXC
13 /Helvetica SetTxt
() 0 198.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 198.621 167.434 TXC
13 /Helvetica SetTxt
(RC, WT) 0 228.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 228.414 161.987 TXC
13 /Helvetica SetTxt
() 0 258.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 258.207 161.048 TXC
13 /Helvetica SetTxt
() 0 310.345 45.9535 TXC
10 /Helvetica SetTxt
() 0 310.345 245.006 TXC
13 /Helvetica SetTxt
(SC, WB) 0 340.138 45.9535 TXC
10 /Helvetica SetTxt
() 0 340.138 233.173 TXC
13 /Helvetica SetTxt
() 0 369.931 45.9535 TXC
10 /Helvetica SetTxt
() 0 369.931 174.947 TXC
13 /Helvetica SetTxt
() 0 414.621 45.9535 TXC
10 /Helvetica SetTxt
() 0 414.621 167.434 TXC
13 /Helvetica SetTxt
(RC, WB) 0 444.414 45.9535 TXC
10 /Helvetica SetTxt
() 0 444.414 162.738 TXC
13 /Helvetica SetTxt
() 0 474.207 45.9535 TXC
10 /Helvetica SetTxt
() 0 474.207 162.738 TXC
13 /Helvetica SetTxt
() 0 124.138 32.3035 TXC
() 0 228.414 32.3035 TXC
() 0 340.138 32.3035 TXC
() 0 444.414 32.3035 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1658 a
 11840716 9472573 1710325 657817 33154007 19602964 startTexFig
 956 1658 a
%%BeginDocument: Figures/Base/WATERBase_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
93.6 72 S9
[] 16.800000 SL
93.6 265.547 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 222.437 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 222.437 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 206.27 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
82.08 180.225 S9
[] 0.600000 SL
105.12 180.225 M9
D9
93.6 72 S9
[] 16.800000 SL
93.6 180.225 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 105.231 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 102.985 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
93.6 72 S9
[] 16.800000 SL
93.6 101.189 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 181.123 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 179.326 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 179.326 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 161.364 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
110.88 135.318 S9
[] 0.600000 SL
133.92 135.318 M9
D9
122.4 72 S9
[] 16.800000 SL
122.4 135.318 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 102.985 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 102.087 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
122.4 72 S9
[] 16.800000 SL
122.4 101.189 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 165.405 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 142.054 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 142.054 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 126.337 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
139.68 99.842 S9
[] 0.600000 SL
162.72 99.842 M9
D9
151.2 72 S9
[] 16.800000 SL
151.2 99.842 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 75.1435 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 75.1435 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
151.2 72 S9
[] 16.800000 SL
151.2 73.7963 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 146.096 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 146.096 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 146.096 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 146.096 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
182.88 146.096 S9
[] 0.600000 SL
205.92 146.096 M9
D9
194.4 72 S9
[] 16.800000 SL
194.4 146.096 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 84.1247 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 83.2266 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
194.4 72 S9
[] 16.800000 SL
194.4 81.8794 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 116.008 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 116.008 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 116.008 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 116.008 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
211.68 116.008 S9
[] 0.600000 SL
234.72 116.008 M9
D9
223.2 72 S9
[] 16.800000 SL
223.2 116.008 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 80.9813 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 79.185 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
223.2 72 S9
[] 16.800000 SL
223.2 79.185 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.906 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.906 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.906 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 116.906 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
240.48 116.906 S9
[] 0.600000 SL
263.52 116.906 M9
D9
252 72 S9
[] 16.800000 SL
252 116.906 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 80.9813 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 80.0832 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
252 72 S9
[] 16.800000 SL
252 79.185 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 250.279 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 208.516 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 207.168 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 207.168 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
290.88 180.225 S9
[] 0.600000 SL
313.92 180.225 M9
D9
302.4 72 S9
[] 16.800000 SL
302.4 180.225 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 105.231 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 102.985 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
302.4 72 S9
[] 16.800000 SL
302.4 101.189 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 207.168 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 163.16 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 163.16 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 163.16 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
319.68 135.318 S9
[] 0.600000 SL
342.72 135.318 M9
D9
331.2 72 S9
[] 16.800000 SL
331.2 135.318 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 102.985 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 102.087 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
331.2 72 S9
[] 16.800000 SL
331.2 101.189 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 188.308 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 141.156 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 140.258 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 140.258 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
348.48 113.314 S9
[] 0.600000 SL
371.52 113.314 M9
D9
360 72 S9
[] 16.800000 SL
360 113.314 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 75.1435 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 75.1435 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
360 72 S9
[] 16.800000 SL
360 73.7963 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 146.096 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 146.096 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 146.096 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 146.096 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
391.68 146.096 S9
[] 0.600000 SL
414.72 146.096 M9
D9
403.2 72 S9
[] 16.800000 SL
403.2 146.096 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 84.1247 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 81.8794 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
403.2 72 S9
[] 16.800000 SL
403.2 81.8794 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 119.152 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 119.152 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 119.152 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 119.152 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
420.48 119.152 S9
[] 0.600000 SL
443.52 119.152 M9
D9
432 72 S9
[] 16.800000 SL
432 119.152 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 83.2266 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 81.8794 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
432 72 S9
[] 16.800000 SL
432 80.0832 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 119.152 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 119.152 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 119.152 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 119.152 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
449.28 119.152 S9
[] 0.600000 SL
472.32 119.152 M9
D9
460.8 72 S9
[] 16.800000 SL
460.8 119.152 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 83.2266 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 81.8794 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
460.8 72 S9
[] 16.800000 SL
460.8 80.0832 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 279.468 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 268.69 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 257.464 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
489.6 72 S9
[] 16.800000 SL
489.6 246.686 M9
gsave 0.950000 G9
D9
grestore
489.6 235.909 S9
D9
489.6 72 S9
[] 16.800000 SL
489.6 235.909 M9
gsave 1.000000 G9
D9
grestore
472.32 201.331 S9
[] 0.600000 SL
489.6 201.331 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 94.4532 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 90.2532 TXR
12 /Helvetica SetTxt
(|) -90 72 116.906 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 112.706 TXR
12 /Helvetica SetTxt
(|) -90 72 139.36 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 135.16 TXR
12 /Helvetica SetTxt
(|) -90 72 161.813 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 157.613 TXR
12 /Helvetica SetTxt
(|) -90 72 184.266 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 180.066 TXR
12 /Helvetica SetTxt
(|) -90 72 206.719 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 202.519 TXR
12 /Helvetica SetTxt
(|) -90 72 229.173 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 224.973 TXR
12 /Helvetica SetTxt
(|) -90 72 251.626 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 247.426 TXR
12 /Helvetica SetTxt
(|) -90 72 274.079 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 269.879 TXR
14 /Helvetica SetTxt
() 0 288 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 504 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 504 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(WATER) 0 288 28.8898 TXC
13 /Helvetica SetTxt
(Simp) 0 93.6 56.7318 TXC
10 /Helvetica SetTxt
(43.1) 0 93.6 269.588 TXC
13 /Helvetica SetTxt
(+PF) 0 122.4 56.7318 TXC
10 /Helvetica SetTxt
(24.3) 0 122.4 185.613 TXC
13 /Helvetica SetTxt
(+SR) 0 151.2 56.7318 TXC
10 /Helvetica SetTxt
(20.8) 0 151.2 169.447 TXC
13 /Helvetica SetTxt
(Simp) 0 194.4 56.7318 TXC
10 /Helvetica SetTxt
(16.5) 0 194.4 150.586 TXC
13 /Helvetica SetTxt
(+PF) 0 223.2 56.7318 TXC
10 /Helvetica SetTxt
(9.8) 0 223.2 120.499 TXC
13 /Helvetica SetTxt
(+SR) 0 252 56.7318 TXC
10 /Helvetica SetTxt
(10.0) 0 252 121.397 TXC
13 /Helvetica SetTxt
(Simp) 0 302.4 56.7318 TXC
10 /Helvetica SetTxt
(39.7) 0 302.4 254.769 TXC
13 /Helvetica SetTxt
(+PF) 0 331.2 56.7318 TXC
10 /Helvetica SetTxt
(30.1) 0 331.2 211.659 TXC
13 /Helvetica SetTxt
(+SR) 0 360 56.7318 TXC
10 /Helvetica SetTxt
(25.9) 0 360 192.798 TXC
13 /Helvetica SetTxt
(Simp) 0 403.2 56.7318 TXC
10 /Helvetica SetTxt
(16.5) 0 403.2 150.586 TXC
13 /Helvetica SetTxt
(+PF) 0 432 56.7318 TXC
10 /Helvetica SetTxt
(10.5) 0 432 123.642 TXC
13 /Helvetica SetTxt
(+SR) 0 460.8 56.7318 TXC
10 /Helvetica SetTxt
(10.5) 0 460.8 123.642 TXC
12 /Helvetica SetTxt
(remote) 0 482.4 272.732 TXR
(local) 0 482.4 261.954 TXR
(L2) 0 482.4 251.177 TXR
(L1) 0 482.4 240.399 TXR
(Writes) 0 489.6 205.821 TXR
(Reads) 0 489.6 190.553 TXR
16 /Helvetica SetTxt
() 0 288 12.0898 TXC
13 /Helvetica SetTxt
() 0 93.6 43.0818 TXC
10 /Helvetica SetTxt
() 0 93.6 259.088 TXC
13 /Helvetica SetTxt
(SC, WT ) 0 122.4 43.0818 TXC
10 /Helvetica SetTxt
() 0 122.4 175.113 TXC
13 /Helvetica SetTxt
() 0 151.2 43.0818 TXC
10 /Helvetica SetTxt
() 0 151.2 158.947 TXC
13 /Helvetica SetTxt
() 0 194.4 43.0818 TXC
10 /Helvetica SetTxt
() 0 194.4 140.086 TXC
13 /Helvetica SetTxt
(RC, WT) 0 223.2 43.0818 TXC
10 /Helvetica SetTxt
() 0 223.2 109.999 TXC
13 /Helvetica SetTxt
() 0 252 43.0818 TXC
10 /Helvetica SetTxt
() 0 252 110.897 TXC
13 /Helvetica SetTxt
() 0 302.4 43.0818 TXC
10 /Helvetica SetTxt
() 0 302.4 244.269 TXC
13 /Helvetica SetTxt
(SC, WB) 0 331.2 43.0818 TXC
10 /Helvetica SetTxt
() 0 331.2 201.159 TXC
13 /Helvetica SetTxt
() 0 360 43.0818 TXC
10 /Helvetica SetTxt
() 0 360 182.298 TXC
13 /Helvetica SetTxt
() 0 403.2 43.0818 TXC
10 /Helvetica SetTxt
() 0 403.2 140.086 TXC
13 /Helvetica SetTxt
(RC, WB) 0 432 43.0818 TXC
10 /Helvetica SetTxt
() 0 432 113.142 TXC
13 /Helvetica SetTxt
() 0 460.8 43.0818 TXC
10 /Helvetica SetTxt
() 0 460.8 113.142 TXC
12 /Helvetica SetTxt
() 0 482.4 260.132 TXR
() 0 482.4 249.354 TXR
() 0 482.4 238.577 TXR
() 0 482.4 227.799 TXR
() 0 489.6 193.221 TXR
() 0 489.6 177.953 TXR
13 /Helvetica SetTxt
() 0 122.4 29.4318 TXC
() 0 223.2 29.4318 TXC
() 0 331.2 29.4318 TXC
() 0 432 29.4318 TXC
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 504.000000 72.000000 504.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 195 2319 a Fi(\(a\))17 b(Execution)f(time)e(comp)q(onen)o(ts)144
b(\(b\))17 b(Memory)d(time)g(comp)q(onen)o(ts)234 2449
y Fg(Figure)k(4.2)48 b Fi(Ev)m(aluation)17 b(of)g(consistency)e(mo)q
(dels)h({)g(Mp3d,)g(Radix,)g(and)h(W)l(ater)p eop
%%Page: 30 36
30 35 bop 1882 72 a Fi(30)156 332 y
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 156 332 a
%%BeginDocument: Figures/Base/MSHR_ERLEL1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 108 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 113.143 M9
114.353 84.8571 M9
135.529 77.1429 M9
156.706 75.8571 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 129.857 M9
114.353 92.5714 M9
135.529 81 M9
156.706 78.4286 M9
177.882 73.2857 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 158.143 M9
114.353 102.857 M9
135.529 87.4286 M9
156.706 84.8571 M9
177.882 74.5714 M9
199.059 73.2857 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 159.429 M9
114.353 104.143 M9
135.529 87.4286 M9
156.706 84.8571 M9
177.882 74.5714 M9
199.059 73.2857 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 159.429 M9
114.353 106.714 M9
135.529 91.2857 M9
156.706 84.8571 M9
177.882 74.5714 M9
199.059 74.5714 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica SetTxt
(1.2) 0 65 222.086 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 108 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 113.143 SY
<06> 114.353 84.8571 SY
<06> 135.529 77.1429 SY
<06> 156.706 75.8571 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 129.857 SY
<0a> 114.353 92.5714 SY
<0a> 135.529 81 SY
<0a> 156.706 78.4286 SY
<0a> 177.882 73.2857 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 158.143 SY
<0d> 114.353 102.857 SY
<0d> 135.529 87.4286 SY
<0d> 156.706 84.8571 SY
<0d> 177.882 74.5714 SY
<0d> 199.059 73.2857 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 159.429 SY
<02> 114.353 104.143 SY
<02> 135.529 87.4286 SY
<02> 156.706 84.8571 SY
<02> 177.882 74.5714 SY
<02> 199.059 73.2857 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 159.429 SY
<06> 114.353 106.714 SY
<06> 135.529 91.2857 SY
<06> 156.706 84.8571 SY
<06> 177.882 74.5714 SY
<06> 199.059 74.5714 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 332 a
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 956 332 a
%%BeginDocument: Figures/Base/MSHR_ERLEL2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 117 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 122.143 M9
114.353 83.5714 M9
135.529 77.1429 M9
156.706 75.8571 M9
177.882 74.5714 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 138.857 M9
114.353 92.5714 M9
135.529 83.5714 M9
156.706 78.4286 M9
177.882 75.8571 M9
199.059 73.2857 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 163.286 M9
114.353 122.143 M9
135.529 95.1429 M9
156.706 88.7143 M9
177.882 81 M9
199.059 77.1429 M9
220.235 73.2857 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 167.143 M9
114.353 113.143 M9
135.529 95.1429 M9
156.706 84.8571 M9
177.882 79.7143 M9
199.059 74.5714 M9
220.235 73.2857 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 167.143 M9
114.353 117 M9
135.529 100.286 M9
156.706 86.1429 M9
177.882 81 M9
199.059 74.5714 M9
220.235 73.2857 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 222.086 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 117 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 122.143 SY
<06> 114.353 83.5714 SY
<06> 135.529 77.1429 SY
<06> 156.706 75.8571 SY
<06> 177.882 74.5714 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 138.857 SY
<0a> 114.353 92.5714 SY
<0a> 135.529 83.5714 SY
<0a> 156.706 78.4286 SY
<0a> 177.882 75.8571 SY
<0a> 199.059 73.2857 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 163.286 SY
<0d> 114.353 122.143 SY
<0d> 135.529 95.1429 SY
<0d> 156.706 88.7143 SY
<0d> 177.882 81 SY
<0d> 199.059 77.1429 SY
<0d> 220.235 73.2857 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 167.143 SY
<02> 114.353 113.143 SY
<02> 135.529 95.1429 SY
<02> 156.706 84.8571 SY
<02> 177.882 79.7143 SY
<02> 199.059 74.5714 SY
<02> 220.235 73.2857 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 167.143 SY
<06> 114.353 117 SY
<06> 135.529 100.286 SY
<06> 156.706 86.1429 SY
<06> 177.882 81 SY
<06> 199.059 74.5714 SY
<06> 220.235 73.2857 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 865 992 a Fi(ERLE)156 1010 y
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 156 1010 a
%%BeginDocument: Figures/Base/MSHR_FFTL1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 92.5714 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 90 M9
114.353 79.7143 M9
135.529 78.4286 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 91.2857 M9
114.353 81 M9
135.529 78.4286 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 128.571 M9
114.353 99 M9
135.529 95.1429 M9
156.706 84.8571 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 129.857 M9
114.353 96.4286 M9
135.529 92.5714 M9
156.706 83.5714 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 129.857 M9
114.353 96.4286 M9
135.529 92.5714 M9
156.706 83.5714 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica SetTxt
(1.2) 0 65 222.086 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 92.5714 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 90 SY
<06> 114.353 79.7143 SY
<06> 135.529 78.4286 SY
<06> 156.706 73.2857 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 91.2857 SY
<0a> 114.353 81 SY
<0a> 135.529 78.4286 SY
<0a> 156.706 73.2857 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 128.571 SY
<0d> 114.353 99 SY
<0d> 135.529 95.1429 SY
<0d> 156.706 84.8571 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 129.857 SY
<02> 114.353 96.4286 SY
<02> 135.529 92.5714 SY
<02> 156.706 83.5714 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 129.857 SY
<06> 114.353 96.4286 SY
<06> 135.529 92.5714 SY
<06> 156.706 83.5714 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1010 a
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 956 1010 a
%%BeginDocument: Figures/Base/MSHR_FFTL2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 105.429 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 100.286 M9
114.353 82.2857 M9
135.529 78.4286 M9
156.706 75.8571 M9
177.882 73.2857 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 104.143 M9
114.353 82.2857 M9
135.529 79.7143 M9
156.706 75.8571 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 136.286 M9
114.353 119.571 M9
135.529 110.571 M9
156.706 97.7143 M9
177.882 84.8571 M9
199.059 77.1429 M9
220.235 74.5714 M9
241.412 73.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 145.286 M9
114.353 109.286 M9
135.529 93.8571 M9
156.706 86.1429 M9
177.882 78.4286 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 145.286 M9
114.353 109.286 M9
135.529 93.8571 M9
156.706 86.1429 M9
177.882 78.4286 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 222.086 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 105.429 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 100.286 SY
<06> 114.353 82.2857 SY
<06> 135.529 78.4286 SY
<06> 156.706 75.8571 SY
<06> 177.882 73.2857 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 104.143 SY
<0a> 114.353 82.2857 SY
<0a> 135.529 79.7143 SY
<0a> 156.706 75.8571 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 136.286 SY
<0d> 114.353 119.571 SY
<0d> 135.529 110.571 SY
<0d> 156.706 97.7143 SY
<0d> 177.882 84.8571 SY
<0d> 199.059 77.1429 SY
<0d> 220.235 74.5714 SY
<0d> 241.412 73.2857 SY
<02> 72 200.571 SY
<02> 93.1765 145.286 SY
<02> 114.353 109.286 SY
<02> 135.529 93.8571 SY
<02> 156.706 86.1429 SY
<02> 177.882 78.4286 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 145.286 SY
<06> 114.353 109.286 SY
<06> 135.529 93.8571 SY
<06> 156.706 86.1429 SY
<06> 177.882 78.4286 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 882 1670 a Fi(FFT)156 1689 y
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 156 1689 a
%%BeginDocument: Figures/Base/MSHR_LUL1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 113.143 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 127.286 M9
114.353 86.1429 M9
135.529 81 M9
156.706 78.4286 M9
177.882 77.1429 M9
199.059 75.8571 M9
220.235 74.5714 M9
241.412 74.5714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 127.286 M9
114.353 91.2857 M9
135.529 88.7143 M9
156.706 84.8571 M9
177.882 83.5714 M9
199.059 81 M9
220.235 79.7143 M9
241.412 77.1429 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 154.286 M9
114.353 101.571 M9
135.529 92.5714 M9
156.706 90 M9
177.882 88.7143 M9
199.059 87.4286 M9
220.235 84.8571 M9
241.412 83.5714 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 155.571 M9
114.353 102.857 M9
135.529 93.8571 M9
156.706 91.2857 M9
177.882 90 M9
199.059 87.4286 M9
220.235 84.8571 M9
241.412 82.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 155.571 M9
114.353 104.143 M9
135.529 95.1429 M9
156.706 92.5714 M9
177.882 90 M9
199.059 87.4286 M9
220.235 86.1429 M9
241.412 82.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica SetTxt
(1.2) 0 65 222.086 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 113.143 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 127.286 SY
<06> 114.353 86.1429 SY
<06> 135.529 81 SY
<06> 156.706 78.4286 SY
<06> 177.882 77.1429 SY
<06> 199.059 75.8571 SY
<06> 220.235 74.5714 SY
<06> 241.412 74.5714 SY
<0a> 72 200.571 SY
<0a> 93.1765 127.286 SY
<0a> 114.353 91.2857 SY
<0a> 135.529 88.7143 SY
<0a> 156.706 84.8571 SY
<0a> 177.882 83.5714 SY
<0a> 199.059 81 SY
<0a> 220.235 79.7143 SY
<0a> 241.412 77.1429 SY
<0d> 72 200.571 SY
<0d> 93.1765 154.286 SY
<0d> 114.353 101.571 SY
<0d> 135.529 92.5714 SY
<0d> 156.706 90 SY
<0d> 177.882 88.7143 SY
<0d> 199.059 87.4286 SY
<0d> 220.235 84.8571 SY
<0d> 241.412 83.5714 SY
<02> 72 200.571 SY
<02> 93.1765 155.571 SY
<02> 114.353 102.857 SY
<02> 135.529 93.8571 SY
<02> 156.706 91.2857 SY
<02> 177.882 90 SY
<02> 199.059 87.4286 SY
<02> 220.235 84.8571 SY
<02> 241.412 82.2857 SY
<06> 72 200.571 SY
<06> 93.1765 155.571 SY
<06> 114.353 104.143 SY
<06> 135.529 95.1429 SY
<06> 156.706 92.5714 SY
<06> 177.882 90 SY
<06> 199.059 87.4286 SY
<06> 220.235 86.1429 SY
<06> 241.412 82.2857 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1689 a
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 956 1689 a
%%BeginDocument: Figures/Base/MSHR_LUL2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 102.857 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 96.4286 M9
114.353 82.2857 M9
135.529 78.4286 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 106.714 M9
114.353 87.4286 M9
135.529 82.2857 M9
156.706 77.1429 M9
177.882 74.5714 M9
199.059 73.2857 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 129.857 M9
114.353 102.857 M9
135.529 100.286 M9
156.706 97.7143 M9
177.882 95.1429 M9
199.059 91.2857 M9
220.235 90 M9
241.412 84.8571 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 131.143 M9
114.353 104.143 M9
135.529 99 M9
156.706 96.4286 M9
177.882 92.5714 M9
199.059 90 M9
220.235 86.1429 M9
241.412 82.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 131.143 M9
114.353 104.143 M9
135.529 96.4286 M9
156.706 92.5714 M9
177.882 90 M9
199.059 86.1429 M9
220.235 82.2857 M9
241.412 79.7143 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 222.086 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 102.857 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 96.4286 SY
<06> 114.353 82.2857 SY
<06> 135.529 78.4286 SY
<06> 156.706 73.2857 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 106.714 SY
<0a> 114.353 87.4286 SY
<0a> 135.529 82.2857 SY
<0a> 156.706 77.1429 SY
<0a> 177.882 74.5714 SY
<0a> 199.059 73.2857 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 129.857 SY
<0d> 114.353 102.857 SY
<0d> 135.529 100.286 SY
<0d> 156.706 97.7143 SY
<0d> 177.882 95.1429 SY
<0d> 199.059 91.2857 SY
<0d> 220.235 90 SY
<0d> 241.412 84.8571 SY
<02> 72 200.571 SY
<02> 93.1765 131.143 SY
<02> 114.353 104.143 SY
<02> 135.529 99 SY
<02> 156.706 96.4286 SY
<02> 177.882 92.5714 SY
<02> 199.059 90 SY
<02> 220.235 86.1429 SY
<02> 241.412 82.2857 SY
<06> 72 200.571 SY
<06> 93.1765 131.143 SY
<06> 114.353 104.143 SY
<06> 135.529 96.4286 SY
<06> 156.706 92.5714 SY
<06> 177.882 90 SY
<06> 199.059 86.1429 SY
<06> 220.235 82.2857 SY
<06> 241.412 79.7143 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 898 2349 a Fi(LU)265 2409 y(\(a\))17 b(L1)g(MSHR)e(o)q(ccupancy)266
b(\(b\))17 b(L2)g(MSHR)e(o)q(ccupancy)459 2539 y Fg(Figure)j(4.3)48
b Fi(MSHR)16 b(o)q(ccupancy)g({)h(Erle,)e(FFT,)h(and)h(LU)p
eop
%%Page: 31 37
31 36 bop 1882 72 a Fi(31)156 332 y
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 156 332 a
%%BeginDocument: Figures/Base/MSHR_MP3DL1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 122.143 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 128.571 M9
114.353 91.2857 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 144 M9
114.353 104.143 M9
135.529 74.5714 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 189 M9
114.353 142.714 M9
135.529 83.5714 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 190.286 M9
114.353 151.714 M9
135.529 90 M9
156.706 77.1429 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 190.286 M9
114.353 141.429 M9
135.529 83.5714 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica SetTxt
(1.2) 0 65 222.086 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 122.143 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 128.571 SY
<06> 114.353 91.2857 SY
<06> 135.529 72 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 144 SY
<0a> 114.353 104.143 SY
<0a> 135.529 74.5714 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 189 SY
<0d> 114.353 142.714 SY
<0d> 135.529 83.5714 SY
<0d> 156.706 73.2857 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 190.286 SY
<02> 114.353 151.714 SY
<02> 135.529 90 SY
<02> 156.706 77.1429 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 190.286 SY
<06> 114.353 141.429 SY
<06> 135.529 83.5714 SY
<06> 156.706 73.2857 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 332 a
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 956 332 a
%%BeginDocument: Figures/Base/MSHR_MP3DL2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 173.571 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 173.571 M9
114.353 114.429 M9
135.529 73.2857 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 185.143 M9
114.353 142.714 M9
135.529 82.2857 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 192.857 M9
114.353 178.714 M9
135.529 159.429 M9
156.706 133.714 M9
177.882 102.857 M9
199.059 86.1429 M9
220.235 77.1429 M9
241.412 73.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 194.143 M9
114.353 183.857 M9
135.529 151.714 M9
156.706 115.714 M9
177.882 88.7143 M9
199.059 78.4286 M9
220.235 74.5714 M9
241.412 73.2857 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 194.143 M9
114.353 181.286 M9
135.529 145.286 M9
156.706 108 M9
177.882 81 M9
199.059 74.5714 M9
220.235 73.2857 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 222.086 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 173.571 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 173.571 SY
<06> 114.353 114.429 SY
<06> 135.529 73.2857 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 185.143 SY
<0a> 114.353 142.714 SY
<0a> 135.529 82.2857 SY
<0a> 156.706 73.2857 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 192.857 SY
<0d> 114.353 178.714 SY
<0d> 135.529 159.429 SY
<0d> 156.706 133.714 SY
<0d> 177.882 102.857 SY
<0d> 199.059 86.1429 SY
<0d> 220.235 77.1429 SY
<0d> 241.412 73.2857 SY
<02> 72 200.571 SY
<02> 93.1765 194.143 SY
<02> 114.353 183.857 SY
<02> 135.529 151.714 SY
<02> 156.706 115.714 SY
<02> 177.882 88.7143 SY
<02> 199.059 78.4286 SY
<02> 220.235 74.5714 SY
<02> 241.412 73.2857 SY
<06> 72 200.571 SY
<06> 93.1765 194.143 SY
<06> 114.353 181.286 SY
<06> 135.529 145.286 SY
<06> 156.706 108 SY
<06> 177.882 81 SY
<06> 199.059 74.5714 SY
<06> 220.235 73.2857 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 861 992 a Fi(MP3D)156 1010 y
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 156 1010 a
%%BeginDocument: Figures/Base/MSHR_RADIXL1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 82.2857 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 83.5714 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 88.7143 M9
114.353 73.2857 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 149.143 M9
114.353 74.5714 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 149.143 M9
114.353 75.8571 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 149.143 M9
114.353 75.8571 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica SetTxt
(1.2) 0 65 222.086 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 82.2857 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 83.5714 SY
<06> 114.353 72 SY
<06> 135.529 72 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 88.7143 SY
<0a> 114.353 73.2857 SY
<0a> 135.529 72 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 149.143 SY
<0d> 114.353 74.5714 SY
<0d> 135.529 72 SY
<0d> 156.706 72 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 149.143 SY
<02> 114.353 75.8571 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 149.143 SY
<06> 114.353 75.8571 SY
<06> 135.529 72 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1010 a
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 956 1010 a
%%BeginDocument: Figures/Base/MSHR_RADIXL2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 133.714 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 137.571 M9
114.353 73.2857 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 154.286 M9
114.353 108 M9
135.529 82.2857 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 183.857 M9
114.353 171 M9
135.529 169.714 M9
156.706 168.429 M9
177.882 168.429 M9
199.059 168.429 M9
220.235 165.857 M9
241.412 163.286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 183.857 M9
114.353 172.286 M9
135.529 169.714 M9
156.706 169.714 M9
177.882 168.429 M9
199.059 168.429 M9
220.235 167.143 M9
241.412 163.286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 183.857 M9
114.353 171 M9
135.529 169.714 M9
156.706 168.429 M9
177.882 168.429 M9
199.059 168.429 M9
220.235 167.143 M9
241.412 163.286 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 222.086 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 133.714 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 137.571 SY
<06> 114.353 73.2857 SY
<06> 135.529 72 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 154.286 SY
<0a> 114.353 108 SY
<0a> 135.529 82.2857 SY
<0a> 156.706 73.2857 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 183.857 SY
<0d> 114.353 171 SY
<0d> 135.529 169.714 SY
<0d> 156.706 168.429 SY
<0d> 177.882 168.429 SY
<0d> 199.059 168.429 SY
<0d> 220.235 165.857 SY
<0d> 241.412 163.286 SY
<02> 72 200.571 SY
<02> 93.1765 183.857 SY
<02> 114.353 172.286 SY
<02> 135.529 169.714 SY
<02> 156.706 169.714 SY
<02> 177.882 168.429 SY
<02> 199.059 168.429 SY
<02> 220.235 167.143 SY
<02> 241.412 163.286 SY
<06> 72 200.571 SY
<06> 93.1765 183.857 SY
<06> 114.353 171 SY
<06> 135.529 169.714 SY
<06> 156.706 168.429 SY
<06> 177.882 168.429 SY
<06> 199.059 168.429 SY
<06> 220.235 167.143 SY
<06> 241.412 163.286 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 849 1670 a Fi(RADIX)156 1689 y
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 156 1689 a
%%BeginDocument: Figures/Base/MSHR_WATERL1.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 101.571 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 101.571 M9
114.353 83.5714 M9
135.529 78.4286 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 110.571 M9
114.353 91.2857 M9
135.529 84.8571 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 118.286 M9
114.353 86.1429 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 117 M9
114.353 91.2857 M9
135.529 83.5714 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 117 M9
114.353 92.5714 M9
135.529 83.5714 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica SetTxt
(1.2) 0 65 222.086 TXR
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L1 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 101.571 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 101.571 SY
<06> 114.353 83.5714 SY
<06> 135.529 78.4286 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 110.571 SY
<0a> 114.353 91.2857 SY
<0a> 135.529 84.8571 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 118.286 SY
<0d> 114.353 86.1429 SY
<0d> 135.529 72 SY
<0d> 156.706 72 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 117 SY
<02> 114.353 91.2857 SY
<02> 135.529 83.5714 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 117 SY
<06> 114.353 92.5714 SY
<06> 135.529 83.5714 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 956 1689 a
 11840716 9472573 986726 657817 16577003 17497948 startTexFig
 956 1689 a
%%BeginDocument: Figures/Base/MSHR_WATERL2.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72 200.571 S9
[] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 245.571 149.699 245.571 
L9
grestore
8 SetSym
<02> 135.526 245.571 SY
12 /Helvetica SetTxt
( SCplain) 0 165.203 241.971 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 229.971 149.699 229.971 
L9
grestore
8 SetSym
<06> 135.526 229.971 SY
12 /Helvetica SetTxt
( SC+PF) 0 165.203 226.371 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 214.371 149.699 214.371 
L9
grestore
8 SetSym
<0a> 135.526 214.371 SY
12 /Helvetica SetTxt
( SC+SR) 0 165.203 210.771 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 198.771 149.699 198.771 
L9
grestore
8 SetSym
<0d> 135.526 198.771 SY
12 /Helvetica SetTxt
( RCplain) 0 165.203 195.171 TXL
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 183.171 149.699 183.171 
L9
grestore
8 SetSym
<02> 135.526 183.171 SY
12 /Helvetica SetTxt
( RC+PF) 0 165.203 179.571 TXL
72 200.571 S9
gsave 0.000000 0.000000 0.000000 setrgbcolor
121.353 167.571 149.699 167.571 
L9
grestore
8 SetSym
<06> 135.526 167.571 SY
12 /Helvetica SetTxt
( RC+SR) 0 165.203 163.971 TXL
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72 200.571 S9
[] 1.400000 SL
93.1765 110.571 M9
114.353 72 M9
135.529 72 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 101.571 M9
114.353 90 M9
135.529 77.1429 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 115.714 M9
114.353 100.286 M9
135.529 86.1429 M9
156.706 72 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 123.429 M9
114.353 96.4286 M9
135.529 78.4286 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
[1.400000 5.600000] 1.400000 SL
93.1765 120.857 M9
114.353 104.143 M9
135.529 93.8571 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
72 200.571 S9
93.1765 120.857 M9
114.353 104.143 M9
135.529 95.1429 M9
156.706 73.2857 M9
177.882 72 M9
199.059 72 M9
220.235 72 M9
241.412 72 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
initclip 
(|) 0 72 72 TXC
14 /Helvetica-Bold SetTxt
(0) 0 72 55.2 TXC
12 /Helvetica SetTxt
(|) 0 93.1765 72 TXC
14 /Helvetica-Bold SetTxt
(1) 0 93.1765 55.2 TXC
12 /Helvetica SetTxt
(|) 0 114.353 72 TXC
14 /Helvetica-Bold SetTxt
(2) 0 114.353 55.2 TXC
12 /Helvetica SetTxt
(|) 0 135.529 72 TXC
14 /Helvetica-Bold SetTxt
(3) 0 135.529 55.2 TXC
12 /Helvetica SetTxt
(|) 0 156.706 72 TXC
14 /Helvetica-Bold SetTxt
(4) 0 156.706 55.2 TXC
12 /Helvetica SetTxt
(|) 0 177.882 72 TXC
14 /Helvetica-Bold SetTxt
(5) 0 177.882 55.2 TXC
12 /Helvetica SetTxt
(|) 0 199.059 72 TXC
14 /Helvetica-Bold SetTxt
(6) 0 199.059 55.2 TXC
12 /Helvetica SetTxt
(|) 0 220.235 72 TXC
14 /Helvetica-Bold SetTxt
(7) 0 220.235 55.2 TXC
12 /Helvetica SetTxt
(|) 0 241.412 72 TXC
14 /Helvetica-Bold SetTxt
(8) 0 241.412 55.2 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
14 /Helvetica-Bold SetTxt
(0.0) 0 65 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 97.7143 TXC
14 /Helvetica-Bold SetTxt
(0.2) 0 65 93.5143 TXR
12 /Helvetica SetTxt
(|) -90 72 123.429 TXC
14 /Helvetica-Bold SetTxt
(0.4) 0 65 119.229 TXR
12 /Helvetica SetTxt
(|) -90 72 149.143 TXC
14 /Helvetica-Bold SetTxt
(0.6) 0 65 144.943 TXR
12 /Helvetica SetTxt
(|) -90 72 174.857 TXC
14 /Helvetica-Bold SetTxt
(0.8) 0 65 170.657 TXR
12 /Helvetica SetTxt
(|) -90 72 200.571 TXC
14 /Helvetica-Bold SetTxt
(1.0) 0 65 196.371 TXR
12 /Helvetica SetTxt
(|) -90 72 226.286 TXC
14 /Helvetica-Bold SetTxt
(1.2) 0 65 222.086 TXR
14 /Helvetica SetTxt
() 0 162 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 252 72 
L9
0 setlinecap
72 72 72 252 
L9
( L2 MSHR) 0 252 37 TXR
( Utilization) 90 29.3 252 TXR
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 252.000000 72.000000 252.000000 252.000000 72.000000 252.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
<02> 72 200.571 SY
<02> 93.1765 110.571 SY
<02> 114.353 72 SY
<02> 135.529 72 SY
<02> 156.706 72 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 101.571 SY
<06> 114.353 90 SY
<06> 135.529 77.1429 SY
<06> 156.706 72 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
<0a> 72 200.571 SY
<0a> 93.1765 115.714 SY
<0a> 114.353 100.286 SY
<0a> 135.529 86.1429 SY
<0a> 156.706 72 SY
<0a> 177.882 72 SY
<0a> 199.059 72 SY
<0a> 220.235 72 SY
<0a> 241.412 72 SY
<0d> 72 200.571 SY
<0d> 93.1765 123.429 SY
<0d> 114.353 96.4286 SY
<0d> 135.529 78.4286 SY
<0d> 156.706 73.2857 SY
<0d> 177.882 72 SY
<0d> 199.059 72 SY
<0d> 220.235 72 SY
<0d> 241.412 72 SY
<02> 72 200.571 SY
<02> 93.1765 120.857 SY
<02> 114.353 104.143 SY
<02> 135.529 93.8571 SY
<02> 156.706 73.2857 SY
<02> 177.882 72 SY
<02> 199.059 72 SY
<02> 220.235 72 SY
<02> 241.412 72 SY
<06> 72 200.571 SY
<06> 93.1765 120.857 SY
<06> 114.353 104.143 SY
<06> 135.529 95.1429 SY
<06> 156.706 73.2857 SY
<06> 177.882 72 SY
<06> 199.059 72 SY
<06> 220.235 72 SY
<06> 241.412 72 SY
initclip 
showpage
end
%%EndDocument

 endTexFig
 840 2349 a Fi(W)-5 b(A)l(TER)265 2409 y(\(a\))17 b(L1)g(MSHR)e(o)q
(ccupancy)266 b(\(b\))17 b(L2)g(MSHR)e(o)q(ccupancy)395
2539 y Fg(Figure)k(4.4)48 b Fi(MSHR)15 b(o)q(ccupancy)i({)g(Mp3d,)f
(Radix,)f(and)i(W)l(ater)p eop
%%Page: 32 38
32 37 bop 1882 72 a Fi(32)204 222 y(Sev)o(eral)16 b(factors)i(limit)c
(the)j(b)q(ene\014ts)g(of)g(hardw)o(are-con)o(trolled)g(prefetc)o(hing)
e(in)i(our)g(appli-)131 312 y(cations.)22 b(W)l(e)16
b(next)g(discuss)g(these)g(brie\015y)f(b)q(elo)o(w.)204
405 y(First,)d(the)g(\014nite)g(size)f(of)i(the)f(instruction)f(windo)o
(w)i(limits)c(ho)o(w)k(early)e(a)i(prefetc)o(h)e(can)h(b)q(e)g(is-)131
495 y(sued.)21 b(In)12 b(particular,)h(if)g(there)g(are)g(no)g(other)h
(long)f(latency)f(op)q(erations)j(b)q(efore)e(the)g(prefetc)o(hed)131
585 y(instruction)23 b(in)f(the)h(instruction)f(windo)o(w,)i(the)f(p)q
(oten)o(tial)f(for)h(o)o(v)o(erlap)f(is)h(limited.)37
b(Th)o(us,)131 676 y(prefetc)o(hing)14 b(is)h(most)g(e\013ectiv)o(e)e
(when)j(sev)o(eral)e(memory)e(misses)i(o)q(ccur)i(close)e(together)i
(within)131 766 y(the)h(instruction)g(windo)o(w)h(\(w)o(e)f(use)g(the)g
(MSHR)g(o)q(ccupancy)g(graphs)i(in)d(Figures)h(4.3)f(and)h(4.4)131
856 y(as)g(a)g(measure)e(of)h Fh(miss)h(clustering)h
Fi(leading)e(to)h(higher)f(o)o(v)o(erlap\).)204 949 y(Second,)h(the)f
(address)i(of)e(the)h(instruction)f(to)h(b)q(e)g(prefetc)o(hed)e(ma)o
(y)g(dep)q(end)i(on)g(the)g(v)m(alue)131 1039 y(of)d(a)h(read)f
(instruction)f(that)i(is)e(also)i(blo)q(c)o(k)o(ed)e(from)g(issuing.)20
b(Since)13 b(the)h(v)m(alue)g(cannot)g(b)q(e)g(used)131
1129 y(un)o(til)20 b(the)g(read)g(completes,)f(the)h(later)g(memory)e
(op)q(eration)j(ma)o(y)e(not)i(b)q(e)f(prefetc)o(hed)f(early)131
1219 y(enough.)j(\(This)17 b(is)f(similar)e(to)i(the)g(example)e
(discussed)j(in)e(Section)h(2.2.1.\))204 1312 y(Third,)f(for)f(SC)h
(with)f(write-through)h(cac)o(hes,)f(all)g(writes)g(m)o(ust)f
(propagate)j(to)f(at)f(least)h(the)131 1402 y(L2)f(cac)o(he)e(b)q
(efore)h(they)g(are)g(considered)g(complete,)e(and)i(b)q(efore)g(they)g
(retire)f(from)g(the)g(instruc-)131 1492 y(tion)17 b(windo)o(w.)k(This)
16 b(minim)n(um)c(write)k(latency)f(cannot)i(b)q(e)g(o)o(v)o(erlapp)q
(ed)e(b)o(y)h(prefetc)o(hing.)204 1585 y(F)l(ourth,)21
b(as)g(explained)e(in)h(Section)g(3.1.1,)g(in)g(our)h(default)f
(system,)f(if)g(a)i(write)f(prefetc)o(h)131 1675 y(is)d(issued)g(while)
f(a)h(demand)f(or)i(prefetc)o(h)d(read)j(to)f(the)g(same)f(cac)o(he)g
(line)g(is)g(outstanding,)j(the)131 1765 y(o)o(wnership)14
b(request)f(for)h(the)g(prefetc)o(h)e(is)i(blo)q(c)o(k)o(ed)f(un)o(til)
f(the)i(outstanding)h(read)f(returns.)20 b(This)131 1856
y(can)d(further)f(limit)d(the)j(e\013ectiv)o(eness)f(of)h(write)g
(prefetc)o(hing.)204 1948 y(Finally)l(,)22 b(prefetc)o(hing)f(do)q(es)h
(not)h(result)e(in)h(reduced)f(latency)g(if)h(the)f(prefetc)o(hed)g
(line)f(is)131 2038 y(either)d(in)o(v)m(alidated,)g(replaced,)g(or)h
(do)o(wngraded)i(to)e(read-only)g(state)g(\(for)g(write)g(prefetc)o
(hes\))131 2128 y(b)q(efore)f(the)f(corresp)q(onding)i(demand)d
(access.)22 b(Suc)o(h)16 b(prefetc)o(hes)f(are)i(called)e
Fh(e)n(arly)i(pr)n(efetches)p Fi(.)131 2219 y(Suc)o(h)e(early)g
(prefetc)o(hes)f(ma)o(y)g(actually)h(degrade)h(p)q(erformance)e(b)o(y)h
(replacing)g(a)h(line)e(that)i(will)131 2309 y(b)q(e)22
b(used,)h(or)f(in)o(v)m(alidating)g(a)g(line)f(that)h(is)g(y)o(et)f(to)
h(b)q(e)g(used)g(b)o(y)f(the)h(remote)e(pro)q(cessor,)k(or)131
2399 y(increasing)16 b(the)g(system)f(con)o(ten)o(tion)g(increasing)h
(the)g(latency)g(of)g(all)g(accesses.)204 2492 y(One)37
b(or)g(more)e(of)i(the)f(ab)q(o)o(v)o(e)g(e\013ects)h(is)f(seen)g(in)g
(all)g(our)h(applications.)82 b(As)131 2582 y(Figures)16
b(4.3)h(and)g(4.4)g(sho)o(w,)g(most)f(of)h(our)g(applications)g
(exhibit)f(greater)h(p)q(oten)o(tial)f(for)h(read)131
2672 y(miss)c(o)o(v)o(erlap)g(compared)f(to)j(write)e(miss)f(o)o(v)o
(erlap.)20 b(Subsequen)o(tly)l(,)12 b(most)i(of)g(the)f(b)q(ene\014ts)h
(from)p eop
%%Page: 33 39
33 38 bop 1882 72 a Fi(33)131 222 y(prefetc)o(hing)21
b(app)q(ear)h(from)f(reducing)g(read)g(stall)h(time.)35
b(Mp3d)22 b(and)g(W)l(ater)f(observ)o(e)g(some)131 312
y(strided)15 b(write)g(misses)f(and)h(subsequen)o(tly)g(see)f(some)h
(reductions)g(in)f(write)h(stall)g(time)e(as)j(w)o(ell.)131
403 y(Prefetc)o(hing)e(in)h(Radix)g(and)h(Mp3d)f(is)g(limited)d(due)j
(to)h(memory)c(references)i(whose)i(addresses)131 493
y(dep)q(end)i(on)f(v)m(alues)g(returned)g(from)f(previous)h(reads)h
(\(in)f(the)f(p)q(erm)o(utation)h(phase)g(in)g(Radix,)131
583 y(and)e(during)f(cell)f(arra)o(y)h(accesses)g(in)g(Mp3d\).)20
b(Additionally)l(,)13 b(all)g(our)i(applications)f(exp)q(erience)131
674 y(L2)19 b(write)e(latencies)g(since)g(all)g(writes)g(m)o(ust)g
(access)g(the)h(secondary)g(cac)o(he)f(with)g(a)h(\014rst)g(lev)o(el)
131 764 y(write-through)j(cac)o(he)e(con\014guration.)35
b(Finally)l(,)19 b(Erle,)h(LU,)g(Mp3d,)h(and)f(W)l(ater)h(also)f(exp)q
(e-)131 854 y(rience)e(increased)g(stall)g(times)f(due)i(to)g
(write-after-read)g(stalls)g(as)g(discussed)g(ab)q(o)o(v)o(e.)29
b(Mp3d)131 944 y(also)18 b(sees)f(some)g(p)q(erformance)f(degradation)i
(due)f(to)h(early)e(prefetc)o(hes)g(o)q(ccurring)i(from)e(high)131
1035 y(false)g(sharing)h(and)g(races.)131 1197 y Fg(4.1.2)55
b(Sp)r(eculativ)n(e)17 b(Reads)i(with)g(W)-5 b(rite-Through)17
b(L1)i(Cac)n(hes)131 1321 y Fi(The)d(addition)g(of)f(sp)q(eculativ)o(e)
g(read)g(execution)g(helps)g(ev)o(ery)f(application)h(signi\014can)o
(tly)l(,)f(with)131 1412 y(impro)o(v)o(em)o(en)o(ts)j(in)i(execution)f
(time)g(\(relativ)o(e)g(to)i(simple)d(SC\))j(ranging)h(from)d(23\045)i
(to)g(49\045.)131 1502 y(These)c(impro)o(v)o(em)o(en)o(ts)d(are)k(seen)
f(in)f(CPU)i(time,)c(read)k(stall)f(time,)d(and)k(write)f(stall)g
(time.)204 1594 y(Compared)h(to)g(SC)g(with)g(prefetc)o(hing)f(alone,)g
(CPU)h(time)e(decreases)i(signi\014can)o(tly)f(for)h(all)131
1684 y(applications)e(making)f(a)h(signi\014can)o(t)f(impact)f(on)j
(execution)d(time)g(for)i(FFT,)f(LU,)h(Erlebac)o(her,)131
1775 y(and)h(W)l(ater.)21 b(Eac)o(h)15 b(of)g(these)g(applications)f(b)
q(ene\014t)h(from)f(the)h(abilit)o(y)e(to)j(consume)e(the)g(v)m(alues)
131 1865 y(of)h(reads)g(sp)q(eculativ)o(ely)l(,)d(as)j(this)f(abilit)o
(y)f(allo)o(ws)i(computation)e(dep)q(enden)o(t)h(on)h(those)g(reads)g
(to)131 1955 y(b)q(e)k(largely)f(o)o(v)o(erlapp)q(ed)f(with)i(a)g(long)
f(latency)g(memory)e(access)i(stalled)g(at)h(the)f(head)h(of)g(the)131
2046 y(instruction)d(windo)o(w.)204 2138 y(Compared)i(to)h(SC)f(with)g
(prefetc)o(hing)f(alone,)i(all)f(applications)g(see)g(a)g(reduction)g
(in)g(read)131 2228 y(stall)23 b(time)d(with)j(the)f(addition)h(of)g
(sp)q(eculativ)o(e)f(read)h(execution.)39 b(Erle,)24
b(LU,)e(Radix,)i(and)131 2319 y(W)l(ater)15 b(see)f(reductions)g(in)g
(read)h(stall)f(time)e(mainly)h(due)h(to)h(reductions)f(in)h(the)f
(stall)g(time)e(due)131 2409 y(to)20 b(L1)g(hits.)29
b(Radix,)19 b(Mp3d,)h(and)f(LU)g(see)g(reductions)g(in)g(other)g(comp)q
(onen)o(ts)f(of)h(read)h(stall)131 2499 y(time)e(as)i(w)o(ell.)30
b(Radix)20 b(and)g(Mp3d)g(ha)o(v)o(e)f(reads)h(with)f(addresses)i(dep)q
(enden)o(t)e(on)h(the)f(v)m(alues)131 2589 y(of)e(previous)g(reads,)g
(and)g(subsequen)o(tly)e(b)q(ene\014t)i(from)f(the)g(abilit)o(y)f(to)i
(consume)f(the)g(v)m(alue)h(of)131 2680 y(reads)d(as)g(so)q(on)h(as)f
(p)q(ossible,)g(since)e(this)i(giv)o(es)e(them)g(more)g(p)q(oten)o
(tial)h(for)h(further)f(o)o(v)o(erlap.)19 b(LU)p eop
%%Page: 34 40
34 39 bop 1882 72 a Fi(34)131 222 y(sees)14 b(a)g(decrease)g(in)g
(con\015ict)f(misses)g(caused)h(b)o(y)f(reordering)h(of)g(accesses;)h
(in)e(either)g(simple)f(SC)131 312 y(or)20 b(SC)g(with)f(prefetc)o
(hing,)g(LU)h(exp)q(eriences)e(rep)q(eated)h(con\015ict)g(misses)f
(among)i(subsequen)o(t)131 403 y(demand)c(read)g(accesses,)g(since)g
(these)g(m)o(ust)g(o)q(ccur)g(in)g(order)h(\(most)f(of)h(these)f
(con\015icts)g(o)q(ccur)131 493 y(at)i(the)f(\014rst-lev)o(el)f(direct)
g(mapp)q(ed)h(cac)o(he;)f(relativ)o(ely)f(few)o(er)i(con\015icts)g(o)q
(ccur)g(at)h(the)f(second-)131 583 y(lev)o(el)c(four-w)o(a)o(y)i(asso)q
(ciativ)o(e)f(cac)o(he\).)20 b(With)15 b(sp)q(eculativ)o(e)e(read)i
(execution,)e(reads)i(can)g(issue)g(in)131 674 y(parallel)i(and)g(out)h
(of)g(order;)f(as)h(a)g(result,)e(sev)o(eral)g(reads)i(to)g(the)f
(con\015icting)f(cac)o(he)h(lines)f(can)131 764 y(o)q(ccur)k(concurren)
o(tly)l(.)28 b(Read)20 b(misses)d(to)j(the)f(same)f(cac)o(he)g(line)h
(can)g(coalesce)f(in)o(to)h(the)g(same)131 854 y(MSHR,)g(while)f(other)
i(reads)g(can)g(hit)f(a)h(line)e(despite)h(the)g(fact)h(that)g(its)f
(set)h(has)g(a)g(p)q(ending)131 944 y(MSHR.)c(This)i(eliminates)c(some)
j(of)g(the)g(con\015ict)g(misses)f(seen)h(using)h(a)f(system)f(\(suc)o
(h)h(as)h(SC)131 1035 y(or)i(SC)f(with)f(prefetc)o(hing)g(alone\))h(in)
g(whic)o(h)f(demand)g(reads)h(can)g(only)g(o)q(ccur)g(one-at-a-time)131
1125 y(and)e(in)f(order.)204 1217 y(Among)d(all)h(the)f(applications,)h
(only)g(Radix)g(sees)f(a)i(reduction)e(in)g(write)h(stall)f(time.)19
b(Radix)131 1308 y(sees)h(this)g(additional)g(write)g(stall)f(time)f
(reduction)i(not)g(seen)g(earlier)f(with)h(the)g(addition)g(of)131
1398 y(only)13 b(prefetc)o(hing)f(b)q(ecause)h(it)f(also)i(has)g
(writes)e(whose)i(addresses)f(dep)q(end)g(on)h(v)m(alues)f(returned)131
1488 y(b)o(y)h(previous)f(long)i(latency)e(reads.)21
b(The)14 b(abilit)o(y)e(to)i(consume)f(v)m(alues)h(for)g(reads)g(and)h
(use)f(those)131 1578 y(v)m(alues)k(in)g(sending)h(out)f(prefetc)o(hes)
f(for)i(the)e(ab)q(o)o(v)o(e)i(writes)e(impro)o(v)o(es)f(the)i(write)g
(o)o(v)o(erlap)f(for)131 1669 y(Radix.)204 1761 y Fg(E\013ect)23
b(of)h(rollbac)n(ks.)33 b Fi(One)20 b(p)q(oten)o(tial)h(limitation)d
(of)j(sp)q(eculativ)o(e)e(execution)g(is)i(that)131 1851
y(o)o(v)o(erly)c(optimistic)e(sp)q(eculation)j(could)g(lead)g(to)g
(excessiv)o(e)e(rollbac)o(ks,)h(whic)o(h)h(ma)o(y)e(h)o(urt)i(p)q(er-)
131 1942 y(formance)c(\(in)g(cases)h(analogous)i(to)e(early)g(prefetc)o
(hing\).)k(Recall)14 b(that)h(w)o(e)f(rollbac)o(k)g(execution)131
2032 y(whenev)o(er)g(w)o(e)g(detect)f(an)i(ev)o(en)o(t)e(that)i
(signals)g(a)g(p)q(ossible)g(violation)f(of)h(the)f(memory)e(ordering)
131 2122 y(required)k(b)o(y)h(the)h(consistency)e(mo)q(del)h({)h
(coherence)e(messages)h(and)h(L2)g(cac)o(he)f(replacemen)o(ts)131
2213 y(in)f(our)h(system.)204 2305 y(The)h(\014rst)g(column)f(of)h
(Figure)f(4.5)h(summarizes)d(the)j(a)o(v)o(erage)f(n)o(um)o(b)q(er)f
(of)i(rollbac)o(ks)g(seen)131 2395 y(b)o(y)i(eac)o(h)g(pro)q(cessor)h
(in)f(the)g Fa(SC+SR)e Fi(system)h(with)h(a)h(\014rst-lev)o(el)d
(write-through)j(cac)o(he.)32 b(The)131 2485 y(n)o(um)o(b)q(ers)12
b(in)i(paren)o(theses)f(indicate)f(the)i(p)q(ercen)o(tage)f(of)h(these)
f(rollbac)o(ks)g(that)h(are)g(caused)f(due)131 2576 y(to)h(replacemen)o
(ts.)k(As)c(seen)f(in)h(the)f(\014gure,)h(all)g(our)g(applications)g
(see)f(a)h(v)o(ery)f(small)f(n)o(um)o(b)q(er)g(of)131
2666 y(rollbac)o(ks.)19 b(Only)12 b(LU)h(sees)f(more)f(than)i(1000)h
(rollbac)o(ks)e(p)q(er)h(pro)q(cessor,)h(and)f(ev)o(en)e(there,)h(few)o
(er)p eop
%%Page: 35 41
35 40 bop 1882 72 a Fi(35)131 222 y(than)19 b(0.2\045)g(of)g(the)f
(total)h(n)o(um)o(b)q(er)e(of)i(reads)g(cause)g(rollbac)o(ks;)f
(rollbac)o(k)g(p)q(enalties)g(mak)o(e)f(up)131 312 y(less)g(than)h
(0.05\045)f(of)g(total)g(execution)f(time.)22 b(Additionally)l(,)15
b(on)i(all)g(our)g(applications)g(except)131 403 y(Mp3d,)22
b(the)f(rollbac)o(ks)f(are)h(mainly)e(caused)i(due)g(to)g(coherence)f
(messages)g(and)i(not)f(due)g(to)131 493 y(replacemen)o(ts.)131
655 y Fg(Summary)16 b(for)j(W)-5 b(rite-Through)18 b(L1)g(Cac)n(hes)131
780 y Fi(In)12 b(summary)l(,)f(for)h(sequen)o(tially-consisten)o(t)f
(systems)g(with)h(a)h(\014rst-lev)o(el)d(write-through)k(cac)o(he,)131
870 y(w)o(e)g(\014nd)g(that)h(hardw)o(are-con)o(trolled)f(prefetc)o
(hing)f(alone)h(impro)o(v)o(es)e(p)q(erformance)h(but)h(the)g(im-)131
960 y(pro)o(v)o(emen)o(ts)c(are)j(small)d(for)j(some)e(applications;)i
(the)g(addition)f(of)h(sp)q(eculativ)o(e)e(read)h(execution)131
1050 y(consisten)o(tly)i(and)i(signi\014can)o(tly)e(increases)h(system)
e(p)q(erformance)h(sho)o(wing)i(up)f(to)h(a)g(factor)f(of)131
1141 y(t)o(w)o(o)20 b(sp)q(eedup.)31 b(Nev)o(ertheless,)18
b(w)o(e)h(\014nd)h(that)g(for)g(an)g(arc)o(hitecture)e(with)h
(write-through)h(L1)131 1231 y(cac)o(hes,)h(neither)f(tec)o(hnique)f
(is)h(su\016cien)o(t)g(to)h(handle)f(the)h(large)f(write)g(latency)g
(comp)q(onen)o(t)131 1321 y(asso)q(ciated)k(with)e(SC.)h(W)l(e)f(next)g
(determine)e(the)i(p)q(ossible)h(b)q(ene\014ts)g(of)g(using)g(a)g
(\014rst-lev)o(el)131 1412 y(write-bac)o(k)16 b(cac)o(he)f(instead.)131
1574 y Fg(4.1.3)55 b(Impact)18 b(of)h(W)-5 b(rite-Bac)n(k)17
b(L1)h(Cac)n(hes)131 1698 y Fi(Figures)g(4.1)h(and)g(4.2)f(sho)o(w)h
(that)g(the)f(primary)e(c)o(hange)j(from)e(a)h(write-through)h(to)g(a)g
(write-)131 1788 y(bac)o(k)d(L1)g(cac)o(he)f(is)h(in)f(the)h(decreased)
f(con)o(tribution)h(of)g(write)f(latency)g(to)h(execution)f(time.)k(In)
131 1879 y(Erlebac)o(her,)14 b(FFT,)g(LU,)h(and)g(Radix,)g(the)f
(relativ)o(e)g(con)o(tribution)g(of)h(write)g(latency)f(decreases)p
426 2052 1211 2 v 425 2112 2 61 v 451 2094 a(Application)p
723 2112 V 723 2112 V 49 w(T)l(otal)j(Rollbac)o(ks)e(\(\045)h
(replacemen)o(t-rel)o(ated\))p 1636 2112 V 425 2172 V
723 2172 V 749 2154 a(SC+SR)p 1066 2172 V 179 w(R)o(C+SR)p
1636 2172 V 426 2174 1211 2 v 425 2234 2 61 v 451 2216
a(Erle)p 723 2234 V 210 w(40.2)h(\(0.0\045\))p 1066 2234
V 98 w(3.6)g(\(0.0\045\))p 1636 2234 V 426 2236 1211
2 v 425 2296 2 61 v 451 2278 a(FFT)p 723 2296 V 199 w(80.5)g(\(0\045\))
p 1066 2296 V 136 w(0)g(\(0.0\045\))p 1636 2296 V 426
2298 1211 2 v 425 2358 2 61 v 451 2340 a(LU)p 723 2358
V 231 w(1273.0)h(\(0.1\045\))p 1066 2358 V 49 w(1226.0)g(\(0.1\045\))p
1636 2358 V 426 2360 1211 2 v 425 2420 2 61 v 451 2402
a(Mp3d)p 723 2420 V 175 w(411.5)f(\(12.2\045\))p 1066
2420 V 50 w(1.4)g(\(9.1\045\))p 1636 2420 V 426 2421
1211 2 v 425 2482 2 61 v 451 2464 a(Radix)p 723 2482
V 171 w(582.8)g(\(0.2\045\))p 1066 2482 V 74 w(0)g(\(0.0\045\))p
1636 2482 V 426 2483 1211 2 v 425 2543 2 61 v 451 2525
a(W)l(ater)p 723 2543 V 168 w(156.1)g(\(0.7\045\))p 1066
2543 V 74 w(9.4)g(\(0.0\045\))p 1636 2543 V 426 2545
1211 2 v 426 2553 V 372 2681 a Fg(Figure)h(4.5)49 b Fi(Num)o(b)q(er)14
b(of)j(rollbac)o(ks)e(\(with)h(write-through)h(cac)o(he\))p
eop
%%Page: 36 42
36 41 bop 1882 72 a Fi(36)131 222 y(signi\014can)o(tly)l(,)17
b(since)g(man)o(y)f(writes)i(that)g(hit)g(in)f(the)h(write-through)g
(L1)h(cac)o(he)e(had)h(to)g(exp)q(e-)131 312 y(rience)e(L2)i(cac)o(he)e
(latency;)g(with)g(a)i(write-bac)o(k)e(L1)i(cac)o(he,)e(these)g(writes)
h(m)o(ust)e(only)i(tak)o(e)f(L1)131 403 y(access)h(time.)k(In)16
b(con)o(trast,)h(the)f(write)g(latency)g(comp)q(onen)o(t)g(do)q(es)i
(not)f(drop)g(m)o(uc)o(h)e(in)h(W)l(ater)131 493 y(and)h(Mp3d.)23
b(In)16 b(eac)o(h)g(of)h(these)f(applications,)h(the)f(write)g(stall)g
(comp)q(onen)o(t)g(is)g(dominated)g(b)o(y)131 583 y(remote)f(write)g
(misses,)g(on)i(whic)o(h)e(write-bac)o(k)h(cac)o(hes)f(ha)o(v)o(e)h
(little)e(e\013ect.)204 676 y(The)g(o)o(v)o(erall)e(b)q(ene\014ts)i(of)
g(the)f(t)o(w)o(o)g(tec)o(hniques)f(of)i(hardw)o(are)g(prefetc)o(hing)e
(and)j(sp)q(eculativ)o(e)131 766 y(reads)24 b(on)f(SC)g(systems)f(with)
g(write-bac)o(k)g(L1)i(cac)o(hes)f(are)f(qualitativ)o(ely)f(similar)g
(to)i(those)131 856 y(with)c(write-through)g(L1)g(cac)o(hes.)27
b(The)18 b(impro)o(v)o(em)o(en)o(ts)d(in)j(execution)g(time)e(range)j
(from)e(7\045)131 946 y(\(Radix\))d(to)g(30\045)g(\(Erlebac)o(her\))f
(for)h(hardw)o(are)g(prefetc)o(hing,)f(and)h(26\045)h(\(Mp3d\))f(to)g
(58\045)g(\(LU\))131 1037 y(for)23 b(sp)q(eculativ)o(e)f(read)h
(execution)f(\(relativ)o(e)f(to)i(simple)e(SC\).)h(As)h(with)g(the)g
(write-through)131 1127 y(case,)15 b(on)h(all)f(the)g(applications,)h
(the)f(t)o(w)o(o)g(tec)o(hniques)f(are)h(more)g(successful)f(at)i
(reducing)f(read)131 1217 y(latency)21 b(rather)h(than)h(write)e
(latency)l(.)37 b(The)22 b(main)f(reason)i(for)f(the)f(di\013eren)o(t)g
(p)q(erformance)131 1308 y(impro)o(v)o(em)o(en)o(ts)d(with)j(the)h
(optimizations)d(in)i(the)g(write-through)h(and)g(write-bac)o(k)f
(cases)g(is)131 1398 y(that)e(the)g(write)f(latency)g(forms)g(a)h
(smaller)e(part)i(of)g(the)g(execution)e(time)g(in)i(the)f(write-bac)o
(k)131 1488 y(case.)131 1650 y Fg(4.1.4)55 b(Summary)17
b(for)h(SC)131 1775 y Fi(F)l(or)d(sequen)o(tially)d(consisten)o(t)i
(systems)f(with)h(write-through)h(L1)g(cac)o(hes,)f(hardw)o(are)g
(prefetc)o(h-)131 1865 y(ing)21 b(alone)f(impro)o(v)o(es)e(the)i(p)q
(erformance,)g(but)h(the)f(impro)o(v)o(em)o(en)o(t)o(s)e(are)j(small)d
(for)j(some)f(ap-)131 1955 y(plications.)26 b(The)18
b(addition)h(of)f(sp)q(eculativ)o(e)f(read)h(execution)f(consisten)o
(tly)g(and)h(signi\014can)o(tly)131 2046 y(increases)j(system)f(p)q
(erformance)g(sho)o(wing)i(up)g(to)f(a)h(factor)g(of)f(t)o(w)o(o)g(sp)q
(eedup.)37 b(W)l(rite)21 b(bac)o(k)131 2136 y(L1)g(cac)o(hes)f
(additionally)f(reduce)h(a)g(signi\014can)o(t)g(p)q(ortion)h(of)g(the)e
(write)h(latency)f(comp)q(onen)o(t)131 2226 y(in)j(man)o(y)e(of)j(the)e
(applications.)39 b(Ho)o(w)o(ev)o(er,)21 b(a)h(signi\014can)o(t)g(p)q
(ortion)g(of)h(memory)c(stall)i(time)131 2316 y(asso)q(ciated)c(with)g
(b)q(oth)g(reads)f(and)h(writes)f(still)f(remains.)p
eop
%%Page: 37 43
37 42 bop 1882 72 a Fi(37)131 222 y Fl(4.2)66 b(Release)22
b(Consistency)g(Implemen)n(tations)131 347 y Fi(W)l(e)c(\014rst)f
(discuss)h(the)g(impact)d(of)j(hardw)o(are)g(prefetc)o(hing)f(and)h(sp)
q(eculativ)o(e)e(reads)i(in)f(an)h(R)o(C)131 437 y(system)13
b(with)g(write-through)i(L1)g(cac)o(hes)e(\(Section)g(4.2.1\))h(and)h
(then)e(discuss)h(their)g(impact)e(on)131 527 y(an)17
b(R)o(C)f(system)f(with)h(write-bac)o(k)f(L1)i(cac)o(hes)f(\(Section)g
(4.2.2\).)131 689 y Fg(4.2.1)55 b(P)n(erformance)18 b(with)h(W)-5
b(rite-Through)17 b(L1)i(Cac)n(hes)131 814 y Fi(Figures)d(4.1)h(and)g
(4.2)e(sho)o(w)h(that,)f(unlik)o(e)f(SC,)h(R)o(C)g(do)q(es)g(not)h(exp)
q(erience)d(m)o(uc)o(h)g(b)q(ene\014t)i(from)131 904
y(hardw)o(are)k(prefetc)o(hing)f(and)h(sp)q(eculativ)o(e)e(reads)i(on)g
(a)g(system)f(with)g(write-through)h(cac)o(hes.)131 994
y(In)d(fact,)g(these)g(optimizations)f(cause)h(a)h(slo)o(wdo)o(wn)f(on)
h(some)e(of)i(our)g(applications.)204 1087 y(Qualitativ)o(ely)l(,)11
b(there)h(are)g(t)o(w)o(o)h(k)o(ey)e(di\013erences)h(in)g(the)g(w)o(a)o
(y)g(the)g(optimizations)f(a\013ect)i(p)q(er-)131 1177
y(formance)i(with)h(R)o(C)g(and)g(SC.)g(As)g(explained)f(in)h(Section)f
(2.1,)h(R)o(C)g(already)g(allo)o(ws)g(increased)131 1267
y(read)h(and)g(write)g(o)o(v)o(erlap)f(compared)f(to)i(SC;)g(the)f
(optimizations)g(help)g(R)o(C)g(only)h(when)g(there)131
1358 y(is)h(an)g(outstanding)h(acquire)d(or)i(when)g(a)g(write)f(with)g
(a)h(kno)o(wn)g(address)g(is)f(w)o(aiting)h(to)g(reac)o(h)131
1448 y(the)h(head)f(of)h(the)f(instruction)h(windo)o(w.)28
b(F)l(urthermore,)17 b(once)h(a)h(write)f(reac)o(hes)g(the)g(head)h(of)
131 1538 y(the)g(windo)o(w,)g(it)f(retires)f(immedi)o(ately)l(.)25
b(This)19 b(implies)d(that)j(most)e(write)h(latency)g(is)g(already)131
1628 y(hidden.)24 b(Therefore,)17 b(the)g(net)g(e\013ect)g(on)h(p)q
(erformance)e(of)i(write)e(prefetc)o(hing)g(is)i(exp)q(ected)e(to)131
1719 y(b)q(e)h(limited.)204 1811 y(Additionally)l(,)c(hardw)o(are)i
(prefetc)o(hing)e(from)g(the)g(instruction)h(windo)o(w)h(can)f
(actually)f(h)o(urt)131 1901 y(p)q(erformance)18 b(in)g(t)o(w)o(o)g(w)o
(a)o(ys.)28 b(First,)18 b(write)f(prefetc)o(hing)h(and)h(prefetc)o
(hing)e(reads)i(and)g(writes)131 1992 y(past)f(an)g(acquire)f(can)g
(result)g(in)g(bringing)g(in)g(data)h(to)q(o)h(early)l(,)d(subsequen)o
(tly)h(increasing)g(the)131 2082 y(net)o(w)o(ork)i(tra\016c)f(of)i(the)
e(system.)29 b(Second,)19 b(as)h(seen)e(in)h(Section)f(4.1,)i(hardw)o
(are)g(prefetc)o(hing)131 2172 y(can)f(result)g(in)f(write-after-read)h
(stalls)g(not)g(seen)g(in)g(the)f(base)i(system.)27 b(These)19
b(stalls)g(o)q(ccur)131 2263 y(as)e(a)g(result)f(of)h(write)f(prefetc)o
(hes)g(b)q(eing)g(issued)h(for)g(an)g(outstanding)g(read)g(access.)22
b(The)17 b(base)131 2353 y(case)22 b(issues)g(suc)o(h)g(writes)f(only)h
(after)f(the)h(read)g(completes,)f(and)h(hence)f(do)q(es)i(not)f(see)g
(the)131 2443 y(e\013ect)e(of)h(suc)o(h)g(write-after-read)f(stalls.)34
b(While)20 b(b)q(oth)h(these)g(e\013ects)f(are)h(also)g(seen)f(in)g
(SC,)131 2533 y(the)f(increase)g(in)g(p)q(erformance)f(due)h(to)h(the)f
(reduction)g(in)g(the)g(write)f(miss)g(stall)h(time)f(helps)131
2624 y(hide)d(the)g(p)q(erformance)f(loss)i(due)g(to)f(premature)f
(prefetc)o(hes)g(and)i(write-after-read)g(stalls.)21
b(In)p eop
%%Page: 38 44
38 43 bop 1882 72 a Fi(38)131 222 y(con)o(trast,)15 b(these)e
(e\013ects)h(are)g(more)f(pronounced)h(in)g(R)o(C)g(since)f(R)o(C)h
(already)f(o)o(v)o(erlaps)h(all)f(other)131 312 y(write)j(latencies.)
204 405 y(W)l(ater)24 b(is)g(the)g(only)f(application)h(help)q(ed)f
(unequiv)o(o)q(cally)f(and)j(signi\014can)o(tly)e(from)g(the)131
495 y(curren)o(t)g(optimizations)f(to)i(R)o(C.)f(It)h(sho)o(ws)g(impro)
o(v)o(em)o(en)o(t)c(in)k(execution)e(time)g(from)g(b)q(oth)131
585 y(prefetc)o(hing)14 b(\(5.2\045)g(impro)o(v)o(em)o(en)o(t)d(o)o(v)o
(er)j(simple)f(R)o(C\))h(and)i(from)d(sp)q(eculativ)o(e)h(read)g
(execution)131 676 y(\(6.1\045)20 b(impro)o(v)o(em)o(en)n(t)d(o)o(v)o
(er)i(simple)f(R)o(C\).)h(The)g(b)q(ene\014ts)h(are)g(ac)o(hiev)o(ed)e
(b)o(y)h(o)o(v)o(erlapping)h(the)131 766 y(prefetc)o(h)g(of)h(the)f
(critical)f(section)i(lo)q(c)o(k)f(for)h(the)f(force)h(up)q(dates,)h
(and)f(the)g(data)g(within)g(the)131 856 y(critical)d(section.)31
b(Since)19 b(the)h(critical)e(sections)h(ha)o(v)o(e)g(lo)o(w)h(con)o
(ten)o(tion,)f(the)g(prefetc)o(h)g(brings)131 946 y(in)h(v)m(alid)f
(data)i(and)f(is)g(useful)f(in)g(hiding)h(a)g(large)g(part)g(of)g(the)g
(latency)l(.)31 b(Ho)o(w)o(ev)o(er,)18 b(b)q(ene\014ts)131
1037 y(from)f(these)h(tec)o(hniques)e(are)i(far)g(less)f(signi\014can)o
(t)h(than)g(the)g(corresp)q(onding)h(b)q(ene\014ts)f(in)f(SC.)131
1127 y(Erlebac)o(her,)h(FFT,)g(and)h(Mp3d)g(see)f(p)q(erformance)g(slo)
o(wdo)o(wns)h(with)f(the)h(addition)g(of)f(hard-)131
1217 y(w)o(are)c(prefetc)o(hing)e(and)j(sp)q(eculativ)o(e)d(read)i
(execution.)19 b(The)14 b(p)q(erformance)f(slo)o(wdo)o(wn)h(in)g(these)
131 1308 y(applications)23 b(is)g(mainly)e(caused)i(due)f(to)i(the)e
(negativ)o(e)g(e\013ects)h(of)g(write)f(prefetc)o(hing)g(lik)o(e)131
1398 y(write-after-read)16 b(stalls)h(and)f(increased)g(false)g
(sharing)h(due)f(to)h(early)e(prefetc)o(hes.)131 1560
y Fg(4.2.2)55 b(Impact)18 b(of)h(W)-5 b(rite-Bac)n(k)17
b(L1)h(Cac)n(hes)131 1684 y Fi(Ov)o(erall,)k(since)f(R)o(C)g(already)h
(hides)g(most)f(of)h(the)g(write)f(latency)l(,)h(the)f(c)o(hoice)g(of)h
(the)g(\014rst-)131 1775 y(lev)o(el)e(cac)o(he)h(do)q(es)h(not)g(ha)o
(v)o(e)f(signi\014can)o(t)g(impact)f(on)i(the)g(p)q(erformance)e(of)i
(R)o(C)g(on)g(all)f(our)131 1865 y(applications)e(except)f(Radix.)30
b(The)19 b(impact)e(of)j(the)f(v)m(arious)g(optimizations)f(with)h
(\014rst-lev)o(el)131 1955 y(write-bac)o(k)d(cac)o(hes)f(is)h
(qualitativ)o(ely)e(similar)g(to)j(that)g(with)f(write-through)h(cac)o
(hes.)204 2048 y(F)l(or)e(a)f(giv)o(en)g(R)o(C)g(con\014guration,)h
(Radix)f(sees)g(a)h(signi\014can)o(t)f(reduction)f(in)h(execution)f
(time)131 2138 y(b)o(y)j(replacing)f(write-through)i(cac)o(hes)e(with)h
(write-bac)o(k)g(cac)o(hes.)k(The)c(di\013erence)f(arises)h(with)131
2228 y(Radix)f(only)f(b)q(ecause)h(it)g(has)g(a)g(burst)o(y)g
(irregular)f(write)g(pattern)h(whic)o(h)g(o)o(v)o(erwhelms)d(the)i
(sec-)131 2319 y(ondary)k(cac)o(he.)23 b(Ev)o(en)o(tually)l(,)15
b(writes)h(to)i(remote)d(data)j(\014ll)e(up)h(the)g(MSHRs,)f(causing)i
(bac)o(kup)131 2409 y(of)13 b(subsequen)o(t)f(requests,)h(including)f
(write-throughs)h(from)f(L1.)21 b(This)12 b(resource)h(bac)o(kup)f(ev)o
(en-)131 2499 y(tually)i(reac)o(hes)h(in)o(to)f(the)h(L1)h(and)f(the)g
(pro)q(cessor)h(memory)c(unit,)i(adding)i(con)o(ten)o(tion)e(to)h(b)q
(oth)131 2589 y(reads)j(and)g(memory)c(writes.)24 b(With)17
b(an)h(L1)g(write-bac)o(k)e(cac)o(he,)g(man)o(y)g(writes)h(hit)g(in)g
(the)g(L1;)131 2680 y(since)j(these)g(writes)f(do)i(not)g(propagate)g
(to)g(the)f(L2,)h(they)f(reliev)o(e)e(some)h(of)h(the)g(con)o(ten)o
(tion)p eop
%%Page: 39 45
39 44 bop 1882 72 a Fi(39)131 222 y(and)17 b(saturation)g(presen)o(t)f
(in)f(the)h(write-through)h(con\014guration.)22 b(Erle,)15
b(Mp3d)i(and)f(LU)h(sho)o(w)131 312 y(a)g(marginal)e(degradation)i(in)f
(p)q(erformance)f(when)h(replacing)g(a)h(write-through)f(cac)o(he)g
(with)g(a)131 403 y(write-bac)o(k)i(cac)o(he.)28 b(The)18
b(reason)i(is)e(that)h(our)g(write-through)h(cac)o(he)d(is)i(a)g
(no-write-allo)q(cate)131 493 y(cac)o(he)g(while)g(the)h(write-bac)o(k)
f(cac)o(he)g(is)h(a)g(write-allo)q(cate)f(cac)o(he;)i(bringing)f(the)f
(writes)h(in)o(to)131 583 y(the)c(\014rst-lev)o(el)f(write-bac)o(k)g
(cac)o(he)h(exacerbate)f(con\015icts)h(within)g(the)g(cac)o(he.)131
739 y Fg(4.2.3)55 b(Summary)17 b(for)h(R)n(C)131 861
y Fi(F)l(or)f(our)f(applications,)g(the)g(optimizations)e(used)j(in)e
(R)o(C)h(do)h(not)g(pro)o(vide)e(m)o(uc)o(h)f(b)q(ene\014t;)i(the)131
952 y(b)q(est)i(impro)o(v)o(em)o(en)o(t)d(in)i(execution)g(time)e(w)o
(as)k(6.1\045)f(for)g(W)l(ater.)26 b(F)l(or)18 b(four)g(applications,)g
(the)131 1042 y(optimizations)i(did)h(not)g(mak)o(e)e(a)j(di\013erence)
e(or)h(resulted)g(in)f(a)i(p)q(erformance)e(degradation.)131
1132 y(Th)o(us,)c(our)g(exp)q(erimen)o(ts)c(indicate)j(that)h(for)f(R)o
(C,)g(the)g(cost)h(of)g(the)f(on-c)o(hip)g(hardw)o(are)h(for)g(the)131
1223 y(optimizations)d(ma)o(y)f(not)i(b)q(e)g(justi\014ed.)20
b(Regarding)14 b(L1)h(cac)o(he)e(write)g(p)q(olicy)l(,)g(our)h(results)
g(sho)o(w)131 1313 y(that)21 b(except)f(for)h(one)f(application,)h
(write-through)h(L1)f(cac)o(hes)f(p)q(erformed)f(comparable)h(to)131
1403 y(write-bac)o(k)c(L1)h(cac)o(hes)e(for)i(R)o(C.)131
1581 y Fl(4.3)66 b(Comparing)23 b(SC)g(and)f(R)n(C)131
1703 y Fi(Our)e(results)g(so)h(far)f(sho)o(w)g(that)h(for)f(our)g
(applications,)h(the)f(simplest)e(R)o(C)h(implem)o(en)o(tation)131
1793 y(outp)q(erforms)f(the)g(most)g(optimized)d(SC.)k(This)f(is)g(esp)
q(ecially)f(pronounced)h(in)g(the)g(case)g(with)131 1884
y(write-through)g(L1)f(cac)o(hes,)f(where)g(simple)e(R)o(C)j(pro)o
(vides)f(o)o(v)o(er)g(a)h(factor)g(of)f(t)o(w)o(o)h(sp)q(eedup)g(for)
131 1974 y(FFT)f(and)h(LU,)e(a)i(sp)q(eedup)f(of)h(1.5)f(or)g(more)f
(for)i(Erlebac)o(her,)d(Radix)i(and)g(Mp3d.)22 b(\(In)16
b(W)l(ater,)131 2064 y(SC)22 b(gets)g(to)g(within)f(5\045)h(of)g(R)o
(C.\))f(The)h(p)q(erformance)e(di\013erence)h(b)q(et)o(w)o(een)g(SC)h
(and)g(R)o(C)f(is)131 2154 y(primarily)14 b(caused)j(b)o(y)f(write)g
(latencies)g(in)g(SC)h(that)g(hardw)o(are)g(prefetc)o(hing)e(and)j(sp)q
(eculativ)o(e)131 2245 y(reads)f(are)f(unable)g(to)h(hide)f(for)g
(reasons)h(discussed)g(in)e(Section)h(4.1.)204 2335 y(In)22
b(the)f(case)g(of)h(write-bac)o(k)f(L1)h(cac)o(hes,)g(the)f(p)q
(erformance)f(impro)o(v)o(em)o(en)o(t)e(of)k(R)o(C)f(o)o(v)o(er)131
2425 y(SC)e(is)f(less)f(dramatic,)g(but)h(still)f(signi\014can)o(t.)27
b(Tw)o(o)18 b(applications)g(\(Radix)g(and)h(Mp3d\))f(see)g(a)131
2516 y(sp)q(eedup)g(of)g(1.5)g(or)f(more,)f(and)i(t)o(w)o(o)g(other)f
(applications)h(\(LU)f(and)h(FFT\))f(see)g(a)h(sp)q(eedup)g(of)131
2606 y(more)13 b(than)i(1.25.)22 b(W)l(ater)14 b(and)h(Erle)f(sho)o(w)h
(comparable)f(p)q(erformance)f(with)h(SC)h(and)g(R)o(C)g(\(R)o(C)131
2696 y(has)k(sp)q(eedups)g(of)g(1.07)g(and)g(1.13)g(resp)q(ectiv)o
(ely\).)25 b(The)19 b(di\013erence)e(in)h(the)g(results)g(for)h(write-)
p eop
%%Page: 40 46
40 45 bop 1882 72 a Fi(40)131 222 y(through)23 b(and)g(write-bac)o(k)e
(L1)j(cac)o(hes)d(arises)h(b)q(ecause)h(SC)f(v)m(arian)o(ts)h(impro)o
(v)o(e)c(in)j(absolute)131 312 y(cycle)13 b(coun)o(t)h(from)f
(write-through)h(to)h(write-bac)o(k,)e(while)g(the)h(absolute)g(cycle)f
(coun)o(ts)h(seen)g(b)o(y)131 403 y(R)o(C)i(systems)f(sta)o(y)i(the)f
(same)f(in)h(b)q(oth)h(con\014gurations,)g(except)e(for)i(Radix.)204
494 y(Th)o(us,)i(while)e(SC)i(needs)e(a)i(write-bac)o(k)e(cac)o(he)h
(for)g(b)q(est)h(p)q(erformance,)e(the)g(p)q(erformance)131
584 y(of)e(R)o(C)e(is)h(largely)g(indep)q(enden)o(t)f(of)h(cac)o(he)f
(write)h(p)q(olicy)l(.)19 b(Accoun)o(ting)14 b(for)g(p)q(ossible)g
(additional)131 674 y(latencies)k(of)h(ha)o(ving)g(a)g(write-bac)o(k)f
(cac)o(he,)g(the)h(gap)h(b)q(et)o(w)o(een)e(R)o(C)g(\(whic)o(h)g(can)i
(run)f(just)g(as)131 764 y(w)o(ell)c(on)i(a)g(write-through)h(L1)f(cac)
o(he\))f(and)h(a)g(high-p)q(erformance)f(SC)g(\(whic)o(h)g(needs)h(a)g
(write-)131 855 y(bac)o(k)e(L1)i(cac)o(he)d(for)i(b)q(est)g(results\))f
(ma)o(y)f(increase)h(further.)20 b(Finally)l(,)14 b(either)h
(write-through)h(or)131 945 y(write-bac)o(k)e(primary)g(cac)o(hes)g
(with)h(m)o(ultiple)d(cycle)h(latencies)h(are)h(also)g(lik)o(ely)e(to)i
(increase)g(the)131 1035 y(gap)i(b)q(et)o(w)o(een)f(SC)g(and)h(R)o(C.)
131 1215 y Fl(4.4)66 b(Impact)23 b(of)f(a)g(More)g(Aggressiv)n(e)f
(Proto)r(col)131 1338 y Fi(As)f(discussed)g(in)f(Section)g(3.1.1,)i(to)
f(mo)q(del)e(a)j(proto)q(col)f(with)g(reasonable)g(complexit)o(y)l(,)d
(our)131 1428 y(cac)o(hes)f(dela)o(y)e(o)o(wnership)i(requests)g(for)g
(writes)f(to)i(lines)e(with)g(p)q(ending)i(shared)f(reads.)21
b(Th)o(us,)131 1518 y(a)d(write-prefetc)o(h)f(seeking)g(to)h(obtain)g
(o)o(wnership)g(of)g(a)g(cac)o(he)f(line)g(w)o(ould)h(b)q(e)g(dela)o(y)
o(ed)e(if)i(the)131 1609 y(cac)o(he)i(had)i(an)f(earlier)f(read)h(miss)
f(to)h(the)g(same)f(line.)35 b(Although)21 b(this)g(implem)o(e)o(n)o
(tation)d(is)131 1699 y(represen)o(tativ)o(e)f(of)j(man)o(y)d(curren)o
(t)i(systems,)f(a)h(more)f(aggressiv)o(e)h(system)f(could)h(allo)o(w)f
(suc)o(h)131 1789 y(o)o(wnership)d(requests)f(to)h(b)q(e)g(sen)o(t)f
(on)h(to)g(the)f(directory)g(in)g(parallel)g(with)g(the)g(outstanding)i
(de-)131 1880 y(mand)c(read)h(access.)20 b(Ho)o(w)o(ev)o(er,)11
b(the)i(system)e(w)o(ould)i(no)o(w)g(need)g(to)g(handle)g(p)q(ossible)g
(races)f(from)131 1970 y(net)o(w)o(ork)19 b(reordering)f(at)h(the)g
(directory)f(and)i(cac)o(he;)f(this)f(aggressiv)o(e)h(system)f(ma)o(y)f
(impro)o(v)o(e)131 2060 y(the)12 b(o)o(v)o(erlap)f(of)i(o)o(wnership)f
(requests,)g(but)g(at)g(the)g(cost)h(of)f(added)g(design)h(complexit)o
(y)-5 b(.)17 b(Suc)o(h)12 b(an)131 2150 y(enhancemen)o(t)i(ma)o(y)g(ha)
o(v)o(e)g(an)j(impact)c(on)k(applications)e(with)h(migratory)e
(read-write)i(sharing)131 2241 y(suc)o(h)i(as)h(W)l(ater)g(and)g(MP3D,)
f(or)h(on)g(applications)f(with)h(pro)q(ducer-consumer)e(sharing)i(suc)
o(h)131 2331 y(as)d(Erlebac)o(her)f(and)h(LU)f(where)g(the)g(pro)q
(ducer)h(reads)f(the)h(old)f(v)m(alue)g(of)h(the)f(data)h(b)q(efore)g
(pro-)131 2421 y(ducing)f(a)f(new)h(v)m(alue.)548 2403
y Fe(k)588 2421 y Fi(Ho)o(w)o(ev)o(er,)d(this)j(proto)q(col)g
(enhancemen)o(t)d(will)h(not)i(ha)o(v)o(e)f(m)o(uc)o(h)e(impact)p
131 2478 450 2 v 131 2521 a Fd(k)150 2536 y Fc(In)18
b(Erlebac)o(her,)g(some)f(writes)h(follo)o(wing)c(reads)k(to)f(the)h
(same)e(w)o(ord)i(access)h(non-b)q(oundary)d(planes)i(in)f(the)131
2585 y(3-D)d(arra)o(y;)g(suc)o(h)i(planes)f(are)g(accessed)i(b)o(y)d
(only)g(one)h(pro)q(cessor.)22 b(F)m(or)14 b(suc)o(h)h(accesses,)i(a)e
(four)f(state)h(proto)q(col)131 2635 y(with)f(a)g(v)n(alid-exclusiv)o
(e)f(state)i(can)g(get)g(b)q(ene\014ts)h(similar)11 b(to)j(a)g(proto)q
(col)h(that)f(o)o(v)o(erlaps)g(read)h(and)f(o)o(wnership)131
2685 y(requests)i(to)e(the)g(same)f(line.)p eop
%%Page: 41 47
41 46 bop 1882 72 a Fi(41)256 422 y
 11840716 9472573 1710325 657817 23681433 19602964 startTexFig
 256 422 a
%%BeginDocument: Figures/AggProt/ERLEAggProt_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
337.846 72 S9
[] 16.800000 SL
337.846 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 239.353 M9
gsave 1.000000 G9
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 247.43 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 128.536 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 236.911 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 224.89 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 147.694 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 235.597 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 228.271 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 154.08 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 230.901 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 223.951 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 163.471 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 216 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 360 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(ERLE) 0 216 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 328.985 264.146 TXR
(Memory) 0 328.985 253.816 TXR
(CPU) 0 328.985 241.419 TXR
13 /Helvetica SetTxt
(SC+SR) 0 105.231 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 105.231 261.704 TXC
13 /Helvetica SetTxt
(RC+SR) 0 149.538 59.6035 TXC
10 /Helvetica SetTxt
(87.8) 0 149.538 238.79 TXC
13 /Helvetica SetTxt
(SC+SR) 0 193.846 59.6035 TXC
10 /Helvetica SetTxt
(87.1) 0 193.846 237.475 TXC
13 /Helvetica SetTxt
(RC+SR) 0 238.154 59.6035 TXC
10 /Helvetica SetTxt
(84.6) 0 238.154 232.779 TXC
16 /Helvetica SetTxt
() 0 216 12 TXC
12 /Helvetica SetTxt
() 0 328.985 251.546 TXR
() 0 328.985 241.216 TXR
() 0 328.985 228.819 TXR
13 /Helvetica SetTxt
(base) 0 105.231 45.9535 TXC
10 /Helvetica SetTxt
() 0 105.231 251.204 TXC
13 /Helvetica SetTxt
(base ) 0 149.538 45.9535 TXC
10 /Helvetica SetTxt
() 0 149.538 228.29 TXC
13 /Helvetica SetTxt
(agg) 0 193.846 45.9535 TXC
10 /Helvetica SetTxt
() 0 193.846 226.975 TXC
13 /Helvetica SetTxt
(agg) 0 238.154 45.9535 TXC
10 /Helvetica SetTxt
() 0 238.154 222.279 TXC
13 /Helvetica SetTxt
() 0 105.231 32.3035 TXC
() 0 149.538 32.3035 TXC
() 0 193.846 32.3035 TXC
() 0 238.154 32.3035 TXC
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1056 422 a
 11840716 9472573 1710325 657817 23681433 19602964 startTexFig
 1056 422 a
%%BeginDocument: Figures/AggProt/ERLEAggProt_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
102.857 72 S9
[] 16.800000 SL
102.857 272.187 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 257.007 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 190.911 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 190.911 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
86.4 170.354 S9
[] 0.600000 SL
119.314 170.354 M9
D9
102.857 72 S9
[] 16.800000 SL
102.857 170.354 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 146.952 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 201.98 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 201.98 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 201.98 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 201.98 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
127.543 201.98 S9
[] 0.600000 SL
160.457 201.98 M9
D9
144 72 S9
[] 16.800000 SL
144 201.98 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 175.414 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 73.5813 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 73.5813 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 197.236 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 192.492 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 184.269 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 184.269 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
168.686 164.978 S9
[] 0.600000 SL
201.6 164.978 M9
D9
185.143 72 S9
[] 16.800000 SL
185.143 164.978 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 142.524 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 72 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 173.517 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 173.517 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 173.517 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 173.517 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
209.829 173.517 S9
[] 0.600000 SL
242.743 173.517 M9
D9
226.286 72 S9
[] 16.800000 SL
226.286 173.517 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 151.695 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 74.2138 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 74.2138 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 279.461 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 268.392 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 257.64 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 246.887 M9
gsave 0.950000 G9
D9
grestore
339.429 236.135 S9
D9
339.429 72 S9
[] 16.800000 SL
339.429 236.135 M9
gsave 1.000000 G9
D9
grestore
314.743 201.663 S9
[] 0.600000 SL
339.429 201.663 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 87.8126 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 83.6126 TXR
12 /Helvetica SetTxt
(|) -90 72 103.625 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 99.4252 TXR
12 /Helvetica SetTxt
(|) -90 72 119.438 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 115.238 TXR
12 /Helvetica SetTxt
(|) -90 72 135.25 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 131.05 TXR
12 /Helvetica SetTxt
(|) -90 72 151.063 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 146.863 TXR
12 /Helvetica SetTxt
(|) -90 72 166.876 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 162.676 TXR
12 /Helvetica SetTxt
(|) -90 72 182.688 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 178.488 TXR
12 /Helvetica SetTxt
(|) -90 72 198.501 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 194.301 TXR
12 /Helvetica SetTxt
(|) -90 72 214.313 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 210.113 TXR
12 /Helvetica SetTxt
(|) -90 72 230.126 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 225.926 TXR
12 /Helvetica SetTxt
(|) -90 72 245.939 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 241.739 TXR
12 /Helvetica SetTxt
(|) -90 72 261.751 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 257.551 TXR
12 /Helvetica SetTxt
(|) -90 72 277.564 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 273.364 TXR
14 /Helvetica SetTxt
() 0 216 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 360 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(ERLE) 0 216 28.6735 TXC
13 /Helvetica SetTxt
(SC+SR) 0 102.857 55.8712 TXC
10 /Helvetica SetTxt
(63.3) 0 102.857 276.299 TXC
13 /Helvetica SetTxt
(RC+SR) 0 144 55.8712 TXC
10 /Helvetica SetTxt
(41.1) 0 144 206.407 TXC
13 /Helvetica SetTxt
(SC+SR) 0 185.143 55.8712 TXC
10 /Helvetica SetTxt
(39.6) 0 185.143 201.663 TXC
13 /Helvetica SetTxt
(RC+SR) 0 226.286 55.8712 TXC
10 /Helvetica SetTxt
(32.1) 0 226.286 177.944 TXC
12 /Helvetica SetTxt
(remote) 0 329.143 272.82 TXR
(local) 0 329.143 262.067 TXR
(L2) 0 329.143 251.315 TXR
(L1) 0 329.143 240.562 TXR
(Writes) 0 339.429 205.775 TXR
(Reads) 0 339.429 190.911 TXR
16 /Helvetica SetTxt
() 0 216 11.8735 TXC
13 /Helvetica SetTxt
(base) 0 102.857 42.2212 TXC
10 /Helvetica SetTxt
() 0 102.857 265.799 TXC
13 /Helvetica SetTxt
(base) 0 144 42.2212 TXC
10 /Helvetica SetTxt
() 0 144 195.907 TXC
13 /Helvetica SetTxt
(agg) 0 185.143 42.2212 TXC
10 /Helvetica SetTxt
() 0 185.143 191.163 TXC
13 /Helvetica SetTxt
(agg) 0 226.286 42.2212 TXC
10 /Helvetica SetTxt
() 0 226.286 167.444 TXC
12 /Helvetica SetTxt
() 0 329.143 260.22 TXR
() 0 329.143 249.467 TXR
() 0 329.143 238.715 TXR
() 0 329.143 227.962 TXR
() 0 339.429 193.175 TXR
() 0 339.429 178.311 TXR
13 /Helvetica SetTxt
() 0 102.857 28.5712 TXC
() 0 144 28.5712 TXC
() 0 185.143 28.5712 TXC
() 0 226.286 28.5712 TXC
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 256 1040 a
 11840716 9472573 1710325 657817 23681433 19602964 startTexFig
 256 1040 a
%%BeginDocument: Figures/AggProt/MP3DAggProt_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
337.846 72 S9
[] 16.800000 SL
337.846 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 239.353 M9
gsave 1.000000 G9
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 252.313 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 77.0713 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 189.203 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 185.635 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 79.513 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 225.266 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 217.377 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 78.3861 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 184.696 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 178.497 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 80.64 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 216 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 360 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(MP3D) 0 216 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 328.985 264.146 TXR
(Memory) 0 328.985 253.816 TXR
(CPU) 0 328.985 241.419 TXR
13 /Helvetica SetTxt
(SC+SR) 0 105.231 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 105.231 261.704 TXC
13 /Helvetica SetTxt
(RC+SR) 0 149.538 59.6035 TXC
10 /Helvetica SetTxt
(62.4) 0 149.538 191.082 TXC
13 /Helvetica SetTxt
(SC+SR) 0 193.846 59.6035 TXC
10 /Helvetica SetTxt
(81.6) 0 193.846 227.144 TXC
13 /Helvetica SetTxt
(RC+SR) 0 238.154 59.6035 TXC
10 /Helvetica SetTxt
(60.0) 0 238.154 186.574 TXC
16 /Helvetica SetTxt
() 0 216 12 TXC
12 /Helvetica SetTxt
() 0 328.985 251.546 TXR
() 0 328.985 241.216 TXR
() 0 328.985 228.819 TXR
13 /Helvetica SetTxt
(base) 0 105.231 45.9535 TXC
10 /Helvetica SetTxt
() 0 105.231 251.204 TXC
13 /Helvetica SetTxt
(base ) 0 149.538 45.9535 TXC
10 /Helvetica SetTxt
() 0 149.538 180.582 TXC
13 /Helvetica SetTxt
(agg) 0 193.846 45.9535 TXC
10 /Helvetica SetTxt
() 0 193.846 216.644 TXC
13 /Helvetica SetTxt
(agg) 0 238.154 45.9535 TXC
10 /Helvetica SetTxt
() 0 238.154 176.074 TXC
13 /Helvetica SetTxt
() 0 105.231 32.3035 TXC
() 0 149.538 32.3035 TXC
() 0 193.846 32.3035 TXC
() 0 238.154 32.3035 TXC
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1056 1040 a
 11840716 9472573 1710325 657817 23681433 19602964 startTexFig
 1056 1040 a
%%BeginDocument: Figures/AggProt/MP3DAggProt_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
102.857 72 S9
[] 16.800000 SL
102.857 277.013 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 145.392 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 142.315 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 142.315 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
86.4 139.019 S9
[] 0.600000 SL
119.314 139.019 M9
D9
102.857 72 S9
[] 16.800000 SL
102.857 139.019 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 76.8342 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 72.4395 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 196.151 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 196.151 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 196.151 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 196.151 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
127.543 196.151 S9
[] 0.600000 SL
160.457 196.151 M9
D9
144 72 S9
[] 16.800000 SL
144 196.151 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 77.9329 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 72.8789 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 72.2197 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 234.604 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 155.499 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 155.06 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 155.06 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
168.686 151.325 S9
[] 0.600000 SL
201.6 151.325 M9
D9
185.143 72 S9
[] 16.800000 SL
185.143 151.325 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 79.0315 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 72.2197 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 72 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 186.482 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 186.482 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 186.482 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 186.482 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
209.829 186.482 S9
[] 0.600000 SL
242.743 186.482 M9
D9
226.286 72 S9
[] 16.800000 SL
226.286 186.482 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 79.471 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 72.8789 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 72.2197 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 279.211 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 268.444 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 257.677 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 246.909 M9
gsave 0.950000 G9
D9
grestore
339.429 236.142 S9
D9
339.429 72 S9
[] 16.800000 SL
339.429 236.142 M9
gsave 1.000000 G9
D9
grestore
314.743 201.644 S9
[] 0.600000 SL
339.429 201.644 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 82.9868 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 78.7868 TXR
12 /Helvetica SetTxt
(|) -90 72 93.9736 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 89.7736 TXR
12 /Helvetica SetTxt
(|) -90 72 104.96 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 100.76 TXR
12 /Helvetica SetTxt
(|) -90 72 115.947 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 111.747 TXR
12 /Helvetica SetTxt
(|) -90 72 126.934 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 122.734 TXR
12 /Helvetica SetTxt
(|) -90 72 137.921 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 133.721 TXR
12 /Helvetica SetTxt
(|) -90 72 148.907 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 144.707 TXR
12 /Helvetica SetTxt
(|) -90 72 159.894 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 155.694 TXR
12 /Helvetica SetTxt
(|) -90 72 170.881 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 166.681 TXR
12 /Helvetica SetTxt
(|) -90 72 181.868 TXC
10 /Helvetica-Bold SetTxt
(50) 0 67 177.668 TXR
12 /Helvetica SetTxt
(|) -90 72 192.855 TXC
10 /Helvetica-Bold SetTxt
(55) 0 67 188.655 TXR
12 /Helvetica SetTxt
(|) -90 72 203.841 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 199.641 TXR
12 /Helvetica SetTxt
(|) -90 72 214.828 TXC
10 /Helvetica-Bold SetTxt
(65) 0 67 210.628 TXR
12 /Helvetica SetTxt
(|) -90 72 225.815 TXC
10 /Helvetica-Bold SetTxt
(70) 0 67 221.615 TXR
12 /Helvetica SetTxt
(|) -90 72 236.802 TXC
10 /Helvetica-Bold SetTxt
(75) 0 67 232.602 TXR
12 /Helvetica SetTxt
(|) -90 72 247.788 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 243.588 TXR
12 /Helvetica SetTxt
(|) -90 72 258.775 TXC
10 /Helvetica-Bold SetTxt
(85) 0 67 254.575 TXR
12 /Helvetica SetTxt
(|) -90 72 269.762 TXC
10 /Helvetica-Bold SetTxt
(90) 0 67 265.562 TXR
12 /Helvetica SetTxt
(|) -90 72 280.749 TXC
10 /Helvetica-Bold SetTxt
(95) 0 67 276.549 TXR
14 /Helvetica SetTxt
() 0 216 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 360 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(MP3D) 0 216 28.7121 TXC
13 /Helvetica SetTxt
(SC+SR) 0 102.857 55.5198 TXC
10 /Helvetica SetTxt
(93.3) 0 102.857 281.188 TXC
13 /Helvetica SetTxt
(RC+SR) 0 144 55.5198 TXC
10 /Helvetica SetTxt
(56.5) 0 144 200.545 TXC
13 /Helvetica SetTxt
(SC+SR) 0 185.143 55.5198 TXC
10 /Helvetica SetTxt
(74.0) 0 185.143 238.999 TXC
13 /Helvetica SetTxt
(RC+SR) 0 226.286 55.5198 TXC
10 /Helvetica SetTxt
(52.1) 0 226.286 190.877 TXC
12 /Helvetica SetTxt
(remote) 0 329.143 272.838 TXR
(local) 0 329.143 262.071 TXR
(L2) 0 329.143 251.084 TXR
(L1) 0 329.143 240.317 TXR
(Writes) 0 339.429 205.819 TXR
(Reads) 0 339.429 190.657 TXR
16 /Helvetica SetTxt
() 0 216 11.9121 TXC
13 /Helvetica SetTxt
(base) 0 102.857 41.8698 TXC
10 /Helvetica SetTxt
() 0 102.857 270.688 TXC
13 /Helvetica SetTxt
(base) 0 144 41.8698 TXC
10 /Helvetica SetTxt
() 0 144 190.045 TXC
13 /Helvetica SetTxt
(agg) 0 185.143 41.8698 TXC
10 /Helvetica SetTxt
() 0 185.143 228.499 TXC
13 /Helvetica SetTxt
(agg) 0 226.286 41.8698 TXC
10 /Helvetica SetTxt
() 0 226.286 180.377 TXC
12 /Helvetica SetTxt
() 0 329.143 260.238 TXR
() 0 329.143 249.471 TXR
() 0 329.143 238.484 TXR
() 0 329.143 227.717 TXR
() 0 339.429 193.219 TXR
() 0 339.429 178.057 TXR
13 /Helvetica SetTxt
() 0 102.857 28.2198 TXC
() 0 144 28.2198 TXC
() 0 185.143 28.2198 TXC
() 0 226.286 28.2198 TXC
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 256 1658 a
 11840716 9472573 1710325 657817 23681433 19602964 startTexFig
 256 1658 a
%%BeginDocument: Figures/AggProt/WATERAggProt_exec.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
337.846 72 S9
[] 16.800000 SL
337.846 272.41 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 262.08 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 251.75 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
337.846 72 S9
[] 16.800000 SL
337.846 239.353 M9
gsave 1.000000 G9
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 259.826 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 238.602 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
105.231 72 S9
[] 16.800000 SL
105.231 156.71 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 239.353 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 204.793 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
149.538 72 S9
[] 16.800000 SL
149.538 171.548 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 230.901 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 210.428 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
193.846 72 S9
[] 16.800000 SL
193.846 157.461 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 228.835 M9
gsave 0.500000 0.500000 0.500000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 200.473 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
238.154 72 S9
[] 16.800000 SL
238.154 171.548 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 109.565 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 105.365 TXR
12 /Helvetica SetTxt
(|) -90 72 147.13 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 142.93 TXR
12 /Helvetica SetTxt
(|) -90 72 184.696 TXC
10 /Helvetica-Bold SetTxt
(60) 0 67 180.496 TXR
12 /Helvetica SetTxt
(|) -90 72 222.261 TXC
10 /Helvetica-Bold SetTxt
(80) 0 67 218.061 TXR
12 /Helvetica SetTxt
(|) -90 72 259.826 TXC
10 /Helvetica-Bold SetTxt
(100) 0 67 255.626 TXR
14 /Helvetica SetTxt
() 0 216 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 360 42 TXR
( Normalized execution time) 90 40.3 288 TXR
16 /Helvetica SetTxt
(WATER) 0 216 28.8 TXC
12 /Helvetica SetTxt
(Synch) 0 328.985 264.146 TXR
(Memory) 0 328.985 253.816 TXR
(CPU) 0 328.985 241.419 TXR
13 /Helvetica SetTxt
(SC+SR) 0 105.231 59.6035 TXC
10 /Helvetica SetTxt
(100.0) 0 105.231 261.704 TXC
13 /Helvetica SetTxt
(RC+SR) 0 149.538 59.6035 TXC
10 /Helvetica SetTxt
(89.1) 0 149.538 241.231 TXC
13 /Helvetica SetTxt
(SC+SR) 0 193.846 59.6035 TXC
10 /Helvetica SetTxt
(84.6) 0 193.846 232.779 TXC
13 /Helvetica SetTxt
(RC+SR) 0 238.154 59.6035 TXC
10 /Helvetica SetTxt
(83.5) 0 238.154 230.713 TXC
16 /Helvetica SetTxt
() 0 216 12 TXC
12 /Helvetica SetTxt
() 0 328.985 251.546 TXR
() 0 328.985 241.216 TXR
() 0 328.985 228.819 TXR
13 /Helvetica SetTxt
(base) 0 105.231 45.9535 TXC
10 /Helvetica SetTxt
() 0 105.231 251.204 TXC
13 /Helvetica SetTxt
(base ) 0 149.538 45.9535 TXC
10 /Helvetica SetTxt
() 0 149.538 230.731 TXC
13 /Helvetica SetTxt
(agg) 0 193.846 45.9535 TXC
10 /Helvetica SetTxt
() 0 193.846 222.279 TXC
13 /Helvetica SetTxt
(agg) 0 238.154 45.9535 TXC
10 /Helvetica SetTxt
() 0 238.154 220.213 TXC
13 /Helvetica SetTxt
() 0 105.231 32.3035 TXC
() 0 149.538 32.3035 TXC
() 0 193.846 32.3035 TXC
() 0 238.154 32.3035 TXC
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 1056 1658 a
 11840716 9472573 1710325 657817 23681433 19602964 startTexFig
 1056 1658 a
%%BeginDocument: Figures/AggProt/WATERAggProt_mem.ps
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def



% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
102.857 72 S9
[] 16.800000 SL
102.857 265.778 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 187.111 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 185.778 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 185.778 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
86.4 140.444 S9
[] 0.600000 SL
119.314 140.444 M9
D9
102.857 72 S9
[] 16.800000 SL
102.857 140.444 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 76.8889 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 76.8889 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
102.857 72 S9
[] 16.800000 SL
102.857 75.5556 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 150.667 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 150.667 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 150.667 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 150.667 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
127.543 150.667 S9
[] 0.600000 SL
160.457 150.667 M9
D9
144 72 S9
[] 16.800000 SL
144 150.667 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 90.2222 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 88.8889 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
144 72 S9
[] 16.800000 SL
144 85.3333 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 197.333 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 195.556 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 195.556 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 195.556 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
168.686 148.889 S9
[] 0.600000 SL
201.6 148.889 M9
D9
185.143 72 S9
[] 16.800000 SL
185.143 148.889 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 76.8889 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 75.5556 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
185.143 72 S9
[] 16.800000 SL
185.143 75.5556 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 140.444 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 140.444 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 140.444 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 140.444 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
209.829 140.444 S9
[] 0.600000 SL
242.743 140.444 M9
D9
226.286 72 S9
[] 16.800000 SL
226.286 140.444 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 83.5556 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 82.2222 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
226.286 72 S9
[] 16.800000 SL
226.286 80.4444 M9
gsave 0.950000 0.950000 0.950000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 279.556 M9
gsave 0.000000 0.000000 0.000000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 268.444 M9
gsave 0.400000 0.400000 0.400000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 257.778 M9
gsave 0.700000 0.700000 0.700000 setrgbcolor
D9
grestore
339.429 72 S9
[] 16.800000 SL
339.429 247.111 M9
gsave 0.950000 G9
D9
grestore
339.429 236 S9
D9
339.429 72 S9
[] 16.800000 SL
339.429 236 M9
gsave 1.000000 G9
D9
grestore
314.743 201.778 S9
[] 0.600000 SL
339.429 201.778 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
(|) -90 72 72 TXC
10 /Helvetica-Bold SetTxt
(0) 0 67 67.8 TXR
12 /Helvetica SetTxt
(|) -90 72 94.2222 TXC
10 /Helvetica-Bold SetTxt
(5) 0 67 90.0222 TXR
12 /Helvetica SetTxt
(|) -90 72 116.444 TXC
10 /Helvetica-Bold SetTxt
(10) 0 67 112.244 TXR
12 /Helvetica SetTxt
(|) -90 72 138.667 TXC
10 /Helvetica-Bold SetTxt
(15) 0 67 134.467 TXR
12 /Helvetica SetTxt
(|) -90 72 160.889 TXC
10 /Helvetica-Bold SetTxt
(20) 0 67 156.689 TXR
12 /Helvetica SetTxt
(|) -90 72 183.111 TXC
10 /Helvetica-Bold SetTxt
(25) 0 67 178.911 TXR
12 /Helvetica SetTxt
(|) -90 72 205.333 TXC
10 /Helvetica-Bold SetTxt
(30) 0 67 201.133 TXR
12 /Helvetica SetTxt
(|) -90 72 227.556 TXC
10 /Helvetica-Bold SetTxt
(35) 0 67 223.356 TXR
12 /Helvetica SetTxt
(|) -90 72 249.778 TXC
10 /Helvetica-Bold SetTxt
(40) 0 67 245.578 TXR
12 /Helvetica SetTxt
(|) -90 72 272 TXC
10 /Helvetica-Bold SetTxt
(45) 0 67 267.8 TXR
14 /Helvetica SetTxt
() 0 216 10.4 TXC
[] 1.800000 SL
2 setlinecap
72 72 360 72 
L9
0 setlinecap
72 72 72 288 
L9
() 0 360 42 TXR
( Normalized memory overhead) 90 40.3 288 TXR
16 /Helvetica SetTxt
(WATER) 0 216 28.8889 TXC
13 /Helvetica SetTxt
(SC+SR) 0 102.857 56.4444 TXC
10 /Helvetica SetTxt
(43.6) 0 102.857 270.222 TXC
13 /Helvetica SetTxt
(RC+SR) 0 144 56.4444 TXC
10 /Helvetica SetTxt
(17.7) 0 144 154.667 TXC
13 /Helvetica SetTxt
(SC+SR) 0 185.143 56.4444 TXC
10 /Helvetica SetTxt
(28.2) 0 185.143 201.778 TXC
13 /Helvetica SetTxt
(RC+SR) 0 226.286 56.4444 TXC
10 /Helvetica SetTxt
(15.4) 0 226.286 144.889 TXC
12 /Helvetica SetTxt
(remote) 0 329.143 272.889 TXR
(local) 0 329.143 262.222 TXR
(L2) 0 329.143 251.111 TXR
(L1) 0 329.143 240.444 TXR
(Writes) 0 339.429 205.778 TXR
(Reads) 0 339.429 190.667 TXR
16 /Helvetica SetTxt
() 0 216 12.0889 TXC
13 /Helvetica SetTxt
(base) 0 102.857 42.7944 TXC
10 /Helvetica SetTxt
() 0 102.857 259.722 TXC
13 /Helvetica SetTxt
(base) 0 144 42.7944 TXC
10 /Helvetica SetTxt
() 0 144 144.167 TXC
13 /Helvetica SetTxt
(agg) 0 185.143 42.7944 TXC
10 /Helvetica SetTxt
() 0 185.143 191.278 TXC
13 /Helvetica SetTxt
(agg) 0 226.286 42.7944 TXC
10 /Helvetica SetTxt
() 0 226.286 134.389 TXC
12 /Helvetica SetTxt
() 0 329.143 260.289 TXR
() 0 329.143 249.622 TXR
() 0 329.143 238.511 TXR
() 0 329.143 227.844 TXR
() 0 339.429 193.178 TXR
() 0 339.429 178.067 TXR
13 /Helvetica SetTxt
() 0 102.857 29.1444 TXC
() 0 144 29.1444 TXC
() 0 185.143 29.1444 TXC
() 0 226.286 29.1444 TXC
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 360.000000 72.000000 360.000000 288.000000 72.000000 288.000000 newpath moveto lineto lineto lineto closepath clip
8 SetSym
initclip 
showpage
end
%%EndDocument

 endTexFig
 296 2319 a Fi(\(a\))16 b(Execution)g(time)e(comp)q(onen)o(ts)145
b(\(b\))16 b(Memory)e(time)g(comp)q(onen)o(ts)472 2461
y Fg(Figure)k(4.6)49 b Fi(E\013ect)16 b(of)g(aggressiv)o(e)g(coherence)
g(proto)q(col)p eop
%%Page: 42 48
42 47 bop 1882 72 a Fi(42)131 222 y(on)18 b(applications)g(suc)o(h)f
(as)h(Radix)g(or)g(FFT,)f(since)f(w)o(e)i(observ)o(e)f(that)h(these)f
(t)o(w)o(o)g(applications)131 312 y(do)e(not)f(see)g(dela)o(y)o(ed)f(o)
o(wnership)h(requests)f(in)h(the)g(k)o(ey)f(sections)g(of)i(their)e(co)
q(de.)21 b(LU)14 b(exhibits)f(a)131 403 y(high)j(L2)h(write)e(hit)h
(rate)g(of)g(more)f(than)h(95\045.)22 b(Consequen)o(tly)l(,)14
b(on)i(our)h(arc)o(hitecture,)d(dela)o(y)o(ed)131 493
y(o)o(wnership)j(requests)f(are)h(not)g(lik)o(ely)d(to)j(ha)o(v)o(e)f
(a)h(signi\014can)o(t)f(e\013ect)h(on)g(p)q(erformance.)k(In)16
b(this)131 583 y(section,)h(w)o(e)g(therefore)g(examine)f(the)h(three)g
(applications,)g(Erlebac)o(her,)g(W)l(ater,)g(and)h(Mp3d,)131
674 y(where)f(an)g(aggressiv)o(e)g(coherence)f(proto)q(col)i(is)f(lik)o
(ely)d(to)k(impact)d(p)q(erformance)h(to)h(study)h(the)131
764 y(impact)d(of)h(a)g(more)f(aggressiv)o(e)h(coherence)e(proto)q(col)
j(on)g(the)e(p)q(erformance)g(of)h(optimized)e(im-)131
854 y(plemen)o(tations)g(of)j(consistency)f(mo)q(dels)f(on)i(ILP)f(m)o
(ultipro)q(cessors.)204 946 y(W)l(e)23 b(did)h(not)f(sim)o(ulate)e(the)
i(ab)q(o)o(v)o(e)h(aggressiv)o(e)f(proto)q(col)h(b)q(ecause)g(of)f(its)
g(signi\014can)o(tly)131 1037 y(higher)16 b(complexit)o(y)-5
b(.)18 b(Instead,)e(to)f(appro)o(ximate)g(the)g(impact)f(of)i(suc)o(h)f
(a)h(system,)e(w)o(e)h(inserted)131 1127 y(\(b)o(y)e(hand\))g(explicit)
e(soft)o(w)o(are)i(exclusiv)o(e)e(prefetc)o(h)g(instructions)i(immedi)o
(ately)d(b)q(efore)j(all)f(read)131 1217 y(op)q(erations)21
b(that)g(are)f(so)q(on)h(follo)o(w)o(ed)e(b)o(y)h(a)g(write)g(to)g(the)
g(same)f(w)o(ord,)h(for)h(W)l(ater,)f(MP3D,)131 1308
y(and)i(Erlebac)o(her.)37 b(Figure)21 b(4.6)h(summarizes)d(our)j
(results)f(comparing)g(the)g(p)q(erformance)g(of)131
1398 y(the)15 b(three)g(applications)g(on)h(the)f(base)h(system)e(and)i
(a)f(system)f(with)h(an)h(aggressiv)o(e)f(coherence)131
1488 y(proto)q(col,)21 b(represen)o(ted)d(b)o(y)h Fa(agg)p
Fi(,)g(for)h(the)g(v)o(ersions)f(of)h(SC)g(and)g(R)o(C)f(that)h(supp)q
(ort)h(sp)q(ecula-)131 1578 y(tiv)o(e)16 b(read)h(execution)g(and)g
(hardw)o(are)h(write)f(prefetc)o(hing)f(\()p Fa(SC+SR)f
Fi(and)j Fa(RC+SR)d Fi(resp)q(ectiv)o(ely\).)131 1669
y(Figure)f(4.6\(b\))g(sho)o(ws)h(the)f(v)m(arious)h(comp)q(onen)o(ts)e
(of)i(the)f(memory)d(stall)j(time)e(in)i(eac)o(h)f(system.)131
1759 y(W)l(e)19 b(fo)q(cus)h(only)e(on)i(the)f(system)e(with)i(a)g
(\014rst-lev)o(el)f(write-bac)o(k)g(cac)o(he)g(since)g(the)h(results)g
(in)131 1849 y(Section)12 b(4.3)h(sho)o(w)g(that)g(write-bac)o(k)f(cac)
o(hes)f(signi\014can)o(tly)h(outp)q(erform)g(write-through)h(cac)o(hes)
131 1940 y(for)k(the)f(SC)g(impleme)o(n)o(tations.)204
2032 y(F)l(or)21 b(SC,)f(with)h(the)f(aggressiv)o(e)g(proto)q(col,)i
(all)e(three)g(applications)h(see)f(more)f(than)i(10\045)131
2122 y(impro)o(v)o(em)o(en)o(ts)f(in)i(execution)g(time)f(due)i(to)g
(reduced)f(write)h(latency)f(and)h(reduced)g(write-)131
2213 y(after-read)18 b(stalls)f(\(13\045)h(with)f(Erlebac)o(her,)f
(15\045)h(with)g(W)l(ater,)g(and)h(18\045)g(with)f(Erlebac)o(her\).)131
2303 y(F)l(or)f(R)o(C,)f(all)g(three)g(applications)h(see)f(smaller)f
(b)q(ene\014ts)h(\(less)h(than)g(6\045\))g(with)f(the)g(aggressiv)o(e)
131 2393 y(coherence)j(proto)q(col)i(since)e(R)o(C)h(already)g(hides)g
(write)f(latencies)g(e\013ectiv)o(ely)l(.)27 b(The)19
b(impro)o(v)o(e-)131 2483 y(men)o(ts)j(in)h(W)l(ater)h(are)f(due)h(to)g
(more)e(e\013ectiv)o(e)g(write)h(prefetc)o(hing)f(whic)o(h)h(leads)g
(to)h(faster)131 2574 y(releases)16 b(and)h(consequen)o(tly)e(faster)h
(acquires.)p eop
%%Page: 43 49
43 48 bop 1882 72 a Fi(43)204 222 y(Comparing)18 b(SC)g(and)h(R)o(C,)e
(w)o(e)g(\014nd)h(that)h(using)f(an)g(aggressiv)o(e)g(coherence)f
(proto)q(col)i(has)131 312 y(narro)o(w)o(ed)h(the)g(p)q(erformance)f
(gap)h(b)q(et)o(w)o(een)f(SC)h(and)h(R)o(C)e(b)o(y)h(reducing)f(SC's)h
(write)f(limita-)131 403 y(tions)e(on)h(all)e(the)g(three)g
(applications.)23 b(Nev)o(ertheless,)14 b(in)j(MP3D,)g(ev)o(en)e(with)i
(the)f(aggressiv)o(e)131 493 y(coherence)21 b(proto)q(col,)j(an)e(R)o
(C)g(implem)o(en)o(tation)d(using)k(the)e(base)i(coherence)e(proto)q
(col)h(still)131 583 y(sees)14 b(a)h(reduction)e(in)h(execution)f(time)
f(of)j(27\045)f(compared)f(to)i(the)f(optimized)d(implem)o(en)o(tation)
131 674 y(of)21 b(SC.)g(Erlebac)o(her)e(sho)o(ws)j(nearly)e(equal)g(p)q
(erformance)g(for)h(the)f(most)g(optimized)f(SC)i(and)131
764 y(simple)d(R)o(C)i(systems.)32 b(W)l(ater)20 b(stands)i(apart)f
(from)e(the)h(other)g(t)o(w)o(o)g(applications;)i(the)e(b)q(est)131
854 y(SC)g(actually)e(p)q(erforms)g Fh(b)n(etter)i Fi(than)f(the)g
(base)h(implem)o(e)o(n)o(tation)d(of)i(R)o(C.)f(Ev)o(en)g(though)j(the)
131 944 y(R)o(C)c(also)g(sees)g(b)q(ene\014ts)g(from)f(the)h(more)e
(aggressiv)o(e)i(proto)q(col)h(for)f(W)l(ater,)g(the)f(b)q(est)i(R)o(C)
e(still)131 1035 y(p)q(erforms)g(comparable)f(to)h(SC)h(\(within)f
(1\045\).)204 1125 y(Ov)o(erall,)11 b(these)h(results)f(suggest)i(that)
f(the)g(gap)g(b)q(et)o(w)o(een)f(SC)h(and)h(R)o(C)e(p)q(erformance)g
(can)h(b)q(e)131 1215 y(decreased)f(b)o(y)g(adding)h(complexit)o(y)c
(to)k(the)f(cac)o(he-coherence)f(proto)q(col)i(for)f(some)g
(applications;)131 1306 y(ho)o(w)o(ev)o(er,)i(a)i(signi\014can)o(t)f
(gap)i(still)d(remains)g(for)h(sev)o(eral)g(applications)g(\(in)g
(applications)h(where)131 1396 y(this)h(optimization)d(is)j(not)g
(applicable)e(and)i(in)g(applications)f(where)g(this)h(optimization)d
(is)j(not)131 1486 y(su\016cien)o(t)c(to)i(equalize)e(the)h(p)q
(erformance)f(of)i(SC)f(and)h(R)o(C\).)f(F)l(urthermore,)f(R)o(C)h(do)q
(es)h(not)g(need)131 1577 y(the)i(additional)h(supp)q(ort)g(to)g(ac)o
(hiev)o(e)d(its)i(lev)o(el)e(of)j(p)q(erformance.)204
1667 y(Note)e(that)h(the)f(results)g(in)g(this)g(section)g(should)g
(not)h(b)q(e)f(in)o(terpreted)f(as)i(indicativ)o(e)d(of)j(the)131
1757 y(e\013ects)j(of)h(soft)o(w)o(are-con)o(trolled)e(prefetc)o(hing)g
(on)i(the)f(p)q(erformance)f(di\013erence)h(b)q(et)o(w)o(een)f(SC)131
1848 y(and)j(R)o(C.)e(W)l(e)h(insert)f(soft)o(w)o(are)i(exclusiv)o(e)c
(prefetc)o(hes)i Fh(imme)n(diately)i(b)n(efor)n(e)e Fi(all)h(read)g(op)
q(era-)131 1938 y(tions;)h(our)f(results)f(therefore)f(do)i(not)g(sho)o
(w)g(the)f(latency-hiding)g(b)q(ene\014ts)g(asso)q(ciated)h(with)131
2028 y(soft)o(w)o(are)15 b(prefetc)o(hing)e(in)i(the)f(previous)h
(section,)f(but)h(instead)f(only)h(appro)o(ximate)e(the)i(e\013ects)131
2119 y(of)i(remo)o(ving)e(write-after-read)i(stalls)f(with)h(an)g
(aggressiv)o(e)g(cac)o(he)e(coherence)h(proto)q(col.)23
b(The)131 2209 y(in)o(teraction)15 b(of)h(soft)o(w)o(are)h(prefetc)o
(hing)d(and)j(consistency)e(mo)q(dels)g(on)i(ILP)f(m)o(ultipro)q
(cessors)e(is)131 2299 y(discussed)i(elsewhere)f([32)q(].)131
2477 y Fl(4.5)66 b(Summary)131 2600 y Fi(This)22 b(c)o(hapter)f(presen)
o(ted)g(the)g(result)g(of)h(our)g(study)g(ev)m(aluating)g(the)f
(e\013ects)h(of)g(hardw)o(are-)131 2690 y(con)o(trolled)27
b(read)g(and)h(write)f(prefetc)o(hing,)h(and)g(the)f(e\013ects)g(of)h
(sp)q(eculativ)o(e)e(reads)h(with)p eop
%%Page: 44 50
44 49 bop 1882 72 a Fi(44)131 222 y(hardw)o(are-con)o(trolled)12
b(write)e(prefetc)o(hing.)19 b(W)l(e)11 b(found)h(that)g(for)g(SC,)g
(these)f(t)o(w)o(o)g(tec)o(hniques)f(en-)131 312 y(hanced)h(p)q
(erformance)f(considerably)h(\(giving)g(a)g(sp)q(eedup)h(of)f(o)o(v)o
(er)f(a)i(factor)f(of)g(2)h(in)e(some)h(cases\).)131
403 y(F)l(or)18 b(R)o(C,)g(ho)o(w)o(ev)o(er,)e(the)i(optimizations)f
(sho)o(w)o(ed)h(an)g(execution)f(time)f(impro)o(v)o(em)o(en)n(t)f
(greater)131 493 y(than)e(5\045)f(for)h(only)f(one)g(case.)20
b(The)12 b(simplest)e(R)o(C)i(implem)o(en)o(tation)d(signi\014can)o
(tly)j(outp)q(erforms)131 583 y(the)j(most)f(optimized)e(SC.)i(The)h
(di\013erence)f(in)g(p)q(erformance)f(b)q(et)o(w)o(een)h(the)h(t)o(w)o
(o)f(mo)q(dels,)g(ho)o(w-)131 674 y(ev)o(er,)h(dep)q(ends)h(on)h(the)f
(write)g(p)q(olicy)g(of)g(the)g(primary)f(cac)o(he)g(and)i(on)g(the)f
(complexit)o(y)d(of)k(the)131 764 y(cac)o(he-coherence)h(proto)q(col.)
31 b(F)l(our)19 b(our)h(fairly)e(aggressiv)o(e)h(base)g(cac)o
(he-coherence)f(proto)q(col,)131 854 y(the)e(simplest)e(R)o(C)i
(impleme)o(n)o(tation)e(signi\014can)o(tly)h(outp)q(erforms)h(the)g
(most)f(optimized)f(SC.)204 946 y(The)j(di\013erence)f(is)h(higher)g
(with)f(write-through)i(primary)d(cac)o(hes)i(than)g(with)g(write-bac)o
(k)131 1037 y(primary)f(cac)o(hes,)h(but)h(remains)e(signi\014can)o(t)h
(for)h(sev)o(eral)f(applications)g(in)h(b)q(oth)g(cases.)26
b(With)131 1127 y(a)21 b(more)e(complex)f(cac)o(he-coherence)h(proto)q
(col,)j(SC)f(ac)o(hiev)o(es)d(p)q(erformance)i(comparable)f(to)131
1217 y(R)o(C)f(for)g(t)o(w)o(o)g(applications,)g(but)g(a)g
(signi\014can)o(t)g(p)q(erformance)e(gap)j(remains)e(for)h(others.)26
b(The)131 1308 y(p)q(erformance)15 b(of)i(SC)g(is)f(highly)g(sensitiv)o
(e)f(to)h(cac)o(he)g(write)g(p)q(olicy)f(and)i(the)f(aggressiv)o(eness)
h(of)131 1398 y(the)f(cac)o(he-coherence)f(proto)q(col,)i(while)e(the)h
(p)q(erformance)f(of)i(R)o(C)f(is)g(generally)f(stable)h(across)131
1488 y(all)23 b(impleme)o(n)o(tations.)41 b(Ov)o(erall,)24
b(our)g(results)g(sho)o(w)g(that)g(R)o(C)g(hardw)o(are)g(has)h
(signi\014can)o(t)131 1578 y(p)q(erformance)19 b(b)q(ene\014ts)g(o)o(v)
o(er)g(SC)h(hardw)o(are,)g(and)h(at)f(the)f(same)f(time)g(requires)g
(less)i(system)131 1669 y(complexit)o(y)13 b(with)j(ILP)h(pro)q
(cessors.)p eop
%%Page: 45 51
45 50 bop 1882 72 a Fi(45)853 361 y Fm(Chapter)28 b(5)786
564 y(Related)e(W)-7 b(ork)131 774 y Fl(5.1)66 b(Consistency)23
b(Mo)r(dels)131 898 y Fi(A)c(n)o(um)o(b)q(er)e(of)i(consistency)f(mo)q
(dels)f(ha)o(v)o(e)h(b)q(een)h(prop)q(osed)h(in)e(the)h(literature)e
(or)i(ha)o(v)o(e)f(b)q(een)131 989 y(implem)o(en)o(te)o(d)c(on)j(real)f
(systems)f([1].)22 b(In)16 b(this)g(thesis,)g(w)o(e)g(consider)h(t)o(w)
o(o)f(consistency)g(mo)q(dels,)131 1079 y(sequen)o(tial)i(consistency)g
(\(SC\))h([23)q(])f(and)i(release)e(consistency)g(\(R)o(C\))h([14],)g
(to)h(represen)o(t)e(the)131 1169 y(tradeo\013)k(b)q(et)o(w)o(een)f
(programmabilit)o(y)d(and)k(p)q(erformance.)34 b(SC)22
b(represen)o(ts)e(the)h(most)g(in)o(tu-)131 1260 y(itiv)o(e)f
(consistency)h(mo)q(del)f(while)g(previous)h(studies)h(ha)o(v)o(e)e
(sho)o(wn)i(that)g(R)o(C)f(giv)o(es)g(the)g(b)q(est)131
1350 y(p)q(erformance)15 b(for)i(hardw)o(are)g(cac)o(he-coheren)o(t)d
(m)o(ultipro)q(cessor)h(systems.)131 1534 y Fl(5.2)66
b(Ev)l(aluation)25 b(of)d(Consistency)g(Mo)r(dels)131
1658 y Fi(Sev)o(eral)d(studies)g(ha)o(v)o(e)g(ev)m(aluated)h(the)f(p)q
(erformance)g(of)h(memory)d(consistency)i(mo)q(dels)f([11)q(,)131
1749 y(13)q(,)f(16)q(,)h(44].)26 b(This)18 b(thesis)f(presen)o(ts)h
(the)f(\014rst)h(execution-driv)o(en)e(sim)o(ulation)g(study)i(for)g
(con-)131 1839 y(sistency)c(mo)q(dels)f(for)i(aggressiv)o(e)g(ILP)f
(pro)q(cessors,)i(ev)m(aluating)f(t)o(w)o(o)f(p)q(erformance-enhancing)
131 1929 y(tec)o(hniques)e(for)i(consistency)f(mo)q(dels)g(used)g(in)h
(suc)o(h)f(pro)q(cessors.)21 b(Tw)o(o)14 b(previous)g(quan)o(titativ)o
(e)131 2019 y(ev)m(aluations)24 b(of)g(memory)d(consistency)i(mo)q
(dels)f(ha)o(v)o(e)h(used)h(relativ)o(ely)d(aggressiv)o(e)j(pro)q(ces-)
131 2110 y(sors.)39 b(Gharac)o(horlo)q(o)24 b(et)e(al.)f(studied)h
(simple)d(impleme)o(n)o(tations)h(of)i(SC)g(and)h(R)o(C;)e(further,)131
2200 y(their)15 b(study)g(w)o(as)h(trace-driv)o(en)d(\(as)j(opp)q(osed)
h(to)e(execution-driv)o(en\))e(and)j(did)f(not)g(accurately)131
2290 y(mo)q(del)j(the)h(e\013ects)f(of)h(sync)o(hronization)g(and)g
(net)o(w)o(ork)g(con)o(ten)o(tion)f([13].)29 b(Zuc)o(k)o(er)17
b(and)j(Baer)131 2381 y(studied)13 b(SC)h(and)g(R)o(C,)f(implem)o(en)n
(ting)e(SC)i(b)q(oth)i(in)e(a)g(straigh)o(tforw)o(ard)i(fashion)f(and)f
(also)h(with)131 2471 y(the)f(prefetc)o(hing)f(optimization;)g(ho)o(w)o
(ev)o(er,)g(the)h(pro)q(cessors)i(they)e(insp)q(ected)f(w)o(ere)h
(single-issue)131 2561 y(and)k(statically)e(sc)o(heduled)g([44)q(].)p
eop
%%Page: 46 52
46 51 bop 1882 72 a Fi(46)131 222 y Fl(5.3)66 b(Aggressiv)n(e)22
b(Implemen)n(tations)i(of)d(Sequen)n(tial)k(Consistency)131
347 y Fi(A)14 b(n)o(um)o(b)q(er)f(of)h(hardw)o(are)h(optimizations)e
(ha)o(v)o(e)h(b)q(een)g(prop)q(osed)i(in)e(the)g(literature)f(to)i
(enhance)131 437 y(the)21 b(p)q(erformance)e(of)i(implem)o(e)o(n)o
(tations)d(of)j(sequen)o(tial)e(consistency)l(.)34 b(Gharac)o(horlo)q
(o)22 b(et)e(al.)131 527 y(prop)q(osed)k(hardw)o(are-con)o(trolled)e
(non-binding)h(prefetc)o(hing)e(and)i(sp)q(eculativ)o(e)e(read)h
(execu-)131 617 y(tion)g(to)g(impro)o(v)o(e)d(the)i(p)q(erformance)f
(of)i(sequen)o(tial)f(consistency)f([12)q(].)37 b(Adv)o(e)20
b(and)i(Hill)e([3])131 708 y(prop)q(osed)e(an)f(implem)o(en)o(t)o
(ation)d(of)j(sequen)o(tial)e(consistency)h(that)h(can)f(alleviate)f
(some)h(of)h(the)131 798 y(latency)g(of)h(writes)g(b)o(y)f(allo)o(wing)
h(certain)f(op)q(erations)i(that)g(follo)o(w)e(the)h(write)f(to)i(b)q
(e)f(serviced)131 888 y(as)j(so)q(on)h(as)f(the)f(write)g(is)g
(serialized)f(\(as)i(opp)q(osed)h(to)f(w)o(aiting)f(for)h(all)e(in)o(v)
m(alidations)h(to)h(b)q(e)131 979 y(ac)o(kno)o(wledged\).)39
b(Other)21 b(studies)h(ha)o(v)o(e)g(prop)q(osed)h(implem)o(en)o
(tations)d(of)i(SC)h(that)f(use)h(the)131 1069 y(ordering)15
b(guaran)o(tees)h(of)f(restrictiv)o(e)d(net)o(w)o(ork)j(top)q(ologies)g
(to)h(reduce)e(the)g(write)h(latency)f(seen)131 1159
y(in)k(the)f(system)f([24].)25 b(Gharac)o(horlo)q(o)19
b(et)f(al.)25 b(discuss)18 b(a)g(tec)o(hnique)e(called)g(store)i
(bu\013ering)g(to)131 1249 y(impro)o(v)o(e)f(the)i(p)q(erformance)g(of)
g(SC)h(b)o(y)f(bu\013ering)h(writes)f(separately)g(and)h(stalling)g
(the)f(sys-)131 1340 y(tem)g(only)h(on)h(the)f(next)f(read)i(op)q
(eration)g(that)f(follo)o(ws)h(the)f(write)f(op)q(eration)i([11)q(].)32
b(In)20 b(this)131 1430 y(thesis,)d(w)o(e)g(study)h(the)f(p)q
(erformance)g(of)g(t)o(w)o(o)h(tec)o(hniques,)e(hardw)o(are)i(prefetc)o
(hing)e(and)i(sp)q(ec-)131 1520 y(ulativ)o(e)d(loads,)i(that)g(ha)o(v)o
(e)f(b)q(een)h(in)o(tegrated)f(in)o(to)g(commo)q(dit)o(y)e(micropro)q
(cessors)i(to)h(impro)o(v)o(e)131 1611 y(the)h(p)q(erformance)e(of)i
(sequen)o(tial)f(consistency)l(.)24 b(W)l(e)18 b(do)g(not)g(ev)m
(aluate)g(the)f(other)h(tec)o(hniques)131 1701 y(to)c(impro)o(v)o(e)d
(the)j(p)q(erformance)e(of)i(sequen)o(tial)e(consistency)h(since)g
(they)g(are)h(either)e(to)q(o)j(restric-)131 1791 y(tiv)o(e,)h(require)
g(more)g(aggressiv)o(e,)h(complex)e(system)g(impleme)o(n)o(tations,)g
(or)i(do)h(not)g(app)q(ear)g(to)131 1881 y(giv)o(e)e(signi\014can)o(t)f
(p)q(erformance)h(b)q(ene\014ts.)131 2065 y Fl(5.4)66
b(Prefetc)n(hing)131 2190 y Fi(There)13 b(has)g(b)q(een)g(substan)o
(tial)g(w)o(ork)f(in)h(prefetc)o(hing)e(for)i(m)o(ultipro)q(cessors)e
(\(e.g.,)h([6,)g(27)q(]\).)19 b(This)131 2280 y(pap)q(er)e(ev)m
(aluates)f(the)f(use)h(of)h(non-binding)f(hardw)o(are-con)o(trolled)g
(prefetc)o(hing)f(that)h(exploits)131 2370 y(an)g(aggressiv)o(e)f(pro)q
(cessor's)h(existing)f(instruction)g(windo)o(w,)g(to)h(enhance)f(the)g
(p)q(erformance)f(of)131 2461 y(consistency)20 b(mo)q(dels.)31
b(The)20 b(in)o(teraction)f(of)h(soft)o(w)o(are-con)o(trolled)f
(prefetc)o(hing)g(with)h(consis-)131 2551 y(tency)g(mo)q(dels)g(has)h
(b)q(een)g(studied)f(for)h(simpler)d(pro)q(cessors)k(with)f(blo)q(c)o
(king)f(reads)h([16,)f(11)q(].)131 2641 y(There)e(has)i(only)e(b)q(een)
g(one)h(study)g(on)g(the)f(in)o(teraction)g(of)h(soft)o(w)o(are)f
(prefetc)o(hing)f(with)i(con-)p eop
%%Page: 47 53
47 52 bop 1882 72 a Fi(47)131 222 y(sistency)22 b(mo)q(dels)f(on)i(ILP)
g(m)o(ultipro)q(cessors)e(with)h(non-blo)q(c)o(king)h(reads)g([32].)40
b(This)22 b(study)131 312 y(sho)o(w)o(ed)e(that)g(while)f(soft)o(w)o
(are)g(prefetc)o(hing)g(w)o(as)h(successful)f(in)g(reducing)g(the)h
(gap)g(b)q(et)o(w)o(een)131 403 y(the)f(p)q(erformance)e(of)i(memory)d
(consistency)i(mo)q(dels,)g(a)h(large)g(gap)h(still)d(remained)g(b)q
(et)o(w)o(een)131 493 y(the)f(simplest)e(R)o(C)i(and)h(most)f
(optimized)e(SC.)p eop
%%Page: 48 54
48 53 bop 1882 72 a Fi(48)853 361 y Fm(Chapter)28 b(6)822
564 y(Conclusions)131 752 y Fi(The)13 b(memory)c(consistency)j(mo)q
(del)g(of)h(a)f(shared-memory)f(m)o(ultipro)q(cessor)g(pla)o(ys)h(a)h
(k)o(ey)e(role)i(in)131 842 y(determining)g(system)g(p)q(oten)o(tial)h
(for)h(tolerating)g(latency)f(as)h(it)g(sp)q(eci\014es)f(the)g(exten)o
(t)g(to)h(whic)o(h)131 933 y(the)21 b(system)e(can)h(app)q(ear)i(to)f
(o)o(v)o(erlap)e(or)i(reorder)f(memory)e(op)q(erations.)35
b(Previous)20 b(studies)131 1023 y(with)d(shared-memory)e(m)o(ultipro)q
(cessors)h(ha)o(v)o(e)g(sho)o(wn)i(that)g(the)f(release)f(consistency)h
(mo)q(del)131 1113 y(\(R)o(C\))f(signi\014can)o(tly)e(outp)q(erforms)i
(sequen)o(tial)e(consistency)h(\(SC\),)h(though)h(at)f(the)f(cost)h(of)
g(in-)131 1204 y(creased)g(programming)f(complexit)o(y)l(.)j(Ho)o(w)o
(ev)o(er,)c(most)h(of)i(those)f(studies)h(assumed)e(statically)131
1294 y(sc)o(heduled)20 b(pro)q(cessors)h(with)g(blo)q(c)o(king)f
(reads,)h(and)g(all)f(assumed)g(simple)e(implem)o(en)o(tations)131
1384 y(of)e(the)f(consistency)f(mo)q(dels.)20 b(Curren)o(t)15
b(and)h(next)f(generation)g(micropro)q(cessors)g(aggressiv)o(ely)131
1474 y(exploit)i(instruction-lev)o(el)e(parallelism)g(\(ILP\))j(using)g
(metho)q(ds)f(suc)o(h)g(as)i(m)o(ultiple)14 b(issue,)j(dy-)131
1565 y(namic)i(sc)o(heduling,)i(and)g(non-blo)q(c)o(king)h(reads.)35
b(F)l(or)21 b(suc)o(h)f(pro)q(cessors,)j(t)o(w)o(o)e(optimizations)131
1655 y(ha)o(v)o(e)13 b(b)q(een)g(prop)q(osed)i(to)e(enhance)g(the)g(p)q
(erformance)g(of)g(consistency)g(mo)q(dels.)19 b(Qualitativ)o(ely)l(,)
131 1745 y(these)11 b(optimizations)f(ma)o(y)g(seem)g(to)i(bring)f(the)
h(p)q(erformance)e(of)i(SC)g(closer)f(to)g(R)o(C,)g(p)q(oten)o(tially)
131 1836 y(making)k(SC)i(more)e(attractiv)o(e)g(to)i(build)e(in)h
(hardw)o(are)h(for)f(its)g(easier)g(programmabilit)o(y)l(.)131
2019 y Fl(6.1)66 b(Thesis)22 b(Summary)131 2144 y Fi(This)13
b(thesis)f(pro)o(vides)g(the)h(\014rst)f(quan)o(titativ)o(e)f(ev)m
(aluation)i(of)g(v)m(arious)g(implem)o(en)o(tations)d(of)j(SC)131
2234 y(and)g(R)o(C)e(for)i(aggressiv)o(e)e(ILP)i(pro)q(cessors.)21
b(W)l(e)11 b(ev)m(aluated)h(the)g(e\013ects)f(of)i(hardw)o(are-con)o
(trolled)131 2325 y(read)27 b(and)h(write)f(prefetc)o(hing,)h(and)f
(the)g(e\013ects)g(of)g(sp)q(eculativ)o(e)f(reads)i(with)f(hardw)o
(are-)131 2415 y(con)o(trolled)18 b(write)g(prefetc)o(hing.)27
b(W)l(e)19 b(found)g(that)g(for)g(SC,)f(these)h(t)o(w)o(o)f(tec)o
(hniques)f(enhanced)131 2505 y(p)q(erformance)e(considerably)h
(\(giving)g(a)h(sp)q(eedup)f(of)h(o)o(v)o(er)e(a)i(factor)f(of)h(2)g
(in)e(some)h(cases\).)21 b(F)l(or)131 2595 y(R)o(C,)15
b(ho)o(w)o(ev)o(er,)f(the)h(optimizations)f(sho)o(w)o(ed)h(an)h
(execution)e(time)g(impro)o(v)o(em)o(e)o(n)o(t)e(greater)k(than)131
2686 y(5\045)i(for)h(only)e(one)i(case.)26 b(The)18 b(di\013erence)f
(in)h(p)q(erformance)f(b)q(et)o(w)o(een)g(the)h(t)o(w)o(o)g(mo)q(dels,)
f(ho)o(w-)p eop
%%Page: 49 55
49 54 bop 1882 72 a Fi(49)131 222 y(ev)o(er,)15 b(dep)q(ends)h(on)h
(the)f(write)g(p)q(olicy)g(of)g(the)g(primary)f(cac)o(he)g(and)i(on)g
(the)f(complexit)o(y)d(of)k(the)131 312 y(cac)o(he-coherence)11
b(proto)q(col.)21 b(F)l(or)13 b(our)h(fairly)d(aggressiv)o(e)i(base)g
(cac)o(he-coherence)f(proto)q(col,)i(the)131 403 y(simplest)j(R)o(C)i
(implem)o(en)o(tation)d(signi\014can)o(tly)i(outp)q(erforms)h(the)g
(most)f(optimized)f(SC.)i(The)131 493 y(di\013erence)c(is)g(higher)h
(with)f(write-through)i(primary)d(cac)o(hes)h(than)h(with)g(write-bac)o
(k)f(primary)131 583 y(cac)o(hes,)21 b(but)g(remains)f(signi\014can)o
(t)g(in)h(b)q(oth)h(cases)f(\(four)g(applications)g(sho)o(w)g(a)h(sp)q
(eedup)f(of)131 674 y(1.25)e(or)g(more)f(with)g(R)o(C)g(for)h(b)q(oth)g
(cac)o(he)f(con\014gurations\).)29 b(With)18 b(a)h(more)f(complex)e
(cac)o(he-)131 764 y(coherence)e(proto)q(col,)h(SC)h(ac)o(hiev)o(es)d
(p)q(erformance)g(comparable)h(to)h(R)o(C)g(for)g(t)o(w)o(o)g
(applications,)131 854 y(but)e(a)f(signi\014can)o(t)g(p)q(erformance)f
(gap)j(remains)c(for)j(others.)20 b(The)12 b(p)q(erformance)g(of)g(SC)h
(is)f(highly)131 944 y(sensitiv)o(e)g(to)i(cac)o(he)f(write)f(p)q
(olicy)h(and)h(the)g(aggressiv)o(eness)f(of)h(the)f(cac)o(he-coherence)
f(proto)q(col,)131 1035 y(while)k(the)g(p)q(erformance)g(of)h(R)o(C)f
(is)g(generally)g(stable)g(across)i(all)e(implem)o(en)n(tations.)k(Ov)o
(erall,)131 1125 y(our)25 b(results)f(sho)o(w)h(that)f(R)o(C)g(hardw)o
(are)h(has)g(signi\014can)o(t)f(p)q(erformance)f(b)q(ene\014ts)i(o)o(v)
o(er)e(SC)131 1215 y(hardw)o(are,)15 b(and)g(at)g(the)g(same)e(time)g
(requires)g(less)i(system)e(complexit)o(y)e(with)k(ILP)f(pro)q
(cessors.)131 1306 y(W)l(rite)21 b(latencies)g(that)i(hardw)o(are)f
(prefetc)o(hing)f(and)h(sp)q(eculativ)o(e)f(reads)h(do)g(not)h
(e\013ectiv)o(ely)131 1396 y(hide)14 b(remain)e(the)i(most)f(imp)q
(ortan)o(t)g(reason)i(for)f(the)g(p)q(erformance)f(gap)i(b)q(et)o(w)o
(een)e(SC)h(and)h(R)o(C.)131 1580 y Fl(6.2)66 b(F)-6
b(uture)25 b(W)-6 b(ork)131 1704 y Fg(Compiler)17 b(optimizations.)j
Fi(In)c(c)o(ho)q(osing)i(a)e(consistency)g(mo)q(del,)f(the)i(hardw)o
(are)g(designer)131 1794 y(m)o(ust)c(consider)h(b)q(oth)g(system)f(p)q
(erformance)g(and)h(programmabilit)o(y)l(.)k(The)c(tec)o(hniques)e(of)i
(this)131 1885 y(pap)q(er)h(address)h(hardw)o(are)f(p)q(erformance.)k
(Ho)o(w)o(ev)o(er,)13 b(though)j(there)e(has)h(b)q(een)g(some)e(w)o
(ork)i(on)131 1975 y(compiler)d(optimizations)h(with)i(sequen)o(tial)e
(consistency)h([36,)h(20,)f(21)q(],)g(SC)h(at)g(the)g(application)131
2065 y(programming)10 b(lev)o(el)g(also)i(restricts)f(compiler)e
(optimizations.)19 b(T)l(o)12 b(a)o(v)o(oid)f(these)g(restrictions,)h
(it)131 2156 y(is)h(lik)o(ely)e(that)i(high-p)q(erformance)g(compilers)
d(will)i(exp)q(ose)i(a)f(release-consisten)o(t)f(mo)q(del)g(to)i(the)
131 2246 y(applications)i(programmer.)j(If)d(compilers)d(mandate)j(R)o
(C,)f(then)g(the)h(impro)o(v)o(ed)d(p)q(erformance)131
2336 y(and)g(lo)o(w)o(er)f(complexit)o(y)d(of)k(R)o(C)f(further)g(fa)o
(v)o(or)g(supp)q(orting)i(R)o(C)e(in)g(hardw)o(are)h(for)g(systems)e
(with)131 2426 y(ILP)16 b(pro)q(cessors.)22 b(An)15 b(in)o(teresting)f
(area)h(of)h(future)f(researc)o(h)f(is)h(to)h(quan)o(tify)e(the)h(p)q
(erformance)131 2517 y(impro)o(v)o(em)o(en)o(ts)e(due)i(to)h(compiler)e
(optimizations)g(allo)o(w)o(ed)h(b)o(y)g(relaxed)g(memory)e
(consistency)131 2607 y(mo)q(dels.)p eop
%%Page: 50 56
50 55 bop 1882 72 a Fi(50)131 222 y Fg(Other)21 b(hardw)n(are)h
(optimizations.)i Fi(This)18 b(study)h(fo)q(cused)f(on)h(curren)o(tly)e
(used)h(hardw)o(are)131 312 y(tec)o(hniques)g(for)i(enhancing)f(the)h
(p)q(erformance)e(of)i(consistency)e(mo)q(dels.)30 b(Our)19
b(results)h(sho)o(w)131 403 y(that)14 b(the)g(main)e(di\013erence)h(b)q
(et)o(w)o(een)g(the)g(p)q(erformance)g(of)h(SC)g(and)g(R)o(C)f(is)h
(the)f(write)g(latencies)131 493 y(seen)k(in)g(SC.)h(W)l(e)f(are)g
(curren)o(tly)f(in)o(v)o(estigating)g(t)o(w)o(o)h(hardw)o(are)h(tec)o
(hniques)e(that)i(target)f(this)131 583 y(additional)h(write)f(latency)
g(in)g(the)g(SC)h(system)e({)i(write)f(bu\013ering)h(and)g(sp)q
(eculativ)o(e)f(gradua-)131 674 y(tion.)204 766 y Fh(Write)e
(bu\013ering)g Fi([11)q(])e(allo)o(ws)h(writes)g(to)g(graduate)h(from)d
(the)i(instruction)f(windo)o(w,)i(blo)q(c)o(k-)131 856
y(ing)k(only)g(on)h(the)f(\014rst)g(read)h(to)f(reac)o(h)g(the)g(head)g
(of)g(the)g(instruction)g(windo)o(w)g(while)g(writes)131
946 y(are)f(p)q(ending.)24 b(W)l(rite)17 b(bu\013ering)h(can)f(relax)g
(the)g(restrictions)g(on)g(the)g(commit)e(rate)i(of)h(writes)131
1037 y(and)f(increase)f(the)g(write)f(o)o(v)o(erlap)h(in)g(curren)o(t)f
(optimized)f(implem)o(en)n(tations)g(of)j(SC.)204 1129
y Fh(Sp)n(e)n(culative)23 b(r)n(etir)n(ement)c Fi([33)q(])g(is)g(an)h
(optimization)e(that)i(targets)h(the)e(limitation)e(due)j(to)131
1219 y(the)d(store-to-load)i(constrain)o(t)f(of)g(SC.)f(Loads)i
(stalled)e(only)g(for)h(previous)f(incomplete)e(stores)131
1310 y(are)22 b(allo)o(w)o(ed)g(to)g(sp)q(eculativ)o(ely)e(commit)f
(their)j(v)m(alues)g(in)o(to)g(the)g(pro)q(cessor's)h(arc)o(hitectural)
131 1400 y(state)17 b(and)h(retire)d(from)h(the)h(instruction)f(windo)o
(w,)h(freeing)f(up)h(space)g(for)g(later)g(instructions.)131
1490 y(This)k(tec)o(hnique)d(can)i(p)q(oten)o(tially)f(eliminate)f(the)
i(impact)e(of)j(the)f(store-to-load)h(constrain)o(t)131
1581 y(\(p)q(oten)o(tially)d(equalizing)f(the)h(p)q(erformance)g(of)g
(SC)h(to)g(that)g(of)g(more)e(relaxed)h(mo)q(dels\),)f(but)131
1671 y(at)g(an)g(additional)f(cost)g(in)g(hardw)o(are.)204
1763 y(Finally)l(,)d Fh(lar)n(ger)i(instruction)h(windows)f
Fi(can)e(also)i(b)q(e)f(used)g(to)g(further)f(increase)g(the)h(p)q
(erfor-)131 1853 y(mance)i(of)i(SC.)g(Larger)g(instruction)g(windo)o
(ws)g(can)g(p)q(oten)o(tially)e(increase)h(the)h(o)o(v)o(erlap)e(a)o(v)
m(ail-)131 1944 y(able)j(to)h(reads)f(and)h(writes)f(in)f(the)h
(system.)29 b(Unlik)o(e)17 b(R)o(C)i(whic)o(h)f(b)q(ene\014ts)h(mainly)
e(from)i(the)131 2034 y(increased)d(read)g(o)o(v)o(erlap,)f(SC)h(can)g
(b)q(ene\014t)g(from)f(increases)h(in)f(b)q(oth)i(the)f(read)g(and)h
(the)f(write)131 2124 y(o)o(v)o(erlap.)j(Larger)14 b(instruction)e
(windo)o(ws)i(th)o(us)f(o\013er)g(another)g(hardw)o(are)g(tec)o(hnique)
e(to)j(address)131 2215 y(the)j(store)g(latency)f(resp)q(onsible)g(for)
h(the)g(p)q(erformance)e(di\013erence)h(b)q(et)o(w)o(een)g(SC)h(and)g
(relaxed)131 2305 y(mo)q(dels.)p eop
%%Page: 51 57
51 56 bop 1882 72 a Fi(51)805 403 y Fm(Bibliograph)n(y)156
674 y Fi([1])24 b(S.)17 b(V.)g(Adv)o(e)g(and)i(K.)e(Gharac)o(horlo)q
(o.)29 b(Shared)18 b(Memory)e(Consistency)i(Mo)q(dels:)25
b(A)18 b(T)l(u-)232 764 y(torial.)k(In)16 b Fh(IEEE)i(Computer)p
Fi(,)e(pages)i(66{76,)g(Decem)o(b)q(er)d(1996.)24 b(Also)16
b(a)o(v)m(ailable)g(as)h(Rice)232 855 y(Univ)o(ersit)o(y)g(ECE)j(T)l
(ec)o(hnical)f(Rep)q(ort)h(9512)h(and)g(W)l(estern)e(Researc)o(h)g(Lab)
q(oratory)j(Re-)232 945 y(searc)o(h)15 b(Rep)q(ort)i(95/7.)156
1070 y([2])24 b(S.)19 b(V.)g(Adv)o(e)g(and)i(M.)e(D.)h(Hill.)31
b(A)19 b(Uni\014ed)g(Formalization)g(of)h(Four)h(Shared-Memory)232
1160 y(Mo)q(dels.)i Fh(IEEE)18 b(T)l(r)n(ansactions)h(on)f(Par)n(al)r
(lel)i(and)e(Distribute)n(d)g(Systems)p Fi(,)g(4\(6\):613{624,)232
1250 y(June)e(1993.)156 1375 y([3])24 b(S.)16 b(V.)g(Adv)o(e)g(and)h
(M.)g(D.)f(Hill.)22 b(Weak)17 b(Ordering)g(-)g(A)f(New)h(De\014nition.)
23 b(In)16 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)232 1466 y(17th)22
b(A)o(nnual)h(International)h(Symp)n(osium)d(on)i(Computer)f(A)o(r)n
(chite)n(ctur)n(e)p Fi(,)g(pages)g(2{14,)232 1556 y(Ma)o(y)15
b(1990.)156 1681 y([4])24 b(V.)i(S.)h(Adv)o(e,)h(J.-C.)e(W)l(ang,)31
b(J.)c(Mellor-Crumm)o(ey)l(,)f(D.)h(Reed,)i(M.)d(Anderson,)k(and)232
1771 y(K.)21 b(Kennedy)l(.)39 b(An)21 b(In)o(tegrated)h(Compilation)f
(and)i(P)o(erformance)e(Analysis)g(En)o(viron-)232 1861
y(men)o(t)e(for)i(Data)i(P)o(arallel)d(Programs.)37 b(In)21
b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)h(Sup)n(er)n(c)n(omputing)g('95)p
Fi(,)g(San)232 1952 y(Diego,)16 b(CA,)f(Decem)o(b)q(er)f(1995.)156
2077 y([5])24 b(R.)e(G.)h(Co)o(vington,)h(S.)f(Dw)o(ark)m(adas,)j(J.)d
(R.)f(Jump,)h(S.)g(Madala,)i(and)e(J.)g(B.)f(Sinclair.)232
2167 y(The)d(E\016cien)o(t)f(Sim)o(ulation)f(of)j(Parallel)f(Computer)f
(Systems.)30 b Fh(International)21 b(Journal)232 2257
y(of)c(Computer)g(Simulation)p Fi(,)g(1:31{58,)h(Jan)o(uary)e(1991.)156
2382 y([6])24 b(F.)16 b(Dahlgren)h(and)h(P)l(.)f(Stenstrom.)23
b(E\013ectiv)o(eness)16 b(of)h(Hardw)o(are-Based)g(Stride)g(and)g(Se-)
232 2472 y(quen)o(tial)h(Prefetc)o(hing)g(in)h(Shared-Memory)f
(Multipro)q(cessors.)31 b(In)19 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)g
(the)232 2563 y(1st)13 b(International)i(Symp)n(osium)e(on)h(High)g
(Performanc)n(e)g(Computer)f(A)o(r)n(chite)n(ctur)n(e)p
Fi(,)f(1995.)156 2688 y([7])24 b(Digital)15 b(Equipmen)o(t)f(Corp)q
(oration.)23 b Fh(A)o(lpha)18 b(A)o(r)n(chite)n(ctur)n(e)f(R)n(efer)n
(enc)n(e)g(Manual)p Fi(,)g(1992.)p eop
%%Page: 52 58
52 57 bop 1882 72 a Fi(52)156 222 y([8])24 b(M.)15 b(Dub)q(ois,)i(C.)f
(Sc)o(heuric)o(h,)f(and)i(F.)e(A.)h(Briggs.)22 b(Memory)14
b(Access)i(Bu\013ering)g(in)g(Multi-)232 312 y(pro)q(cessors.)27
b(In)18 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)f(13th)i(A)o(nnual)i
(International)f(Symp)n(osium)e(on)h(Computer)232 403
y(A)o(r)n(chite)n(ctur)n(e)p Fi(,)c(pages)i(434{442,)i(T)l(oky)o(o,)c
(Japan,)i(June)f(1986.)156 528 y([9])24 b(M.)17 b(Dub)q(ois,)i(J.)e(C.)
h(W)l(ang,)h(L.)f(A.)f(Barroso,)i(K.)e(Lee,)h(and)g(Y.-S.)f(Chen.)27
b(Dela)o(y)o(ed)16 b(Con-)232 618 y(sistency)g(and)i(Its)g(E\013ects)f
(on)h(the)g(Miss)f(Rate)g(of)h(P)o(arallel)f(Programs.)25
b(pages)18 b(197{206,)232 709 y(No)o(v)o(em)n(b)q(er)c(1991.)131
834 y([10])25 b(J.)18 b(H.)f(Edmondson,)i(P)l(.)f(I.)g(Rubinfeld,)g(P)l
(.)g(J.)g(Bannon,)h(B.)f(J.)g(Bensc)o(hneider,)e(D.)j(Bern-)232
924 y(stein,)f(R.)g(W.)g(Castelino,)h(E.)g(M.)f(Co)q(op)q(er,)i(D.)f
(E.)f(Dev)o(er,)g(D.)h(R.)f(Donc)o(hin,)g(T.)h(C.)f(Fis-)232
1015 y(c)o(her,)d(A.)h(K.)h(Jain,)g(S.)f(Meh)o(ta,)h(J.)f(E.)h(Mey)o
(er,)e(R.)h(P)l(.)h(Preston,)g(V.)f(Ra)s(jagopalan,)j(C.)e(So-)232
1105 y(manathan,)d(S.)h(A.)f(T)l(a)o(ylor,)h(and)g(G.)g(M.)f(W)l(olric)
o(h.)k(In)o(ternal)c(Organization)i(of)f(the)g(Alpha)232
1195 y(21164,)h(a)f(300-MHz)f(64-bit)h(Quad-issue)g(CMOS)g(RISC)f
(Micropro)q(cessor.)19 b Fh(Digital)d(T)l(e)n(ch-)232
1286 y(nic)n(al)i(Journal)p Fi(,)d(7\(1\):119{132,)k(1995.)131
1411 y([11])25 b(K.)15 b(Gharac)o(horlo)q(o,)i(A.)e(Gupta,)h(and)h(J.)e
(Hennessy)l(.)20 b(P)o(erformance)14 b(Ev)m(aluation)j(of)f(Mem-)232
1501 y(ory)h(Consistency)h(Mo)q(dels)g(for)g(Shared-Memory)f(Multipro)q
(cessors.)26 b(In)18 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)232
1592 y(F)l(ourth)d(International)i(Confer)n(enc)n(e)g(on)f(A)o(r)n
(chite)n(ctur)n(al)f(Supp)n(ort)g(for)g(Pr)n(o)n(gr)n(amming)f(L)n(an-)
232 1682 y(guages)18 b(and)g(Op)n(er)n(ating)f(Systems)p
Fi(,)g(pages)g(245{257,)h(1991.)131 1807 y([12])25 b(K.)16
b(Gharac)o(horlo)q(o,)j(A.)d(Gupta,)i(and)g(J.)f(Hennessy)l(.)23
b(Tw)o(o)18 b(Tec)o(hniques)d(to)j(Enhance)g(the)232
1898 y(Performance)11 b(of)j(Memory)d(Consistency)i(Mo)q(dels.)18
b(In)13 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)i(the)g(International)232
1988 y(Confer)n(enc)n(e)j(on)f(Par)n(al)r(lel)i(Pr)n(o)n(c)n(essing)p
Fi(,)c(pages)i(I355{I364,)h(1991.)131 2113 y([13])25
b(K.)19 b(Gharac)o(horlo)q(o,)j(A.)d(Gupta,)i(and)f(J.)g(Hennessy)l(.)
31 b(Hiding)19 b(Memory)f(Latency)i(Using)232 2204 y(Dynamic)d(Sc)o
(heduling)g(in)i(Shared-Memory)e(Multipro)q(cessors.)29
b(In)19 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)i(the)232
2294 y(19th)d(International)i(Symp)n(osium)d(on)i(Computer)f(A)o(r)n
(chite)n(ctur)n(e)p Fi(,)f(pages)h(22{33,)h(1992.)131
2419 y([14])25 b(K.)20 b(Gharac)o(horlo)q(o,)j(D.)d(Lenoski,)i(J.)f
(Laudon,)i(P)l(.)d(Gibb)q(ons,)j(A.)d(Gupta,)i(and)f(J.)g(Hen-)232
2510 y(nessy)l(.)41 b(Memory)21 b(Consistency)h(and)i(Ev)o(en)o(t)e
(Ordering)h(in)f(Scalable)h(Shared-Memory)232 2600 y(Multipro)q
(cessors.)k(In)19 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)f(of)h(the)h(17th)g
(International)h(Symp)n(osium)d(on)i(Com-)232 2690 y(puter)d(A)o(r)n
(chite)n(ctur)n(e)p Fi(,)f(pages)h(15{26,)g(Ma)o(y)f(1990.)p
eop
%%Page: 53 59
53 58 bop 1882 72 a Fi(53)131 222 y([15])25 b(J.)13 b(R.)g(Go)q(o)q
(dman.)18 b(Cac)o(he)c(consistency)f(and)h(sequen)o(tial)e(consistency)
l(.)17 b(T)l(ec)o(hnical)12 b(Rep)q(ort)232 312 y(T)l(ec)o(hnical)f
(Rep)q(ort)j(#61,)f(SCI)g(Committee,)d(Marc)o(h)j(1989.)18
b(Also)13 b(a)o(v)m(ailable)f(as)i(Computer)232 403 y(Sciences)j(T)l
(ec)o(hnical)g(Rep)q(ort)j(#1006,)g(Univ)o(ersit)o(y)c(of)j(Wisconsin,)
g(Madison,)h(F)l(ebruary)232 493 y(1991.)131 621 y([16])25
b(A.)11 b(Gupta,)j(J.)f(Hennessy)l(,)f(K.)h(Gharac)o(horlo)q(o,)h(T.)f
(Mo)o(wry)l(,)g(and)g(W.-D.)g(W)l(eb)q(er.)j(Compar-)232
711 y(ativ)o(e)c(Ev)m(aluation)i(of)g(Latency)g(Reducing)f(and)h(T)l
(olerating)g(T)l(ec)o(hniques.)i(In)d Fh(Pr)n(o)n(c)n(e)n(e)n(dings)232
801 y(of)20 b(the)h(18th)g(A)o(nnual)h(International)g(Symp)n(osium)d
(on)i(Computer)g(A)o(r)n(chite)n(ctur)n(e)p Fi(,)e(pages)232
892 y(254{263,)f(Ma)o(y)e(1991.)131 1020 y([17])25 b(D.)14
b(Hun)o(t.)19 b(Adv)m(anced)c(Features)g(of)g(the)g(64-bit)h(P)l
(A-8000.)21 b(Hewlett)13 b(P)o(ac)o(k)m(ard)j(Compan)o(y)l(.)131
1148 y([18])25 b(In)o(tel)14 b(Corp)q(oration.)23 b Fh(Pentium)c(\(r\))
e(Pr)n(o)f(F)l(amily)h(Develop)n(er's)h(Manual)p Fi(.)131
1276 y([19])25 b(P)l(.)16 b(Keleher,)g(A.)g(L.)h(Co)o(x,)f(and)i(W.)f
(Zw)o(aenep)q(o)q(el.)23 b(Lazy)17 b(Release)f(Consistency)h(for)h
(Soft-)232 1366 y(w)o(are)h(Distributed)h(Shared)g(Memory)l(.)30
b(In)19 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)g(the)i(19th)e(A)o(nnual)i
(Interna-)232 1456 y(tional)c(Symp)n(osium)e(on)i(Computer)f(A)o(r)n
(chite)n(ctur)n(e)p Fi(,)f(pages)h(13{21,)h(1992.)131
1584 y([20])25 b(A.)c(Krishnam)o(urth)o(y)f(and)i(K.)g(Y)l(elic)o(k.)36
b(Optimizing)19 b(P)o(arallel)i(Programs)h(SPMD)g(Pro-)232
1674 y(grams.)41 b(In)23 b Fh(L)n(anguages)i(and)f(Compilers)f(for)h
(Par)n(al)r(lel)h(Computing)p Fi(,)g(pages)f(331{345,)232
1765 y(August)16 b(1994.)131 1893 y([21])25 b(A.)18 b(Krishnam)o(urth)o
(y)g(and)i(K.)f(Y)l(elic)o(k.)28 b(Optimizing)17 b(P)o(arallel)i
(Programs)h(with)f(Explicit)232 1983 y(Sync)o(hronization.)35
b(In)21 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)h(SIGPLAN)g(Confer)n(enc)n(e)g
(on)h(Pr)n(o)n(gr)n(amming)d(L)n(an-)232 2073 y(guage)e(Design)h(and)e
(Implementation)p Fi(,)h(July)d(1995.)131 2201 y([22])25
b(D.)16 b(Kroft.)21 b(Lo)q(c)o(kup-Free)16 b(Instruction)g(Fetc)o
(h/Prefetc)o(h)e(Cac)o(he)i(Organization.)22 b(In)16
b Fh(Pr)n(o-)232 2291 y(c)n(e)n(e)n(dings)21 b(of)h(the)g(8th)f
(International)i(Symp)n(osium)e(on)h(Computer)f(A)o(r)n(chite)n(ctur)n
(e)p Fi(,)g(pages)232 2382 y(81{87,)c(Ma)o(y)f(1981.)131
2510 y([23])25 b(L.)15 b(Lamp)q(ort.)k(Ho)o(w)c(to)h(Mak)o(e)e(a)h
(Multipro)q(cessor)g(Computer)f(That)i(Correctly)e(Executes)232
2600 y(Multipro)q(cess)23 b(Programs.)43 b Fh(IEEE)24
b(T)l(r)n(ansactions)g(on)g(Computers)p Fi(,)h(C-28\(9\):690{691)q(,)
232 2690 y(Septem)o(b)q(er)14 b(1979.)p eop
%%Page: 54 60
54 59 bop 1882 72 a Fi(54)131 222 y([24])25 b(A.)19 b(Landin,)k(E.)d
(Hagersten,)h(and)h(S.)e(Haridi.)34 b(Race-Free)20 b(In)o
(terconnection)f(Net)o(w)o(orks)232 312 y(and)14 b(Multipro)q(cessor)g
(Consistency)l(.)19 b(In)14 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)g(18th)i(A)
o(nnual)h(International)g(Sym-)232 403 y(p)n(osium)f(on)i(Computer)f(A)
o(r)n(chite)n(ctur)n(e)p Fi(,)f(pages)h(106{115,)h(Ma)o(y)e(1991.)131
534 y([25])25 b(MIPS)20 b(T)l(ec)o(hnologies,)h(Inc.)35
b Fh(R10000)21 b(Micr)n(opr)n(o)n(c)n(essor)e(User's)i(Manual,)j(V)l
(ersion)e(2.0)p Fi(,)232 625 y(Decem)o(b)q(er)13 b(1996.)131
757 y([26])25 b(T.)f(Mo)o(wry)l(.)46 b Fh(T)l(oler)n(ating)27
b(L)n(atency)e(thr)n(ough)g(Softwar)n(e-c)n(ontr)n(ol)r(le)n(d)h(Data)g
(Pr)n(efetching)p Fi(.)232 847 y(PhD)16 b(thesis,)g(Stanford)h(Univ)o
(ersit)o(y)l(,)c(1994.)131 979 y([27])25 b(T.)g(Mo)o(wry)g(and)i(A.)e
(Gupta.)50 b(T)l(olerating)26 b(Latency)g(Through)h(Soft)o(w)o(are-Con)
o(trolled)232 1069 y(Prefetc)o(hing.)16 b Fh(Journal)f(on)g(Par)n(al)r
(lel)h(and)f(Distribute)n(d)g(Computing)p Fi(,)f(pages)g(87{106,)i
(June)232 1159 y(1991.)131 1291 y([28])25 b(V.)14 b(S.)i(P)o(ai,)f(P)l
(.)g(Ranganathan,)j(and)e(S.)f(V.)g(Adv)o(e.)k(RSIM:)14
b(An)i(Execution-Driv)o(en)e(Sim)o(u-)232 1381 y(lator)g(for)h
(ILP-Based)g(Shared-Memory)e(Multipro)q(cessors)h(and)h(Unipro)q
(cessors.)20 b(In)14 b Fh(Pr)n(o-)232 1472 y(c)n(e)n(e)n(dings)k(of)g
(the)g(Thir)n(d)f(Workshop)g(on)i(Computer)f(A)o(r)n(chite)n(ctur)n(e)f
(Educ)n(ation)p Fi(,)h(F)l(ebruary)232 1562 y(1997.)131
1694 y([29])25 b(V.)18 b(S.)i(P)o(ai,)g(P)l(.)f(Ranganathan,)k(and)d
(S.)g(V.)f(Adv)o(e.)30 b(The)20 b(Impact)e(of)i(Instruction)f(Lev)o(el)
232 1784 y(Parallelism)i(on)k(Multipro)q(cessor)f(Performance)f(and)h
(Sim)o(ulation)e(Metho)q(dology)l(.)46 b(In)232 1874
y Fh(Pr)n(o)n(c)n(e)n(e)n(dings)14 b(of)h(the)g(3r)n(d)f(International)
j(Symp)n(osium)d(on)i(High)f(Performanc)n(e)g(Computer)232
1965 y(A)o(r)n(chite)n(ctur)n(e)p Fi(,)g(pages)i(72{83,)h(F)l(ebruary)e
(1997.)131 2096 y([30])25 b(V.)14 b(S.)h(P)o(ai,)g(P)l(.)h
(Ranganathan,)h(S.)e(V.)g(Adv)o(e,)f(and)i(T.)f(Harton.)21
b(An)15 b(Ev)m(aluation)h(of)g(Mem-)232 2187 y(ory)k(Consistency)h(Mo)q
(dels)f(for)h(Shared-Memory)e(Systems)g(with)i(ILP)f(Pro)q(cessors.)36
b(In)232 2277 y Fh(Pr)n(o)n(c)n(e)n(e)n(dings)12 b(of)h(the)h(7th)f
(International)i(Confer)n(enc)n(e)f(on)g(A)o(r)n(chite)n(ctur)n(al)f
(Supp)n(ort)g(for)g(Pr)n(o-)232 2367 y(gr)n(amming)k(L)n(anguages)h
(and)f(Op)n(er)n(ating)h(Systems)p Fi(,)e(pages)h(12{23,)h(Octob)q(er)e
(1996.)131 2499 y([31])25 b(U.)13 b(Ra)s(jagopalan.)20
b(The)14 b(E\013ects)h(of)f(In)o(terconnection)f(Net)o(w)o(orks)g(on)i
(the)f(Performance)f(of)232 2589 y(Shared-Memory)i(Multipro)q(cessors.)
23 b(Master's)17 b(thesis,)f(Departmen)o(t)f(of)j(Electrical)d(and)232
2680 y(Computer)g(Engineering,)g(Rice)g(Univ)o(ersit)o(y)l(,)f(Jan)o
(uary)i(1995.)p eop
%%Page: 55 61
55 60 bop 1882 72 a Fi(55)131 222 y([32])25 b(P)l(.)16
b(Ranganathan,)i(V.)e(S.)g(P)o(ai,)g(H.)g(Ab)q(del-Sha\014,)h(and)g(S.)
f(V.)g(Adv)o(e.)21 b(The)16 b(In)o(teraction)g(of)232
312 y(Soft)o(w)o(are)i(Prefetc)o(hing)f(with)h(ILP)g(Pro)q(cessors)i
(in)d(Shared-Memory)g(Systems.)26 b(In)18 b Fh(Pr)n(o-)232
403 y(c)n(e)n(e)n(dings)d(of)f(the)i(24th)e(A)o(nnual)i(International)g
(Symp)n(osium)e(on)h(Computer)g(A)o(r)n(chite)n(ctur)n(e)p
Fi(,)232 493 y(June)h(1997.)131 625 y([33])25 b(P)l(.)16
b(Ranganathan,)j(V.)d(S.)h(P)o(ai,)g(and)g(S.)g(V.)f(Adv)o(e.)22
b(Using)17 b(Sp)q(eculativ)o(e)f(Retiremen)o(t)e(and)232
715 y(Larger)k(Instruction)f(Windo)o(ws)h(to)g(Narro)o(w)f(the)g
(Performance)f(Gap)j(b)q(et)o(w)o(een)d(Memory)232 805
y(Consistency)j(Mo)q(dels.)30 b(In)19 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)g
(of)i(the)f(Ninth)h(A)o(nnual)h(A)o(CM)e(Symp)n(osium)f(on)232
896 y(Par)n(al)r(lel)f(A)o(lgorithms)g(and)f(A)o(r)n(chite)n(ctur)n(es)
p Fi(,)f(June)g(1997.)131 1027 y([34])25 b(M.)11 b(Rosen)o(blum,)f(E.)i
(Bugnion,)h(S.)e(A.)g(Herro)q(d,)i(E.)e(Witc)o(hel,)g(and)h(A.)f
(Gupta.)17 b(The)12 b(Impact)232 1118 y(of)20 b(Arc)o(hitectural)f
(Trends)i(on)g(Op)q(erating)g(System)e(Performance.)33
b(In)20 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)g(of)232 1208
y(the)c(Fifte)n(enth)g(A)o(CM)g(Symp)n(osium)e(on)i(Op)n(er)n(ating)g
(Systems)g(Principles)p Fi(,)g(pages)f(285{298,)232 1298
y(Decem)o(b)q(er)e(1995.)131 1430 y([35])25 b(C.)14 b(Sc)o(heuric)o(h)f
(and)i(M.)f(Dub)q(ois.)20 b(Correct)14 b(Memory)f(Op)q(eration)i(of)g
(Cac)o(he-Based)f(Multi-)232 1520 y(pro)q(cessors.)27
b(In)18 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)f(14th)i(A)o(nnual)i
(International)f(Symp)n(osium)e(on)h(Computer)232 1611
y(A)o(r)n(chite)n(ctur)n(e)p Fi(,)c(pages)i(234{243,)i(Pittsburgh,)d(P)
l(A,)f(June)i(1987.)131 1742 y([36])25 b(D.)11 b(Shasha)h(and)g(M.)e
(Snir.)15 b(E\016cien)o(t)10 b(and)i(Correct)f(Execution)f(of)i
(Parallel)e(Programs)i(that)232 1833 y(Share)22 b(Memory)l(.)35
b Fh(A)o(CM)22 b(T)l(r)n(ansactions)h(on)g(Pr)n(o)n(gr)n(amming)e(L)n
(anguages)i(and)f(Systems)p Fi(,)232 1923 y(10\(2\):282{312,)d(April)c
(1988.)131 2055 y([37])25 b(J.)20 b(P)l(.)g(Singh,)i(W.-D.)e(W)l(eb)q
(er,)h(and)g(A.)f(Gupta.)35 b(SPLASH:)20 b(Stanford)i(P)o(arallel)d
(Appli-)232 2145 y(cations)k(for)g(Shared-Memory)l(.)39
b Fh(Computer)23 b(A)o(r)n(chite)n(ctur)n(e)g(News)p
Fi(,)i(20\(1\):5{44,)h(Marc)o(h)232 2235 y(1992.)131
2367 y([38])f(J.)11 b(E.)g(Smith)f(and)i(A.)e(R.)h(Pleszkun.)k(Implem)o
(en)n(tation)9 b(of)j(precise)f(in)o(terrupts)f(in)i(pip)q(elined)232
2457 y(pro)q(cessors.)24 b(In)16 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)h(of)h
(the)h(International)g(Symp)n(osium)e(on)i(Computer)f(A)o(r)n(chi-)232
2548 y(te)n(ctur)n(e)p Fi(,)e(1985.)131 2680 y([39])25
b(Sparc)16 b(In)o(ternational.)21 b Fh(The)c(SP)l(AR)o(C)h(A)o(r)n
(chite)n(ctur)n(e)f(Manual)p Fi(,)f(1993.)23 b(V)l(ersion)15
b(9.)p eop
%%Page: 56 62
56 61 bop 1882 72 a Fi(56)131 222 y([40])25 b(Sun)13
b(Microsystems.)h Fh(The)h(Ultr)n(aSP)l(AR)o(C)f(Pr)n(o)n(c)n(essor)e
({)i(Te)n(chnolo)n(gy)h(White)f(Pap)n(er)p Fi(,)e(1995.)131
354 y([41])25 b(Sun)c(Microsystems)d(Inc.)35 b Fh(The)21
b(SP)l(AR)o(C)h(A)o(r)n(chite)n(ctur)n(e)f(Manual)p Fi(,)h(Jan)o(uary)f
(1991.)37 b(No.)232 444 y(800-199-12,)19 b(V)l(ersion)d(8.)131
576 y([42])25 b(S.)19 b(C.)h(W)l(o)q(o,)i(M.)e(Ohara,)h(E.)f(T)l
(orrie,)g(J.)g(P)l(.)g(Singh,)h(and)g(A.)e(Gupta.)33
b(The)21 b(SPLASH-2)232 666 y(Programs:)g(Characterization)16
b(and)h(Metho)q(dological)f(Considerations.)22 b(In)15
b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)232 757 y(of)21 b(the)h(22nd)f
(International)i(Symp)n(osium)e(on)g(Computer)h(A)o(r)n(chite)n(ctur)n
(e)p Fi(,)e(pages)i(24{36,)232 847 y(June)16 b(1995.)131
979 y([43])25 b(W.)19 b(A.)f(W)l(ulf)h(and)h(S.)f(A.)g(McKee.)29
b(Hitting)19 b(the)g(Memory)e(Wall:)28 b(Implications)17
b(of)j(the)232 1069 y(Ob)o(vious.)g Fh(A)o(CM)d(Computer)h(A)o(r)n
(chite)n(ctur)n(e)f(News.)p Fi(,)f(23\(4\),)h(Septemeb)q(er)d(1995.)131
1201 y([44])25 b(R.)d(N.)g(Zuc)o(k)o(er)f(and)i(J.-L.)g(Baer.)40
b(A)22 b(P)o(erformance)g(Study)g(of)h(Memory)e(Consistency)232
1291 y(Mo)q(dels.)27 b(In)17 b Fh(Pr)n(o)n(c)n(e)n(e)n(dings)i(of)g
(the)g(19th)h(International)g(Symp)n(osium)f(on)g(Computer)g(A)o(r-)232
1381 y(chite)n(ctur)n(e)p Fi(,)d(pages)h(2{12,)g(1992.)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
